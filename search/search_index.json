{"config":{"indexing":"full","lang":["en","ja"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4f60\u597d\uff0c\u8fd9\u662f\u5f20\u5fd7\u5a01\u7684\u4e2a\u4eba\u4e3b\u9875 \u00b6","title":"\u4f60\u597d\uff0c\u8fd9\u662f\u5f20\u5fd7\u5a01\u7684\u4e2a\u4eba\u4e3b\u9875"},{"location":"#_1","text":"","title":"\u4f60\u597d\uff0c\u8fd9\u662f\u5f20\u5fd7\u5a01\u7684\u4e2a\u4eba\u4e3b\u9875"},{"location":"test/","text":"\u8fd9\u662f\u4e00\u4e2a\u6d4b\u8bd5\u6587\u4ef6 \u00b6","title":"\u5173\u4e8e"},{"location":"test/#_1","text":"","title":"\u8fd9\u662f\u4e00\u4e2a\u6d4b\u8bd5\u6587\u4ef6"},{"location":"C%2B%2B/","text":"C/C++\u5b66\u4e60 \u00b6 \u70b9\u51fb\u5de6\u4fa7\u67e5\u770b\u76f8\u5173\u5185\u5bb9","title":"Index"},{"location":"C%2B%2B/#cc","text":"\u70b9\u51fb\u5de6\u4fa7\u67e5\u770b\u76f8\u5173\u5185\u5bb9","title":"C/C++\u5b66\u4e60"},{"location":"C%2B%2B/C%2B%2B%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/","text":"C/C++\u56de\u8c03\u51fd\u6570 \u00b6 \u9996\u5148\u770b\u4e00\u4e0b\u56de\u8c03\u51fd\u6570\u7684\u5b98\u65b9\u89e3\u91ca\uff1a\u56de\u8c03\u51fd\u6570\u5c31\u662f\u4e00\u4e2a\u901a\u8fc7\u51fd\u6570\u6307\u9488\u8c03\u7528\u7684\u51fd\u6570\u3002\u5982\u679c\u4f60\u628a\u51fd\u6570\u7684\u6307\u9488\uff08\u5730\u5740\uff09\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u5f53\u8fd9\u4e2a\u6307\u9488\u88ab\u7528\u6765\u8c03\u7528\u5176\u6240\u6307\u5411\u7684\u51fd\u6570\u65f6\uff0c\u6211\u4eec\u5c31\u8bf4\u8fd9\u662f\u56de\u8c03\u51fd\u6570\u3002\u56de\u8c03\u51fd\u6570\u4e0d\u662f\u7531\u8be5\u51fd\u6570\u7684\u5b9e\u73b0\u65b9\u76f4\u63a5\u8c03\u7528\uff0c\u800c\u662f\u5728\u7279\u5b9a\u7684\u4e8b\u4ef6\u6216\u6761\u4ef6\u53d1\u751f\u65f6\u7531\u53e6\u5916\u7684\u4e00\u65b9\u8c03\u7528\u7684\uff0c\u7528\u4e8e\u5bf9\u8be5\u4e8b\u4ef6\u6216\u6761\u4ef6\u8fdb\u884c\u54cd\u5e94\u3002\u8fd9\u6bb5\u89e3\u91ca\u6bd4\u8f83\u5b98\u65b9\u3002\u4e2a\u4eba\u53ef\u4ee5\u7b80\u5355\u7684\u7406\u89e3\u4e3a\uff1a \u4e00\u4e2a\u901a\u8fc7\u51fd\u6570\u6307\u9488\u8c03\u7528\u7684\u51fd\u6570\u3002\u5982\u679c\u4f60\u628a\u51fd\u6570\u7684\u6307\u9488\uff08\u5730\u5740\uff09\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u56de\u8c03\u51fd\u6570\u4e0d\u662f\u7531\u8be5\u51fd\u6570\u7684\u5b9e\u73b0\u65b9\u76f4\u63a5\u8c03\u7528\uff0c\u800c\u662f\u5728\u7279\u5b9a\u7684\u4e8b\u4ef6\u6216\u6761\u4ef6\u53d1\u751f\u65f6\u7531\u53e6\u5916\u7684\u4e00\u65b9\u8c03\u7528\u7684\uff0c\u7528\u4e8e\u5bf9\u8be5\u4e8b\u4ef6\u6216\u6761\u4ef6\u8fdb\u884c\u54cd\u5e94\u3002 \u5982\u679c\u4ee3\u7801\u7acb\u5373\u88ab\u6267\u884c\u5c31\u79f0\u4e3a\u540c\u6b65\u56de\u8c03\uff0c\u5982\u679c\u8fc7\u540e\u518d\u6267\u884c\uff0c\u5219\u79f0\u4e4b\u4e3a\u5f02\u6b65\u56de\u8c03\u3002 \u5165\u95e8\u6848\u4f8b \u00b6 int Callback_1 ( int a ) ///< \u56de\u8c03\u51fd\u65701 { printf ( \"Hello, this is Callback_1: a = %d \" , a ); return 0 ; } int Callback_2 ( int b ) ///< \u56de\u8c03\u51fd\u65702 { printf ( \"Hello, this is Callback_2: b = %d \" , b ); return 0 ; } int Callback_3 ( int c ) ///< \u56de\u8c03\u51fd\u65703 { printf ( \"Hello, this is Callback_3: c = %d \" , c ); return 0 ; } int Handle ( int x , int ( * Callback )( int )) ///< \u6ce8\u610f\u8fd9\u91cc\u7528\u5230\u7684\u51fd\u6570\u6307\u9488\u5b9a\u4e49 { Callback ( x ); } int main () { Handle ( 4 , Callback_1 ); Handle ( 5 , Callback_2 ); Handle ( 6 , Callback_3 ); return 0 ; } \u5728\u8fd9\u4e2a\u5165\u95e8\u6848\u4f8b\u4e2d\uff0cCallback_1\u30012\u30013\u5c31\u662f\u56de\u8c03\u51fd\u6570\uff0chandle\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5c31\u662f\u51fd\u6570\u6307\u9488\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7\u51fd\u6570\u6307\u9488\u6765\u8c03\u7528\u3002\u7eafC\u8bed\u8a00\u901a\u8fc7\u51fd\u6570\u6307\u9488\u6765\u8fdb\u884c\u56de\u8c03\u51fd\u6570\u7684\u8c03\u7528\uff0cC++\u5219\u53ef\u4ee5\u901a\u8fc7\u5f15\u7528\u3001Lambda\u7b49\u591a\u79cd\u65b9\u5f0f\u6765\u8fdb\u884c\uff0c\u4e0b\u9762\u8fdb\u884c\u5177\u4f53\u7684\u4ecb\u7ecd\u3002 \u51fd\u6570\u6307\u9488 \u00b6 \u9996\u5148\u51fd\u6570\u6307\u9488\u4e5f\u662f\u4e00\u79cd\u6307\u9488\uff0c\u53ea\u4e0d\u8fc7\u6307\u5411\u7684\u662f\u51fd\u6570\uff08C\u8bed\u8a00\u4e2d\u6ca1\u6709\u5bf9\u8c61\uff09\u3002\u7136\u540e\u901a\u8fc7\u8fd9\u4e2a\u6307\u9488\u5c31\u53ef\u4ee5\u8c03\u7528\u3002 int Func ( int x ); /*\u58f0\u660e\u4e00\u4e2a\u51fd\u6570*/ int ( * p ) ( int x ); /*\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6307\u9488*/ p = Func ; /*\u5c06Func\u51fd\u6570\u7684\u9996\u5730\u5740\u8d4b\u7ed9\u6307\u9488\u53d8\u91cfp*/ p = & Func ; /*\u5c06Func\u51fd\u6570\u7684\u9996\u5730\u5740\u8d4b\u7ed9\u6307\u9488\u53d8\u91cfp*/ \u7ecf\u8fc7\u4e0a\u8ff0\u540e\uff0c\u6307\u9488\u53d8\u91cf p \u5c31\u6307\u5411\u51fd\u6570 Func() \u4ee3\u7801\u7684\u9996\u5730\u5740\u4e86\u3002\u4e0b\u9762\u770b\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u3002 int Max ( int x , int y ) //\u5b9a\u4e49Max\u51fd\u6570 { if ( x > y ){ return x ; } else { return y ; } } int main () { int ( * p )( int , int ); //\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6307\u9488 p = Max ; //\u628a\u51fd\u6570Max\u8d4b\u7ed9\u6307\u9488\u53d8\u91cfp, \u4f7fp\u6307\u5411Max\u51fd\u6570 int c = ( * p )( 1 , 2 ); //\u901a\u8fc7\u51fd\u6570\u6307\u9488\u8c03\u7528Max\u51fd\u6570 printf ( \"%d\" , c ); return 0 ; } p\u6307\u5411Max\u51fd\u6570\u4e4b\u540e\uff0c\u7136\u540e\u7528p\u8c03\u7528Max\u51fd\u6570\uff0c\u8fd4\u56de\u4e24\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u503c\u3002\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u56e0\u4e3a\u51fd\u6570\u540d\u672c\u8eab\u5c31\u53ef\u4ee5\u8868\u793a\u8be5\u51fd\u6570\u5730\u5740\uff08\u6307\u9488\uff09\uff0c\u56e0\u6b64\u5728\u83b7\u53d6\u51fd\u6570\u6307\u9488\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u51fd\u6570\u540d\uff0c\u4e5f\u53ef\u4ee5\u53d6\u51fd\u6570\u7684\u5730\u5740\u3002 p = Max\u53ef\u4ee5\u6539\u6210 p = &Max; c = (*p)(a, b) \u53ef\u4ee5\u6539\u6210 c = p(a, b) \u6240\u4ee5\u51fd\u6570\u6307\u9488\u7684\u901a\u5e38\u5199\u6cd5\u662f \u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b (* \u6307\u9488\u53d8\u91cf\u540d) (\u51fd\u6570\u53c2\u6570\u5217\u8868); \u5728\u8fd9\u91cc\u6307\u9488\u53d8\u91cf\u540d\u4e5f\u53ef\u4ee5\u53eb\u505a\u51fd\u6570\u540d\uff0c \u4f46\u662f\u901a\u5e38\u53ef\u4ee5\u7528typedef\u8fdb\u884c\u63cf\u8ff0 typedef \u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b (* \u6307\u9488\u53d8\u91cf\u540d) (\u51fd\u6570\u53c2\u6570\u5217\u8868); \u6700\u540e\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\u53d8\u91cf\u6ca1\u6709 ++ \u548c -- \u8fd0\u7b97\u3002 C++\u7c7b\u7684\u9759\u6001\u51fd\u6570\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570 \u00b6 \u524d\u9762\u51fd\u6570\u6307\u9488\u7684\u65b9\u5f0f\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u540c\u65f6\u7528\u4e8eC\u548cC++\uff0c\u4e0b\u9762\u4ecb\u7ecd\u53e6\u5916\u7684\u4e00\u4e9b\u65b9\u5f0f\uff0c\u56e0\u4e3aC++\u5f15\u5165\u4e86\u5bf9\u8c61\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c7b\u7684\u6210\u5458\u548c\u9759\u6001\u51fd\u6570\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\u3002 class ProgramA { public : void FunA1 () { printf ( \"I'am ProgramA.FunA1() and be called.. \\n \" ); } static void FunA2 () { printf ( \"I'am ProgramA.FunA2() and be called.. \\n \" ); } }; class ProgramB { public : void FunB1 ( void ( * callback )()) { printf ( \"I'am ProgramB.FunB1() and be called.. \\n \" ); callback (); } }; int main ( int argc , char ** argv ) { ProgramA PA ; PA . FunA1 (); ProgramB PB ; PB . FunB1 ( ProgramA :: FunA2 ); } \u5728\u7c7bB\u4e2d\u8c03\u7528\u7c7bA\u4e2d\u7684\u9759\u6001\u51fd\u6570\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u56de\u8c03\u3002 \u4f46\u8fd9\u79cd\u5b9e\u73b0\u6709\u4e00\u4e2a\u5f88\u660e\u663e\u7684\u7f3a\u70b9\uff1astatic \u51fd\u6570\u4e0d\u80fd\u8bbf\u95ee\u975estatic \u6210\u5458\u53d8\u91cf\u6216\u51fd\u6570\uff0c\u4f1a\u4e25\u91cd\u9650\u5236\u56de\u8c03\u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0\u7684\u529f\u80fd\u3002 \u7c7b\u7684\u975e\u9759\u6001\u51fd\u6570\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570 \u00b6 \u8fd9\u79cd\u65b9\u5f0f\u6bd4\u8f83\u9ebb\u70e6\uff0c\u53ef\u4ee5\u5148\u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u4f8b\u5b50\u3002 class ProgramA { public : void FunA1 () { printf ( \"I'am ProgramA.FunA1() and be called.. \\n \" ); } void FunA2 () { printf ( \"I'am ProgramA.FunA2() and be called.. \\n \" ); } }; class ProgramB { public : void FunB1 ( void ( ProgramA ::* callback )(), void * context ) { printf ( \"I'am ProgramB.FunB1() and be called.. \\n \" ); (( ProgramA * ) context ->* callback )(); } }; int main ( int argc , char ** argv ) { ProgramA PA ; PA . FunA1 (); ProgramB PB ; PB . FunB1 ( & ProgramA :: FunA2 , & PA ); // \u6b64\u5904\u90fd\u8981\u52a0& } \u529f\u80fd\u603b\u4f53\u4e0e\u4e0a\u9762\u4e00\u4e2a\u76f8\u540c\uff0c\u4f46\u662f\uff0c\u7c7b\u7684\u9759\u6001\u51fd\u6570\u672c\u8eab\u4e0d\u5c5e\u4e8e\u8be5\u7c7b\uff0c\u6240\u4ee5\u548c\u666e\u901a\u51fd\u6570\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\u7c7b\u4f3c\u3002\u8fd9\u79cd\u65b9\u5f0f\u5b58\u5728\u4e00\u4e9b\u4e0d\u8db3\uff0c\uff0c\u4e5f\u5c31\u6211\u9884\u5148\u8fd8\u8981\u77e5\u9053\u56de\u8c03\u51fd\u6570\u6240\u5c5e\u7684\u7c7b\u5b9a\u4e49\uff0c\u5f53ProgramB\u60f3\u72ec\u7acb\u5c01\u88c5\u65f6\u5c31\u4e0d\u597d\u7528\u4e86\u3002(\u8fdd\u80cc\u4e86\u4e00\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u7684\u539f\u5219) Lambda\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570 \u00b6 Lambda\u672c\u8eab\u5c31\u662f\u4e00\u79cd\u533f\u540d\u51fd\u6570\uff0c\u662f\u4e00\u79cd\u51fd\u6570\u7684\u7b80\u5199\u5f62\u5f0f(\u6b64\u5904\u53c2\u8003\u4e0a\u4e00\u7bc7\u535a\u5ba2Lambda\u8868\u8fbe\u5f0f) #include <iostream> #include <functional> void func1 ( int a , std :: function < void ( int ) > func2 ){ func2 ( a ); } int main ( int argc , char ** argv ) { auto fun3 = []( int a ){ std :: cout << a << std :: endl ; }; func1 ( 3 , fun3 ); } \u8fd9\u79cd\u65b9\u5f0f\u4e5f\u8f83\u4e3a\u7b80\u5355\uff0c\u4f46\u8981\u6ce8\u610f\u5728C++11\u7248\u672c\u624d\u5f00\u59cb\u5f15\u5165Lambda\u8868\u8fbe\u5f0f\uff0c\u5728\u4e00\u4e9b\u8f83\u4e3a\u8001\u65e7\u7684\u7f16\u8bd1\u5668\u4e0a\u53ef\u80fd\u65e0\u6cd5\u901a\u8fc7\u3002 std::funtion\u548cstd::bind\u7684\u4f7f\u7528 \u00b6 \u8fd9\u79cd\u65b9\u5f0f\u4e5f\u662f\u9002\u7528\u4e8eC++\uff0c\u8981\u5f15\u5165 functional \u7684\u5934\u6587\u4ef6\u3002\u5b58\u50a8\u3001\u590d\u5236\u3001\u548c\u8c03\u7528\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u76ee\u6807\u5b9e\u4f53\u5305\u62ec\u666e\u901a\u51fd\u6570\u3001Lambda\u8868\u8fbe\u5f0f\u3001\u51fd\u6570\u6307\u9488\u3001\u4ee5\u53ca\u5176\u5b83\u51fd\u6570\u5bf9\u8c61\u7b49\u3002std::bind()\u51fd\u6570\u7684\u610f\u4e49\u5c31\u50cf\u5b83\u7684\u51fd\u6570\u540d\u4e00\u6837\uff0c\u662f\u7528\u6765\u7ed1\u5b9a\u51fd\u6570\u8c03\u7528\u7684\u67d0\u4e9b\u53c2\u6570\u7684\u3002 #include <iostream> #include <functional> // fucntion/bind class ProgramA { public : void FunA1 () { printf ( \"I'am ProgramA.FunA1() and be called.. \\n \" ); } void FunA2 () { printf ( \"I'am ProgramA.FunA2() and be called.. \\n \" ); } static void FunA3 () { printf ( \"I'am ProgramA.FunA3() and be called.. \\n \" ); } }; class ProgramB { typedef std :: function < void () > CallbackFun ; public : void FunB1 ( CallbackFun callback ) { printf ( \"I'am ProgramB.FunB2() and be called.. \\n \" ); callback (); } }; void normFun () { printf ( \"I'am normFun() and be called.. \\n \" ); } int main ( int argc , char ** argv ) { ProgramA PA ; PA . FunA1 (); printf ( \" \\n \" ); ProgramB PB ; PB . FunB1 ( normFun ); printf ( \" \\n \" ); PB . FunB1 ( ProgramA :: FunA3 ); printf ( \" \\n \" ); PB . FunB1 ( std :: bind ( & ProgramA :: FunA2 , & PA )); } \u4e3b\u8981\u770b\u6700\u540e\u4e00\u884c\uff0c\u901a\u8fc7std::bind\u51fd\u6570\u7ed1\u5b9a\u4e86\u5bf9\u8c61\u4e0e\u5bf9\u5e94\u7684\u51fd\u6570\uff0c\u8fd9\u79cd\u65b9\u5f0f\u6bd4\u4e0a\u9762\u7684\u901a\u8fc7\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8fdb\u884c\u56de\u8c03\u66f4\u4e3a\u7b80\u5355\u65b9\u4fbf\u3002\u4e0b\u9762\u770b\u4e00\u4e0b\u5982\u679c\u6709\u53c2\u6570\u7684\u8bdd\uff0c\u9700\u8981\u5f15\u5165\u5360\u4f4d\u7b26std::placeholders::_1\u6765\u8fdb\u884c\u56de\u8c03\u3002 #include <iostream> #include <functional> using namespace std ; int TestFunc ( int a , char c , float f ) { cout << a << endl ; cout << c << endl ; cout << f << endl ; return a ; } int main () { auto bindFunc1 = bind ( TestFunc , std :: placeholders :: _1 , 'A' , 100.1 ); bindFunc1 ( 10 ); cout << \"================================= \\n \" ; auto bindFunc2 = bind ( TestFunc , std :: placeholders :: _2 , std :: placeholders :: _1 , 100.1 ); bindFunc2 ( 'B' , 10 ); cout << \"================================= \\n \" ; auto bindFunc3 = bind ( TestFunc , std :: placeholders :: _2 , std :: placeholders :: _3 , std :: placeholders :: _1 ); bindFunc3 ( 100.1 , 30 , 'C' ); return 0 ; } \u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u5f15\u5165\u4e86\u5360\u4f4d\u7b26std::placeholders::_1\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u901a\u8fc7\u4e0b\u5212\u7ebf\u52a0\u6570\u5b57\u6765\u5b9e\u73b0\uff0c\u4ece\u800c\u5b9e\u73b0\u6709\u53c2\u6570\u7684\u56de\u8c03\u3002\u8fd9\u4e2abind\u51fd\u6570\u4e2d\u7684\u91cd\u8f7d\u901a\u5e38\u7b2c\u4e00\u4e2a\u662f\u51fd\u6570\u7684\u6307\u9488\uff0c\u7b2c\u4e8c\u4e2a\u662f\u8c03\u7528\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u540e\u9762\u8ddf\u4e0a\u53c2\u6570\u5360\u4f4d\u7b26\u3002","title":"C/C++\u56de\u8c03\u51fd\u6570"},{"location":"C%2B%2B/C%2B%2B%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/#cc","text":"\u9996\u5148\u770b\u4e00\u4e0b\u56de\u8c03\u51fd\u6570\u7684\u5b98\u65b9\u89e3\u91ca\uff1a\u56de\u8c03\u51fd\u6570\u5c31\u662f\u4e00\u4e2a\u901a\u8fc7\u51fd\u6570\u6307\u9488\u8c03\u7528\u7684\u51fd\u6570\u3002\u5982\u679c\u4f60\u628a\u51fd\u6570\u7684\u6307\u9488\uff08\u5730\u5740\uff09\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u5f53\u8fd9\u4e2a\u6307\u9488\u88ab\u7528\u6765\u8c03\u7528\u5176\u6240\u6307\u5411\u7684\u51fd\u6570\u65f6\uff0c\u6211\u4eec\u5c31\u8bf4\u8fd9\u662f\u56de\u8c03\u51fd\u6570\u3002\u56de\u8c03\u51fd\u6570\u4e0d\u662f\u7531\u8be5\u51fd\u6570\u7684\u5b9e\u73b0\u65b9\u76f4\u63a5\u8c03\u7528\uff0c\u800c\u662f\u5728\u7279\u5b9a\u7684\u4e8b\u4ef6\u6216\u6761\u4ef6\u53d1\u751f\u65f6\u7531\u53e6\u5916\u7684\u4e00\u65b9\u8c03\u7528\u7684\uff0c\u7528\u4e8e\u5bf9\u8be5\u4e8b\u4ef6\u6216\u6761\u4ef6\u8fdb\u884c\u54cd\u5e94\u3002\u8fd9\u6bb5\u89e3\u91ca\u6bd4\u8f83\u5b98\u65b9\u3002\u4e2a\u4eba\u53ef\u4ee5\u7b80\u5355\u7684\u7406\u89e3\u4e3a\uff1a \u4e00\u4e2a\u901a\u8fc7\u51fd\u6570\u6307\u9488\u8c03\u7528\u7684\u51fd\u6570\u3002\u5982\u679c\u4f60\u628a\u51fd\u6570\u7684\u6307\u9488\uff08\u5730\u5740\uff09\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u56de\u8c03\u51fd\u6570\u4e0d\u662f\u7531\u8be5\u51fd\u6570\u7684\u5b9e\u73b0\u65b9\u76f4\u63a5\u8c03\u7528\uff0c\u800c\u662f\u5728\u7279\u5b9a\u7684\u4e8b\u4ef6\u6216\u6761\u4ef6\u53d1\u751f\u65f6\u7531\u53e6\u5916\u7684\u4e00\u65b9\u8c03\u7528\u7684\uff0c\u7528\u4e8e\u5bf9\u8be5\u4e8b\u4ef6\u6216\u6761\u4ef6\u8fdb\u884c\u54cd\u5e94\u3002 \u5982\u679c\u4ee3\u7801\u7acb\u5373\u88ab\u6267\u884c\u5c31\u79f0\u4e3a\u540c\u6b65\u56de\u8c03\uff0c\u5982\u679c\u8fc7\u540e\u518d\u6267\u884c\uff0c\u5219\u79f0\u4e4b\u4e3a\u5f02\u6b65\u56de\u8c03\u3002","title":"C/C++\u56de\u8c03\u51fd\u6570"},{"location":"C%2B%2B/C%2B%2B%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/#_1","text":"int Callback_1 ( int a ) ///< \u56de\u8c03\u51fd\u65701 { printf ( \"Hello, this is Callback_1: a = %d \" , a ); return 0 ; } int Callback_2 ( int b ) ///< \u56de\u8c03\u51fd\u65702 { printf ( \"Hello, this is Callback_2: b = %d \" , b ); return 0 ; } int Callback_3 ( int c ) ///< \u56de\u8c03\u51fd\u65703 { printf ( \"Hello, this is Callback_3: c = %d \" , c ); return 0 ; } int Handle ( int x , int ( * Callback )( int )) ///< \u6ce8\u610f\u8fd9\u91cc\u7528\u5230\u7684\u51fd\u6570\u6307\u9488\u5b9a\u4e49 { Callback ( x ); } int main () { Handle ( 4 , Callback_1 ); Handle ( 5 , Callback_2 ); Handle ( 6 , Callback_3 ); return 0 ; } \u5728\u8fd9\u4e2a\u5165\u95e8\u6848\u4f8b\u4e2d\uff0cCallback_1\u30012\u30013\u5c31\u662f\u56de\u8c03\u51fd\u6570\uff0chandle\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5c31\u662f\u51fd\u6570\u6307\u9488\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7\u51fd\u6570\u6307\u9488\u6765\u8c03\u7528\u3002\u7eafC\u8bed\u8a00\u901a\u8fc7\u51fd\u6570\u6307\u9488\u6765\u8fdb\u884c\u56de\u8c03\u51fd\u6570\u7684\u8c03\u7528\uff0cC++\u5219\u53ef\u4ee5\u901a\u8fc7\u5f15\u7528\u3001Lambda\u7b49\u591a\u79cd\u65b9\u5f0f\u6765\u8fdb\u884c\uff0c\u4e0b\u9762\u8fdb\u884c\u5177\u4f53\u7684\u4ecb\u7ecd\u3002","title":"\u5165\u95e8\u6848\u4f8b"},{"location":"C%2B%2B/C%2B%2B%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/#_2","text":"\u9996\u5148\u51fd\u6570\u6307\u9488\u4e5f\u662f\u4e00\u79cd\u6307\u9488\uff0c\u53ea\u4e0d\u8fc7\u6307\u5411\u7684\u662f\u51fd\u6570\uff08C\u8bed\u8a00\u4e2d\u6ca1\u6709\u5bf9\u8c61\uff09\u3002\u7136\u540e\u901a\u8fc7\u8fd9\u4e2a\u6307\u9488\u5c31\u53ef\u4ee5\u8c03\u7528\u3002 int Func ( int x ); /*\u58f0\u660e\u4e00\u4e2a\u51fd\u6570*/ int ( * p ) ( int x ); /*\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6307\u9488*/ p = Func ; /*\u5c06Func\u51fd\u6570\u7684\u9996\u5730\u5740\u8d4b\u7ed9\u6307\u9488\u53d8\u91cfp*/ p = & Func ; /*\u5c06Func\u51fd\u6570\u7684\u9996\u5730\u5740\u8d4b\u7ed9\u6307\u9488\u53d8\u91cfp*/ \u7ecf\u8fc7\u4e0a\u8ff0\u540e\uff0c\u6307\u9488\u53d8\u91cf p \u5c31\u6307\u5411\u51fd\u6570 Func() \u4ee3\u7801\u7684\u9996\u5730\u5740\u4e86\u3002\u4e0b\u9762\u770b\u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u3002 int Max ( int x , int y ) //\u5b9a\u4e49Max\u51fd\u6570 { if ( x > y ){ return x ; } else { return y ; } } int main () { int ( * p )( int , int ); //\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6307\u9488 p = Max ; //\u628a\u51fd\u6570Max\u8d4b\u7ed9\u6307\u9488\u53d8\u91cfp, \u4f7fp\u6307\u5411Max\u51fd\u6570 int c = ( * p )( 1 , 2 ); //\u901a\u8fc7\u51fd\u6570\u6307\u9488\u8c03\u7528Max\u51fd\u6570 printf ( \"%d\" , c ); return 0 ; } p\u6307\u5411Max\u51fd\u6570\u4e4b\u540e\uff0c\u7136\u540e\u7528p\u8c03\u7528Max\u51fd\u6570\uff0c\u8fd4\u56de\u4e24\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u503c\u3002\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u56e0\u4e3a\u51fd\u6570\u540d\u672c\u8eab\u5c31\u53ef\u4ee5\u8868\u793a\u8be5\u51fd\u6570\u5730\u5740\uff08\u6307\u9488\uff09\uff0c\u56e0\u6b64\u5728\u83b7\u53d6\u51fd\u6570\u6307\u9488\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u51fd\u6570\u540d\uff0c\u4e5f\u53ef\u4ee5\u53d6\u51fd\u6570\u7684\u5730\u5740\u3002 p = Max\u53ef\u4ee5\u6539\u6210 p = &Max; c = (*p)(a, b) \u53ef\u4ee5\u6539\u6210 c = p(a, b) \u6240\u4ee5\u51fd\u6570\u6307\u9488\u7684\u901a\u5e38\u5199\u6cd5\u662f \u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b (* \u6307\u9488\u53d8\u91cf\u540d) (\u51fd\u6570\u53c2\u6570\u5217\u8868); \u5728\u8fd9\u91cc\u6307\u9488\u53d8\u91cf\u540d\u4e5f\u53ef\u4ee5\u53eb\u505a\u51fd\u6570\u540d\uff0c \u4f46\u662f\u901a\u5e38\u53ef\u4ee5\u7528typedef\u8fdb\u884c\u63cf\u8ff0 typedef \u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b (* \u6307\u9488\u53d8\u91cf\u540d) (\u51fd\u6570\u53c2\u6570\u5217\u8868); \u6700\u540e\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\u53d8\u91cf\u6ca1\u6709 ++ \u548c -- \u8fd0\u7b97\u3002","title":"\u51fd\u6570\u6307\u9488"},{"location":"C%2B%2B/C%2B%2B%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/#c","text":"\u524d\u9762\u51fd\u6570\u6307\u9488\u7684\u65b9\u5f0f\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u540c\u65f6\u7528\u4e8eC\u548cC++\uff0c\u4e0b\u9762\u4ecb\u7ecd\u53e6\u5916\u7684\u4e00\u4e9b\u65b9\u5f0f\uff0c\u56e0\u4e3aC++\u5f15\u5165\u4e86\u5bf9\u8c61\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c7b\u7684\u6210\u5458\u548c\u9759\u6001\u51fd\u6570\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\u3002 class ProgramA { public : void FunA1 () { printf ( \"I'am ProgramA.FunA1() and be called.. \\n \" ); } static void FunA2 () { printf ( \"I'am ProgramA.FunA2() and be called.. \\n \" ); } }; class ProgramB { public : void FunB1 ( void ( * callback )()) { printf ( \"I'am ProgramB.FunB1() and be called.. \\n \" ); callback (); } }; int main ( int argc , char ** argv ) { ProgramA PA ; PA . FunA1 (); ProgramB PB ; PB . FunB1 ( ProgramA :: FunA2 ); } \u5728\u7c7bB\u4e2d\u8c03\u7528\u7c7bA\u4e2d\u7684\u9759\u6001\u51fd\u6570\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u56de\u8c03\u3002 \u4f46\u8fd9\u79cd\u5b9e\u73b0\u6709\u4e00\u4e2a\u5f88\u660e\u663e\u7684\u7f3a\u70b9\uff1astatic \u51fd\u6570\u4e0d\u80fd\u8bbf\u95ee\u975estatic \u6210\u5458\u53d8\u91cf\u6216\u51fd\u6570\uff0c\u4f1a\u4e25\u91cd\u9650\u5236\u56de\u8c03\u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0\u7684\u529f\u80fd\u3002","title":"C++\u7c7b\u7684\u9759\u6001\u51fd\u6570\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570"},{"location":"C%2B%2B/C%2B%2B%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/#_3","text":"\u8fd9\u79cd\u65b9\u5f0f\u6bd4\u8f83\u9ebb\u70e6\uff0c\u53ef\u4ee5\u5148\u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u4f8b\u5b50\u3002 class ProgramA { public : void FunA1 () { printf ( \"I'am ProgramA.FunA1() and be called.. \\n \" ); } void FunA2 () { printf ( \"I'am ProgramA.FunA2() and be called.. \\n \" ); } }; class ProgramB { public : void FunB1 ( void ( ProgramA ::* callback )(), void * context ) { printf ( \"I'am ProgramB.FunB1() and be called.. \\n \" ); (( ProgramA * ) context ->* callback )(); } }; int main ( int argc , char ** argv ) { ProgramA PA ; PA . FunA1 (); ProgramB PB ; PB . FunB1 ( & ProgramA :: FunA2 , & PA ); // \u6b64\u5904\u90fd\u8981\u52a0& } \u529f\u80fd\u603b\u4f53\u4e0e\u4e0a\u9762\u4e00\u4e2a\u76f8\u540c\uff0c\u4f46\u662f\uff0c\u7c7b\u7684\u9759\u6001\u51fd\u6570\u672c\u8eab\u4e0d\u5c5e\u4e8e\u8be5\u7c7b\uff0c\u6240\u4ee5\u548c\u666e\u901a\u51fd\u6570\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\u7c7b\u4f3c\u3002\u8fd9\u79cd\u65b9\u5f0f\u5b58\u5728\u4e00\u4e9b\u4e0d\u8db3\uff0c\uff0c\u4e5f\u5c31\u6211\u9884\u5148\u8fd8\u8981\u77e5\u9053\u56de\u8c03\u51fd\u6570\u6240\u5c5e\u7684\u7c7b\u5b9a\u4e49\uff0c\u5f53ProgramB\u60f3\u72ec\u7acb\u5c01\u88c5\u65f6\u5c31\u4e0d\u597d\u7528\u4e86\u3002(\u8fdd\u80cc\u4e86\u4e00\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u7684\u539f\u5219)","title":"\u7c7b\u7684\u975e\u9759\u6001\u51fd\u6570\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570"},{"location":"C%2B%2B/C%2B%2B%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/#lambda","text":"Lambda\u672c\u8eab\u5c31\u662f\u4e00\u79cd\u533f\u540d\u51fd\u6570\uff0c\u662f\u4e00\u79cd\u51fd\u6570\u7684\u7b80\u5199\u5f62\u5f0f(\u6b64\u5904\u53c2\u8003\u4e0a\u4e00\u7bc7\u535a\u5ba2Lambda\u8868\u8fbe\u5f0f) #include <iostream> #include <functional> void func1 ( int a , std :: function < void ( int ) > func2 ){ func2 ( a ); } int main ( int argc , char ** argv ) { auto fun3 = []( int a ){ std :: cout << a << std :: endl ; }; func1 ( 3 , fun3 ); } \u8fd9\u79cd\u65b9\u5f0f\u4e5f\u8f83\u4e3a\u7b80\u5355\uff0c\u4f46\u8981\u6ce8\u610f\u5728C++11\u7248\u672c\u624d\u5f00\u59cb\u5f15\u5165Lambda\u8868\u8fbe\u5f0f\uff0c\u5728\u4e00\u4e9b\u8f83\u4e3a\u8001\u65e7\u7684\u7f16\u8bd1\u5668\u4e0a\u53ef\u80fd\u65e0\u6cd5\u901a\u8fc7\u3002","title":"Lambda\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570"},{"location":"C%2B%2B/C%2B%2B%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/#stdfuntionstdbind","text":"\u8fd9\u79cd\u65b9\u5f0f\u4e5f\u662f\u9002\u7528\u4e8eC++\uff0c\u8981\u5f15\u5165 functional \u7684\u5934\u6587\u4ef6\u3002\u5b58\u50a8\u3001\u590d\u5236\u3001\u548c\u8c03\u7528\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u76ee\u6807\u5b9e\u4f53\u5305\u62ec\u666e\u901a\u51fd\u6570\u3001Lambda\u8868\u8fbe\u5f0f\u3001\u51fd\u6570\u6307\u9488\u3001\u4ee5\u53ca\u5176\u5b83\u51fd\u6570\u5bf9\u8c61\u7b49\u3002std::bind()\u51fd\u6570\u7684\u610f\u4e49\u5c31\u50cf\u5b83\u7684\u51fd\u6570\u540d\u4e00\u6837\uff0c\u662f\u7528\u6765\u7ed1\u5b9a\u51fd\u6570\u8c03\u7528\u7684\u67d0\u4e9b\u53c2\u6570\u7684\u3002 #include <iostream> #include <functional> // fucntion/bind class ProgramA { public : void FunA1 () { printf ( \"I'am ProgramA.FunA1() and be called.. \\n \" ); } void FunA2 () { printf ( \"I'am ProgramA.FunA2() and be called.. \\n \" ); } static void FunA3 () { printf ( \"I'am ProgramA.FunA3() and be called.. \\n \" ); } }; class ProgramB { typedef std :: function < void () > CallbackFun ; public : void FunB1 ( CallbackFun callback ) { printf ( \"I'am ProgramB.FunB2() and be called.. \\n \" ); callback (); } }; void normFun () { printf ( \"I'am normFun() and be called.. \\n \" ); } int main ( int argc , char ** argv ) { ProgramA PA ; PA . FunA1 (); printf ( \" \\n \" ); ProgramB PB ; PB . FunB1 ( normFun ); printf ( \" \\n \" ); PB . FunB1 ( ProgramA :: FunA3 ); printf ( \" \\n \" ); PB . FunB1 ( std :: bind ( & ProgramA :: FunA2 , & PA )); } \u4e3b\u8981\u770b\u6700\u540e\u4e00\u884c\uff0c\u901a\u8fc7std::bind\u51fd\u6570\u7ed1\u5b9a\u4e86\u5bf9\u8c61\u4e0e\u5bf9\u5e94\u7684\u51fd\u6570\uff0c\u8fd9\u79cd\u65b9\u5f0f\u6bd4\u4e0a\u9762\u7684\u901a\u8fc7\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8fdb\u884c\u56de\u8c03\u66f4\u4e3a\u7b80\u5355\u65b9\u4fbf\u3002\u4e0b\u9762\u770b\u4e00\u4e0b\u5982\u679c\u6709\u53c2\u6570\u7684\u8bdd\uff0c\u9700\u8981\u5f15\u5165\u5360\u4f4d\u7b26std::placeholders::_1\u6765\u8fdb\u884c\u56de\u8c03\u3002 #include <iostream> #include <functional> using namespace std ; int TestFunc ( int a , char c , float f ) { cout << a << endl ; cout << c << endl ; cout << f << endl ; return a ; } int main () { auto bindFunc1 = bind ( TestFunc , std :: placeholders :: _1 , 'A' , 100.1 ); bindFunc1 ( 10 ); cout << \"================================= \\n \" ; auto bindFunc2 = bind ( TestFunc , std :: placeholders :: _2 , std :: placeholders :: _1 , 100.1 ); bindFunc2 ( 'B' , 10 ); cout << \"================================= \\n \" ; auto bindFunc3 = bind ( TestFunc , std :: placeholders :: _2 , std :: placeholders :: _3 , std :: placeholders :: _1 ); bindFunc3 ( 100.1 , 30 , 'C' ); return 0 ; } \u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u5f15\u5165\u4e86\u5360\u4f4d\u7b26std::placeholders::_1\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u901a\u8fc7\u4e0b\u5212\u7ebf\u52a0\u6570\u5b57\u6765\u5b9e\u73b0\uff0c\u4ece\u800c\u5b9e\u73b0\u6709\u53c2\u6570\u7684\u56de\u8c03\u3002\u8fd9\u4e2abind\u51fd\u6570\u4e2d\u7684\u91cd\u8f7d\u901a\u5e38\u7b2c\u4e00\u4e2a\u662f\u51fd\u6570\u7684\u6307\u9488\uff0c\u7b2c\u4e8c\u4e2a\u662f\u8c03\u7528\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u540e\u9762\u8ddf\u4e0a\u53c2\u6570\u5360\u4f4d\u7b26\u3002","title":"std::funtion\u548cstd::bind\u7684\u4f7f\u7528"},{"location":"C%2B%2B/Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/","text":"Lambda\u8868\u8fbe\u5f0f \u00b6 C++11\u4e2d\u7684Lambda\u8868\u8fbe\u5f0f\u7528\u4e8e \u5b9a\u4e49\u5e76\u521b\u5efa\u533f\u540d\u7684\u51fd\u6570\u5bf9\u8c61 \uff0c\u4ee5\u7b80\u5316\u7f16\u7a0b\u5de5\u4f5c\u3002\u4e0b\u9762\u770b\u4e00\u4e0bLambda\u8868\u8fbe\u5f0f\u7684\u57fa\u672c\u6784\u6210\u3002 \u57fa\u672c\u6784\u6210 \u00b6 \u9996\u5148\u662fLambda\u7684\u57fa\u672c\u7ed3\u6784\uff1a [capture](parameters) mutable ->return-type { statement } \u6574\u4f53\u7684\u7ed3\u6784\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a[\u51fd\u6570\u5bf9\u8c61\u53c2\u6570](\u64cd\u4f5c\u7b26\u91cd\u8f7d\u51fd\u6570\u53c2\u6570)mutable ->\u8fd4\u56de\u503c{\u51fd\u6570\u4f53}\u3002\u4e0b\u9762\u4f9d\u6b21\u4ecb\u7ecd\u5404\u4e2a\u90e8\u5206\u7684\u5b9a\u4e49\u53ca\u7528\u6cd5\u3002 \u51fd\u6570\u5bf9\u8c61\u53c2\u6570 \u00b6 [] ,\u7528\u8fd9\u4e2a\u65b9\u62ec\u53f7\u6807\u8bc6\u4e00\u4e2aLambda\u8868\u8fbe\u5f0f\u7684\u5f00\u59cb\uff0c\u8fd9\u4e00\u90e8\u5206 \u5fc5\u987b\u5b58\u5728\uff0c\u4e0d\u80fd\u7701\u7565 \u3002\u51fd\u6570\u5bf9\u8c61\u53c2\u6570\u662f\u4f20\u9012\u7ed9\u7f16\u8bd1\u5668\u81ea\u52a8\u751f\u6210\u7684\u51fd\u6570\u5bf9\u8c61\u7c7b\u7684\u6784\u9020\u51fd\u6570\u7684\u3002\u51fd\u6570\u5bf9\u8c61\u53c2\u6570\u53ea\u80fd\u4f7f\u7528\u90a3\u4e9b\u5230\u5b9a\u4e49Lambda\u4e3a\u6b62\u65f6Lambda\u6240\u5728\u4f5c\u7528\u8303\u56f4\u5185\u53ef\u89c1\u7684 \u5c40\u90e8\u53d8\u91cf \uff08\u5305\u62ecLambda\u6240\u5728\u7c7b\u7684this\uff09\u3002 int a = 1 ; [](){ cout << a << endl ; }(); \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u51fd\u6570\u5bf9\u8c61\u4e3a\u7a7a\uff0c\u8bbf\u95ee\u4e0d\u5230a\uff0c\u7a0b\u5e8f\u4f1a\u62a5\u9519\u3002\uff08\u6700\u540e\u52a0\u4e00\u4e2a\u62ec\u53f7\u662f\u76f4\u63a5\u8c03\u7528\uff09\u51fd\u6570\u5bf9\u8c61\u53c2\u6570\u6709\u4ee5\u4e0b\u5f62\u5f0f\uff1a * \u7a7a\u3002\u6ca1\u6709\u4f7f\u7528\u4efb\u4f55\u51fd\u6570\u5bf9\u8c61\u53c2\u6570\u3002 * =\u3002\u51fd\u6570\u4f53\u5185\u53ef\u4ee5\u4f7f\u7528Lambda\u6240\u5728\u4f5c\u7528\u8303\u56f4\u5185\u6240\u6709\u53ef\u89c1\u7684\u5c40\u90e8\u53d8\u91cf\uff08\u5305\u62ecLambda\u6240\u5728\u7c7b\u7684this\uff09\uff0c\u5e76\u4e14\u662f \u503c\u4f20\u9012\u65b9\u5f0f \uff08\u76f8\u5f53\u4e8e\u7f16\u8bd1\u5668\u81ea\u52a8\u4e3a\u6211\u4eec\u6309\u503c\u4f20\u9012\u4e86\u6240\u6709\u5c40\u90e8\u53d8\u91cf\uff09\u3002 \u8fd9\u79cd\u65b9\u5f0f\u6700\u4e3a\u5e38\u7528 \u3002 * &\u3002\u51fd\u6570\u4f53\u5185\u53ef\u4ee5\u4f7f\u7528Lambda\u6240\u5728\u4f5c\u7528\u8303\u56f4\u5185\u6240\u6709\u53ef\u89c1\u7684\u5c40\u90e8\u53d8\u91cf\uff08\u5305\u62ecLambda\u6240\u5728\u7c7b\u7684this\uff09\uff0c\u5e76\u4e14\u662f \u5f15\u7528\u4f20\u9012\u65b9\u5f0f \uff08\u76f8\u5f53\u4e8e\u7f16\u8bd1\u5668\u81ea\u52a8\u4e3a\u6211\u4eec\u6309\u5f15\u7528\u4f20\u9012\u4e86\u6240\u6709\u5c40\u90e8\u53d8\u91cf\uff09\u3002 * this\u3002\u51fd\u6570\u4f53\u5185\u53ef\u4ee5\u4f7f\u7528Lambda\u6240\u5728\u7c7b\u4e2d\u7684\u6210\u5458\u53d8\u91cf\u3002 * a\u3002\u5c06a\u6309\u503c\u8fdb\u884c\u4f20\u9012\u3002\u6309\u503c\u8fdb\u884c\u4f20\u9012\u65f6\uff0c\u51fd\u6570\u4f53\u5185\u4e0d\u80fd\u4fee\u6539\u4f20\u9012\u8fdb\u6765\u7684a\u7684\u62f7\u8d1d\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u51fd\u6570\u662fconst\u7684\u3002\u8981\u4fee\u6539\u4f20\u9012\u8fdb\u6765\u7684a\u7684\u62f7\u8d1d\uff0c\u53ef\u4ee5\u6dfb\u52a0mutable\u4fee\u9970\u7b26\u3002 * &a\u3002\u5c06a\u6309\u5f15\u7528\u8fdb\u884c\u4f20\u9012\u3002=\uff0c&a, &b\u3002\u9664a\u548cb\u6309\u5f15\u7528\u8fdb\u884c\u4f20\u9012\u5916\uff0c\u5176\u4ed6\u53c2\u6570\u90fd\u6309\u503c\u8fdb\u884c\u4f20\u9012\u3002\uf06e &, a, b\u3002\u9664a\u548cb\u6309\u503c\u8fdb\u884c\u4f20\u9012\u5916\uff0c\u5176\u4ed6\u53c2\u6570\u90fd\u6309\u5f15\u7528\u8fdb\u884c\u4f20\u9012\u3002 \u5e38\u7528\u7684\u65b9\u5f0f\u5c31\u7b2c\u4e8c\u79cd\u548c\u7b2c\u4e09\u79cd\u3002\u5176\u5b83\u7684\u65b9\u5f0f\u6839\u636e\u5177\u4f53\u7684\u60c5\u51b5\u8fdb\u884c\u9009\u62e9\u3002 \u64cd\u4f5c\u7b26\u91cd\u8f7d\u51fd\u6570\u53c2\u6570 \u00b6 \u6807\u8bc6\u91cd\u8f7d\u7684()\u64cd\u4f5c\u7b26\u7684\u53c2\u6570\uff0c\u6ca1\u6709\u53c2\u6570\u65f6\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u7701\u7565\u3002\u53c2\u6570\u53ef\u4ee5\u901a\u8fc7\u6309\u503c\uff08\u5982\uff1a(a,b)\uff09\u548c\u6309\u5f15\u7528\uff08\u5982\uff1a(&a,&b)\uff09\u4e24\u79cd\u65b9\u5f0f\u8fdb\u884c\u4f20\u9012\u3002\u8fd9\u4e2a\u5c31\u7c7b\u4f3c\u4e0e\u666e\u901a\u51fd\u6570\u7684\u5f62\u53c2\u3002 \u53ef\u4fee\u6539\u6807\u793a\u7b26 \u00b6 mutable \u58f0\u660e\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u7701\u7565\u3002\u6309\u503c\u4f20\u9012\u51fd\u6570\u5bf9\u8c61\u53c2\u6570\u65f6\uff0c\u52a0\u4e0amutable\u4fee\u9970\u7b26\u540e\uff0c\u53ef\u4ee5\u4fee\u6539\u6309\u503c\u4f20\u9012\u8fdb\u6765\u7684\u62f7\u8d1d\uff08\u6ce8\u610f\u662f\u80fd\u4fee\u6539\u62f7\u8d1d\uff0c\u800c\u4e0d\u662f\u503c\u672c\u8eab\uff09\u3002 int a = 1 ; //\u4e0d\u53ef\u4fee\u6539 [ = ](){ a = 2 ; }(); //\u53ef\u4ee5\u4fee\u6539 [ = ]() mutable { a = 2 ; }(); \u53ea\u662f\u5bf9\u503c\u7684\u62f7\u8d1d\u8fdb\u884c\u4fee\u6539\uff0c\u51fd\u6570\u5916\u90e8\u53d8\u91cf\u7684\u503c\u4ecd\u672a\u6539\u53d8\u3002 \u51fd\u6570\u8fd4\u56de\u503c \u00b6 ->\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u6807\u8bc6\u51fd\u6570\u8fd4\u56de\u503c\u7684\u7c7b\u578b\uff0c\u5f53\u8fd4\u56de\u503c\u4e3avoid\uff0c\u6216\u8005\u51fd\u6570\u4f53\u4e2d\u53ea\u6709\u4e00\u5904return\u7684\u5730\u65b9\uff08\u6b64\u65f6\u7f16\u8bd1\u5668\u53ef\u4ee5\u81ea\u52a8\u63a8\u65ad\u51fa\u8fd4\u56de\u503c\u7c7b\u578b\uff09\u65f6\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u7701\u7565\u3002 \u51fd\u6570\u4f53 \u00b6 {}\uff0c\u6807\u8bc6\u51fd\u6570\u7684\u5b9e\u73b0\uff0c\u8fd9\u90e8\u5206\u4e0d\u80fd\u7701\u7565\uff0c\u4f46\u51fd\u6570\u4f53\u53ef\u4ee5\u4e3a\u7a7a\u3002 Lambda\u4f5c\u4e3a\u8fd4\u56de\u503c \u00b6 \u5728C++11\u4e2d\u53ea\u80fd\u4f7f\u7528std::function\u6307\u5b9a\u8fd4\u56de\u503c\uff0c\u5c06\u6b32\u8fd4\u56de\u7684lambda\u8868\u8fbe\u5f0f\u8f6c\u6362\u6210function\u5bf9\u8c61\u3002 auto num = []( int i , int j ){ return i - j ; }; int main (){ cout << num ( 1 , 2 ); } \u4e0a\u8ff0\u662f\u5c06Lambda\u4f5c\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u7136\u540e\u7528auto\u81ea\u52a8\u8f6c\u6362\u7c7b\u578b\uff0c\u540c\u65f6\u53ef\u4ee5\u6307\u5b9a\u7c7b\u578b\u4e5f\u5c31\u662ffunction\u5bf9\u8c61\u3002 function < int ( int , int ) > num = []( int i , int j ){ return i - j ; }; cout << num ( 1 , 2 ); \u8fd9\u4e2a\u6a21\u677f\u5bf9\u8c61\u4e2d\u9700\u8981\u4f20\u5165\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u548c\u5f62\u53c2\u7c7b\u578b\uff0c\u901a\u5e38\u4f7f\u7528auto\u8fdb\u884c\u81ea\u52a8\u8f6c\u6362\u3002 std :: function < void ( int ) > func (){ return [] ( int e ) { std :: cout << e ; }; } func ()( 10 ); \u8fd9\u4e2a\u4f8b\u5b50\u662f\u5c06Lambda\u4f5c\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002 \u603b\u7ed3 \u00b6 Lambda\u8fd8\u6709\u8bb8\u591a\u79cd\u7528\u5904\uff0c\u901a\u5e38\u4e5f\u53ef\u4ee5\u4f5c\u4e3aSTL\u79cd\u7b97\u6cd5\u7684\u53c2\u6570\u4f20\u5165\uff0c\u7528\u4e8e\u5904\u7406\u4e00\u4e9b\u903b\u8f91\u8f83\u4e3a\u7b80\u5355\u7684\u51fd\u6570\u7ed3\u6784\uff0c\u4f8b\u5982\u6bd4\u8f83\u5927\u5c0f\u7b49\u3002 std :: sort ( v . begin (), v . end (), [] ( int n1 , int n2 ) { return n1 > n2 ; }); \u8fd9\u4e2a\u4f8b\u5b50\u5c31\u662f\u7528sort\u7b97\u6cd5\uff0c\u5e76\u5229\u7528Lambda\u8fdb\u884c\u6392\u5e8f\u3002","title":"Lambda\u8868\u8fbe\u5f0f"},{"location":"C%2B%2B/Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/#lambda","text":"C++11\u4e2d\u7684Lambda\u8868\u8fbe\u5f0f\u7528\u4e8e \u5b9a\u4e49\u5e76\u521b\u5efa\u533f\u540d\u7684\u51fd\u6570\u5bf9\u8c61 \uff0c\u4ee5\u7b80\u5316\u7f16\u7a0b\u5de5\u4f5c\u3002\u4e0b\u9762\u770b\u4e00\u4e0bLambda\u8868\u8fbe\u5f0f\u7684\u57fa\u672c\u6784\u6210\u3002","title":"Lambda\u8868\u8fbe\u5f0f"},{"location":"C%2B%2B/Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/#_1","text":"\u9996\u5148\u662fLambda\u7684\u57fa\u672c\u7ed3\u6784\uff1a [capture](parameters) mutable ->return-type { statement } \u6574\u4f53\u7684\u7ed3\u6784\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a[\u51fd\u6570\u5bf9\u8c61\u53c2\u6570](\u64cd\u4f5c\u7b26\u91cd\u8f7d\u51fd\u6570\u53c2\u6570)mutable ->\u8fd4\u56de\u503c{\u51fd\u6570\u4f53}\u3002\u4e0b\u9762\u4f9d\u6b21\u4ecb\u7ecd\u5404\u4e2a\u90e8\u5206\u7684\u5b9a\u4e49\u53ca\u7528\u6cd5\u3002","title":"\u57fa\u672c\u6784\u6210"},{"location":"C%2B%2B/Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/#_2","text":"[] ,\u7528\u8fd9\u4e2a\u65b9\u62ec\u53f7\u6807\u8bc6\u4e00\u4e2aLambda\u8868\u8fbe\u5f0f\u7684\u5f00\u59cb\uff0c\u8fd9\u4e00\u90e8\u5206 \u5fc5\u987b\u5b58\u5728\uff0c\u4e0d\u80fd\u7701\u7565 \u3002\u51fd\u6570\u5bf9\u8c61\u53c2\u6570\u662f\u4f20\u9012\u7ed9\u7f16\u8bd1\u5668\u81ea\u52a8\u751f\u6210\u7684\u51fd\u6570\u5bf9\u8c61\u7c7b\u7684\u6784\u9020\u51fd\u6570\u7684\u3002\u51fd\u6570\u5bf9\u8c61\u53c2\u6570\u53ea\u80fd\u4f7f\u7528\u90a3\u4e9b\u5230\u5b9a\u4e49Lambda\u4e3a\u6b62\u65f6Lambda\u6240\u5728\u4f5c\u7528\u8303\u56f4\u5185\u53ef\u89c1\u7684 \u5c40\u90e8\u53d8\u91cf \uff08\u5305\u62ecLambda\u6240\u5728\u7c7b\u7684this\uff09\u3002 int a = 1 ; [](){ cout << a << endl ; }(); \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u51fd\u6570\u5bf9\u8c61\u4e3a\u7a7a\uff0c\u8bbf\u95ee\u4e0d\u5230a\uff0c\u7a0b\u5e8f\u4f1a\u62a5\u9519\u3002\uff08\u6700\u540e\u52a0\u4e00\u4e2a\u62ec\u53f7\u662f\u76f4\u63a5\u8c03\u7528\uff09\u51fd\u6570\u5bf9\u8c61\u53c2\u6570\u6709\u4ee5\u4e0b\u5f62\u5f0f\uff1a * \u7a7a\u3002\u6ca1\u6709\u4f7f\u7528\u4efb\u4f55\u51fd\u6570\u5bf9\u8c61\u53c2\u6570\u3002 * =\u3002\u51fd\u6570\u4f53\u5185\u53ef\u4ee5\u4f7f\u7528Lambda\u6240\u5728\u4f5c\u7528\u8303\u56f4\u5185\u6240\u6709\u53ef\u89c1\u7684\u5c40\u90e8\u53d8\u91cf\uff08\u5305\u62ecLambda\u6240\u5728\u7c7b\u7684this\uff09\uff0c\u5e76\u4e14\u662f \u503c\u4f20\u9012\u65b9\u5f0f \uff08\u76f8\u5f53\u4e8e\u7f16\u8bd1\u5668\u81ea\u52a8\u4e3a\u6211\u4eec\u6309\u503c\u4f20\u9012\u4e86\u6240\u6709\u5c40\u90e8\u53d8\u91cf\uff09\u3002 \u8fd9\u79cd\u65b9\u5f0f\u6700\u4e3a\u5e38\u7528 \u3002 * &\u3002\u51fd\u6570\u4f53\u5185\u53ef\u4ee5\u4f7f\u7528Lambda\u6240\u5728\u4f5c\u7528\u8303\u56f4\u5185\u6240\u6709\u53ef\u89c1\u7684\u5c40\u90e8\u53d8\u91cf\uff08\u5305\u62ecLambda\u6240\u5728\u7c7b\u7684this\uff09\uff0c\u5e76\u4e14\u662f \u5f15\u7528\u4f20\u9012\u65b9\u5f0f \uff08\u76f8\u5f53\u4e8e\u7f16\u8bd1\u5668\u81ea\u52a8\u4e3a\u6211\u4eec\u6309\u5f15\u7528\u4f20\u9012\u4e86\u6240\u6709\u5c40\u90e8\u53d8\u91cf\uff09\u3002 * this\u3002\u51fd\u6570\u4f53\u5185\u53ef\u4ee5\u4f7f\u7528Lambda\u6240\u5728\u7c7b\u4e2d\u7684\u6210\u5458\u53d8\u91cf\u3002 * a\u3002\u5c06a\u6309\u503c\u8fdb\u884c\u4f20\u9012\u3002\u6309\u503c\u8fdb\u884c\u4f20\u9012\u65f6\uff0c\u51fd\u6570\u4f53\u5185\u4e0d\u80fd\u4fee\u6539\u4f20\u9012\u8fdb\u6765\u7684a\u7684\u62f7\u8d1d\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u51fd\u6570\u662fconst\u7684\u3002\u8981\u4fee\u6539\u4f20\u9012\u8fdb\u6765\u7684a\u7684\u62f7\u8d1d\uff0c\u53ef\u4ee5\u6dfb\u52a0mutable\u4fee\u9970\u7b26\u3002 * &a\u3002\u5c06a\u6309\u5f15\u7528\u8fdb\u884c\u4f20\u9012\u3002=\uff0c&a, &b\u3002\u9664a\u548cb\u6309\u5f15\u7528\u8fdb\u884c\u4f20\u9012\u5916\uff0c\u5176\u4ed6\u53c2\u6570\u90fd\u6309\u503c\u8fdb\u884c\u4f20\u9012\u3002\uf06e &, a, b\u3002\u9664a\u548cb\u6309\u503c\u8fdb\u884c\u4f20\u9012\u5916\uff0c\u5176\u4ed6\u53c2\u6570\u90fd\u6309\u5f15\u7528\u8fdb\u884c\u4f20\u9012\u3002 \u5e38\u7528\u7684\u65b9\u5f0f\u5c31\u7b2c\u4e8c\u79cd\u548c\u7b2c\u4e09\u79cd\u3002\u5176\u5b83\u7684\u65b9\u5f0f\u6839\u636e\u5177\u4f53\u7684\u60c5\u51b5\u8fdb\u884c\u9009\u62e9\u3002","title":"\u51fd\u6570\u5bf9\u8c61\u53c2\u6570"},{"location":"C%2B%2B/Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/#_3","text":"\u6807\u8bc6\u91cd\u8f7d\u7684()\u64cd\u4f5c\u7b26\u7684\u53c2\u6570\uff0c\u6ca1\u6709\u53c2\u6570\u65f6\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u7701\u7565\u3002\u53c2\u6570\u53ef\u4ee5\u901a\u8fc7\u6309\u503c\uff08\u5982\uff1a(a,b)\uff09\u548c\u6309\u5f15\u7528\uff08\u5982\uff1a(&a,&b)\uff09\u4e24\u79cd\u65b9\u5f0f\u8fdb\u884c\u4f20\u9012\u3002\u8fd9\u4e2a\u5c31\u7c7b\u4f3c\u4e0e\u666e\u901a\u51fd\u6570\u7684\u5f62\u53c2\u3002","title":"\u64cd\u4f5c\u7b26\u91cd\u8f7d\u51fd\u6570\u53c2\u6570"},{"location":"C%2B%2B/Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/#_4","text":"mutable \u58f0\u660e\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u7701\u7565\u3002\u6309\u503c\u4f20\u9012\u51fd\u6570\u5bf9\u8c61\u53c2\u6570\u65f6\uff0c\u52a0\u4e0amutable\u4fee\u9970\u7b26\u540e\uff0c\u53ef\u4ee5\u4fee\u6539\u6309\u503c\u4f20\u9012\u8fdb\u6765\u7684\u62f7\u8d1d\uff08\u6ce8\u610f\u662f\u80fd\u4fee\u6539\u62f7\u8d1d\uff0c\u800c\u4e0d\u662f\u503c\u672c\u8eab\uff09\u3002 int a = 1 ; //\u4e0d\u53ef\u4fee\u6539 [ = ](){ a = 2 ; }(); //\u53ef\u4ee5\u4fee\u6539 [ = ]() mutable { a = 2 ; }(); \u53ea\u662f\u5bf9\u503c\u7684\u62f7\u8d1d\u8fdb\u884c\u4fee\u6539\uff0c\u51fd\u6570\u5916\u90e8\u53d8\u91cf\u7684\u503c\u4ecd\u672a\u6539\u53d8\u3002","title":"\u53ef\u4fee\u6539\u6807\u793a\u7b26"},{"location":"C%2B%2B/Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/#_5","text":"->\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u6807\u8bc6\u51fd\u6570\u8fd4\u56de\u503c\u7684\u7c7b\u578b\uff0c\u5f53\u8fd4\u56de\u503c\u4e3avoid\uff0c\u6216\u8005\u51fd\u6570\u4f53\u4e2d\u53ea\u6709\u4e00\u5904return\u7684\u5730\u65b9\uff08\u6b64\u65f6\u7f16\u8bd1\u5668\u53ef\u4ee5\u81ea\u52a8\u63a8\u65ad\u51fa\u8fd4\u56de\u503c\u7c7b\u578b\uff09\u65f6\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u7701\u7565\u3002","title":"\u51fd\u6570\u8fd4\u56de\u503c"},{"location":"C%2B%2B/Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/#_6","text":"{}\uff0c\u6807\u8bc6\u51fd\u6570\u7684\u5b9e\u73b0\uff0c\u8fd9\u90e8\u5206\u4e0d\u80fd\u7701\u7565\uff0c\u4f46\u51fd\u6570\u4f53\u53ef\u4ee5\u4e3a\u7a7a\u3002","title":"\u51fd\u6570\u4f53"},{"location":"C%2B%2B/Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/#lambda_1","text":"\u5728C++11\u4e2d\u53ea\u80fd\u4f7f\u7528std::function\u6307\u5b9a\u8fd4\u56de\u503c\uff0c\u5c06\u6b32\u8fd4\u56de\u7684lambda\u8868\u8fbe\u5f0f\u8f6c\u6362\u6210function\u5bf9\u8c61\u3002 auto num = []( int i , int j ){ return i - j ; }; int main (){ cout << num ( 1 , 2 ); } \u4e0a\u8ff0\u662f\u5c06Lambda\u4f5c\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u7136\u540e\u7528auto\u81ea\u52a8\u8f6c\u6362\u7c7b\u578b\uff0c\u540c\u65f6\u53ef\u4ee5\u6307\u5b9a\u7c7b\u578b\u4e5f\u5c31\u662ffunction\u5bf9\u8c61\u3002 function < int ( int , int ) > num = []( int i , int j ){ return i - j ; }; cout << num ( 1 , 2 ); \u8fd9\u4e2a\u6a21\u677f\u5bf9\u8c61\u4e2d\u9700\u8981\u4f20\u5165\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u548c\u5f62\u53c2\u7c7b\u578b\uff0c\u901a\u5e38\u4f7f\u7528auto\u8fdb\u884c\u81ea\u52a8\u8f6c\u6362\u3002 std :: function < void ( int ) > func (){ return [] ( int e ) { std :: cout << e ; }; } func ()( 10 ); \u8fd9\u4e2a\u4f8b\u5b50\u662f\u5c06Lambda\u4f5c\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002","title":"Lambda\u4f5c\u4e3a\u8fd4\u56de\u503c"},{"location":"C%2B%2B/Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/#_7","text":"Lambda\u8fd8\u6709\u8bb8\u591a\u79cd\u7528\u5904\uff0c\u901a\u5e38\u4e5f\u53ef\u4ee5\u4f5c\u4e3aSTL\u79cd\u7b97\u6cd5\u7684\u53c2\u6570\u4f20\u5165\uff0c\u7528\u4e8e\u5904\u7406\u4e00\u4e9b\u903b\u8f91\u8f83\u4e3a\u7b80\u5355\u7684\u51fd\u6570\u7ed3\u6784\uff0c\u4f8b\u5982\u6bd4\u8f83\u5927\u5c0f\u7b49\u3002 std :: sort ( v . begin (), v . end (), [] ( int n1 , int n2 ) { return n1 > n2 ; }); \u8fd9\u4e2a\u4f8b\u5b50\u5c31\u662f\u7528sort\u7b97\u6cd5\uff0c\u5e76\u5229\u7528Lambda\u8fdb\u884c\u6392\u5e8f\u3002","title":"\u603b\u7ed3"},{"location":"C%2B%2B/%E5%8A%A8%E6%80%81%E5%BC%80%E8%BE%9F%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84/","text":"C\u8bed\u8a00\u4e2d\u7684\u6570\u7ec4\u7a7a\u95f4\u52a8\u6001\u5f00\u8f9f \u00b6 \u5728C\u8bed\u8a00\u4e2d\uff0c\u5fc5\u4e0d\u53ef\u5c11\u7684\u9700\u8981\u4f7f\u7528\u5230\u6570\u7ec4\uff0c\u901a\u5e38\u4e3a\u4e86\u52a8\u6001\u7684\u5f00\u8f9f\u6570\u7ec4\u7a7a\u95f4\uff0c\u53ef\u4ee5\u4f7f\u7528 malloc \u51fd\u6570\uff0c\u5728C++\u4e2d\u53ef\u4ee5\u4f7f\u7528 new \u5173\u952e\u5b57\u8fdb\u884c\u7a7a\u95f4\u7684\u52a8\u6001\u5f00\u8f9f\u4e0e\u56de\u6536\uff0c\u52a8\u6001\u5f00\u8f9f\u7a7a\u95f4\u7684\u65b9\u6cd5\u66f4\u52a0\u7075\u6d3b\uff0c\u66f4\u80fd\u6709\u6548\u7684\u6839\u636e\u9700\u8981\u5f00\u8f9f\u7a7a\u95f4\u4f7f\u7528\u3002 1\u3001\u4e00\u7ef4\u6570\u7ec4 \u00b6 \u4e00\u7ef4\u6570\u7ec4\u6700\u7b80\u5355\uff0c\u76f4\u63a5\u4f7f\u7528 malloc \u51fd\u6570\u5c31\u53ef\u4ee5\u5f00\u8f9f\uff0c\u4ee5 int \u578b\u6570\u636e\u4e3a\u4f8b\uff0c\u5f00\u8f9f\u4e00\u4e2a\u8fde\u7eed\u7a7a\u95f4\u4f7f\u7528\u3002 #include <stdio.h> #include <stdlib.h> void test ( int * arr ){ for ( int i = 0 ; i < 5 ; i ++ ){ printf ( \"%d \" , arr [ i ]); } } int main (){ int nums = 5 ; int * array = ( int * ) malloc ( sizeof ( int ) * nums ); for ( int i = 0 ; i < 5 ; i ++ ){ array [ i ] = i ; } test ( array ); return 0 ; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6700\u540e\u7684\u7ed3\u679c\u8f93\u51fa\u4e3a0 1 2 3 4\uff1bC\u8bed\u8a00\u4e2d\uff0c\u6570\u7ec4\u53d8\u91cf\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u6307\u9488\uff0c\u901a\u8fc7 malloc \u5c06\u5f00\u8f9f\u7a7a\u95f4\u7684\u8fd4\u56de\u503c\u8fd4\u56de\u7ed9\u6570\u7ec4\u6307\u9488\uff0c\u4ece\u800c\u53ef\u4ee5\u901a\u8fc7\u968f\u673a\u8bbf\u95ee\u4fee\u6539\u548c\u67e5\u8be2\u6570\u7ec4\u4e2d\u7684\u503c\u3002 2\u3001\u4e8c\u7ef4\u6570\u7ec4 \u00b6 \u4e8c\u7ef4\u6570\u7ec4\u53ef\u4ee5\u770b\u4f5c\u4e00\u7ef4\u6570\u7ec4\u7684\u5ef6\u7533\uff0c\u5728\u4e0a\u4e00\u4e2a\u4f8b\u5b50\u4e00\u7ef4\u6570\u7ec4\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u4e00\u7ef4\u6570\u636e\u662f\u4e00\u4e2a int \u578b\u53d8\u91cf\uff0c\u800c\u4e8c\u7ef4\u6570\u7ec4\u4e2d\uff0c\u5c06\u4e0a\u4e00\u4e2a\u4f8b\u5b50\u4e2d\u6bcf\u4e00\u4e2a\u4e00\u7ef4\u53d8\u91cf\u53d8\u4e3a\u4e00\u4e2a int * \u53d8\u91cf\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u53e6\u4e00\u4e2a\u5f00\u8f9f\u7684\u52a8\u6001\u4e00\u4f4d\u7a7a\u95f4\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u7ef4\u6570\u7ec4\u7684\u4e00\u7ef4\u6570\u7ec4\uff08\u5957\u5a03\uff09\u3002 #include <iostream> #include <stdlib.h> using namespace std ; void demotest ( int ** mat ){ for ( int i = 0 ; i < 4 ; i ++ ){ for ( int j = 0 ; j < 4 ; j ++ ){ cout << mat [ i ][ j ] << \" \" ; } cout << endl ; } } int main (){ int rows = 4 ; int columns = 4 ; int ** matrix = ( int ** ) malloc ( rows * sizeof ( int * )); for ( int i = 0 ; i < rows ; i ++ ){ matrix [ i ] = ( int * ) malloc ( columns * sizeof ( int )); } for ( int i = 0 ; i < rows ; i ++ ){ for ( int j = 0 ; j < columns ; j ++ ){ matrix [ i ][ j ] = i + j ; } } demotest ( matrix ); return 0 ; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5c06\u4e8c\u7ef4\u6570\u7ec4\uff08\u77e9\u9635\uff09\u770b\u4f5c\u4e00\u4e2a\u4e8c\u7ea7\u6307\u9488\uff08\u6307\u5411\u6307\u9488\u7684\u6307\u9488\uff09\uff0c\u6bcf\u4e00\u4e2a\u4e8c\u7ea7\u6307\u9488\u6307\u5411\u4e00\u4e2a\u5f00\u8f9f\u7a7a\u95f4\u8fd4\u56de\u7684\u4e00\u7ea7\u6307\u9488\u3002\u5bf9\u6bd4\u4e00\u7ef4\u6570\u7ec4\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u4e8c\u7ef4\u6570\u7ec4\u76f8\u5f53\u4e8e\u4e00\u7ef4\u6570\u7ec4\u4e2d\u5b58\u50a8\u6307\u5411\u91cc\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u7684\u5730\u5740\uff0c\u901a\u8fc7\u51fd\u6570\u5c06\u4e8c\u7ef4\u6307\u9488\u4f20\u9012\u8fc7\u53bb\uff0c\u53ef\u4ee5\u83b7\u53d6\u4e8c\u7ef4\u6570\u7ec4\u7684\u5730\u5740\uff0c\u7136\u540e\u904d\u5386\u5f97\u5230\u503c\u3002 3\u3001\u4e09\u7ef4\u6570\u7ec4 \u00b6 \u7c7b\u6bd4\u4e8c\u7ef4\u6570\u7ec4\u7684\u4f8b\u5b50\uff0c\u4e09\u7ef4\u6570\u7ec4\u5c31\u53ef\u4ee5\u770b\u4f5c\u4e8c\u7ef4\u6570\u7ec4\u7684\u5ef6\u7533\uff0c\u4e09\u7ef4\u6570\u7ec4\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u901a\u5e38\u53ef\u4ee5\u7528\u4e8e\u5b58\u50a8RGB\u56fe\u7247\uff0c\u7406\u89e3\u4e8c\u7ef4\u6570\u7ec4\u4e4b\u540e\uff0c\u4e09\u7ef4\u6570\u7ec4\u5c31\u8f83\u4e3a\u7b80\u5355\u4e86\uff0c\u4ee3\u7801\u4f8b\u5b50\u5982\u4e0b\u3002 #include <stdio.h> #include <stdlib.h> int main (){ int channels = 3 ; int columns = 4 ; int rows = 4 ; int *** matrix = ( int *** ) malloc ( sizeof ( int ** ) * channels ); for ( int i = 0 ; i < channels ; i ++ ){ matrix [ i ] = ( int ** ) malloc ( sizeof ( int * ) * rows ); } for ( int i = 0 ; i < channels ; i ++ ){ for ( int j = 0 ; j < rows ; j ++ ){ matrix [ i ][ j ] = ( int * ) malloc ( sizeof ( int ) * columns ); } } for ( int i = 0 ; i < channels ; i ++ ){ for ( int j = 0 ; j < rows ; j ++ ){ for ( int k = 0 ; k < columns ; k ++ ){ matrix [ i ][ j ][ k ] = i + j + k ; } } } for ( int i = 0 ; i < channels ; i ++ ){ for ( int j = 0 ; j < rows ; j ++ ){ for ( int k = 0 ; k < columns ; k ++ ){ printf ( \"%d \" , matrix [ i ][ j ][ k ]); } printf ( \" \\n \" ); } printf ( \" \\n \" ); } return 0 ; } \u4e00\u4e2a3x4x4\u7684\u6570\u7ec4\uff08\u77e9\u9635\uff09\uff0c\u5148\u5f00\u8f9f\u4e00\u4e2a\u4e09\u7ea7\u6307\u9488\u7684\u7a7a\u95f4\uff0c\u6bcf\u4e00\u4e2a\u4e09\u7ea7\u6307\u9488\u6307\u5411\u7684\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7136\u540e\u4e8c\u7ef4\u6570\u7ec4\u7684\u5f00\u8f9f\u65b9\u6cd5\u5982\u540c\u4e0a\u4e00\u4e2a\u4f8b\u5b50\u4e2d\u7684\u90a3\u6837\uff0c\u4e00\u6b21\u7c7b\u63a8\uff0c\u66f4\u9ad8\u7ef4\u5ea6\u7684\u6570\u7ec4\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6b64\u7c7b\u65b9\u6cd5\u8fdb\u884c\u5957\u5a03\u5f97\u5230\u3002 \u603b\u7ed3 \u00b6 \u5728\u4e00\u4e9b\u7279\u5b9a\u7684\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u5e38\u5e38\u65e0\u6cd5\u9884\u6d4b\u6570\u7ec4\u7684\u5927\u5c0f\u3002\u5982\u679c\u6211\u4eec\u81ea\u5df1\u5c06\u503c\u5206\u914d\u7ed9\u6570\u7ec4\uff0c\u90a3\u4e48\u5b83\u5728\u6267\u884c\u671f\u95f4\u65e0\u6cd5\u66f4\u6539\u3002\u8fd9\u4f1a\u4ea7\u751f\u95ee\u9898\uff0c\u8981\u4e48\u6570\u7ec4\u7684\u5185\u5b58\u53d8\u4f4e\uff0c\u8981\u4e48\u6570\u7ec4\u5360\u7528\u66f4\u5c11\u7684\u7a7a\u95f4\u6d6a\u8d39\u5185\u5b58\uff0c\u56e0\u6b64\u4e3a\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u5efa\u8bae\u52a8\u6001\u5206\u914d\u6570\u7ec4\u3002","title":"\u591a\u7ef4\u6570\u7ec4\u7684\u521b\u5efa"},{"location":"C%2B%2B/%E5%8A%A8%E6%80%81%E5%BC%80%E8%BE%9F%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84/#c","text":"\u5728C\u8bed\u8a00\u4e2d\uff0c\u5fc5\u4e0d\u53ef\u5c11\u7684\u9700\u8981\u4f7f\u7528\u5230\u6570\u7ec4\uff0c\u901a\u5e38\u4e3a\u4e86\u52a8\u6001\u7684\u5f00\u8f9f\u6570\u7ec4\u7a7a\u95f4\uff0c\u53ef\u4ee5\u4f7f\u7528 malloc \u51fd\u6570\uff0c\u5728C++\u4e2d\u53ef\u4ee5\u4f7f\u7528 new \u5173\u952e\u5b57\u8fdb\u884c\u7a7a\u95f4\u7684\u52a8\u6001\u5f00\u8f9f\u4e0e\u56de\u6536\uff0c\u52a8\u6001\u5f00\u8f9f\u7a7a\u95f4\u7684\u65b9\u6cd5\u66f4\u52a0\u7075\u6d3b\uff0c\u66f4\u80fd\u6709\u6548\u7684\u6839\u636e\u9700\u8981\u5f00\u8f9f\u7a7a\u95f4\u4f7f\u7528\u3002","title":"C\u8bed\u8a00\u4e2d\u7684\u6570\u7ec4\u7a7a\u95f4\u52a8\u6001\u5f00\u8f9f"},{"location":"C%2B%2B/%E5%8A%A8%E6%80%81%E5%BC%80%E8%BE%9F%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84/#1","text":"\u4e00\u7ef4\u6570\u7ec4\u6700\u7b80\u5355\uff0c\u76f4\u63a5\u4f7f\u7528 malloc \u51fd\u6570\u5c31\u53ef\u4ee5\u5f00\u8f9f\uff0c\u4ee5 int \u578b\u6570\u636e\u4e3a\u4f8b\uff0c\u5f00\u8f9f\u4e00\u4e2a\u8fde\u7eed\u7a7a\u95f4\u4f7f\u7528\u3002 #include <stdio.h> #include <stdlib.h> void test ( int * arr ){ for ( int i = 0 ; i < 5 ; i ++ ){ printf ( \"%d \" , arr [ i ]); } } int main (){ int nums = 5 ; int * array = ( int * ) malloc ( sizeof ( int ) * nums ); for ( int i = 0 ; i < 5 ; i ++ ){ array [ i ] = i ; } test ( array ); return 0 ; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6700\u540e\u7684\u7ed3\u679c\u8f93\u51fa\u4e3a0 1 2 3 4\uff1bC\u8bed\u8a00\u4e2d\uff0c\u6570\u7ec4\u53d8\u91cf\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u6307\u9488\uff0c\u901a\u8fc7 malloc \u5c06\u5f00\u8f9f\u7a7a\u95f4\u7684\u8fd4\u56de\u503c\u8fd4\u56de\u7ed9\u6570\u7ec4\u6307\u9488\uff0c\u4ece\u800c\u53ef\u4ee5\u901a\u8fc7\u968f\u673a\u8bbf\u95ee\u4fee\u6539\u548c\u67e5\u8be2\u6570\u7ec4\u4e2d\u7684\u503c\u3002","title":"1\u3001\u4e00\u7ef4\u6570\u7ec4"},{"location":"C%2B%2B/%E5%8A%A8%E6%80%81%E5%BC%80%E8%BE%9F%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84/#2","text":"\u4e8c\u7ef4\u6570\u7ec4\u53ef\u4ee5\u770b\u4f5c\u4e00\u7ef4\u6570\u7ec4\u7684\u5ef6\u7533\uff0c\u5728\u4e0a\u4e00\u4e2a\u4f8b\u5b50\u4e00\u7ef4\u6570\u7ec4\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u4e00\u7ef4\u6570\u636e\u662f\u4e00\u4e2a int \u578b\u53d8\u91cf\uff0c\u800c\u4e8c\u7ef4\u6570\u7ec4\u4e2d\uff0c\u5c06\u4e0a\u4e00\u4e2a\u4f8b\u5b50\u4e2d\u6bcf\u4e00\u4e2a\u4e00\u7ef4\u53d8\u91cf\u53d8\u4e3a\u4e00\u4e2a int * \u53d8\u91cf\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u53e6\u4e00\u4e2a\u5f00\u8f9f\u7684\u52a8\u6001\u4e00\u4f4d\u7a7a\u95f4\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u7ef4\u6570\u7ec4\u7684\u4e00\u7ef4\u6570\u7ec4\uff08\u5957\u5a03\uff09\u3002 #include <iostream> #include <stdlib.h> using namespace std ; void demotest ( int ** mat ){ for ( int i = 0 ; i < 4 ; i ++ ){ for ( int j = 0 ; j < 4 ; j ++ ){ cout << mat [ i ][ j ] << \" \" ; } cout << endl ; } } int main (){ int rows = 4 ; int columns = 4 ; int ** matrix = ( int ** ) malloc ( rows * sizeof ( int * )); for ( int i = 0 ; i < rows ; i ++ ){ matrix [ i ] = ( int * ) malloc ( columns * sizeof ( int )); } for ( int i = 0 ; i < rows ; i ++ ){ for ( int j = 0 ; j < columns ; j ++ ){ matrix [ i ][ j ] = i + j ; } } demotest ( matrix ); return 0 ; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5c06\u4e8c\u7ef4\u6570\u7ec4\uff08\u77e9\u9635\uff09\u770b\u4f5c\u4e00\u4e2a\u4e8c\u7ea7\u6307\u9488\uff08\u6307\u5411\u6307\u9488\u7684\u6307\u9488\uff09\uff0c\u6bcf\u4e00\u4e2a\u4e8c\u7ea7\u6307\u9488\u6307\u5411\u4e00\u4e2a\u5f00\u8f9f\u7a7a\u95f4\u8fd4\u56de\u7684\u4e00\u7ea7\u6307\u9488\u3002\u5bf9\u6bd4\u4e00\u7ef4\u6570\u7ec4\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u4e8c\u7ef4\u6570\u7ec4\u76f8\u5f53\u4e8e\u4e00\u7ef4\u6570\u7ec4\u4e2d\u5b58\u50a8\u6307\u5411\u91cc\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u7684\u5730\u5740\uff0c\u901a\u8fc7\u51fd\u6570\u5c06\u4e8c\u7ef4\u6307\u9488\u4f20\u9012\u8fc7\u53bb\uff0c\u53ef\u4ee5\u83b7\u53d6\u4e8c\u7ef4\u6570\u7ec4\u7684\u5730\u5740\uff0c\u7136\u540e\u904d\u5386\u5f97\u5230\u503c\u3002","title":"2\u3001\u4e8c\u7ef4\u6570\u7ec4"},{"location":"C%2B%2B/%E5%8A%A8%E6%80%81%E5%BC%80%E8%BE%9F%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84/#3","text":"\u7c7b\u6bd4\u4e8c\u7ef4\u6570\u7ec4\u7684\u4f8b\u5b50\uff0c\u4e09\u7ef4\u6570\u7ec4\u5c31\u53ef\u4ee5\u770b\u4f5c\u4e8c\u7ef4\u6570\u7ec4\u7684\u5ef6\u7533\uff0c\u4e09\u7ef4\u6570\u7ec4\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u901a\u5e38\u53ef\u4ee5\u7528\u4e8e\u5b58\u50a8RGB\u56fe\u7247\uff0c\u7406\u89e3\u4e8c\u7ef4\u6570\u7ec4\u4e4b\u540e\uff0c\u4e09\u7ef4\u6570\u7ec4\u5c31\u8f83\u4e3a\u7b80\u5355\u4e86\uff0c\u4ee3\u7801\u4f8b\u5b50\u5982\u4e0b\u3002 #include <stdio.h> #include <stdlib.h> int main (){ int channels = 3 ; int columns = 4 ; int rows = 4 ; int *** matrix = ( int *** ) malloc ( sizeof ( int ** ) * channels ); for ( int i = 0 ; i < channels ; i ++ ){ matrix [ i ] = ( int ** ) malloc ( sizeof ( int * ) * rows ); } for ( int i = 0 ; i < channels ; i ++ ){ for ( int j = 0 ; j < rows ; j ++ ){ matrix [ i ][ j ] = ( int * ) malloc ( sizeof ( int ) * columns ); } } for ( int i = 0 ; i < channels ; i ++ ){ for ( int j = 0 ; j < rows ; j ++ ){ for ( int k = 0 ; k < columns ; k ++ ){ matrix [ i ][ j ][ k ] = i + j + k ; } } } for ( int i = 0 ; i < channels ; i ++ ){ for ( int j = 0 ; j < rows ; j ++ ){ for ( int k = 0 ; k < columns ; k ++ ){ printf ( \"%d \" , matrix [ i ][ j ][ k ]); } printf ( \" \\n \" ); } printf ( \" \\n \" ); } return 0 ; } \u4e00\u4e2a3x4x4\u7684\u6570\u7ec4\uff08\u77e9\u9635\uff09\uff0c\u5148\u5f00\u8f9f\u4e00\u4e2a\u4e09\u7ea7\u6307\u9488\u7684\u7a7a\u95f4\uff0c\u6bcf\u4e00\u4e2a\u4e09\u7ea7\u6307\u9488\u6307\u5411\u7684\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7136\u540e\u4e8c\u7ef4\u6570\u7ec4\u7684\u5f00\u8f9f\u65b9\u6cd5\u5982\u540c\u4e0a\u4e00\u4e2a\u4f8b\u5b50\u4e2d\u7684\u90a3\u6837\uff0c\u4e00\u6b21\u7c7b\u63a8\uff0c\u66f4\u9ad8\u7ef4\u5ea6\u7684\u6570\u7ec4\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6b64\u7c7b\u65b9\u6cd5\u8fdb\u884c\u5957\u5a03\u5f97\u5230\u3002","title":"3\u3001\u4e09\u7ef4\u6570\u7ec4"},{"location":"C%2B%2B/%E5%8A%A8%E6%80%81%E5%BC%80%E8%BE%9F%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84/#_1","text":"\u5728\u4e00\u4e9b\u7279\u5b9a\u7684\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u5e38\u5e38\u65e0\u6cd5\u9884\u6d4b\u6570\u7ec4\u7684\u5927\u5c0f\u3002\u5982\u679c\u6211\u4eec\u81ea\u5df1\u5c06\u503c\u5206\u914d\u7ed9\u6570\u7ec4\uff0c\u90a3\u4e48\u5b83\u5728\u6267\u884c\u671f\u95f4\u65e0\u6cd5\u66f4\u6539\u3002\u8fd9\u4f1a\u4ea7\u751f\u95ee\u9898\uff0c\u8981\u4e48\u6570\u7ec4\u7684\u5185\u5b58\u53d8\u4f4e\uff0c\u8981\u4e48\u6570\u7ec4\u5360\u7528\u66f4\u5c11\u7684\u7a7a\u95f4\u6d6a\u8d39\u5185\u5b58\uff0c\u56e0\u6b64\u4e3a\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u5efa\u8bae\u52a8\u6001\u5206\u914d\u6570\u7ec4\u3002","title":"\u603b\u7ed3"},{"location":"Java/","text":"Java\u5b66\u4e60 \u00b6 \u70b9\u51fb\u5de6\u4fa7\u67e5\u770b\u76f8\u5173\u5185\u5bb9","title":"Java\u5b66\u4e60"},{"location":"Java/#java","text":"\u70b9\u51fb\u5de6\u4fa7\u67e5\u770b\u76f8\u5173\u5185\u5bb9","title":"Java\u5b66\u4e60"},{"location":"Java/Spring/Spring5/","text":"Spring5 \u00b6 1.\u3001Spring \u00b6 1.1\u3001\u7b80\u4ecb \u00b6 Spring \u2014\u2014> \u6625\u5929\uff0c\u4e3a\u5f00\u6e90\u8f6f\u4ef6\u5e26\u6765\u4e86\u6625\u5929 2002\uff0c\u9996\u6b21\u63a8\u51fa\u4e86Spring\u6846\u67b6\u7684\u96cf\u5f62\uff1ainterface21\u6846\u67b6\uff01 Spring\u6846\u67b6\u4ee5interface21\u6846\u67b6\u4e3a\u57fa\u7840\uff0c\u7ecf\u8fc7\u91cd\u65b0\u8bbe\u8ba1\uff0c\u5e76\u4e0d\u65ad\u4e30\u5bcc\u5176\u5185\u6db5\uff0c\u4e8e2004\u5e743\u670824\u65e5\u53d1\u5e03\u4e861.0\u6b63\u5f0f\u7248 Spring\u7684\u7406\u5ff5\uff1a\u4f7f\u7528\u73b0\u6709\u7684\u6280\u672f\u66f4\u52a0\u5bb9\u6613\u4f7f\u7528\uff0c\u672c\u8eab\u662f\u4e00\u4e2a\u5927\u6742\u70e9\uff0c\u6574\u5408\u4e86\u73b0\u6709\u7684\u6280\u672f\u6846\u67b6\uff01 SSH\uff1aStruct2 + Spring + Hibernate\uff08\u5168\u81ea\u52a8\u6301\u4e45\u5316\u6846\u67b6\uff09\uff01 SSM\uff1aSpringMVC + Spring + MyBatis\uff08\u534a\u81ea\u52a8\u6301\u4e45\u5316\u6846\u67b6\uff0c\u53ef\u81ea\u5b9a\u4e49\u6027\u8d28\u66f4\u5f3a\uff09\uff01 spring\u5b98\u7f51\uff1a https://spring.io/projects/spring-framework#overview \u5b98\u65b9\u4e0b\u8f7d\uff1a https://repo.spring.io/release/org/springframework/spring/ GitHub\uff1a https://github.com/spring-projects/spring-framework Spring Web MVC\uff1a spring-webmvc\u6700\u65b0\u7248 Spring Web MVC\u548cSpring-JDBC\u7684pom\u914d\u7f6e\u6587\u4ef6\uff1a <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-webmvc </artifactId> <version> 5.2.7.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-jdbc </artifactId> <version> 5.2.7.RELEASE </version> </dependency> 1.2 \u4f18\u70b9 \u00b6 Spring\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u514d\u8d39\u7684\u6846\u67b6\uff08\u5bb9\u5668\uff09\uff01 Spring\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u3001\u975e\u5165\u4fb5\u5f0f\u7684\u6846\u67b6\uff01 \u63a7\u5236\u53cd\u8f6c\uff08IoC\uff09\uff0c\u9762\u5411\u5207\u9762\u7f16\u7a0b\uff08AOP\uff09 \u652f\u6301\u4e8b\u52a1\u7684\u5904\u7406\uff0c\u5bf9\u6846\u67b6\u6574\u5408\u7684\u652f\u6301\uff01\uff08\u51e0\u4e4e\u5e02\u9762\u4e0a\u6240\u6709\u70ed\u95e8\u6846\u67b6\u90fd\u80fd\u6574\u5408\u8fdb\u53bb\uff09\uff01 === \u603b\u7ed3\u4e00\u53e5\u8bdd\uff1aSpring\u5c31\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u63a7\u5236\u53cd\u8f6c\uff08IoC\uff09\u548c\u9762\u5411\u5207\u9762\u7f16\u7a0b\uff08AOP\uff09\u7684\u6846\u67b6\uff01 === 1.3 \u7ec4\u6210 \u00b6 1.4\u3001\u6269\u5c55 \u00b6 \u73b0\u4ee3\u5316\u7684java\u5f00\u53d1 -> \u57fa\u4e8eSpring\u7684\u5f00\u53d1\uff01 Spring Boot \u4e00\u4e2a\u5feb\u901f\u5f00\u53d1\u7684\u811a\u624b\u67b6 \u57fa\u4e8eSpringBoot\u53ef\u4ee5\u5feb\u901f\u5f00\u53d1\u5355\u4e2a\u5fae\u670d\u52a1 \u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e\uff01 Spring Cloud SpringCloud\u662f\u57fa\u4e8eSpringBoot\u5b9e\u73b0\u7684\uff01 \u56e0\u4e3a\u73b0\u5728\u5927\u591a\u6570\u516c\u53f8\u90fd\u5728\u4f7f\u7528SpringBoot\u8fdb\u884c\u5feb\u901f\u5f00\u53d1\uff0c\u5b66\u4e60SpringBoot\u7684\u524d\u63d0\uff0c\u9700\u8981\u5b8c\u5168\u638c\u63e1Spring\u53caSpringMVC\uff01\u627f\u4e0a\u542f\u4e0b\u7684\u4f5c\u7528\uff01 2\u3001IoC\uff08\u63a7\u5236\u53cd\u8f6c\uff09\u7406\u8bba\u63a8\u5bfc \u00b6 \u4f20\u7edf \u7684\u8c03\u7528 UserDao package dao ; public interface UserDao { void getUser (); } UserDaoImp package dao ; public class UserDaoImpl implements UserDao { public void getUser () { System . out . println ( \"\u9ed8\u8ba4\u83b7\u53d6\u7528\u6237\u6570\u636e\" ); } } UserSevice package Service ; public interface UserService { void getUser (); } UserServiceImp package Service ; import dao.UserDao ; import dao.UserDaoImpl ; public class UserServiceImpl implements UserService { UserDao userDao = new UserDaoImpl (); public void getUser (){ userDao . getUser (); } } \u6d4b\u8bd5 package holle0 ; import Service.UserService ; import Service.UserServiceImpl ; public class MyTest0 { public static void main ( String [] args ) { // \u7528\u6237\u5b9e\u9645\u8c03\u7528\u7684\u662f\u4e1a\u52a1\u5c42\uff0cdao\u5c42\u4ed6\u4eec\u4e0d\u9700\u8981\u63a5\u89e6 UserService userService = new UserServiceImpl (); userService . getUser (); } } \u5728\u6211\u4eec\u4e4b\u524d\u7684\u4e1a\u52a1\u4e2d\uff0c\u7528\u6237\u7684\u9700\u6c42\u53ef\u80fd\u4f1a\u5f71\u54cd\u6211\u4eec\u539f\u6765\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u9700\u8981\u6839\u636e\u7528\u6237\u7684\u9700\u6c42\u53bb\u4fee\u6539\u539f\u4ee3\u7801\uff01\u5982\u679c\u7a0b\u5e8f\u4ee3\u7801\u91cf\u5341\u5206\u5927\uff0c\u4fee\u6539\u4e00\u6b21\u7684\u6210\u672c\u4ee3\u4ef7\u5341\u5206\u6602\u8d35\uff01 \u6539\u826f\uff1a \u6211\u4eec\u4f7f\u7528\u4e00\u4e2aSet\u63a5\u53e3\u5b9e\u73b0\u3002\u5df2\u7ecf\u53d1\u751f\u4e86\u9769\u547d\u6027\u7684\u53d8\u5316\uff01 //\u5728Service\u5c42\u7684\u5b9e\u73b0\u7c7b(UserServiceImpl)\u589e\u52a0\u4e00\u4e2aSet()\u65b9\u6cd5 //\u5229\u7528set\u52a8\u6001\u5b9e\u73b0\u503c\u7684\u6ce8\u5165\uff01 //DAO\u5c42\u5e76\u4e0d\u5199\u6b7b\u56fa\u5b9a\u8c03\u7528\u54ea\u4e00\u4e2aUserDao\u7684\u5b9e\u73b0\u7c7b //\u800c\u662f\u901a\u8fc7Service\u5c42\u8c03\u7528\u65b9\u6cd5\u8bbe\u7f6e\u5b9e\u73b0\u7c7b\uff01 private UserDao userDao ; public void setUserDao ( UserDao userDao ){ this . userDao = userDao ; } set() \u65b9\u6cd5\u5b9e\u9645\u4e0a\u662f\u52a8\u6001\u6539\u53d8\u4e86 UserDao userDao \u7684 \u521d\u59cb\u5316\u90e8\u5206\uff08 new UserDaoImpl() \uff09 \u6d4b\u8bd5\u4e2d\u52a0\u4e0a (( UserServiceImpl ) userService ). setUserDao ( new UserDaoImpl ()); \u4e4b\u524d\uff0c\u7a0b\u5e8f\u662f\u4e3b\u52a8\u521b\u5efa\u5bf9\u8c61\uff01 \u63a7\u5236\u6743\u5728\u7a0b\u5e8f\u733f\u624b\u4e0a \uff01 \u4f7f\u7528\u4e86set\u6ce8\u5165\u540e\uff0c\u7a0b\u5e8f\u4e0d\u518d\u5177\u6709\u4e3b\u52a8\u6027\uff0c\u800c\u662f\u53d8\u6210\u4e86\u88ab\u52a8\u7684\u63a5\u53d7\u5bf9\u8c61\uff01\uff08 \u4e3b\u52a8\u6743\u5728\u5ba2\u6237\u624b\u4e0a \uff09 \u672c\u8d28\u4e0a\u89e3\u51b3\u4e86\u95ee\u9898\uff0c\u7a0b\u5e8f\u5458\u4e0d\u7528\u518d\u53bb\u7ba1\u7406\u5bf9\u8c61\u7684\u521b\u5efa \u7cfb\u7edf\u7684\u8026\u5408\u6027\u5927\u5927\u964d\u4f4e\uff0c\u53ef\u4ee5\u66f4\u4e13\u6ce8\u5728\u4e1a\u52a1\u7684\u5b9e\u73b0\u4e0a \u8fd9\u662fIoC\uff08\u63a7\u5236\u53cd\u8f6c\uff09\u7684\u539f\u578b\uff0c\u53cd\u8f6c(\u7406\u89e3)\uff1a\u4e3b\u52a8\u6743\u4ea4\u7ed9\u4e86\u7528\u6237 IoC\u672c\u8d28 \u00b6 3\u3001HolleSpring \u00b6 \u5728\u7236\u6a21\u5757\u4e2d\u5bfc\u5165jar\u5305 <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-webmvc </artifactId> <version> 5.2.7.RELEASE </version> </dependency> pojo\u7684Hello.java package pojo ; public class Hello { private String str ; public String getStr () { return str ; } public void setStr ( String str ) { this . str = str ; } @Override public String toString () { return \"Holle [str=\" + str + \"]\" ; } } \u5728resource\u91cc\u9762\u7684xml\u914d\u7f6e <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd\" > <!--\u5728Spring\u4e2d\u521b\u5efa\u5bf9\u8c61\uff0c\u5728Spring\u8fd9\u4e9b\u90fd\u79f0\u4e3abean \u7c7b\u578b \u53d8\u91cf\u540d = new \u7c7b\u578b(); Holle holle = new Holle(); bean = \u5bf9\u8c61(holle) id = \u53d8\u91cf\u540d(holle) class = new\u7684\u5bf9\u8c61(new Holle();) property \u76f8\u5f53\u4e8e\u7ed9\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\u8bbe\u503c,\u8ba9str=\"Spring\" --> <bean id= \"hello\" class= \"pojo.Hello\" > <property name= \"str\" value= \"Spring\" /> </bean> </beans> \u6d4b\u8bd5\u7c7bMyTest package holle1 ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import pojo.Hello ; public class MyTest { public static void main ( String [] args ) { //\u83b7\u53d6Spring\u7684\u4e0a\u4e0b\u6587\u5bf9\u8c61 ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); //\u6211\u4eec\u7684\u5bf9\u8c61\u4e0b\u80fd\u5728\u90fd\u5728spring\u00b7\u4e2d\u7ba1\u7406\u4e86\uff0c\u6211\u4eec\u8981\u4f7f\u7528\uff0c\u76f4\u63a5\u53d6\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86 Hello holle = ( Hello ) context . getBean ( \"hello\" ); System . out . println ( holle . toString ()); } } \u6838\u5fc3\u7528set\u6ce8\u5165\uff0c\u6240\u4ee5\u5fc5\u987b\u8981\u6709\u4e0b\u9762\u7684se()\u65b9\u6cd5 //Hello\u7c7b public void setStr ( String str ) { this . str = str ; } \u601d\u8003\uff1a IoC\uff1a\u5bf9\u8c61\u7531Spring \u6765\u521b\u5efa\uff0c\u7ba1\u7406\uff0c\u88c5\u914d\uff01 \u5f39\u5e55\u8bc4\u8bba\u91cc\u9762\u7684\u7406\u89e3\uff1a \u539f\u6765\u8fd9\u5957\u7a0b\u5e8f\u662f\uff1a\u4f60\u5199\u597d\u83dc\u5355\u4e70\u597d\u83dc\uff0c\u5ba2\u4eba\u6765\u4e86\u81ea\u5df1\u628a\u83dc\u7092\u597d\u62db\u5f85\uff0c\u5c31\u76f8\u5f53\u4e8e\u4f60\u8bf7\u4eba\u5403\u996d \u73b0\u5728\u8fd9\u5957\u7a0b\u5e8f\u662f\uff1a\u4f60\u544a\u8bc9\u697c\u4e0b\u9910\u5385\uff0c\u4f60\u8981\u54ea\u4e9b\u83dc\uff0c\u5ba2\u4eba\u6765\u7684\u65f6\u5019\uff0c\u9910\u5385\u628a\u505a\u597d\u7684\u4f60\u9700\u8981\u7684\u83dc\u9001\u4e0a\u6765 IoC\uff1a\u7092\u83dc\u8fd9\u4ef6\u4e8b\uff0c\u4e0d\u518d\u7531\u4f60\u81ea\u5df1\u6765\u505a\uff0c\u800c\u662f\u59d4\u6258\u7ed9\u4e86\u7b2c\u4e09\u65b9__\u9910\u5385\u6765\u505a \u6b64\u65f6\u7684\u533a\u522b\u5c31\u662f\uff0c\u5982\u679c\u6211\u8fd8\u9700\u8981\u505a\u5176\u4ed6\u7684\u83dc\uff0c\u6211\u4e0d\u9700\u8981\u81ea\u5df1\u641e\u83dc\u8c31\u4e70\u6750\u6599\u518d\u505a\u597d\uff0c\u800c\u662f\u544a\u8bc9\u9910\u5385\uff0c\u6211\u8981\u4ec0\u4e48\u83dc\uff0c\u4ec0\u4e48\u65f6\u5019\u8981\uff0c\u4f60\u505a\u597d\u9001\u6765 . \u5728\u524d\u9762\u7b2c\u4e00\u4e2amodule\u8bd5\u8bd5\u5f15\u5165Spring <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"userDaomSql\" class= \"dao.UserDaoMysqlImpl\" ></bean> <bean id= \"userServiceImpl\" class= \"service.UserServiceImp\" > <!--ref\u5f15\u7528spring\u4e2d\u5df2\u7ecf\u521b\u5efa\u5f88\u597d\u7684\u5bf9\u8c61--> <!--value\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u503c,\u57fa\u672c\u6570\u636e\u7c7b\u578b--> <property name= \"userDao\" ref= \"userDaomSql\" /> </bean> </beans> \u7b2c\u4e00\u4e2amodule\u6539\u826f\u540e\u6d4b\u8bd5 package holle0 ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import service.UserServiceImpl ; public class MyTest0 { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); UserServiceImpl userServiceImpl = ( UserServiceImpl ) context . getBean ( \"userServiceImpl\" ); userServiceImpl . getUser (); } } \u603b\u7ed3\uff1a \u6240\u6709\u7684\u7c7b\u90fd\u8981\u88c5\u914d\u7684beans.xml \u91cc\u9762\uff1b \u6240\u6709\u7684bean \u90fd\u8981\u901a\u8fc7\u5bb9\u5668\u53bb\u53d6\uff1b \u5bb9\u5668\u91cc\u9762\u53d6\u5f97\u7684bean\uff0c\u62ff\u51fa\u6765\u5c31\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u7528\u5bf9\u8c61\u8c03\u7528\u65b9\u6cd5\u5373\u53ef\uff1b 4\u3001IoC\u521b\u5efa\u5bf9\u8c61\u7684\u65b9\u5f0f \u00b6 \u4f7f\u7528\u65e0\u53c2\u6784\u9020\u521b\u5efa\u5bf9\u8c61\uff0c\u9ed8\u8ba4\u3002 \u4f7f\u7528\u6709\u53c2\u6784\u9020\uff08\u5982\u4e0b\uff09 \u4e0b\u6807\u8d4b\u503c index\u6307\u7684\u662f\u6709\u53c2\u6784\u9020\u4e2d\u53c2\u6570\u7684\u4e0b\u6807\uff0c\u4e0b\u6807\u4ece0\u5f00\u59cb; <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"user\" class= \"pojo.User\" > <constructor-arg index= \"0\" value= \"chen\" /> </bean> </beans> \u7c7b\u578b\u8d4b\u503c\uff08\u4e0d\u5efa\u8bae\u4f7f\u7528\uff09 <bean id= \"user\" class= \"pojo.User\" > <constructor-arg type= \"java.lang.String\" value= \"kuang\" /> </bean> \u76f4\u63a5\u901a\u8fc7\u53c2\u6570\u540d\uff08\u638c\u63e1\uff09 <bean id= \"user\" class= \"pojo.User\" > <constructor-arg name= \"name\" value= \"kuang\" ></constructor-arg> </bean> <!-- \u6bd4\u5982\u53c2\u6570\u540d\u662fname\uff0c\u5219\u6709name=\"\u5177\u4f53\u503c\" --> \u6ce8\u518cbean\u4e4b\u540e\u5c31\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u4e86\uff08 \u7c7b\u4f3c new \u7c7b\u540d() \uff09 \u5f39\u5e55\u8bc4\u8bba\uff1a name\u65b9\u5f0f\u8fd8\u9700\u8981\u65e0\u53c2\u6784\u9020\u548cset\u65b9\u6cd5,index\u548ctype\u53ea\u9700\u8981\u6709\u53c2\u6784\u9020 \u5c31\u7b97\u662fnew \u4e24\u4e2a\u5bf9\u8c61\uff0c\u4e5f\u662f\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff08 \u5355\u4f8b\u6a21\u5f0f\uff1a\u5168\u5c40\u552f\u4e00 \uff09 User user = ( User ) context . getBean ( \"user\" ); User user2 = ( User ) context . getBean ( \"user\" ); system . out . println ( user == user2 ) //\u7ed3\u679c\u4e3atrue \u603b\u7ed3\uff1a\u5728\u914d\u7f6e\u6587\u4ef6\u52a0\u8f7d\u7684\u65f6\u5019\uff0c\u5bb9\u5668(< bean>)\u4e2d\u7ba1\u7406\u7684\u5bf9\u8c61\u5c31\u5df2\u7ecf\u521d\u59cb\u5316\u4e86 5\u3001Spring\u914d\u7f6e \u00b6 5.1\u3001\u522b\u540d \u00b6 <bean id= \"user\" class= \"pojo.User\" > <constructor-arg name= \"name\" value= \"chen\" ></constructor-arg> </bean> <alias name= \"user\" alias= \"userLove\" /> <!-- \u4f7f\u7528\u65f6 User user2 = (User) context.getBean(\"userLove\"); --> 5.2\u3001Bean\u7684\u914d\u7f6e \u00b6 <!--id\uff1abean\u7684\u552f\u4e00\u6807\u8bc6\u7b26\uff0c\u4e5f\u5c31\u662f\u76f8\u5f53\u4e8e\u6211\u4eec\u5b66\u7684\u5bf9\u8c61\u540d class\uff1abean\u5bf9\u8c61\u6240\u5bf9\u5e94\u7684\u4f1a\u9650\u5b9a\u540d\uff1a\u5305\u540d+\u7c7b\u578b name\uff1a\u4e5f\u662f\u522b\u540d\uff0c\u800c\u4e14name\u53ef\u4ee5\u540c\u65f6\u53d6\u591a\u4e2a\u522b\u540d --> <bean id= \"user\" class= \"pojo.User\" name= \"u1 u2,u3;u4\" > <property name= \"name\" value= \"chen\" /> </bean> <!-- \u4f7f\u7528\u65f6 User user2 = (User) context.getBean(\"u1\"); --> 5.3\u3001import \u00b6 import\u4e00\u822c\u7528\u4e8e\u56e2\u961f\u5f00\u53d1\u4f7f\u7528\uff0c\u5b83\u53ef\u4ee5\u5c06\u591a\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u5bfc\u5165\u5408\u5e76\u4e3a\u4e00\u4e2a \u5047\u8bbe\uff0c\u73b0\u5728\u9879\u76ee\u4e2d\u6709\u591a\u4e2a\u4eba\u5f00\u53d1\uff0c\u8fd9\u4e09\u4e2a\u4eba\u590d\u5236\u4e0d\u540c\u7684\u7c7b\u5f00\u53d1\uff0c\u4e0d\u540c\u7684\u7c7b\u9700\u8981\u6ce8\u518c\u5728\u4e0d\u540c\u7684bean\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5229 \u7528import\u5c06\u6240\u6709\u4eba\u7684beans.xml\u5408\u5e76\u4e3a\u4e00\u4e2a\u603b\u7684\uff01 \u5f20\u4e09(beans.xm1) \u674e\u56db(beans2.xm1) \u738b\u4e94(beans3.xm1) applicationContext.xml <import resource= \"beans.xm1\" /> <import resource= \"beans2.xml\" /> <import resource= \"beans3.xm1\" /> \u4f7f\u7528\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u4f7f\u7528\u603b\u7684\u914d\u7f6e\u5c31\u53ef\u4ee5\u4e86 \u5f39\u5e55\u8bc4\u8bba\uff1a \u6309\u7167\u5728\u603b\u7684xml\u4e2d\u7684\u5bfc\u5165\u987a\u5e8f\u6765\u8fdb\u884c\u521b\u5efa\uff0c\u540e\u5bfc\u5165\u7684\u4f1a\u91cd\u5199\u5148\u5bfc\u5165\u7684\uff0c\u6700\u7ec8\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\u4f1a\u662f\u540e\u5bfc\u5165xml\u4e2d\u7684\u90a3\u4e2a 6\u3001\u4f9d\u8d56\u6ce8\u5165\uff08DI\uff09 \u00b6 6.1\u3001\u6784\u9020\u5668\u6ce8\u5165 \u00b6 \u7b2c4\u70b9\u6709\u63d0\u5230 6.2\u3001set\u65b9\u5f0f\u6ce8\u5165\u3010\u91cd\u70b9\u3011 \u00b6 \u4f9d\u8d56\u6ce8\u5165\uff1aset\u6ce8\u5165\uff01 \u4f9d\u8d56\uff1abean\u5bf9\u8c61\u7684\u521b\u5efa\u4f9d\u8d56\u4e8e\u5bb9\u5668 \u6ce8\u5165\uff1abean\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u5c5e\u6027\uff0c\u7531\u5bb9\u5668\u6765\u6ce8\u5165 \u3010\u73af\u5883\u642d\u5efa\u3011 \u590d\u6742\u7c7b\u578b Address\u7c7b \u771f\u5b9e\u6d4b\u8bd5\u5bf9\u8c61 Student\u7c7b beans.xml \u6d4b\u8bd5 MyTest3 Student\u7c7b package pojo ; import java.util.* ; @Get @Set public class Student { //\u522b\u5fd8\u4e86\u5199get\u548cset\u65b9\u6cd5\uff08\u7528lombok\u6ce8\u89e3\u4e5f\u884c\uff09 private String name ; private Address address ; private String [] books ; private List < String > hobbies ; private Map < String , String > card ; private Set < String > game ; private Properties infor ; private String wife ; @Override public String toString () { return \"Student{\" + \"\\n\" + \"name='\" + name + '\\'' + \"\\n\" + \", address=\" + address . toString () + \"\\n\" + \", books=\" + Arrays . toString ( books ) + \"\\n\" + \", hobbies=\" + hobbies + \"\\n\" + \", card=\" + card + \"\\n\" + \", game=\" + game + \"\\n\" + \", infor=\" + infor + \"\\n\" + \", wife='\" + wife + '\\'' + \"\\n\" + '}' ; } } Address\u7c7b package pojo ; public class Address { private String address ; public String getAddress () { return address ; } public void setAddress ( String address ) { this . address = address ; } @Override public String toString () { return \"Address{\" + \"address='\" + address + '\\'' + '}' ; } } beans.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"address\" class= \"pojo.Address\" > <property name= \"address\" value= \"address\u4f60\u597d\" /> </bean> <bean id= \"student\" class= \"pojo.Student\" > <!--\u7b2c\u4e00\u79cd\uff0c\u666e\u901a\u503c\u6ce8\u5165 --> <property name= \"name\" value= \"name\u4f60\u597d\" /> <!--\u7b2c\u4e8c\u79cd\uff0cref\u6ce8\u5165 --> <property name= \"address\" ref= \"address\" /> <!--\u6570\u7ec4\u6ce8\u5165 --> <property name= \"books\" > <array> <value> \u4e09\u56fd </value> <value> \u897f\u6e38 </value> <value> \u6c34\u6d52 </value> </array> </property> <!--list\u5217\u8868\u6ce8\u5165 --> <property name= \"hobbies\" > <list> <value> \u5531 </value> <value> \u8df3 </value> <value> rap </value> <value> \u7bee\u7403 </value> </list> </property> <!--map\u952e\u503c\u5bf9\u6ce8\u5165 --> <property name= \"card\" > <map> <entry key= \"username\" value= \"root\" /> <entry key= \"password\" value= \"root\" /> </map> </property> <!--set(\u53ef\u53bb\u91cd)\u6ce8\u5165 --> <property name= \"game\" > <set> <value> wangzhe </value> <value> lol </value> <value> galname </value> </set> </property> <!--\u7a7a\u6307\u9488null\u6ce8\u5165 --> <property name= \"wife\" > <null></null> </property> <!--properties\u5e38\u91cf\u6ce8\u5165 --> <property name= \"infor\" > <props> <prop key= \"id\" > 20200802 </prop> <prop key= \"name\" > cbh </prop> </props> </property> </bean> </beans> MyTest3 import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import pojo.Student ; public class MyTest3 { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); Student stu = ( Student ) context . getBean ( \"student\" ); System . out . println ( stu . toString ()); } } 6.3\u3001\u62d3\u5c55\u6ce8\u5165 \u00b6 \u5b98\u65b9\u6587\u6863\u4f4d\u7f6e pojo\u589e\u52a0User\u7c7b package pojo ; public class User { private String name ; private int id ; public User () { } public User ( String name , int id ) { super (); this . name = name ; this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } @Override public String toString () { return \"User [name=\" + name + \", id=\" + id + \"]\" ; } } \u6ce8\u610f\uff1a beans \u91cc\u9762\u52a0\u4e0a\u8fd9\u4e0b\u9762\u4e24\u884c \u4f7f\u7528p\u548cc\u547d\u540d\u7a7a\u95f4\u9700\u8981\u5bfc\u5165xml\u7ea6\u675f xmlns:p=\u201chttp://www.springframework.org/schema/p\u201d xmlns:c=\u201chttp://www.springframework.org/schema/c\u201d ?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p= \"http://www.springframework.org/schema/p\" xmlns:c= \"http://www.springframework.org/schema/c\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd\" > <!--p\u547d\u540d\u7a7a\u95f4\u6ce8\u5165/set\u6ce8\u5165\uff0c\u53ef\u4ee5\u76f4\u63a5\u6ce8\u5165\u5c5e\u6027\u7684\u503c-\u300bproperty--> <bean id= \"user\" class= \"pojo.User\" p:name= \"cxk\" p:id= \"20\" > </bean> <!--c\u547d\u540d\u7a7a\u95f4\uff0c\u901a\u8fc7\u6784\u9020\u5668\u6ce8\u5165\uff0c\u9700\u8981\u5199\u5165\u6709\u53c2\u548c\u65e0\u53c2\u6784\u9020\u65b9\u6cd5-\u300bconstruct-args--> <bean id= \"user2\" class= \"pojo.User\" c:name= \"cbh\" c:id= \"22\" ></bean> </beans> \u6d4b\u8bd5 ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); User user = context . getBean ( \"user\" , User . class ); //\u786e\u5b9aclass\u5bf9\u8c61\uff0c\u5c31\u4e0d\u7528\u518d\u5f3a\u8f6c\u4e86 System . out . println ( user . toString ()); 6.4\u3001Bean\u4f5c\u7528\u57df \u00b6 \u5355\u4f8b\u6a21\u5f0f\uff08\u9ed8\u8ba4\uff09 <bean id= \"user2\" class= \"pojo.User\" c:name= \"cxk\" c:age= \"19\" scope= \"singleton\" ></bean> 1 \u5f39\u5e55\u8bc4\u8bba\uff1a\u5355\u4f8b\u6a21\u5f0f\u662f\u628a\u5bf9\u8c61\u653e\u5728pool\u4e2d\uff0c\u9700\u8981\u518d\u53d6\u51fa\u6765\uff0c\u4f7f\u7528\u7684\u90fd\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u5b9e\u4f8b \u539f\u578b\u6a21\u5f0f: \u6bcf\u6b21\u4ece\u5bb9\u5668\u4e2dget\u7684\u65f6\u5019\uff0c\u90fd\u4ea7\u751f\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff01 <bean id= \"user2\" class= \"pojo.User\" c:name= \"cxk\" c:age= \"19\" scope= \"prototype\" ></bean> 1 \u5176\u4f59\u7684request\u3001session\u3001application\u8fd9\u4e9b\u53ea\u80fd\u5728web\u5f00\u653e\u4e2d\u4f7f\u7528\uff01 7\u3001Bean\u7684\u81ea\u52a8\u88c5\u914d \u00b6 \u81ea\u52a8\u88c5\u914d\u662fSpring\u6ee1\u8db3bean\u4f9d\u8d56\u7684\u4e00\u79cd\u65b9\u5f0f Spring\u4f1a\u5728\u4e0a\u4e0b\u6587\u81ea\u52a8\u5bfb\u627e\uff0c\u5e76\u81ea\u52a8\u7ed9bean\u88c5\u914d\u5c5e\u6027 \u5728Spring\u4e2d\u6709\u4e09\u79cd\u88c5\u914d\u7684\u65b9\u5f0f \u5728xml\u4e2d\u663e\u793a\u914d\u7f6e \u5728java\u4e2d\u663e\u793a\u914d\u7f6e \u9690\u5f0f\u7684\u81ea\u52a8\u88c5\u914dbean \u3010\u91cd\u8981\u3011 \u73af\u5883\u642d\u5efa\uff1a\u4e00\u4e2a\u4eba\u6709\u4e24\u4e2a\u5ba0\u7269 byType\u81ea\u52a8\u88c5\u914d\uff1abyType\u4f1a\u81ea\u52a8\u67e5\u627e\uff0c\u548c\u81ea\u5df1\u5bf9\u8c61set\u65b9\u6cd5\u53c2\u6570\u7684\u7c7b\u578b\u76f8\u540c\u7684bean \u4fdd\u8bc1\u6240\u6709\u7684class\u552f\u4e00(\u7c7b\u4e3a\u5168\u5c40\u552f\u4e00) byName\u81ea\u52a8\u88c5\u914d\uff1abyName\u4f1a\u81ea\u52a8\u67e5\u627e\uff0c\u548c\u81ea\u5df1\u5bf9\u8c61set\u5bf9\u5e94\u7684\u503c\u5bf9\u5e94\u7684id \u4fdd\u8bc1\u6240\u6709id\u552f\u4e00\uff0c\u5e76\u4e14\u548cset\u6ce8\u5165\u7684\u503c\u4e00\u81f4 <!-- \u627e\u4e0d\u5230id\u548c\u591a\u4e2a\u76f8\u540cclass --> <bean id= \"cat1\" class= \"pojo.Cat\" /> <bean id= \"cat2\" class= \"pojo.Cat\" /> <!-- \u627e\u4e0d\u5230 id=cat\uff0c\u4e14\u6709\u4e24\u4e2aCat --> 7.1\u6d4b\u8bd5\uff1a\u81ea\u52a8\u88c5\u914d \u00b6 pojo\u7684Cat\u7c7b public class Cat { public void shut (){ System . out . println ( \"miao\" ); } } pojo\u7684Dog\u7c7b public class Dog { public void shut (){ System . out . println ( \"wow\" ); } } pojo\u7684People\u7c7b package pojo ; public class People { private Cat cat ; private Dog dog ; private String name ; public Cat getCat () { return cat ; } public void setCat ( Cat cat ) { this . cat = cat ; } public Dog getDog () { return dog ; } public void setDog ( Dog dog ) { this . dog = dog ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"People{\" + \"cat=\" + cat + \", dog=\" + dog + \", name='\" + name + '\\'' + '}' ; } } xml\u914d\u7f6e -> byType \u81ea\u52a8\u88c5\u914d <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"cat\" class= \"pojo.Cat\" /> <bean id= \"dog\" class= \"pojo.Dog\" /> <!--byType\u4f1a\u5728\u5bb9\u5668\u81ea\u52a8\u67e5\u627e\uff0c\u548c\u81ea\u5df1\u5bf9\u8c61\u5c5e\u6027\u76f8\u540c\u7684bean \u4f8b\u5982\uff0cDog dog; \u90a3\u4e48\u5c31\u4f1a\u67e5\u627epojo\u7684Dog\u7c7b\uff0c\u518d\u8fdb\u884c\u81ea\u52a8\u88c5\u914d --> <bean id= \"people\" class= \"pojo.People\" autowire= \"byType\" > <property name= \"name\" value= \"cbh\" ></property> </bean> </beans> xml\u914d\u7f6e -> byName \u81ea\u52a8\u88c5\u914d <bean id= \"cat\" class= \"pojo.Cat\" /> <bean id= \"dog\" class= \"pojo.Dog\" /> <!--byname\u4f1a\u5728\u5bb9\u5668\u81ea\u52a8\u67e5\u627e\uff0c\u548c\u81ea\u5df1\u5bf9\u8c61set\u65b9\u6cd5\u7684set\u540e\u9762\u7684\u503c\u5bf9\u5e94\u7684id \u4f8b\u5982:setDog()\uff0c\u53d6set\u540e\u9762\u7684\u5b57\u7b26\u4f5c\u4e3aid\uff0c\u5219\u8981id = dog \u624d\u53ef\u4ee5\u8fdb\u884c\u81ea\u52a8\u88c5\u914d --> <bean id= \"people\" class= \"pojo.People\" autowire= \"byName\" > <property name= \"name\" value= \"cbh\" ></property> </bean> \u5f39\u5e55\u8bc4\u8bba\uff1abyName\u53ea\u80fd\u53d6\u5230\u5c0f\u5199\uff0c\u5927\u5199\u53d6\u4e0d\u5230 7.2\u3001\u4f7f\u7528\u6ce8\u89e3\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d \u00b6 jdk1.5\u652f\u6301\u7684\u6ce8\u89e3\uff0cspring2.5\u652f\u6301\u7684\u6ce8\u89e3 The introduction of annotation-based configuration raised the question of whether this approach is \u201cbetter\u201d than XML.\uff08\u7ffb\u8bd1\uff1a\u57fa\u4e8e\u6ce8\u91ca\u7684\u914d\u7f6e\u7684\u5f15\u5165\u63d0\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5373\u8fd9\u79cd\u65b9\u6cd5\u662f\u5426\u6bd4XML\u201c\u66f4\u597d\u201d\uff09 \u5bfc\u5165context\u7ea6\u675f xmlns:context=\"http://www.springframework.org/schema/context\" \u914d\u7f6e\u6ce8\u89e3\u7684\u652f\u6301\uff1a< context:annotation-config/> <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd\" > <context:annotation-config/> </beans> 7.2.1\u3001@Autowired \u00b6 \u9ed8\u8ba4\u662fbyType\u65b9\u5f0f\uff0c\u5982\u679c\u5339\u914d\u4e0d\u4e0a\uff0c\u5c31\u4f1abyName \u5728\u5c5e\u6027\u4e0a\u4e2a\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u5728set\u4e0a\u4f7f\u7528 \u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u7f16\u5199set\u65b9\u6cd5\u4e86\uff0c\u524d\u63d0\u662f\u81ea\u52a8\u88c5\u914d\u7684\u5c5e\u6027\u5728Spring\u5bb9\u5668\u91cc\uff0c\u4e14\u8981\u7b26\u5408ByName \u81ea\u52a8\u88c5\u914d public class People { @Autowired private Cat cat ; @Autowired private Dog dog ; private String name ; } @Nullable \u5b57\u6bb5\u6807\u8bb0\u4e86\u8fd9\u4e2a\u6ce8\u89e3\uff0c\u8bf4\u660e\u8be5\u5b57\u6bb5\u53ef\u4ee5\u4e3a\u7a7a public name(@Nullable String name){ } //\u6e90\u7801 public @interface Autowired { boolean required () default true ; } \u5982\u679c\u5b9a\u4e49\u4e86Autowire\u7684require\u5c5e\u6027\u4e3afalse\uff0c\u8bf4\u660e\u8fd9\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u4e3anull\uff0c\u5426\u5219\u4e0d\u5141\u8bb8\u4e3a\u7a7a\uff08false\u8868\u793a\u627e\u4e0d\u5230\u88c5\u914d\uff0c\u4e0d\u629b\u51fa\u5f02\u5e38\uff09 7.2.2\u3001@Autowired+@Qualifier \u00b6 @Autowired\u4e0d\u80fd\u552f\u4e00\u88c5\u914d\u65f6\uff0c\u9700\u8981@Autowired+@Qualifier \u5982\u679c@Autowired\u81ea\u52a8\u88c5\u914d\u73af\u5883\u6bd4\u8f83\u590d\u6742\u3002\u81ea\u52a8\u88c5\u914d\u65e0\u6cd5\u901a\u8fc7\u4e00\u4e2a\u6ce8\u89e3\u5b8c\u6210\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f7f\u7528@Qualifier(value = \u201cdog\u201d)\u53bb\u914d\u5408\u4f7f\u7528\uff0c\u6307\u5b9a\u4e00\u4e2a\u552f\u4e00\u7684id\u5bf9\u8c61 public class People { @Autowired private Cat cat ; @Autowired @Qualifier ( value = \"dog\" ) private Dog dog ; private String name ; } \u5f39\u5e55\u8bc4\u8bba\uff1a \u5982\u679cxml\u6587\u4ef6\u4e2d\u540c\u4e00\u4e2a\u5bf9\u8c61\u88ab\u591a\u4e2abean\u4f7f\u7528\uff0cAutowired\u65e0\u6cd5\u6309\u7c7b\u578b\u627e\u5230\uff0c\u53ef\u4ee5\u7528@Qualifier\u6307\u5b9aid\u67e5\u627e 7.2.3\u3001@Resource \u00b6 \u9ed8\u8ba4\u662fbyName\u65b9\u5f0f\uff0c\u5982\u679c\u5339\u914d\u4e0d\u4e0a\uff0c\u5c31\u4f1abyType public class People { Resource ( name = \"cat\" ) private Cat cat ; Resource ( name = \"dog\" ) private Dog dog ; private String name ; } \u5f39\u5e55\u8bc4\u8bba\uff1a Autowired\u662fbyType\uff0c@Autowired+@Qualifier = byType || byName Autowired\u662f\u5148byteType,\u5982\u679c\u552f\u4e00\u5247\u6ce8\u5165\uff0c\u5426\u5219byName\u67e5\u627e\u3002resource\u662f\u5148byname,\u4e0d\u7b26\u5408\u518d\u7ee7\u7eedbyType \u533a\u522b\uff1a \u00b6 @Resource\u548c@Autowired\u7684\u533a\u522b\uff1a \u90fd\u662f\u7528\u6765\u81ea\u52a8\u88c5\u914d\u7684\uff0c\u90fd\u53ef\u4ee5\u653e\u5728\u5c5e\u6027\u5b57\u6bb5\u4e0a @Autowired\u901a\u8fc7byType\u7684\u65b9\u5f0f\u5b9e\u73b0\uff0c\u800c\u4e14\u5fc5\u987b\u8981\u6c42\u8fd9\u4e2a\u5bf9\u8c61\u5b58\u5728\uff01\u3010\u5e38\u7528\u3011 @Resource\u9ed8\u8ba4\u901a\u8fc7byname\u7684\u65b9\u5f0f\u5b9e\u73b0\uff0c\u5982\u679c\u627e\u4e0d\u5230\u540d\u5b57\uff0c\u5219\u901a\u8fc7byType\u5b9e\u73b0\uff01\u5982\u679c\u4e24\u4e2a\u90fd\u627e\u4e0d\u5230\u7684\u60c5\u51b5\u4e0b\uff0c\u5c31\u62a5\u9519\uff01\u3010\u5e38\u7528\u3011 \u6267\u884c\u987a\u5e8f\u4e0d\u540c\uff1a@Autowired\u901a\u8fc7byType\u7684\u65b9\u5f0f\u5b9e\u73b0\u3002@Resource\u9ed8\u8ba4\u901a\u8fc7byname\u7684\u65b9\u5f0f\u5b9e\u73b0 8\u3001\u4f7f\u7528\u6ce8\u89e3\u5f00\u53d1 \u00b6 \u5728spring4\u4e4b\u540e\uff0c\u4f7f\u7528\u6ce8\u89e3\u5f00\u53d1\uff0c\u5fc5\u987b\u8981\u4fdd\u8bc1aop\u5305\u7684\u5bfc\u5165 \u4f7f\u7528\u6ce8\u89e3\u9700\u8981\u5bfc\u5165contex\u7684\u7ea6\u675f <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd\" > <context:annotation-config/> </beans> 8.1\u3001bean \u00b6 \u5f39\u5e55\u8bc4\u8bba\uff1a \u6709\u4e86< context:component-scan>\uff0c\u53e6\u4e00\u4e2a< context:annotation-config/>\u6807\u7b7e\u53ef\u4ee5\u79fb\u9664\u6389\uff0c\u56e0\u4e3a\u5df2\u7ecf\u88ab\u5305\u542b\u8fdb\u53bb\u4e86\u3002 <!--\u6307\u5b9a\u8981\u626b\u63cf\u7684\u5305\uff0c\u8fd9\u4e2a\u5305\u4e0b\u9762\u7684\u6ce8\u89e3\u624d\u4f1a\u751f\u6548 \u522b\u53ea\u626b\u4e00\u4e2acom.kuang.pojo\u5305--> <context:component-scan base-package= \"com.kuang\" /> <context:annotation-config/> //@Component \u7ec4\u4ef6 //\u7b49\u4ef7\u4e8e<bean id=\"user\" classs\"pojo.User\"/> @Component public class User { public String name = \"\u79e6\u7586\" ; } 8.2\u3001\u5c5e\u6027\u5982\u4f55\u6ce8\u5165@value \u00b6 @Component public class User { //\u76f8\u5f53\u4e8e<property name=\"name\" value=\"kuangshen\"/> @value ( \"kuangshen\" ) public String name ; //\u4e5f\u53ef\u4ee5\u653e\u5728set\u65b9\u6cd5\u4e0a\u9762 //@value(\"kuangshen\") public void setName ( String name ) { this . name = name ; } } 8.3\u3001\u884d\u751f\u7684\u6ce8\u89e3 \u00b6 @Component\u6709\u51e0\u4e2a\u884d\u751f\u6ce8\u89e3\uff0c\u4f1a\u6309\u7167web\u5f00\u53d1\u4e2d\uff0cmvc\u67b6\u6784\u4e2d\u5206\u5c42\u3002 dao \uff08@Repository\uff09 service\uff08@Service\uff09 controller\uff08@Controller\uff09 \u8fd9\u56db\u4e2a\u6ce8\u89e3\u7684\u529f\u80fd\u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f\u4ee3\u8868\u5c06\u67d0\u4e2a\u7c7b\u6ce8\u518c\u5230\u5bb9\u5668\u4e2d 8.4\u3001\u81ea\u52a8\u88c5\u914d\u7f6e \u00b6 @Autowired\uff1a\u9ed8\u8ba4\u662fbyType\u65b9\u5f0f\uff0c\u5982\u679c\u5339\u914d\u4e0d\u4e0a\uff0c\u5c31\u4f1abyName @Nullable\uff1a\u5b57\u6bb5\u6807\u8bb0\u4e86\u8fd9\u4e2a\u6ce8\u89e3\uff0c\u8bf4\u660e\u8be5\u5b57\u6bb5\u53ef\u4ee5\u4e3a\u7a7a @Resource\uff1a\u9ed8\u8ba4\u662fbyName\u65b9\u5f0f\uff0c\u5982\u679c\u5339\u914d\u4e0d\u4e0a\uff0c\u5c31\u4f1abyType 8.5\u3001\u4f5c\u7528\u57df@scope \u00b6 //\u539f\u578b\u6a21\u5f0fprototype\uff0c\u5355\u4f8b\u6a21\u5f0fsingleton //scope(\"prototype\")\u76f8\u5f53\u4e8e<bean scope=\"prototype\"></bean> @Component @scope ( \"prototype\" ) public class User { //\u76f8\u5f53\u4e8e<property name=\"name\" value=\"kuangshen\"/> @value ( \"kuangshen\" ) public String name ; //\u4e5f\u53ef\u4ee5\u653e\u5728set\u65b9\u6cd5\u4e0a\u9762 @value ( \"kuangshen\" ) public void setName ( String name ) { this . name = name ; } } 8.6\u3001\u5c0f\u7ed3 \u00b6 xml\u4e0e\u6ce8\u89e3\uff1a xml\u66f4\u52a0\u4e07\u80fd\uff0c\u7ef4\u62a4\u7b80\u5355\uff0c\u9002\u7528\u4e8e\u4efb\u4f55\u573a\u5408 \u6ce8\u89e3\uff0c\u4e0d\u662f\u81ea\u5df1\u7684\u7c7b\u4f7f\u7528\u4e0d\u4e86\uff0c\u7ef4\u62a4\u590d\u6742 \u6700\u4f73\u5b9e\u8df5\uff1a xml\u7528\u6765\u7ba1\u7406bean \u6ce8\u89e3\u53ea\u7528\u6765\u5b8c\u6210\u5c5e\u6027\u7684\u6ce8\u5165 \u8981\u5f00\u542f\u6ce8\u89e3\u652f\u6301 9\u3001\u4f7f\u7528Java\u7684\u65b9\u5f0f\u914d\u7f6eSpring \u00b6 \u4e0d\u4f7f\u7528Spring\u7684xml\u914d\u7f6e\uff0c\u5b8c\u5168\u4ea4\u7ed9java\u6765\u505a\uff01 Spring\u7684\u4e00\u4e2a\u5b50\u9879\u76ee\uff0c\u5728spring4\u4e4b\u540e\uff0c\uff0c\uff0c\u5b83\u6210\u4e3a\u4e86\u6838\u5fc3\u529f\u80fd \u5b9e\u4f53\u7c7b\uff1apojo\u7684User.java //\u8fd9\u91cc\u8fd9\u4e2a\u6ce8\u89e3\u7684\u610f\u601d,\u5c31\u662f\u8bf4\u660e\u8fd9\u4e2a\u7c7b\u88abSpring\u63a5\u7ba1\u4e86,\u6ce8\u518c\u5230\u4e86\u5bb9\u5668\u4e2d @component public class User { private String name ; public String getName () { return name ; } //\u5c5e\u6027\u6ce8\u5165\u503c @value ( \"QINJIANG') public void setName(String name) { this.name = name; } @Override public String toString() { return \" user { \" + \" name = ' \" + name + '\\''+ '}'; } } \u5f39\u5e55\u8bc4\u8bba\uff1a\u8981\u4e48\u4f7f\u7528@Bean\uff0c\u8981\u4e48\u4f7f\u7528@Component\u548cComponentScan\uff0c\u4e24\u79cd\u6548\u679c\u4e00\u6837 \u914d\u7f6e\u6587\u4ef6\uff1aconfig\u4e2d\u7684kuang.java @Import(KuangConfig2.class)\uff0c\u7528@import\u6765\u5305\u542bKuangConfig2.java //\u8fd9\u4e2a\u4e5f\u4f1aSpring\u5bb9\u5668\u6258\u7ba1,\u6ce8\u518c\u5230\u5bb9\u5668\u4e2d,\u56e0\u4e3a\u4ed6\u672c\u7c73\u5c31\u662f\u4e00\u4e2a@Component // @Configuration\u8868\u8fd9\u662f\u4e00\u4e2a\u914d\u7f6e\u7c7b,\u5c31\u50cf\u6211\u4eec\u4e4b\u524d\u770b\u7684beans.xml\uff0c\u7c7b\u4f3c\u4e8e<beans>\u6807\u7b7e @Configuration @componentScan ( \"com.Kuang.pojo\" ) //\u5f00\u542f\u626b\u63cf //@Import(KuangConfig2.class) public class KuangConfig { //\u6ce8\u518c\u4e00\u4e2abean , \u5c31\u76f8\u5f53\u4e8e\u6211\u4eec\u4e4b\u524d\u5199\u7684\u4e00\u4e2abean \u6807\u7b7e //\u8fd9\u4e2a\u65b9\u6cd5\u7684\u540d\u5b57,\u5c31\u76f8\u5f53\u4e8ebean \u6807\u7b7e\u4e2d\u7684 id \u5c5e\u6027 ->getUser //\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8fd4\u540c\u503c,\u5c31\u76f8\u5f53\u4e8ebean \u6807\u7b7e\u4e2d\u7684class \u5c5e\u6027 ->User //@Bean public User getUser (){ return new User (); //\u5c31\u662f\u8fd4\u56de\u8981\u6ce8\u5165\u5230bean\u7684\u5bf9\u8c61! } } \u5f39\u5e55\u8bc4\u8bba\uff1aComponentScan\u3001@Component(\"pojo\u201d) \u8fd9\u4e24\u4e2a\u6ce8\u89e3\u914d\u5408\u4f7f\u7528 \u6d4b\u8bd5\u7c7b public class MyTest { public static void main ( String [ ] args ) { //\u5982\u679c\u5b8c\u5168\u4f7f\u7528\u4e86\u914d\u7f6e\u7c7b\u65b9\u5f0f\u53bb\u505a,\u6211\u4eec\u5c31\u53ea\u80fd\u901a\u8fc7 Annotationconfig \u4e0a\u4e0b\u6587\u6765\u83b7\u53d6\u5bb9\u5668,\u901a\u8fc7\u914d\u7f6e\u7c7b\u7684class\u5bf9\u8c61\u52a0\u8f7d! ApplicationContext context = new AnnotationConfigApplicationContext ( KuangConfig . Class ); //class\u5bf9\u8c61 User getUser = ( User ) context . getBean ( \"getUser\" ); //\u65b9\u6cd5\u540dgetUser System . out . Println ( getUser . getName ()); } } \u4f1a\u521b\u5efa\u4e24\u4e2a\u76f8\u540c\u5bf9\u8c61\u95ee\u9898\u7684\u8bf4\u660e\uff1a \u5f39\u5e55\u603b\u7ed3 - -> @Bean\u662f\u76f8\u5f53\u4e8e< bean>\u6807\u7b7e\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u800c\u6211\u4eec\u4e4b\u524d\u5b66\u7684@Component\u662f\u901a\u8fc7spring\u81ea\u52a8\u521b\u5efa\u7684\u8fd9\u4e2a\u88ab\u6ce8\u89e3\u58f0\u660e\u7684\u5bf9\u8c61\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f8\u5f53\u4e8e\u6709\u4e24\u4e2aUser\u5bf9\u8c61\u88ab\u521b\u5efa\u4e86\u3002\u4e00\u4e2a\u662fbean\u6807\u7b7e\u521b\u5efa\u7684\uff08@Bean\uff09\uff0c\u4e00\u4e2a\u662f\u901a\u8fc7\u626b\u63cf\u7136\u540e\u4f7f\u7528@Component\uff0cspring\u81ea\u52a8\u521b\u5efa\u7684User\u5bf9\u8c61\uff0c\u6240\u4ee5\u8fd9\u91cc\u53bb\u6389@Bean\u8fd9\u4e9b\u4e1c\u897f\uff0c\u7136\u540e\u5f00\u542f\u626b\u63cf\u3002\u4e4b\u540e\u5728User\u5934\u4e0a\u7528@Component\u5373\u53ef\u8fbe\u5230spring\u81ea\u52a8\u521b\u5efaUser\u5bf9\u8c61\u4e86 //\u8fd9\u4e2a\u4e5f\u4f1aSpring\u5bb9\u5668\u6258\u7ba1,\u6ce8\u518c\u5230\u5bb9\u5668\u4e2d,\u56e0\u4e3a\u4ed6\u672c\u7c73\u5c31\u662f\u4e00\u4e2a@Component // @Configuration\u8868\u8fd9\u662f\u4e00\u4e2a\u914d\u7f6e\u7c7b,\u5c31\u50cf\u6211\u4eec\u4e4b\u524d\u770b\u7684beans.xml\uff0c\u7c7b\u4f3c\u4e8e<beans>\u6807\u7b7e @Configuration @componentScan ( \"com.Kuang.pojo\" ) //\u5f00\u542f\u626b\u63cf //@Import(KuangConfig2.class) public class KuangConfig { //\u6ce8\u518c\u4e00\u4e2abean , \u5c31\u76f8\u5f53\u4e8e\u6211\u4eec\u4e4b\u524d\u5199\u7684\u4e00\u4e2abean \u6807\u7b7e //\u8fd9\u4e2a\u65b9\u6cd5\u7684\u540d\u5b57,\u5c31\u76f8\u5f53\u4e8ebean \u6807\u7b7e\u4e2d\u7684 id \u5c5e\u6027 ->getUser //\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8fd4\u540c\u503c,\u5c31\u76f8\u5f53\u4e8ebean \u6807\u7b7e\u4e2d\u7684class \u5c5e\u6027 ->User //@Bean public User getUser (){ return new User (); //\u5c31\u662f\u8fd4\u56de\u8981\u6ce8\u5165\u5230bean\u7684\u5bf9\u8c61! } } \u5f39\u5e55\u8bc4\u8bba\uff1aComponentScan\u3001@Component(\"pojo\u201d) \u8fd9\u4e24\u4e2a\u6ce8\u89e3\u914d\u5408\u4f7f\u7528 \u6d4b\u8bd5\u7c7b public class MyTest { public static void main ( String [ ] args ) { //\u5982\u679c\u5b8c\u5168\u4f7f\u7528\u4e86\u914d\u7f6e\u7c7b\u65b9\u5f0f\u53bb\u505a,\u6211\u4eec\u5c31\u53ea\u80fd\u901a\u8fc7 Annotationconfig \u4e0a\u4e0b\u6587\u6765\u83b7\u53d6\u5bb9\u5668,\u901a\u8fc7\u914d\u7f6e\u7c7b\u7684class\u5bf9\u8c61\u52a0\u8f7d! ApplicationContext context = new AnnotationConfigApplicationContext ( KuangConfig . Class ); //class\u5bf9\u8c61 User getUser = ( User ) context . getBean ( \"getUser\" ); //\u65b9\u6cd5\u540dgetUser System . out . Println ( getUser . getName ()); } } \u4f1a\u521b\u5efa\u4e24\u4e2a\u76f8\u540c\u5bf9\u8c61\u95ee\u9898\u7684\u8bf4\u660e\uff1a \u5f39\u5e55\u603b\u7ed3 - -> @Bean\u662f\u76f8\u5f53\u4e8e< bean>\u6807\u7b7e\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u800c\u6211\u4eec\u4e4b\u524d\u5b66\u7684@Component\u662f\u901a\u8fc7spring\u81ea\u52a8\u521b\u5efa\u7684\u8fd9\u4e2a\u88ab\u6ce8\u89e3\u58f0\u660e\u7684\u5bf9\u8c61\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f8\u5f53\u4e8e\u6709\u4e24\u4e2aUser\u5bf9\u8c61\u88ab\u521b\u5efa\u4e86\u3002\u4e00\u4e2a\u662fbean\u6807\u7b7e\u521b\u5efa\u7684\uff08@Bean\uff09\uff0c\u4e00\u4e2a\u662f\u901a\u8fc7\u626b\u63cf\u7136\u540e\u4f7f\u7528@Component\uff0cspring\u81ea\u52a8\u521b\u5efa\u7684User\u5bf9\u8c61\uff0c\u6240\u4ee5\u8fd9\u91cc\u53bb\u6389@Bean\u8fd9\u4e9b\u4e1c\u897f\uff0c\u7136\u540e\u5f00\u542f\u626b\u63cf\u3002\u4e4b\u540e\u5728User\u5934\u4e0a\u7528@Component\u5373\u53ef\u8fbe\u5230spring\u81ea\u52a8\u521b\u5efaUser\u5bf9\u8c61\u4e86 10\u3001\u52a8\u6001\u4ee3\u7406 \u00b6 \u4ee3\u7406\u6a21\u5f0f\u662fSpringAOP\u7684\u5e95\u5c42 \u5206\u7c7b\uff1a\u52a8\u6001\u4ee3\u7406\u548c\u9759\u6001\u4ee3\u7406 10.1\u3001\u9759\u6001\u4ee3\u7406 \u00b6 \u4ee3\u7801\u6b65\u9aa4\uff1a 1\u3001\u63a5\u53e3 package pojo ; public interface Host { public void rent (); } 2\u3001\u771f\u5b9e\u89d2\u8272 package pojo ; public class HostMaster implements Host { public void rent () { System . out . println ( \"\u623f\u4e1c\u8981\u51fa\u79df\u623f\u5b50\" ); } } 3\u3001\u4ee3\u7406\u89d2\u8272 package pojo ; public class Proxy { public Host host ; public Proxy () { } public Proxy ( Host host ) { super (); this . host = host ; } public void rent () { seeHouse (); host . rent (); fee (); sign (); } //\u770b\u623f public void seeHouse () { System . out . println ( \"\u770b\u623f\u5b50\" ); } //\u6536\u8d39 public void fee () { System . out . println ( \"\u6536\u4e2d\u4ecb\u8d39\" ); } //\u5408\u540c public void sign () { System . out . println ( \"\u7b7e\u5408\u540c\" ); } } 4\u3001\u5ba2\u6237\u7aef\u8bbf\u95ee\u4ee3\u7406\u89d2\u8272 package holle4_proxy ; import pojo.Host ; import pojo.HostMaster ; import pojo.Proxy ; public class My { public static void main ( String [] args ) { //\u623f\u4e1c\u8981\u51fa\u79df\u623f\u5b50 Host host = new HostMaster (); //\u4e2d\u4ecb\u5e2e\u623f\u4e1c\u51fa\u79df\u623f\u5b50\uff0c\u4f46\u4e5f\u6536\u53d6\u4e00\u5b9a\u8d39\u7528\uff08\u589e\u52a0\u4e00\u4e9b\u623f\u4e1c\u4e0d\u505a\u7684\u64cd\u4f5c\uff09 Proxy proxy = new Proxy ( host ); //\u770b\u4e0d\u5230\u623f\u4e1c\uff0c\u4f46\u901a\u8fc7\u4ee3\u7406\uff0c\u8fd8\u662f\u79df\u5230\u4e86\u623f\u5b50 proxy . rent (); } } \u4ee3\u7801\u7ffb\u500d\uff1a\u51e0\u5341\u4e2a\u771f\u5b9e\u89d2\u8272\u5c31\u5f97\u5199\u51e0\u5341\u4e2a\u4ee3\u7406 AOP\u6a2a\u5411\u5f00\u53d1 10.2\u3001\u52a8\u6001\u4ee3\u7406 \u00b6 \u52a8\u6001\u4ee3\u7406\u548c\u9759\u6001\u89d2\u8272\u4e00\u6837\uff0c\u52a8\u6001\u4ee3\u7406\u5e95\u5c42\u662f\u53cd\u5c04\u673a\u5236 \u52a8\u6001\u4ee3\u7406\u7c7b\u662f\u52a8\u6001\u751f\u6210\u7684\uff0c\u4e0d\u662f\u6211\u4eec\u76f4\u63a5\u5199\u597d\u7684\uff01 \u52a8\u6001\u4ee3\u7406(\u4e24\u5927\u7c7b)\uff1a\u57fa\u4e8e\u63a5\u53e3\uff0c\u57fa\u4e8e\u7c7b \u57fa\u4e8e\u63a5\u53e3\uff1aJDK\u7684\u52a8\u6001\u4ee3\u7406\u3010\u4f7f\u7528ing\u3011 \u57fa\u4e8e\u7c7b\uff1acglib java\u5b57\u8282\u7801\u5b9e\u73b0\uff1ajavasisit \u4e86\u89e3\u4e24\u4e2a\u7c7b 1\u3001Proxy\uff1a\u4ee3\u7406 2\u3001InvocationHandler\uff1a\u8c03\u7528\u5904\u7406\u7a0b\u5e8f \u5b9e\u4f8b\uff1a \u63a5\u53e3 Host.java //\u63a5\u53e3 package pojo2 ; public interface Host { public void rent (); } \u63a5\u53e3Host\u5b9e\u73b0\u7c7b HostMaster.java //\u63a5\u53e3\u5b9e\u73b0\u7c7b package pojo2 ; public class HostMaster implements Host { public void rent () { System . out . println ( \"\u623f\u4e1c\u8981\u79df\u623f\u5b50\" ); } } \u4ee3\u7406\u89d2\u8272\u7684\u5904\u7406\u7a0b\u5e8f\u7c7b ProxyInvocationHandler.java package pojo2 ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Method ; import java.lang.reflect.Proxy ; ///\u7528\u8fd9\u4e2a\u7c7b\uff0c\u81ea\u52a8\u751f\u6210\u4ee3\u7406 public class ProxyInvocationHandler implements InvocationHandler { // Foo f =(Foo) Proxy.NewProxyInstance(Foo. Class.GetClassLoader(), // new Class<?>[] { Foo.Class }, // handler); // \u88ab\u4ee3\u7406\u7684\u63a5\u53e3 public HostMaster hostMaster ; public void setHostMaster ( HostMaster hostMaster ) { this . hostMaster = hostMaster ; } // \u5f97\u5230\u751f\u6210\u7684\u4ee3\u7406\u7c7b public Object getProxy () { // newProxyInstance() -> \u751f\u6210\u4ee3\u7406\u5bf9\u8c61\uff0c\u5c31\u4e0d\u7528\u518d\u5199\u5177\u4f53\u7684\u4ee3\u7406\u7c7b\u4e86 // this.getClass().getClassLoader() -> \u627e\u5230\u52a0\u8f7d\u7c7b\u7684\u4f4d\u7f6e // hostMaster.getClass().getInterfaces() -> \u4ee3\u7406\u7684\u5177\u4f53\u63a5\u53e3 // this -> \u4ee3\u8868\u4e86\u63a5\u53e3InvocationHandler\u7684\u5b9e\u73b0\u7c7bProxyInvocationHandler return Proxy . newProxyInstance ( this . getClass (). getClassLoader (), hostMaster . getClass (). getInterfaces (), this ); // \u5904\u7406\u4ee3\u7406\u5b9e\u4f8b\u5e76\u8fd4\u56de\u7ed3\u679c public Object invoke ( Object proxy , Method method , Object [] args ) throws Throwable { seeHouse (); // \u52a8\u6001\u4ee3\u7406\u7684\u672c\u8d28\uff0c\u5c31\u662f\u4f7f\u7528\u53cd\u5c04\u673a\u5236\u5b9e\u73b0\u7684 // invoke()\u6267\u884c\u5b83\u771f\u6b63\u8981\u6267\u884c\u7684\u65b9\u6cd5 Object result = method . invoke ( hostMaster , args ); fee (); return result ; } public void seeHouse () { System . out . println ( \"\u770b\u623f\u5b50\" ); } public void fee () { System . out . println ( \"\u6536\u4e2d\u4ecb\u8d39\" ); } } \u7528\u6237\u7c7b My2.java package holle4_proxy ; import pojo2.Host ; import pojo2.Host2 ; import pojo2.HostMaster ; import pojo2.ProxyInvocationHandler ; public class My2 { public static void main ( String [] args ) { //\u771f\u5b9e\u89d2\u8272 HostMaster hostMaster = new HostMaster (); //\u4ee3\u7406\u89d2\u8272\uff0c\u73b0\u5728\u6ca1\u6709\uff1b\u7528\u4ee3\u7406\u89d2\u8272\u7684\u5904\u7406\u7a0b\u5e8f\u6765\u5b9e\u73b0Host\u63a5\u53e3\u7684\u8c03\u7528 ProxyInvocationHandler pih = new ProxyInvocationHandler (); //pih -> HostMaster\u63a5\u53e3\u7c7b -> Host\u63a5\u53e3 pih . setHostMaster ( hostMaster ); //\u83b7\u53d6newProxyInstance\u52a8\u6001\u751f\u6210\u4ee3\u7406\u7c7b Host proxy = ( Host ) pih . getProxy (); proxy . rent (); } } \u5f39\u5e55\u8bc4\u8bba\uff1a \u4ec0\u4e48\u65f6\u5019\u8c03\u7528invoke\u65b9\u6cd5\u7684? \u4ee3\u7406\u5b9e\u4f8b\u8c03\u7528\u65b9\u6cd5\u65f6invoke\u65b9\u6cd5\u5c31\u4f1a\u88ab\u8c03\u7528\uff0c\u53ef\u4ee5debug\u8bd5\u8bd5 \u6539\u4e3a \u4e07\u80fd\u4ee3\u7406\u7c7b ///\u7528\u8fd9\u4e2a\u7c7b\uff0c\u81ea\u52a8\u751f\u4ee3\u7406 public class ProxyInvocationHandler implements InvocationHandler { // \u88ab\u4ee3\u7406\u7684\u63a5\u53e3 public Object target ; public void setTarget ( Object target ) { this . target = target ; } // \u5f97\u5230\u751f\u6210\u7684\u4ee3\u7406\u7c7b -> \u56fa\u5b9a\u7684\u4ee3\u7801 public Object getProxy () { return Proxy . newProxyInstance ( this . getClass (). getClassLoader (), target . getClass (). getInterfaces (), this ); } // \u5904\u7406\u4ee3\u7406\u5b9e\u4f8b\u5e76\u8fd4\u56de\u7ed3\u679c public Object invoke ( Object proxy , Method method , Object [] args ) throws Throwable { // \u52a8\u6001\u4ee3\u7406\u7684\u672c\u8d28\uff0c\u5c31\u662f\u4f7f\u7528\u53cd\u5c04\u673a\u5236\u5b9e\u73b0\u7684 // invoke()\u6267\u884c\u5b83\u771f\u6b63\u8981\u6267\u884c\u7684\u65b9\u6cd5 Object result = method . invoke ( target , args ); return result ; } } 11\u3001AOP \u00b6 11.1\u3001\u4ec0\u4e48\u662fAOP \u00b6 11.2\u3001AOP\u5728Spring\u4e2d\u7684\u4f7f\u7528 \u00b6 \u63d0\u4f9b\u58f0\u660e\u5f0f\u4e8b\u52a1\uff0c\u5141\u8bb8\u7528\u6237\u81ea\u5b9a\u4e49\u5207\u9762 \u6a2a\u5207\u5173\u6ce8\u70b9\uff1a\u8de8\u8d8a\u5e94\u7528\u7a0b\u5e8f\u591a\u4e2a\u6a21\u5757\u7684\u65b9\u6cd5\u6216\u529f\u80fd\u3002\u5373\u662f\uff0c\u4e0e\u6211\u4eec\u4e1a\u52a1\u903b\u8f91\u65e0\u5173\u7684\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u5173\u6ce8\u7684\u90e8\u5206\uff0c\u5c31\u662f\u6a2a\u5207\u5173\u6ce8\u70b9\u3002\u5982\u65e5\u5fd7\uff0c\u5b89\u5168\uff0c\u7f13\u5b58\uff0c\u4e8b\u52a1\u7b49\u7b49\u2026 \u5207\u9762(Aspect)\uff1a\u6a2a\u5207\u5173\u6ce8\u70b9 \u88ab\u6a21\u5757\u5316\u7684\u7279\u6b8a\u5bf9\u8c61\u3002\u5373\uff0c\u5b83\u662f\u4e00\u4e2a\u7c7b\u3002\uff08Log\u7c7b\uff09 \u901a\u77e5(Advice)\uff1a\u5207\u9762\u5fc5\u987b\u8981\u5b8c\u6210\u7684\u5de5\u4f5c\u3002\u5373\uff0c\u5b83\u662f\u7c7b\u4e2d\u7684\u4e00\u4e2a\u65b9\u6cd5\u3002\uff08Log\u7c7b\u4e2d\u7684\u65b9\u6cd5\uff09 \u76ee\u6807(Target)\uff1a\u88ab\u901a\u77e5\u5bf9\u8c61\u3002\uff08\u751f\u6210\u7684\u4ee3\u7406\u7c7b) \u4ee3\u7406(Proxy)\uff1a\u5411\u76ee\u6807\u5bf9\u8c61\u5e94\u7528\u901a\u77e5\u4e4b\u540e\u521b\u5efa\u7684\u5bf9\u8c61\u3002\uff08\u751f\u6210\u7684\u4ee3\u7406\u7c7b\uff09 \u5207\u5165\u70b9(PointCut)\uff1a\u5207\u9762\u901a\u77e5\u6267\u884c\u7684\u201d\u5730\u70b9\u201d\u7684\u5b9a\u4e49\u3002\uff08\u6700\u540e\u4e24\u70b9\uff1a\u5728\u54ea\u4e2a\u5730\u65b9\u6267\u884c\uff0c\u6bd4\u5982\uff1amethod.invoke()\uff09 \u8fde\u63a5\u70b9(JointPoint)\uff1a\u4e0e\u5207\u5165\u70b9\u5339\u914d\u7684\u6267\u884c\u70b9\u3002 SpringAOP\u4e2d\uff0c\u901a\u8fc7Advice\u5b9a\u4e49\u6a2a\u5207\u903b\u8f91\uff0cSpring\u4e2d\u652f\u63015\u79cd\u7c7b\u578b\u7684Advice: \u5373AOP\u5728\u4e0d\u6539\u53d8\u539f\u6709\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u53bb\u589e\u52a0\u65b0\u7684\u529f\u80fd\u3002 \uff08\u4ee3\u7406\uff09 11.3\u3001\u4f7f\u7528Spring\u5b9e\u73b0AOP \u00b6 \u5bfc\u5165jar\u5305 <!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --> <dependency> <groupId> org.aspectj </groupId> <artifactId> aspectjweaver </artifactId> <version> 1.9.4 </version> </dependency> 11.3.1\u3001\u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528\u539f\u751fspring\u63a5\u53e3 \u00b6 springAPI\u63a5\u53e3\u5b9e\u73b0 applicationContext.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd\" > <!--\u6ce8\u518cbean--> <bean id= \"userservice\" class= \"service.UserServiceImpl\" /> <bean id= \"log\" class= \"log.Log\" /> <bean id= \"afterLog\" class= \"log.AfterLog\" /> <!--\u65b9\u5f0f\u4e00\uff0c\u4f7f\u7528\u539f\u751fSpring API\u63a5\u53e3--> <!--\u914d\u7f6eaop,\u8fd8\u9700\u8981\u5bfc\u5165aop\u7ea6\u675f--> <aop:config> <!--\u5207\u5165\u70b9\uff1aexpression:\u8868\u8fbe\u5f0f\uff0cexecution\uff08\u8981\u6267\u884c\u7684\u4f4d\u7f6e\uff09--> <aop:pointcut id= \"pointcut\" expression= \"execution(* service.UserServiceImpl.*(..))\" /> <!--UserServiceImpl.*(..) -\u300b UserServiceImpl\u7c7b\u4e0b\u7684\u6240\u4ee5\u65b9\u6cd5(\u53c2\u6570)--> <!--\u6267\u884c\u73af\u7ed5\u589e\u52a0--> <aop:advisor advice-ref= \"log\" pointcut-ref= \"pointcut\" /> <aop:advisor advice-ref= \"afterLog\" pointcut-ref= \"pointcut\" /> <!-- \u73af\u7ed5,\u5728id=\"pointcut\"\u7684\u524d\u540e\u5207\u5165 --> </aop:config> </beans> execution(\u8fd4\u56de\u7c7b\u578b\uff0c\u7c7b\u540d\uff0c\u65b9\u6cd5\u540d(\u53c2\u6570)) -> execution( com.service. ,*(\u2026)) UserService.java package service ; public interface UserService { public void add () ; public void delete () ; public void query () ; public void update (); } UserService \u7684\u5b9e\u73b0\u7c7b UserServiceImp.java package service ; public class UserServiceImpl implements UserService { public void add () { System . out . println ( \"add\u589e\" ); } public void delete () { System . out . println ( \"delete\u5220\" ); } public void update () { System . out . println ( \"update\u6539\" ); } public void query () { System . out . println ( \"query\u67e5\" ); } } \u524d\u7f6eLog.java package log ; import org.springframework.aop.MethodBeforeAdvice ; import java.lang.reflect.Method ; public class Log implements MethodBeforeAdvice { //method\uff1a\u8981\u6267\u884c\u7684\u76ee\u6807\u5bf9\u8c61\u7684\u65b9\u6cd5 //args\uff1a\u53c2\u6570 //target\uff1a\u76ee\u6807\u5bf9\u8c61 public void before ( Method method , Object [] args , Object target ) throws Throwable { System . out . println ( target . getClass (). getName () + \"\u7684\" + method . getName () + \"\u88ab\u6267\u884c\u4e86\" ); } } \u540e\u7f6eAfterLog.java package log ; import java.lang.reflect.Method ; import org.springframework.aop.AfterReturningAdvice ; public class AfterLog implements AfterReturningAdvice { //returnVaule: \u8fd4\u56de\u503c public void afterReturning ( Object returnValue , Method method , Object [] args , Object target ) throws Throwable { System . out . println ( \"\u6267\u884c\u4e86\" + method . getName () + \"\u65b9\u6cd5\uff0c\u8fd4\u56de\u503c\u662f\" + returnValue ); } } \u6d4b\u8bd5\u7c7bMyTest5 import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import service.UserService ; public class MyTest5 { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"applicationContext.xml\" ); //\u6ce8\u610f:\u52a8\u6001\u4ee3\u7406\u4ee3\u7406\u7684\u662f\u63a5\u53e3 UserService userService = ( UserService ) context . getBean ( \"userservice\" ); userService . add (); } } 11.3.2\u3001\u65b9\u6cd5\u4e8c\uff1a\u81ea\u5b9a\u4e49\u7c7b\u5b9e\u73b0AOP \u00b6 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd\" > <!--\u6ce8\u518cbean--> <bean id= \"userservice\" class= \"service.UserServiceImpl\" /> <bean id= \"log\" class= \"log.Log\" /> <bean id= \"afterLog\" class= \"log.AfterLog\" /> <!-- \u65b9\u5f0f\u4e8c\uff0c\u81ea\u5b9a\u4e49 --> <bean id= \"diy\" class= \"diy.DiyPointcut\" /> <aop:config> <!--\u81ea\u5b9a\u4e49\u5207\u9762--> <aop:aspect ref= \"diy\" > <!--\u5207\u5165\u70b9--> <aop:pointcut id= \"point\" expression= \"execution(* service.UserServiceImpl.*(..))\" /> <aop:before method= \"before\" pointcut-ref= \"point\" /> <aop:after method= \"after\" pointcut-ref= \"point\" /> </aop:aspect> </aop:config> </beans> package diy ; public class DiyPointcut { public void before (){ System . out . println ( \"\u63d2\u5165\u5230\u524d\u9762\" ); } public void after (){ System . out . println ( \"\u63d2\u5165\u5230\u540e\u9762\" ); } } //\u6d4b\u8bd5 public class MyTest5 { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"applicationContext.xml\" ); //\u6ce8\u610f:\u52a8\u6001\u4ee3\u7406\u4ee3\u7406\u7684\u662f\u63a5\u53e3 UserService userService = ( UserService ) context . getBean ( \"userservice\" ); userService . add (); } } 11.3.3\u3001\u65b9\u6cd5\u4e09\uff1a\u4f7f\u7528\u6ce8\u89e3\u5b9e\u73b0 \u00b6 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd\" > <!-- \u6ce8\u518c --> <bean id= \"userservice\" class= \"service.UserServiceImpl\" /> <!--\u65b9\u5f0f\u4e09\uff0c\u4f7f\u7528\u6ce8\u89e3\u5b9e\u73b0--> <bean id= \"diyAnnotation\" class= \"diy.DiyAnnotation\" ></bean> <!-- \u5f00\u542f\u81ea\u52a8\u4ee3\u7406 \u5b9e\u73b0\u65b9\u5f0f\uff1a\u9ed8\u8ba4JDK (proxy-targer-class=\"fasle\") cgbin (proxy-targer-class=\"true\")--> <aop:aspectj-autoproxy/> </beans> DiyAnnotation.java package diy ; import org.aspectj.lang.ProceedingJoinPoint ; import org.aspectj.lang.annotation.After ; import org.aspectj.lang.annotation.Around ; import org.aspectj.lang.annotation.Aspect ; import org.aspectj.lang.annotation.Before ; @Aspect //\u6807\u6ce8\u8fd9\u4e2a\u7c7b\u662f\u4e00\u4e2a\u5207\u9762 public class DiyAnnotation { @Before ( \"execution(* service.UserServiceImpl.*(..))\" ) public void before (){ System . out . println ( \"=====\u65b9\u6cd5\u6267\u884c\u524d=====\" ); } @After ( \"execution(* service.UserServiceImpl.*(..))\" ) public void after (){ System . out . println ( \"=====\u65b9\u6cd5\u6267\u884c\u540e=====\" ); } //\u5728\u73af\u7ed5\u589e\u5f3a\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u5730\u6696\u7ba1\u4e00\u4e2a\u53c2\u6570\uff0c\u4ee3\u8868\u6211\u4eec\u8981\u83b7\u53d6\u5207\u5165\u7684\u70b9 @Around ( \"execution(* service.UserServiceImpl.*(..))\" ) public void around ( ProceedingJoinPoint joinPoint ) throws Throwable { System . out . println ( \"\u73af\u7ed5\u524d\" ); Object proceed = joinPoint . proceed (); System . out . println ( \"\u73af\u7ed5\u540e\" ); } } \u6d4b\u8bd5 public class MyTest5 { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"applicationContext.xml\" ); //\u6ce8\u610f:\u52a8\u6001\u4ee3\u7406\u4ee3\u7406\u7684\u662f\u63a5\u53e3 UserService userService = ( UserService ) context . getBean ( \"userservice\" ); userService . add (); } } \u8f93\u51fa\u7ed3\u679c\uff1a 12\u3001\u6574\u5408mybatis \u00b6 mybatis-spring\u5b98\u7f51\uff1ahttps://mybatis.org/spring/zh/ mybatis\u7684\u914d\u7f6e\u6d41\u7a0b\uff1a \u7f16\u5199\u5b9e\u4f53\u7c7b \u7f16\u5199\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6 \u7f16\u5199\u63a5\u53e3 \u7f16\u5199Mapper.xmi \u6d4b\u8bd5 12.1\u3001mybatis-spring-\u65b9\u5f0f\u4e00 \u00b6 \u7f16\u5199\u6570\u636e\u6e90\u914d\u7f6e sqISessionFactory sqISessionTemplate\uff08\u76f8\u5f53\u4e8esqISession\uff09 \u9700\u8981\u7ed9\u63a5\u53e3\u52a0\u5b9e\u73b0\u7c7b\u3010new\u3011 \u5c06\u81ea\u5df1\u5199\u7684\u5b9e\u73b0\u7c7b\uff0c\u6ce8\u5165\u5230Spring\u4e2d \u6d4b\u8bd5\uff01 \u5148\u5bfc\u5165jar\u5305 <dependencies> <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-webmvc </artifactId> <version> 5.2.7.RELEASE </version> </dependency> <dependency> <groupId> org.aspectj </groupId> <artifactId> aspectjweaver </artifactId> <version> 1.9.4 </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-jdbc </artifactId> <version> 5.2.7.RELEASE </version> </dependency> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis </artifactId> <version> 3.5.2 </version> </dependency> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis-spring </artifactId> <version> 2.0.4 </version> </dependency> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.12 </version> </dependency> <dependency> <groupId> org.projectlombok </groupId> <artifactId> lombok </artifactId> <version> 1.18.12 </version> </dependency> </dependencies> <!--\u5728build\u4e2d\u914d\u7f6eresources\uff0c\u6765\u9632\u6b62\u8d44\u6e90\u5bfc\u51fa\u5931\u8d25\u7684\u95ee\u9898--> <!-- Maven\u89e3\u51b3\u9759\u6001\u8d44\u6e90\u8fc7\u6ee4\u95ee\u9898 --> <build> <resources> <resource> <directory> src/main/java </directory> <includes> <include> **/*.properties </include> <include> **/*.xml </include> </includes> <filtering> false </filtering> </resource> <resource> <directory> src/main/resources </directory> <includes> <include> **/*.properties </include> <include> **/*.xml </include> </includes> <filtering> false </filtering> </resource> </resources> </build> \u7f16\u5199\u987a\u5e8f\uff1a User -> UserMapper -> UserMapper.xml -> spring-dao.xml -> UserServiceImpl -> applicationContext.xml -> MyTest6 \u4ee3\u7801\u6b65\u9aa4\uff1a pojo\u5b9e\u4f53\u7c7b User package pojo ; import lombok.Data ; @Data public class User { private int id ; private String name ; private String pwd ; } mapper\u76ee\u5f55\u4e0b\u7684 UserMapper\u3001UserMapperImpl\u3001UserMapper.xml \u63a5\u53e3UserMapper package mapper ; import java.util.List ; import pojo.User ; public interface UserMapper { public List < User > getUser (); } UserMapperImpl package mapper ; import java.util.List ; import org.mybatis.spring.SqlSessionTemplate ; import pojo.User ; public class UserMapperImpl implements UserMapper { //\u6211\u4eec\u7684\u6240\u6709\u64cd\u4f5c\uff0c\u5728\u539f\u6765\u90fd\u4f7f\u7528sqlSession\u6765\u6267\u884c\uff0c\u73b0\u5728\u90fd\u4f7f\u7528SqlSessionTemplate\uff1b private SqlSessionTemplate sqlSessionTemplate ; public void setSqlSessionTemplate ( SqlSessionTemplate sqlSessionTemplate ) { this . sqlSessionTemplate = sqlSessionTemplate ; } public List < User > getUser () { UserMapper mapper = sqlSessionTemplate . getMapper ( UserMapper . class ); return mapper . getUser (); } } UserMapper.xml \uff08\u72c2\u795e\u7ed9\u9762\u5b50\u624d\u7559\u4e0b\u6765\u7684\uff09 <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <!-- \u7ed1\u5b9a\u63a5\u53e3 --> <mapper namespace= \"mapper.UserMapper\" > <select id= \"getUser\" resultType= \"pojo.User\" > select * from mybatis.mybatis </select> </mapper> resource\u76ee\u5f55\u4e0b\u7684 mybatis-config.xml\u3001spring-dao.xml\u3001applicationContext.xml mybatis-config.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <configuration> <!--\u5f00\u542f\u65e5\u5fd7--> <settings> <setting name= \"logImpl\" value= \"STDOUT_LOGGING\" /> </settings> <!--\u53ef\u4ee5\u7ed9\u5b9e\u4f53\u7c7b\u8d77\u522b\u540d --> <typeAliases> <package name= \"pojo\" /> </typeAliases> </configuration> spring-dao.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd\" > <!--DataSource:\u4f7f\u7528Spring\u7684\u6570\u5e2e\u6e90\u66ff\u6362Mybatis\u7684\u914d\u7f6e \u5176\u4ed6\u6570\u636e\u6e90\uff1ac3p0\u3001dbcp\u3001druid \u8fd9\u4f7f\u7528Spring\u63d0\u4f9b\u7684JDBC: org.springframework.jdbc.datasource --> <!--data source --> <bean id= \"datasource\" class= \"org.springframework.jdbc.datasource.DriverManagerDataSource\" > <property name= \"driverClassName\" value= \"com.mysql.cj.jdbc.Driver\" /> <property name= \"url\" value= \"jdbc:mysql://127.0.0.1:3306/mybatis?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=Asia/Shanghai\" /> <property name= \"username\" value= \"root\" /> <property name= \"password\" value= \"root\" /> </bean> <!--sqlSessionFactory--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"datasource\" /> <!--\u7ed1\u5b9a mybatis \u914d\u7f6e\u6587\u4ef6--> <property name= \"configLocation\" value= \"classpath:mybatis-config.xml\" /> <property name= \"mapperLocations\" value= \"classpath:mapper/*.xml\" /> </bean> <!-- sqlSessionTemplate \u5c31\u662f\u4e4b\u524d\u4f7f\u7528\u7684\uff1asqlsession --> <bean id= \"sqlSession\" class= \"org.mybatis.spring.SqlSessionTemplate\" > <!-- \u53ea\u80fd\u4f7f\u7528\u6784\u9020\u5668\u6ce8\u5165sqlSessionFactory \u539f\u56e0\uff1a\u5b83\u6ca1\u6709set\u65b9\u6cd5--> <constructor-arg index= \"0\" ref= \"sqlSessionFactory\" /> </bean> </beans> applicationContext.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd\" > <!-- \u5bfc\u5165spring-dao.xml --> <import resource= \"spring-dao.xml\" /> <bean id= \"userMapper\" class= \"mapper.UserMapperImpl\" > <property name= \"sqlSessionTemplate\" ref= \"sqlSession\" ></property> </bean> </beans> \u6d4b\u8bd5\u7c7b import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import mapper.UserMapper ; import pojo.User ; public class MyTest6 { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"applicationContext.xml\" ); UserMapper userMapper = ( UserMapper ) context . getBean ( \"userMapper\" ); for ( User user : userMapper . getUser ()) { System . out . println ( user ); } } } 12.2\u3001mybatis-spring-\u65b9\u5f0f\u4e8c \u00b6 UserServiceImpl2 package mapper ; import pojo.User ; import org.apache.ibatis.session.SqlSession ; import org.mybatis.spring.support.SqlSessionDaoSupport ; import java.util.List ; //\u7ee7\u627fSqlSessionDaoSupport \u7c7b public class UserMapperImpl2 extends SqlSessionDaoSupport implements UserMapper { public List < User > getUser () { SqlSession sqlSession = getSqlSession (); UserMapper mapper = sqlSession . getMapper ( UserMapper . class ); return mapper . getUser (); //\u6216\u8005\u4e00\u53e5\u8bdd\uff1areturn getSqlSession().getMapper(UserMapper.class).getUser(); } } spring-dao.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd\" > <!--DataSource:\u4f7f\u7528Spring\u7684\u6570\u5e2e\u6e90\u66ff\u6362Mybatis\u7684\u914d\u7f6e c3p0 dbcp druid \u8fd9\u4f7f\u7528Spring\u63d0\u4f9b\u7684JDBC: org.springframework.jdbc.datasource --> <!--data source --> <bean id= \"datasource\" class= \"org.springframework.jdbc.datasource.DriverManagerDataSource\" > <property name= \"driverClassName\" value= \"com.mysql.cj.jdbc.Driver\" /> <property name= \"url\" value= \"jdbc:mysql://127.0.0.1:3306/mybatis?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=Asia/Shanghai\" /> <property name= \"username\" value= \"root\" /> <property name= \"password\" value= \"root\" /> </bean> <!--sqlSessionFactory--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"datasource\" /> <!--\u7ed1\u5b9a mybatis \u914d\u7f6e\u6587\u4ef6--> <property name= \"configLocation\" value= \"classpath:mybatis-config.xml\" /> <property name= \"mapperLocations\" value= \"classpath:mapper/*.xml\" /> </bean> <!-- \u65b9\u6cd5\u4e8c\uff1aSqlSessionTemplate \u53ef\u4ee5\u4e0d\u5199\u4e86--> </beans> applicationContext.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd\" > <import resource= \"spring-dao.xml\" /> <!-- \u65b9\u6cd5\u4e8c --> <bean id= \"userMapper2\" class= \"mapper.UserMapperImpl2\" > <property name= \"sqlSessionFactory\" ref= \"sqlSessionFactory\" ></property> </bean> </beans> \u6d4b\u8bd5 public class MyTest6 { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"applicationContext.xml\" ); UserMapper userMapper = ( UserMapper ) context . getBean ( \"userMapper2\" ); for ( User user : userMapper . getUser ()) { System . out . println ( user ); } } } 13. \u58f0\u660e\u5f0f\u4e8b\u52a1 \u00b6 \u628a\u4e00\u7ec4\u4e1a\u52a1\u5f53\u6210\u4e00\u4e2a\u4e1a\u52a1\u6765\u505a\uff1b\u8981\u4e48\u90fd\u6210\u529f\uff0c\u8981\u4e48\u90fd\u5931\u8d25\uff01 \u4e8b\u52a1\u5728\u9879\u76ee\u5f00\u53d1\u4e2d\uff0c\u5341\u5206\u7684\u91cd\u8981\uff0c\u6d89\u53ca\u5230\u6570\u636e\u7684\u4e00\u81f4\u6027\u95ee\u9898 \u786e\u4fdd\u5b8c\u6574\u6027\u548c\u4e00\u81f4\u6027 \u4e8b\u52a1\u7684ACID\u539f\u5219\uff1a 1\u3001\u539f\u5b50\u6027 2\u3001\u9694\u79bb\u6027 3\u3001\u4e00\u81f4\u6027 4\u3001\u6301\u4e45\u6027 ACID\u53c2\u8003\u6587\u7ae0\uff1ahttps://www.cnblogs.com/malaikuangren/archive/2012/04/06/2434760.html Spring\u4e2d\u7684\u4e8b\u52a1\u7ba1\u7406 \u58f0\u660e\u5f0f\u4e8b\u52a1\uff1aAOP \u7f16\u7a0b\u5f0f\u4e8b\u52a1\uff1a\u9700\u8981\u518d\u4ee3\u7801\u4e2d\uff0c\u8fdb\u884c\u4e8b\u52a1\u7ba1\u7406 \u58f0\u660e\u5f0f\u4e8b\u52a1 \u5148\u5bfc\u5165jar\u5305 <dependencies> <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-webmvc </artifactId> <version> 5.2.7.RELEASE </version> </dependency> <dependency> <groupId> org.aspectj </groupId> <artifactId> aspectjweaver </artifactId> <version> 1.9.4 </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-jdbc </artifactId> <version> 5.2.7.RELEASE </version> </dependency> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis </artifactId> <version> 3.5.2 </version> </dependency> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis-spring </artifactId> <version> 2.0.4 </version> </dependency> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.12 </version> </dependency> <dependency> <groupId> org.projectlombok </groupId> <artifactId> lombok </artifactId> <version> 1.18.12 </version> </dependency> </dependencies> <!--\u5728build\u4e2d\u914d\u7f6eresources\uff0c\u6765\u9632\u6b62\u8d44\u6e90\u5bfc\u51fa\u5931\u8d25\u7684\u95ee\u9898--> <!-- Maven\u89e3\u51b3\u9759\u6001\u8d44\u6e90\u8fc7\u6ee4\u95ee\u9898 --> <build> <resources> <resource> <directory> src/main/java </directory> <includes> <include> **/*.properties </include> <include> **/*.xml </include> </includes> <filtering> false </filtering> </resource> <resource> <directory> src/main/resources </directory> <includes> <include> **/*.properties </include> <include> **/*.xml </include> </includes> <filtering> false </filtering> </resource> </resources> </build> \u4ee3\u7801\u6b65\u9aa4\uff1a pojo\u5b9e\u4f53\u7c7b User package pojo ; import lombok.AllArgsConstructor ; import lombok.Data ; import lombok.NoArgsConstructor ; @Data @AllArgsConstructor @NoArgsConstructor public class User { private int id ; private String name ; private String pwd ; } mapper\u76ee\u5f55\u4e0b\u7684 UserMapper\u3001UserMapperImpl\u3001UserMapper.xml \u63a5\u53e3UserMapper package mapper ; import java.util.List ; import org.apache.ibatis.annotations.Param ; import pojo.User ; public interface UserMapper { public List < User > getUser (); public int insertUser ( User user ); public int delUser ( @Param ( \"id\" ) int id ); } UserMapperImpl package mapper ; import pojo.User ; import org.apache.ibatis.session.SqlSession ; import org.mybatis.spring.support.SqlSessionDaoSupport ; import java.util.List ; public class UserMapperImpl extends SqlSessionDaoSupport implements UserMapper { public List < User > getUser () { User user = new User ( 5 , \"\u4f60\u597d\" , \"ok\" ); insertUser ( user ); delUser ( 5 ); SqlSession sqlSession = getSqlSession (); UserMapper mapper = sqlSession . getMapper ( UserMapper . class ); return mapper . getUser (); //\u6216\u8005return getSqlSession().getMapper(UserMapper.class).getUser(); } //\u63d2\u5165 public int insertUser ( User user ) { return getSqlSession (). getMapper ( UserMapper . class ). insertUser ( user ); } //\u5220\u9664 public int delUser ( int id ) { return getSqlSession (). getMapper ( UserMapper . class ). delUser ( id ); } } UserMapper.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <!-- \u7ed1\u5b9a\u63a5\u53e3 --> <mapper namespace= \"mapper.UserMapper\" > <select id= \"getUser\" resultType= \"pojo.User\" > select * from mybatis.mybatis </select> <insert id= \"insertUser\" parameterType= \"pojo.User\" > insert into mybatis.mybatis (id,name,pwd) values (#{id},#{name},#{pwd}) </insert> <delete id= \"delUser\" parameterType= \"_int\" > deleteAAAAA from mybatis.mybatis where id = #{id} <!-- deleteAAAAA\u662f\u6545\u610f\u5199\u9519\u7684 --> </delete> </mapper> resource\u76ee\u5f55\u4e0b\u7684 mybatis-config.xml\u3001spring-dao.xml\u3001applicationContext.xml mybatis-config.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <!-- configuration --> <configuration> <!--\u5f00\u542f\u65e5\u5fd7--> <settings> <setting name= \"logImpl\" value= \"STDOUT_LOGGING\" /> </settings> <!--\u53ef\u4ee5\u7ed9\u5b9e\u4f53\u7c7b\u8d77\u522b\u540d--> <typeAliases> <package name= \"pojo\" /> </typeAliases> </configuration> spring-dao.xml\uff08\u5df2\u5bfc\u5165\u7ea6\u675f\uff09 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xmlns:tx= \"http://www.springframework.org/schema/tx\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd\" > <!--data source --> <bean id= \"datasource\" class= \"org.springframework.jdbc.datasource.DriverManagerDataSource\" > <property name= \"driverClassName\" value= \"com.mysql.cj.jdbc.Driver\" /> <property name= \"url\" value= \"jdbc:mysql://127.0.0.1:3306/mybatis?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=Asia/Shanghai\" /> <property name= \"username\" value= \"root\" /> <property name= \"password\" value= \"root\" /> </bean> <!--sqlSessionFactory--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"datasource\" /> <!--\u7ed1\u5b9a mybatis \u914d\u7f6e\u6587\u4ef6--> <property name= \"configLocation\" value= \"classpath:mybatis-config.xml\" /> <property name= \"mapperLocations\" value= \"classpath:mapper/*.xml\" /> </bean> <!--\u58f0\u660e\u5f0f\u4e8b\u52a1--> <bean id= \"transactionManager\" class= \"org.springframework.jdbc.datasource.DataSourceTransactionManager\" > <constructor-arg ref= \"datasource\" /> </bean> <!--\u7ed3\u5408aop\u5b9e\u73b0\u4e8b\u52a1\u7ec7\u5165--> <!--\u914d\u7f6e\u4e8b\u52a1\u7684\u901a\u77e5\u7c7b--> <tx:advice id= \"txAdvice\" transaction-manager= \"transactionManager\" > <!--\u7ed9\u54ea\u4e9b\u65b9\u6cd5\u914d\u7f6e\u4e8b\u52a1--> <!--\u65b0\u4e1c\u897f\uff1a\u914d\u7f6e\u4e8b\u52a1\u7684\u4f20\u64ad\u7279\u6027 propagation--> <tx:attributes> <tx:method name= \"add\" propagation= \"REQUIRED\" /> <tx:method name= \"delete\" propagation= \"REQUIRED\" /> <tx:method name= \"update\" propagation= \"REQUIRED\" /> <tx:method name= \"query\" read-only= \"true\" /> <!-- *\u53f7\u5305\u542b\u4e0a\u97624\u4e2a\u65b9\u6cd5\uff1a <tx:method name=\"*\" propagation=\"REQUIRED\"/> --> </tx:attributes> </tx:advice> <!--\u914d\u7f6e\u4e8b\u52a1\u5207\u5165--> <aop:config> <aop:pointcut id= \"txpointcut\" expression= \"execution(* mapper.*.*(..))\" /> <aop:advisor advice-ref= \"txAdvice\" pointcut-ref= \"txpointcut\" /> </aop:config> </beans> applicationContext.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd\" > <import resource= \"spring-dao.xml\" /> <bean id= \"userMapper\" class= \"mapper.UserMapperImpl\" > <property name= \"sqlSessionFactory\" ref= \"sqlSessionFactory\" ></property> </bean> </beans> \u6d4b\u8bd5\u7c7b import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import mapper.UserMapper ; import pojo.User ; public class MyTest7 { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"applicationContext.xml\" ); UserMapper userMapper = ( UserMapper ) context . getBean ( \"userMapper\" ); for ( User user : userMapper . getUser ()) { System . out . println ( user ); } } } \u601d\u8003\uff1a \u4e3a\u4ec0\u4e48\u9700\u8981\u4e8b\u52a1\uff1f \u5982\u679c\u4e0d\u914d\u7f6e\u4e8b\u52a1\uff0c\u53ef\u80fd\u5b58\u5728\u6570\u636e\u63d0\u4ea4\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\u4e0b\uff1b \u5982\u679c\u4e0d\u5728spring\u4e2d\u53bb\u914d\u7f6e\u58f0\u660e\u5f0f\u4e8b\u52a1\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5728\u4ee3\u7801\u4e2d\u624b\u52a8\u914d\u7f6e\u4e8b\u52a1\uff01 \u4e8b\u52a1\u5728\u9879\u76ee\u7684\u5f00\u53d1\u4e2d\u975e\u5e38\u91cd\u8981\uff0c\u6d89\u53ca\u5230\u6570\u636e\u7684\u4e00\u81f4\u6027\u548c\u5b8c\u6574\u6027\u95ee\u9898\uff01","title":"Spring"},{"location":"Java/Spring/Spring5/#spring5","text":"","title":"Spring5"},{"location":"Java/Spring/Spring5/#1spring","text":"","title":"1.\u3001Spring"},{"location":"Java/Spring/Spring5/#11","text":"Spring \u2014\u2014> \u6625\u5929\uff0c\u4e3a\u5f00\u6e90\u8f6f\u4ef6\u5e26\u6765\u4e86\u6625\u5929 2002\uff0c\u9996\u6b21\u63a8\u51fa\u4e86Spring\u6846\u67b6\u7684\u96cf\u5f62\uff1ainterface21\u6846\u67b6\uff01 Spring\u6846\u67b6\u4ee5interface21\u6846\u67b6\u4e3a\u57fa\u7840\uff0c\u7ecf\u8fc7\u91cd\u65b0\u8bbe\u8ba1\uff0c\u5e76\u4e0d\u65ad\u4e30\u5bcc\u5176\u5185\u6db5\uff0c\u4e8e2004\u5e743\u670824\u65e5\u53d1\u5e03\u4e861.0\u6b63\u5f0f\u7248 Spring\u7684\u7406\u5ff5\uff1a\u4f7f\u7528\u73b0\u6709\u7684\u6280\u672f\u66f4\u52a0\u5bb9\u6613\u4f7f\u7528\uff0c\u672c\u8eab\u662f\u4e00\u4e2a\u5927\u6742\u70e9\uff0c\u6574\u5408\u4e86\u73b0\u6709\u7684\u6280\u672f\u6846\u67b6\uff01 SSH\uff1aStruct2 + Spring + Hibernate\uff08\u5168\u81ea\u52a8\u6301\u4e45\u5316\u6846\u67b6\uff09\uff01 SSM\uff1aSpringMVC + Spring + MyBatis\uff08\u534a\u81ea\u52a8\u6301\u4e45\u5316\u6846\u67b6\uff0c\u53ef\u81ea\u5b9a\u4e49\u6027\u8d28\u66f4\u5f3a\uff09\uff01 spring\u5b98\u7f51\uff1a https://spring.io/projects/spring-framework#overview \u5b98\u65b9\u4e0b\u8f7d\uff1a https://repo.spring.io/release/org/springframework/spring/ GitHub\uff1a https://github.com/spring-projects/spring-framework Spring Web MVC\uff1a spring-webmvc\u6700\u65b0\u7248 Spring Web MVC\u548cSpring-JDBC\u7684pom\u914d\u7f6e\u6587\u4ef6\uff1a <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-webmvc </artifactId> <version> 5.2.7.RELEASE </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-jdbc </artifactId> <version> 5.2.7.RELEASE </version> </dependency>","title":"1.1\u3001\u7b80\u4ecb"},{"location":"Java/Spring/Spring5/#12","text":"Spring\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u514d\u8d39\u7684\u6846\u67b6\uff08\u5bb9\u5668\uff09\uff01 Spring\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u3001\u975e\u5165\u4fb5\u5f0f\u7684\u6846\u67b6\uff01 \u63a7\u5236\u53cd\u8f6c\uff08IoC\uff09\uff0c\u9762\u5411\u5207\u9762\u7f16\u7a0b\uff08AOP\uff09 \u652f\u6301\u4e8b\u52a1\u7684\u5904\u7406\uff0c\u5bf9\u6846\u67b6\u6574\u5408\u7684\u652f\u6301\uff01\uff08\u51e0\u4e4e\u5e02\u9762\u4e0a\u6240\u6709\u70ed\u95e8\u6846\u67b6\u90fd\u80fd\u6574\u5408\u8fdb\u53bb\uff09\uff01 === \u603b\u7ed3\u4e00\u53e5\u8bdd\uff1aSpring\u5c31\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u63a7\u5236\u53cd\u8f6c\uff08IoC\uff09\u548c\u9762\u5411\u5207\u9762\u7f16\u7a0b\uff08AOP\uff09\u7684\u6846\u67b6\uff01 ===","title":"1.2 \u4f18\u70b9"},{"location":"Java/Spring/Spring5/#13","text":"","title":"1.3 \u7ec4\u6210"},{"location":"Java/Spring/Spring5/#14","text":"\u73b0\u4ee3\u5316\u7684java\u5f00\u53d1 -> \u57fa\u4e8eSpring\u7684\u5f00\u53d1\uff01 Spring Boot \u4e00\u4e2a\u5feb\u901f\u5f00\u53d1\u7684\u811a\u624b\u67b6 \u57fa\u4e8eSpringBoot\u53ef\u4ee5\u5feb\u901f\u5f00\u53d1\u5355\u4e2a\u5fae\u670d\u52a1 \u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e\uff01 Spring Cloud SpringCloud\u662f\u57fa\u4e8eSpringBoot\u5b9e\u73b0\u7684\uff01 \u56e0\u4e3a\u73b0\u5728\u5927\u591a\u6570\u516c\u53f8\u90fd\u5728\u4f7f\u7528SpringBoot\u8fdb\u884c\u5feb\u901f\u5f00\u53d1\uff0c\u5b66\u4e60SpringBoot\u7684\u524d\u63d0\uff0c\u9700\u8981\u5b8c\u5168\u638c\u63e1Spring\u53caSpringMVC\uff01\u627f\u4e0a\u542f\u4e0b\u7684\u4f5c\u7528\uff01","title":"1.4\u3001\u6269\u5c55"},{"location":"Java/Spring/Spring5/#2ioc","text":"\u4f20\u7edf \u7684\u8c03\u7528 UserDao package dao ; public interface UserDao { void getUser (); } UserDaoImp package dao ; public class UserDaoImpl implements UserDao { public void getUser () { System . out . println ( \"\u9ed8\u8ba4\u83b7\u53d6\u7528\u6237\u6570\u636e\" ); } } UserSevice package Service ; public interface UserService { void getUser (); } UserServiceImp package Service ; import dao.UserDao ; import dao.UserDaoImpl ; public class UserServiceImpl implements UserService { UserDao userDao = new UserDaoImpl (); public void getUser (){ userDao . getUser (); } } \u6d4b\u8bd5 package holle0 ; import Service.UserService ; import Service.UserServiceImpl ; public class MyTest0 { public static void main ( String [] args ) { // \u7528\u6237\u5b9e\u9645\u8c03\u7528\u7684\u662f\u4e1a\u52a1\u5c42\uff0cdao\u5c42\u4ed6\u4eec\u4e0d\u9700\u8981\u63a5\u89e6 UserService userService = new UserServiceImpl (); userService . getUser (); } } \u5728\u6211\u4eec\u4e4b\u524d\u7684\u4e1a\u52a1\u4e2d\uff0c\u7528\u6237\u7684\u9700\u6c42\u53ef\u80fd\u4f1a\u5f71\u54cd\u6211\u4eec\u539f\u6765\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u9700\u8981\u6839\u636e\u7528\u6237\u7684\u9700\u6c42\u53bb\u4fee\u6539\u539f\u4ee3\u7801\uff01\u5982\u679c\u7a0b\u5e8f\u4ee3\u7801\u91cf\u5341\u5206\u5927\uff0c\u4fee\u6539\u4e00\u6b21\u7684\u6210\u672c\u4ee3\u4ef7\u5341\u5206\u6602\u8d35\uff01 \u6539\u826f\uff1a \u6211\u4eec\u4f7f\u7528\u4e00\u4e2aSet\u63a5\u53e3\u5b9e\u73b0\u3002\u5df2\u7ecf\u53d1\u751f\u4e86\u9769\u547d\u6027\u7684\u53d8\u5316\uff01 //\u5728Service\u5c42\u7684\u5b9e\u73b0\u7c7b(UserServiceImpl)\u589e\u52a0\u4e00\u4e2aSet()\u65b9\u6cd5 //\u5229\u7528set\u52a8\u6001\u5b9e\u73b0\u503c\u7684\u6ce8\u5165\uff01 //DAO\u5c42\u5e76\u4e0d\u5199\u6b7b\u56fa\u5b9a\u8c03\u7528\u54ea\u4e00\u4e2aUserDao\u7684\u5b9e\u73b0\u7c7b //\u800c\u662f\u901a\u8fc7Service\u5c42\u8c03\u7528\u65b9\u6cd5\u8bbe\u7f6e\u5b9e\u73b0\u7c7b\uff01 private UserDao userDao ; public void setUserDao ( UserDao userDao ){ this . userDao = userDao ; } set() \u65b9\u6cd5\u5b9e\u9645\u4e0a\u662f\u52a8\u6001\u6539\u53d8\u4e86 UserDao userDao \u7684 \u521d\u59cb\u5316\u90e8\u5206\uff08 new UserDaoImpl() \uff09 \u6d4b\u8bd5\u4e2d\u52a0\u4e0a (( UserServiceImpl ) userService ). setUserDao ( new UserDaoImpl ()); \u4e4b\u524d\uff0c\u7a0b\u5e8f\u662f\u4e3b\u52a8\u521b\u5efa\u5bf9\u8c61\uff01 \u63a7\u5236\u6743\u5728\u7a0b\u5e8f\u733f\u624b\u4e0a \uff01 \u4f7f\u7528\u4e86set\u6ce8\u5165\u540e\uff0c\u7a0b\u5e8f\u4e0d\u518d\u5177\u6709\u4e3b\u52a8\u6027\uff0c\u800c\u662f\u53d8\u6210\u4e86\u88ab\u52a8\u7684\u63a5\u53d7\u5bf9\u8c61\uff01\uff08 \u4e3b\u52a8\u6743\u5728\u5ba2\u6237\u624b\u4e0a \uff09 \u672c\u8d28\u4e0a\u89e3\u51b3\u4e86\u95ee\u9898\uff0c\u7a0b\u5e8f\u5458\u4e0d\u7528\u518d\u53bb\u7ba1\u7406\u5bf9\u8c61\u7684\u521b\u5efa \u7cfb\u7edf\u7684\u8026\u5408\u6027\u5927\u5927\u964d\u4f4e\uff0c\u53ef\u4ee5\u66f4\u4e13\u6ce8\u5728\u4e1a\u52a1\u7684\u5b9e\u73b0\u4e0a \u8fd9\u662fIoC\uff08\u63a7\u5236\u53cd\u8f6c\uff09\u7684\u539f\u578b\uff0c\u53cd\u8f6c(\u7406\u89e3)\uff1a\u4e3b\u52a8\u6743\u4ea4\u7ed9\u4e86\u7528\u6237","title":"2\u3001IoC\uff08\u63a7\u5236\u53cd\u8f6c\uff09\u7406\u8bba\u63a8\u5bfc"},{"location":"Java/Spring/Spring5/#ioc","text":"","title":"IoC\u672c\u8d28"},{"location":"Java/Spring/Spring5/#3hollespring","text":"\u5728\u7236\u6a21\u5757\u4e2d\u5bfc\u5165jar\u5305 <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-webmvc </artifactId> <version> 5.2.7.RELEASE </version> </dependency> pojo\u7684Hello.java package pojo ; public class Hello { private String str ; public String getStr () { return str ; } public void setStr ( String str ) { this . str = str ; } @Override public String toString () { return \"Holle [str=\" + str + \"]\" ; } } \u5728resource\u91cc\u9762\u7684xml\u914d\u7f6e <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd\" > <!--\u5728Spring\u4e2d\u521b\u5efa\u5bf9\u8c61\uff0c\u5728Spring\u8fd9\u4e9b\u90fd\u79f0\u4e3abean \u7c7b\u578b \u53d8\u91cf\u540d = new \u7c7b\u578b(); Holle holle = new Holle(); bean = \u5bf9\u8c61(holle) id = \u53d8\u91cf\u540d(holle) class = new\u7684\u5bf9\u8c61(new Holle();) property \u76f8\u5f53\u4e8e\u7ed9\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\u8bbe\u503c,\u8ba9str=\"Spring\" --> <bean id= \"hello\" class= \"pojo.Hello\" > <property name= \"str\" value= \"Spring\" /> </bean> </beans> \u6d4b\u8bd5\u7c7bMyTest package holle1 ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import pojo.Hello ; public class MyTest { public static void main ( String [] args ) { //\u83b7\u53d6Spring\u7684\u4e0a\u4e0b\u6587\u5bf9\u8c61 ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); //\u6211\u4eec\u7684\u5bf9\u8c61\u4e0b\u80fd\u5728\u90fd\u5728spring\u00b7\u4e2d\u7ba1\u7406\u4e86\uff0c\u6211\u4eec\u8981\u4f7f\u7528\uff0c\u76f4\u63a5\u53d6\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86 Hello holle = ( Hello ) context . getBean ( \"hello\" ); System . out . println ( holle . toString ()); } } \u6838\u5fc3\u7528set\u6ce8\u5165\uff0c\u6240\u4ee5\u5fc5\u987b\u8981\u6709\u4e0b\u9762\u7684se()\u65b9\u6cd5 //Hello\u7c7b public void setStr ( String str ) { this . str = str ; } \u601d\u8003\uff1a IoC\uff1a\u5bf9\u8c61\u7531Spring \u6765\u521b\u5efa\uff0c\u7ba1\u7406\uff0c\u88c5\u914d\uff01 \u5f39\u5e55\u8bc4\u8bba\u91cc\u9762\u7684\u7406\u89e3\uff1a \u539f\u6765\u8fd9\u5957\u7a0b\u5e8f\u662f\uff1a\u4f60\u5199\u597d\u83dc\u5355\u4e70\u597d\u83dc\uff0c\u5ba2\u4eba\u6765\u4e86\u81ea\u5df1\u628a\u83dc\u7092\u597d\u62db\u5f85\uff0c\u5c31\u76f8\u5f53\u4e8e\u4f60\u8bf7\u4eba\u5403\u996d \u73b0\u5728\u8fd9\u5957\u7a0b\u5e8f\u662f\uff1a\u4f60\u544a\u8bc9\u697c\u4e0b\u9910\u5385\uff0c\u4f60\u8981\u54ea\u4e9b\u83dc\uff0c\u5ba2\u4eba\u6765\u7684\u65f6\u5019\uff0c\u9910\u5385\u628a\u505a\u597d\u7684\u4f60\u9700\u8981\u7684\u83dc\u9001\u4e0a\u6765 IoC\uff1a\u7092\u83dc\u8fd9\u4ef6\u4e8b\uff0c\u4e0d\u518d\u7531\u4f60\u81ea\u5df1\u6765\u505a\uff0c\u800c\u662f\u59d4\u6258\u7ed9\u4e86\u7b2c\u4e09\u65b9__\u9910\u5385\u6765\u505a \u6b64\u65f6\u7684\u533a\u522b\u5c31\u662f\uff0c\u5982\u679c\u6211\u8fd8\u9700\u8981\u505a\u5176\u4ed6\u7684\u83dc\uff0c\u6211\u4e0d\u9700\u8981\u81ea\u5df1\u641e\u83dc\u8c31\u4e70\u6750\u6599\u518d\u505a\u597d\uff0c\u800c\u662f\u544a\u8bc9\u9910\u5385\uff0c\u6211\u8981\u4ec0\u4e48\u83dc\uff0c\u4ec0\u4e48\u65f6\u5019\u8981\uff0c\u4f60\u505a\u597d\u9001\u6765 . \u5728\u524d\u9762\u7b2c\u4e00\u4e2amodule\u8bd5\u8bd5\u5f15\u5165Spring <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"userDaomSql\" class= \"dao.UserDaoMysqlImpl\" ></bean> <bean id= \"userServiceImpl\" class= \"service.UserServiceImp\" > <!--ref\u5f15\u7528spring\u4e2d\u5df2\u7ecf\u521b\u5efa\u5f88\u597d\u7684\u5bf9\u8c61--> <!--value\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u503c,\u57fa\u672c\u6570\u636e\u7c7b\u578b--> <property name= \"userDao\" ref= \"userDaomSql\" /> </bean> </beans> \u7b2c\u4e00\u4e2amodule\u6539\u826f\u540e\u6d4b\u8bd5 package holle0 ; import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import service.UserServiceImpl ; public class MyTest0 { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); UserServiceImpl userServiceImpl = ( UserServiceImpl ) context . getBean ( \"userServiceImpl\" ); userServiceImpl . getUser (); } } \u603b\u7ed3\uff1a \u6240\u6709\u7684\u7c7b\u90fd\u8981\u88c5\u914d\u7684beans.xml \u91cc\u9762\uff1b \u6240\u6709\u7684bean \u90fd\u8981\u901a\u8fc7\u5bb9\u5668\u53bb\u53d6\uff1b \u5bb9\u5668\u91cc\u9762\u53d6\u5f97\u7684bean\uff0c\u62ff\u51fa\u6765\u5c31\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u7528\u5bf9\u8c61\u8c03\u7528\u65b9\u6cd5\u5373\u53ef\uff1b","title":"3\u3001HolleSpring"},{"location":"Java/Spring/Spring5/#4ioc","text":"\u4f7f\u7528\u65e0\u53c2\u6784\u9020\u521b\u5efa\u5bf9\u8c61\uff0c\u9ed8\u8ba4\u3002 \u4f7f\u7528\u6709\u53c2\u6784\u9020\uff08\u5982\u4e0b\uff09 \u4e0b\u6807\u8d4b\u503c index\u6307\u7684\u662f\u6709\u53c2\u6784\u9020\u4e2d\u53c2\u6570\u7684\u4e0b\u6807\uff0c\u4e0b\u6807\u4ece0\u5f00\u59cb; <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"user\" class= \"pojo.User\" > <constructor-arg index= \"0\" value= \"chen\" /> </bean> </beans> \u7c7b\u578b\u8d4b\u503c\uff08\u4e0d\u5efa\u8bae\u4f7f\u7528\uff09 <bean id= \"user\" class= \"pojo.User\" > <constructor-arg type= \"java.lang.String\" value= \"kuang\" /> </bean> \u76f4\u63a5\u901a\u8fc7\u53c2\u6570\u540d\uff08\u638c\u63e1\uff09 <bean id= \"user\" class= \"pojo.User\" > <constructor-arg name= \"name\" value= \"kuang\" ></constructor-arg> </bean> <!-- \u6bd4\u5982\u53c2\u6570\u540d\u662fname\uff0c\u5219\u6709name=\"\u5177\u4f53\u503c\" --> \u6ce8\u518cbean\u4e4b\u540e\u5c31\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u4e86\uff08 \u7c7b\u4f3c new \u7c7b\u540d() \uff09 \u5f39\u5e55\u8bc4\u8bba\uff1a name\u65b9\u5f0f\u8fd8\u9700\u8981\u65e0\u53c2\u6784\u9020\u548cset\u65b9\u6cd5,index\u548ctype\u53ea\u9700\u8981\u6709\u53c2\u6784\u9020 \u5c31\u7b97\u662fnew \u4e24\u4e2a\u5bf9\u8c61\uff0c\u4e5f\u662f\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff08 \u5355\u4f8b\u6a21\u5f0f\uff1a\u5168\u5c40\u552f\u4e00 \uff09 User user = ( User ) context . getBean ( \"user\" ); User user2 = ( User ) context . getBean ( \"user\" ); system . out . println ( user == user2 ) //\u7ed3\u679c\u4e3atrue \u603b\u7ed3\uff1a\u5728\u914d\u7f6e\u6587\u4ef6\u52a0\u8f7d\u7684\u65f6\u5019\uff0c\u5bb9\u5668(< bean>)\u4e2d\u7ba1\u7406\u7684\u5bf9\u8c61\u5c31\u5df2\u7ecf\u521d\u59cb\u5316\u4e86","title":"4\u3001IoC\u521b\u5efa\u5bf9\u8c61\u7684\u65b9\u5f0f"},{"location":"Java/Spring/Spring5/#5spring","text":"","title":"5\u3001Spring\u914d\u7f6e"},{"location":"Java/Spring/Spring5/#51","text":"<bean id= \"user\" class= \"pojo.User\" > <constructor-arg name= \"name\" value= \"chen\" ></constructor-arg> </bean> <alias name= \"user\" alias= \"userLove\" /> <!-- \u4f7f\u7528\u65f6 User user2 = (User) context.getBean(\"userLove\"); -->","title":"5.1\u3001\u522b\u540d"},{"location":"Java/Spring/Spring5/#52bean","text":"<!--id\uff1abean\u7684\u552f\u4e00\u6807\u8bc6\u7b26\uff0c\u4e5f\u5c31\u662f\u76f8\u5f53\u4e8e\u6211\u4eec\u5b66\u7684\u5bf9\u8c61\u540d class\uff1abean\u5bf9\u8c61\u6240\u5bf9\u5e94\u7684\u4f1a\u9650\u5b9a\u540d\uff1a\u5305\u540d+\u7c7b\u578b name\uff1a\u4e5f\u662f\u522b\u540d\uff0c\u800c\u4e14name\u53ef\u4ee5\u540c\u65f6\u53d6\u591a\u4e2a\u522b\u540d --> <bean id= \"user\" class= \"pojo.User\" name= \"u1 u2,u3;u4\" > <property name= \"name\" value= \"chen\" /> </bean> <!-- \u4f7f\u7528\u65f6 User user2 = (User) context.getBean(\"u1\"); -->","title":"5.2\u3001Bean\u7684\u914d\u7f6e"},{"location":"Java/Spring/Spring5/#53import","text":"import\u4e00\u822c\u7528\u4e8e\u56e2\u961f\u5f00\u53d1\u4f7f\u7528\uff0c\u5b83\u53ef\u4ee5\u5c06\u591a\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u5bfc\u5165\u5408\u5e76\u4e3a\u4e00\u4e2a \u5047\u8bbe\uff0c\u73b0\u5728\u9879\u76ee\u4e2d\u6709\u591a\u4e2a\u4eba\u5f00\u53d1\uff0c\u8fd9\u4e09\u4e2a\u4eba\u590d\u5236\u4e0d\u540c\u7684\u7c7b\u5f00\u53d1\uff0c\u4e0d\u540c\u7684\u7c7b\u9700\u8981\u6ce8\u518c\u5728\u4e0d\u540c\u7684bean\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5229 \u7528import\u5c06\u6240\u6709\u4eba\u7684beans.xml\u5408\u5e76\u4e3a\u4e00\u4e2a\u603b\u7684\uff01 \u5f20\u4e09(beans.xm1) \u674e\u56db(beans2.xm1) \u738b\u4e94(beans3.xm1) applicationContext.xml <import resource= \"beans.xm1\" /> <import resource= \"beans2.xml\" /> <import resource= \"beans3.xm1\" /> \u4f7f\u7528\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u4f7f\u7528\u603b\u7684\u914d\u7f6e\u5c31\u53ef\u4ee5\u4e86 \u5f39\u5e55\u8bc4\u8bba\uff1a \u6309\u7167\u5728\u603b\u7684xml\u4e2d\u7684\u5bfc\u5165\u987a\u5e8f\u6765\u8fdb\u884c\u521b\u5efa\uff0c\u540e\u5bfc\u5165\u7684\u4f1a\u91cd\u5199\u5148\u5bfc\u5165\u7684\uff0c\u6700\u7ec8\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\u4f1a\u662f\u540e\u5bfc\u5165xml\u4e2d\u7684\u90a3\u4e2a","title":"5.3\u3001import"},{"location":"Java/Spring/Spring5/#6di","text":"","title":"6\u3001\u4f9d\u8d56\u6ce8\u5165\uff08DI\uff09"},{"location":"Java/Spring/Spring5/#61","text":"\u7b2c4\u70b9\u6709\u63d0\u5230","title":"6.1\u3001\u6784\u9020\u5668\u6ce8\u5165"},{"location":"Java/Spring/Spring5/#62set","text":"\u4f9d\u8d56\u6ce8\u5165\uff1aset\u6ce8\u5165\uff01 \u4f9d\u8d56\uff1abean\u5bf9\u8c61\u7684\u521b\u5efa\u4f9d\u8d56\u4e8e\u5bb9\u5668 \u6ce8\u5165\uff1abean\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u5c5e\u6027\uff0c\u7531\u5bb9\u5668\u6765\u6ce8\u5165 \u3010\u73af\u5883\u642d\u5efa\u3011 \u590d\u6742\u7c7b\u578b Address\u7c7b \u771f\u5b9e\u6d4b\u8bd5\u5bf9\u8c61 Student\u7c7b beans.xml \u6d4b\u8bd5 MyTest3 Student\u7c7b package pojo ; import java.util.* ; @Get @Set public class Student { //\u522b\u5fd8\u4e86\u5199get\u548cset\u65b9\u6cd5\uff08\u7528lombok\u6ce8\u89e3\u4e5f\u884c\uff09 private String name ; private Address address ; private String [] books ; private List < String > hobbies ; private Map < String , String > card ; private Set < String > game ; private Properties infor ; private String wife ; @Override public String toString () { return \"Student{\" + \"\\n\" + \"name='\" + name + '\\'' + \"\\n\" + \", address=\" + address . toString () + \"\\n\" + \", books=\" + Arrays . toString ( books ) + \"\\n\" + \", hobbies=\" + hobbies + \"\\n\" + \", card=\" + card + \"\\n\" + \", game=\" + game + \"\\n\" + \", infor=\" + infor + \"\\n\" + \", wife='\" + wife + '\\'' + \"\\n\" + '}' ; } } Address\u7c7b package pojo ; public class Address { private String address ; public String getAddress () { return address ; } public void setAddress ( String address ) { this . address = address ; } @Override public String toString () { return \"Address{\" + \"address='\" + address + '\\'' + '}' ; } } beans.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"address\" class= \"pojo.Address\" > <property name= \"address\" value= \"address\u4f60\u597d\" /> </bean> <bean id= \"student\" class= \"pojo.Student\" > <!--\u7b2c\u4e00\u79cd\uff0c\u666e\u901a\u503c\u6ce8\u5165 --> <property name= \"name\" value= \"name\u4f60\u597d\" /> <!--\u7b2c\u4e8c\u79cd\uff0cref\u6ce8\u5165 --> <property name= \"address\" ref= \"address\" /> <!--\u6570\u7ec4\u6ce8\u5165 --> <property name= \"books\" > <array> <value> \u4e09\u56fd </value> <value> \u897f\u6e38 </value> <value> \u6c34\u6d52 </value> </array> </property> <!--list\u5217\u8868\u6ce8\u5165 --> <property name= \"hobbies\" > <list> <value> \u5531 </value> <value> \u8df3 </value> <value> rap </value> <value> \u7bee\u7403 </value> </list> </property> <!--map\u952e\u503c\u5bf9\u6ce8\u5165 --> <property name= \"card\" > <map> <entry key= \"username\" value= \"root\" /> <entry key= \"password\" value= \"root\" /> </map> </property> <!--set(\u53ef\u53bb\u91cd)\u6ce8\u5165 --> <property name= \"game\" > <set> <value> wangzhe </value> <value> lol </value> <value> galname </value> </set> </property> <!--\u7a7a\u6307\u9488null\u6ce8\u5165 --> <property name= \"wife\" > <null></null> </property> <!--properties\u5e38\u91cf\u6ce8\u5165 --> <property name= \"infor\" > <props> <prop key= \"id\" > 20200802 </prop> <prop key= \"name\" > cbh </prop> </props> </property> </bean> </beans> MyTest3 import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import pojo.Student ; public class MyTest3 { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); Student stu = ( Student ) context . getBean ( \"student\" ); System . out . println ( stu . toString ()); } }","title":"6.2\u3001set\u65b9\u5f0f\u6ce8\u5165\u3010\u91cd\u70b9\u3011"},{"location":"Java/Spring/Spring5/#63","text":"\u5b98\u65b9\u6587\u6863\u4f4d\u7f6e pojo\u589e\u52a0User\u7c7b package pojo ; public class User { private String name ; private int id ; public User () { } public User ( String name , int id ) { super (); this . name = name ; this . id = id ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getId () { return id ; } public void setId ( int id ) { this . id = id ; } @Override public String toString () { return \"User [name=\" + name + \", id=\" + id + \"]\" ; } } \u6ce8\u610f\uff1a beans \u91cc\u9762\u52a0\u4e0a\u8fd9\u4e0b\u9762\u4e24\u884c \u4f7f\u7528p\u548cc\u547d\u540d\u7a7a\u95f4\u9700\u8981\u5bfc\u5165xml\u7ea6\u675f xmlns:p=\u201chttp://www.springframework.org/schema/p\u201d xmlns:c=\u201chttp://www.springframework.org/schema/c\u201d ?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p= \"http://www.springframework.org/schema/p\" xmlns:c= \"http://www.springframework.org/schema/c\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd\" > <!--p\u547d\u540d\u7a7a\u95f4\u6ce8\u5165/set\u6ce8\u5165\uff0c\u53ef\u4ee5\u76f4\u63a5\u6ce8\u5165\u5c5e\u6027\u7684\u503c-\u300bproperty--> <bean id= \"user\" class= \"pojo.User\" p:name= \"cxk\" p:id= \"20\" > </bean> <!--c\u547d\u540d\u7a7a\u95f4\uff0c\u901a\u8fc7\u6784\u9020\u5668\u6ce8\u5165\uff0c\u9700\u8981\u5199\u5165\u6709\u53c2\u548c\u65e0\u53c2\u6784\u9020\u65b9\u6cd5-\u300bconstruct-args--> <bean id= \"user2\" class= \"pojo.User\" c:name= \"cbh\" c:id= \"22\" ></bean> </beans> \u6d4b\u8bd5 ApplicationContext context = new ClassPathXmlApplicationContext ( \"beans.xml\" ); User user = context . getBean ( \"user\" , User . class ); //\u786e\u5b9aclass\u5bf9\u8c61\uff0c\u5c31\u4e0d\u7528\u518d\u5f3a\u8f6c\u4e86 System . out . println ( user . toString ());","title":"6.3\u3001\u62d3\u5c55\u6ce8\u5165"},{"location":"Java/Spring/Spring5/#64bean","text":"\u5355\u4f8b\u6a21\u5f0f\uff08\u9ed8\u8ba4\uff09 <bean id= \"user2\" class= \"pojo.User\" c:name= \"cxk\" c:age= \"19\" scope= \"singleton\" ></bean> 1 \u5f39\u5e55\u8bc4\u8bba\uff1a\u5355\u4f8b\u6a21\u5f0f\u662f\u628a\u5bf9\u8c61\u653e\u5728pool\u4e2d\uff0c\u9700\u8981\u518d\u53d6\u51fa\u6765\uff0c\u4f7f\u7528\u7684\u90fd\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u5b9e\u4f8b \u539f\u578b\u6a21\u5f0f: \u6bcf\u6b21\u4ece\u5bb9\u5668\u4e2dget\u7684\u65f6\u5019\uff0c\u90fd\u4ea7\u751f\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff01 <bean id= \"user2\" class= \"pojo.User\" c:name= \"cxk\" c:age= \"19\" scope= \"prototype\" ></bean> 1 \u5176\u4f59\u7684request\u3001session\u3001application\u8fd9\u4e9b\u53ea\u80fd\u5728web\u5f00\u653e\u4e2d\u4f7f\u7528\uff01","title":"6.4\u3001Bean\u4f5c\u7528\u57df"},{"location":"Java/Spring/Spring5/#7bean","text":"\u81ea\u52a8\u88c5\u914d\u662fSpring\u6ee1\u8db3bean\u4f9d\u8d56\u7684\u4e00\u79cd\u65b9\u5f0f Spring\u4f1a\u5728\u4e0a\u4e0b\u6587\u81ea\u52a8\u5bfb\u627e\uff0c\u5e76\u81ea\u52a8\u7ed9bean\u88c5\u914d\u5c5e\u6027 \u5728Spring\u4e2d\u6709\u4e09\u79cd\u88c5\u914d\u7684\u65b9\u5f0f \u5728xml\u4e2d\u663e\u793a\u914d\u7f6e \u5728java\u4e2d\u663e\u793a\u914d\u7f6e \u9690\u5f0f\u7684\u81ea\u52a8\u88c5\u914dbean \u3010\u91cd\u8981\u3011 \u73af\u5883\u642d\u5efa\uff1a\u4e00\u4e2a\u4eba\u6709\u4e24\u4e2a\u5ba0\u7269 byType\u81ea\u52a8\u88c5\u914d\uff1abyType\u4f1a\u81ea\u52a8\u67e5\u627e\uff0c\u548c\u81ea\u5df1\u5bf9\u8c61set\u65b9\u6cd5\u53c2\u6570\u7684\u7c7b\u578b\u76f8\u540c\u7684bean \u4fdd\u8bc1\u6240\u6709\u7684class\u552f\u4e00(\u7c7b\u4e3a\u5168\u5c40\u552f\u4e00) byName\u81ea\u52a8\u88c5\u914d\uff1abyName\u4f1a\u81ea\u52a8\u67e5\u627e\uff0c\u548c\u81ea\u5df1\u5bf9\u8c61set\u5bf9\u5e94\u7684\u503c\u5bf9\u5e94\u7684id \u4fdd\u8bc1\u6240\u6709id\u552f\u4e00\uff0c\u5e76\u4e14\u548cset\u6ce8\u5165\u7684\u503c\u4e00\u81f4 <!-- \u627e\u4e0d\u5230id\u548c\u591a\u4e2a\u76f8\u540cclass --> <bean id= \"cat1\" class= \"pojo.Cat\" /> <bean id= \"cat2\" class= \"pojo.Cat\" /> <!-- \u627e\u4e0d\u5230 id=cat\uff0c\u4e14\u6709\u4e24\u4e2aCat -->","title":"7\u3001Bean\u7684\u81ea\u52a8\u88c5\u914d"},{"location":"Java/Spring/Spring5/#71","text":"pojo\u7684Cat\u7c7b public class Cat { public void shut (){ System . out . println ( \"miao\" ); } } pojo\u7684Dog\u7c7b public class Dog { public void shut (){ System . out . println ( \"wow\" ); } } pojo\u7684People\u7c7b package pojo ; public class People { private Cat cat ; private Dog dog ; private String name ; public Cat getCat () { return cat ; } public void setCat ( Cat cat ) { this . cat = cat ; } public Dog getDog () { return dog ; } public void setDog ( Dog dog ) { this . dog = dog ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } @Override public String toString () { return \"People{\" + \"cat=\" + cat + \", dog=\" + dog + \", name='\" + name + '\\'' + '}' ; } } xml\u914d\u7f6e -> byType \u81ea\u52a8\u88c5\u914d <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"cat\" class= \"pojo.Cat\" /> <bean id= \"dog\" class= \"pojo.Dog\" /> <!--byType\u4f1a\u5728\u5bb9\u5668\u81ea\u52a8\u67e5\u627e\uff0c\u548c\u81ea\u5df1\u5bf9\u8c61\u5c5e\u6027\u76f8\u540c\u7684bean \u4f8b\u5982\uff0cDog dog; \u90a3\u4e48\u5c31\u4f1a\u67e5\u627epojo\u7684Dog\u7c7b\uff0c\u518d\u8fdb\u884c\u81ea\u52a8\u88c5\u914d --> <bean id= \"people\" class= \"pojo.People\" autowire= \"byType\" > <property name= \"name\" value= \"cbh\" ></property> </bean> </beans> xml\u914d\u7f6e -> byName \u81ea\u52a8\u88c5\u914d <bean id= \"cat\" class= \"pojo.Cat\" /> <bean id= \"dog\" class= \"pojo.Dog\" /> <!--byname\u4f1a\u5728\u5bb9\u5668\u81ea\u52a8\u67e5\u627e\uff0c\u548c\u81ea\u5df1\u5bf9\u8c61set\u65b9\u6cd5\u7684set\u540e\u9762\u7684\u503c\u5bf9\u5e94\u7684id \u4f8b\u5982:setDog()\uff0c\u53d6set\u540e\u9762\u7684\u5b57\u7b26\u4f5c\u4e3aid\uff0c\u5219\u8981id = dog \u624d\u53ef\u4ee5\u8fdb\u884c\u81ea\u52a8\u88c5\u914d --> <bean id= \"people\" class= \"pojo.People\" autowire= \"byName\" > <property name= \"name\" value= \"cbh\" ></property> </bean> \u5f39\u5e55\u8bc4\u8bba\uff1abyName\u53ea\u80fd\u53d6\u5230\u5c0f\u5199\uff0c\u5927\u5199\u53d6\u4e0d\u5230","title":"7.1\u6d4b\u8bd5\uff1a\u81ea\u52a8\u88c5\u914d"},{"location":"Java/Spring/Spring5/#72","text":"jdk1.5\u652f\u6301\u7684\u6ce8\u89e3\uff0cspring2.5\u652f\u6301\u7684\u6ce8\u89e3 The introduction of annotation-based configuration raised the question of whether this approach is \u201cbetter\u201d than XML.\uff08\u7ffb\u8bd1\uff1a\u57fa\u4e8e\u6ce8\u91ca\u7684\u914d\u7f6e\u7684\u5f15\u5165\u63d0\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5373\u8fd9\u79cd\u65b9\u6cd5\u662f\u5426\u6bd4XML\u201c\u66f4\u597d\u201d\uff09 \u5bfc\u5165context\u7ea6\u675f xmlns:context=\"http://www.springframework.org/schema/context\" \u914d\u7f6e\u6ce8\u89e3\u7684\u652f\u6301\uff1a< context:annotation-config/> <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd\" > <context:annotation-config/> </beans>","title":"7.2\u3001\u4f7f\u7528\u6ce8\u89e3\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d"},{"location":"Java/Spring/Spring5/#721autowired","text":"\u9ed8\u8ba4\u662fbyType\u65b9\u5f0f\uff0c\u5982\u679c\u5339\u914d\u4e0d\u4e0a\uff0c\u5c31\u4f1abyName \u5728\u5c5e\u6027\u4e0a\u4e2a\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u5728set\u4e0a\u4f7f\u7528 \u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u7f16\u5199set\u65b9\u6cd5\u4e86\uff0c\u524d\u63d0\u662f\u81ea\u52a8\u88c5\u914d\u7684\u5c5e\u6027\u5728Spring\u5bb9\u5668\u91cc\uff0c\u4e14\u8981\u7b26\u5408ByName \u81ea\u52a8\u88c5\u914d public class People { @Autowired private Cat cat ; @Autowired private Dog dog ; private String name ; } @Nullable \u5b57\u6bb5\u6807\u8bb0\u4e86\u8fd9\u4e2a\u6ce8\u89e3\uff0c\u8bf4\u660e\u8be5\u5b57\u6bb5\u53ef\u4ee5\u4e3a\u7a7a public name(@Nullable String name){ } //\u6e90\u7801 public @interface Autowired { boolean required () default true ; } \u5982\u679c\u5b9a\u4e49\u4e86Autowire\u7684require\u5c5e\u6027\u4e3afalse\uff0c\u8bf4\u660e\u8fd9\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u4e3anull\uff0c\u5426\u5219\u4e0d\u5141\u8bb8\u4e3a\u7a7a\uff08false\u8868\u793a\u627e\u4e0d\u5230\u88c5\u914d\uff0c\u4e0d\u629b\u51fa\u5f02\u5e38\uff09","title":"7.2.1\u3001@Autowired"},{"location":"Java/Spring/Spring5/#722autowiredqualifier","text":"@Autowired\u4e0d\u80fd\u552f\u4e00\u88c5\u914d\u65f6\uff0c\u9700\u8981@Autowired+@Qualifier \u5982\u679c@Autowired\u81ea\u52a8\u88c5\u914d\u73af\u5883\u6bd4\u8f83\u590d\u6742\u3002\u81ea\u52a8\u88c5\u914d\u65e0\u6cd5\u901a\u8fc7\u4e00\u4e2a\u6ce8\u89e3\u5b8c\u6210\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f7f\u7528@Qualifier(value = \u201cdog\u201d)\u53bb\u914d\u5408\u4f7f\u7528\uff0c\u6307\u5b9a\u4e00\u4e2a\u552f\u4e00\u7684id\u5bf9\u8c61 public class People { @Autowired private Cat cat ; @Autowired @Qualifier ( value = \"dog\" ) private Dog dog ; private String name ; } \u5f39\u5e55\u8bc4\u8bba\uff1a \u5982\u679cxml\u6587\u4ef6\u4e2d\u540c\u4e00\u4e2a\u5bf9\u8c61\u88ab\u591a\u4e2abean\u4f7f\u7528\uff0cAutowired\u65e0\u6cd5\u6309\u7c7b\u578b\u627e\u5230\uff0c\u53ef\u4ee5\u7528@Qualifier\u6307\u5b9aid\u67e5\u627e","title":"7.2.2\u3001@Autowired+@Qualifier"},{"location":"Java/Spring/Spring5/#723resource","text":"\u9ed8\u8ba4\u662fbyName\u65b9\u5f0f\uff0c\u5982\u679c\u5339\u914d\u4e0d\u4e0a\uff0c\u5c31\u4f1abyType public class People { Resource ( name = \"cat\" ) private Cat cat ; Resource ( name = \"dog\" ) private Dog dog ; private String name ; } \u5f39\u5e55\u8bc4\u8bba\uff1a Autowired\u662fbyType\uff0c@Autowired+@Qualifier = byType || byName Autowired\u662f\u5148byteType,\u5982\u679c\u552f\u4e00\u5247\u6ce8\u5165\uff0c\u5426\u5219byName\u67e5\u627e\u3002resource\u662f\u5148byname,\u4e0d\u7b26\u5408\u518d\u7ee7\u7eedbyType","title":"7.2.3\u3001@Resource"},{"location":"Java/Spring/Spring5/#_1","text":"@Resource\u548c@Autowired\u7684\u533a\u522b\uff1a \u90fd\u662f\u7528\u6765\u81ea\u52a8\u88c5\u914d\u7684\uff0c\u90fd\u53ef\u4ee5\u653e\u5728\u5c5e\u6027\u5b57\u6bb5\u4e0a @Autowired\u901a\u8fc7byType\u7684\u65b9\u5f0f\u5b9e\u73b0\uff0c\u800c\u4e14\u5fc5\u987b\u8981\u6c42\u8fd9\u4e2a\u5bf9\u8c61\u5b58\u5728\uff01\u3010\u5e38\u7528\u3011 @Resource\u9ed8\u8ba4\u901a\u8fc7byname\u7684\u65b9\u5f0f\u5b9e\u73b0\uff0c\u5982\u679c\u627e\u4e0d\u5230\u540d\u5b57\uff0c\u5219\u901a\u8fc7byType\u5b9e\u73b0\uff01\u5982\u679c\u4e24\u4e2a\u90fd\u627e\u4e0d\u5230\u7684\u60c5\u51b5\u4e0b\uff0c\u5c31\u62a5\u9519\uff01\u3010\u5e38\u7528\u3011 \u6267\u884c\u987a\u5e8f\u4e0d\u540c\uff1a@Autowired\u901a\u8fc7byType\u7684\u65b9\u5f0f\u5b9e\u73b0\u3002@Resource\u9ed8\u8ba4\u901a\u8fc7byname\u7684\u65b9\u5f0f\u5b9e\u73b0","title":"\u533a\u522b\uff1a"},{"location":"Java/Spring/Spring5/#8","text":"\u5728spring4\u4e4b\u540e\uff0c\u4f7f\u7528\u6ce8\u89e3\u5f00\u53d1\uff0c\u5fc5\u987b\u8981\u4fdd\u8bc1aop\u5305\u7684\u5bfc\u5165 \u4f7f\u7528\u6ce8\u89e3\u9700\u8981\u5bfc\u5165contex\u7684\u7ea6\u675f <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context= \"http://www.springframework.org/schema/context\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd\" > <context:annotation-config/> </beans>","title":"8\u3001\u4f7f\u7528\u6ce8\u89e3\u5f00\u53d1"},{"location":"Java/Spring/Spring5/#81bean","text":"\u5f39\u5e55\u8bc4\u8bba\uff1a \u6709\u4e86< context:component-scan>\uff0c\u53e6\u4e00\u4e2a< context:annotation-config/>\u6807\u7b7e\u53ef\u4ee5\u79fb\u9664\u6389\uff0c\u56e0\u4e3a\u5df2\u7ecf\u88ab\u5305\u542b\u8fdb\u53bb\u4e86\u3002 <!--\u6307\u5b9a\u8981\u626b\u63cf\u7684\u5305\uff0c\u8fd9\u4e2a\u5305\u4e0b\u9762\u7684\u6ce8\u89e3\u624d\u4f1a\u751f\u6548 \u522b\u53ea\u626b\u4e00\u4e2acom.kuang.pojo\u5305--> <context:component-scan base-package= \"com.kuang\" /> <context:annotation-config/> //@Component \u7ec4\u4ef6 //\u7b49\u4ef7\u4e8e<bean id=\"user\" classs\"pojo.User\"/> @Component public class User { public String name = \"\u79e6\u7586\" ; }","title":"8.1\u3001bean"},{"location":"Java/Spring/Spring5/#82value","text":"@Component public class User { //\u76f8\u5f53\u4e8e<property name=\"name\" value=\"kuangshen\"/> @value ( \"kuangshen\" ) public String name ; //\u4e5f\u53ef\u4ee5\u653e\u5728set\u65b9\u6cd5\u4e0a\u9762 //@value(\"kuangshen\") public void setName ( String name ) { this . name = name ; } }","title":"8.2\u3001\u5c5e\u6027\u5982\u4f55\u6ce8\u5165@value"},{"location":"Java/Spring/Spring5/#83","text":"@Component\u6709\u51e0\u4e2a\u884d\u751f\u6ce8\u89e3\uff0c\u4f1a\u6309\u7167web\u5f00\u53d1\u4e2d\uff0cmvc\u67b6\u6784\u4e2d\u5206\u5c42\u3002 dao \uff08@Repository\uff09 service\uff08@Service\uff09 controller\uff08@Controller\uff09 \u8fd9\u56db\u4e2a\u6ce8\u89e3\u7684\u529f\u80fd\u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f\u4ee3\u8868\u5c06\u67d0\u4e2a\u7c7b\u6ce8\u518c\u5230\u5bb9\u5668\u4e2d","title":"8.3\u3001\u884d\u751f\u7684\u6ce8\u89e3"},{"location":"Java/Spring/Spring5/#84","text":"@Autowired\uff1a\u9ed8\u8ba4\u662fbyType\u65b9\u5f0f\uff0c\u5982\u679c\u5339\u914d\u4e0d\u4e0a\uff0c\u5c31\u4f1abyName @Nullable\uff1a\u5b57\u6bb5\u6807\u8bb0\u4e86\u8fd9\u4e2a\u6ce8\u89e3\uff0c\u8bf4\u660e\u8be5\u5b57\u6bb5\u53ef\u4ee5\u4e3a\u7a7a @Resource\uff1a\u9ed8\u8ba4\u662fbyName\u65b9\u5f0f\uff0c\u5982\u679c\u5339\u914d\u4e0d\u4e0a\uff0c\u5c31\u4f1abyType","title":"8.4\u3001\u81ea\u52a8\u88c5\u914d\u7f6e"},{"location":"Java/Spring/Spring5/#85scope","text":"//\u539f\u578b\u6a21\u5f0fprototype\uff0c\u5355\u4f8b\u6a21\u5f0fsingleton //scope(\"prototype\")\u76f8\u5f53\u4e8e<bean scope=\"prototype\"></bean> @Component @scope ( \"prototype\" ) public class User { //\u76f8\u5f53\u4e8e<property name=\"name\" value=\"kuangshen\"/> @value ( \"kuangshen\" ) public String name ; //\u4e5f\u53ef\u4ee5\u653e\u5728set\u65b9\u6cd5\u4e0a\u9762 @value ( \"kuangshen\" ) public void setName ( String name ) { this . name = name ; } }","title":"8.5\u3001\u4f5c\u7528\u57df@scope"},{"location":"Java/Spring/Spring5/#86","text":"xml\u4e0e\u6ce8\u89e3\uff1a xml\u66f4\u52a0\u4e07\u80fd\uff0c\u7ef4\u62a4\u7b80\u5355\uff0c\u9002\u7528\u4e8e\u4efb\u4f55\u573a\u5408 \u6ce8\u89e3\uff0c\u4e0d\u662f\u81ea\u5df1\u7684\u7c7b\u4f7f\u7528\u4e0d\u4e86\uff0c\u7ef4\u62a4\u590d\u6742 \u6700\u4f73\u5b9e\u8df5\uff1a xml\u7528\u6765\u7ba1\u7406bean \u6ce8\u89e3\u53ea\u7528\u6765\u5b8c\u6210\u5c5e\u6027\u7684\u6ce8\u5165 \u8981\u5f00\u542f\u6ce8\u89e3\u652f\u6301","title":"8.6\u3001\u5c0f\u7ed3"},{"location":"Java/Spring/Spring5/#9javaspring","text":"\u4e0d\u4f7f\u7528Spring\u7684xml\u914d\u7f6e\uff0c\u5b8c\u5168\u4ea4\u7ed9java\u6765\u505a\uff01 Spring\u7684\u4e00\u4e2a\u5b50\u9879\u76ee\uff0c\u5728spring4\u4e4b\u540e\uff0c\uff0c\uff0c\u5b83\u6210\u4e3a\u4e86\u6838\u5fc3\u529f\u80fd \u5b9e\u4f53\u7c7b\uff1apojo\u7684User.java //\u8fd9\u91cc\u8fd9\u4e2a\u6ce8\u89e3\u7684\u610f\u601d,\u5c31\u662f\u8bf4\u660e\u8fd9\u4e2a\u7c7b\u88abSpring\u63a5\u7ba1\u4e86,\u6ce8\u518c\u5230\u4e86\u5bb9\u5668\u4e2d @component public class User { private String name ; public String getName () { return name ; } //\u5c5e\u6027\u6ce8\u5165\u503c @value ( \"QINJIANG') public void setName(String name) { this.name = name; } @Override public String toString() { return \" user { \" + \" name = ' \" + name + '\\''+ '}'; } } \u5f39\u5e55\u8bc4\u8bba\uff1a\u8981\u4e48\u4f7f\u7528@Bean\uff0c\u8981\u4e48\u4f7f\u7528@Component\u548cComponentScan\uff0c\u4e24\u79cd\u6548\u679c\u4e00\u6837 \u914d\u7f6e\u6587\u4ef6\uff1aconfig\u4e2d\u7684kuang.java @Import(KuangConfig2.class)\uff0c\u7528@import\u6765\u5305\u542bKuangConfig2.java //\u8fd9\u4e2a\u4e5f\u4f1aSpring\u5bb9\u5668\u6258\u7ba1,\u6ce8\u518c\u5230\u5bb9\u5668\u4e2d,\u56e0\u4e3a\u4ed6\u672c\u7c73\u5c31\u662f\u4e00\u4e2a@Component // @Configuration\u8868\u8fd9\u662f\u4e00\u4e2a\u914d\u7f6e\u7c7b,\u5c31\u50cf\u6211\u4eec\u4e4b\u524d\u770b\u7684beans.xml\uff0c\u7c7b\u4f3c\u4e8e<beans>\u6807\u7b7e @Configuration @componentScan ( \"com.Kuang.pojo\" ) //\u5f00\u542f\u626b\u63cf //@Import(KuangConfig2.class) public class KuangConfig { //\u6ce8\u518c\u4e00\u4e2abean , \u5c31\u76f8\u5f53\u4e8e\u6211\u4eec\u4e4b\u524d\u5199\u7684\u4e00\u4e2abean \u6807\u7b7e //\u8fd9\u4e2a\u65b9\u6cd5\u7684\u540d\u5b57,\u5c31\u76f8\u5f53\u4e8ebean \u6807\u7b7e\u4e2d\u7684 id \u5c5e\u6027 ->getUser //\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8fd4\u540c\u503c,\u5c31\u76f8\u5f53\u4e8ebean \u6807\u7b7e\u4e2d\u7684class \u5c5e\u6027 ->User //@Bean public User getUser (){ return new User (); //\u5c31\u662f\u8fd4\u56de\u8981\u6ce8\u5165\u5230bean\u7684\u5bf9\u8c61! } } \u5f39\u5e55\u8bc4\u8bba\uff1aComponentScan\u3001@Component(\"pojo\u201d) \u8fd9\u4e24\u4e2a\u6ce8\u89e3\u914d\u5408\u4f7f\u7528 \u6d4b\u8bd5\u7c7b public class MyTest { public static void main ( String [ ] args ) { //\u5982\u679c\u5b8c\u5168\u4f7f\u7528\u4e86\u914d\u7f6e\u7c7b\u65b9\u5f0f\u53bb\u505a,\u6211\u4eec\u5c31\u53ea\u80fd\u901a\u8fc7 Annotationconfig \u4e0a\u4e0b\u6587\u6765\u83b7\u53d6\u5bb9\u5668,\u901a\u8fc7\u914d\u7f6e\u7c7b\u7684class\u5bf9\u8c61\u52a0\u8f7d! ApplicationContext context = new AnnotationConfigApplicationContext ( KuangConfig . Class ); //class\u5bf9\u8c61 User getUser = ( User ) context . getBean ( \"getUser\" ); //\u65b9\u6cd5\u540dgetUser System . out . Println ( getUser . getName ()); } } \u4f1a\u521b\u5efa\u4e24\u4e2a\u76f8\u540c\u5bf9\u8c61\u95ee\u9898\u7684\u8bf4\u660e\uff1a \u5f39\u5e55\u603b\u7ed3 - -> @Bean\u662f\u76f8\u5f53\u4e8e< bean>\u6807\u7b7e\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u800c\u6211\u4eec\u4e4b\u524d\u5b66\u7684@Component\u662f\u901a\u8fc7spring\u81ea\u52a8\u521b\u5efa\u7684\u8fd9\u4e2a\u88ab\u6ce8\u89e3\u58f0\u660e\u7684\u5bf9\u8c61\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f8\u5f53\u4e8e\u6709\u4e24\u4e2aUser\u5bf9\u8c61\u88ab\u521b\u5efa\u4e86\u3002\u4e00\u4e2a\u662fbean\u6807\u7b7e\u521b\u5efa\u7684\uff08@Bean\uff09\uff0c\u4e00\u4e2a\u662f\u901a\u8fc7\u626b\u63cf\u7136\u540e\u4f7f\u7528@Component\uff0cspring\u81ea\u52a8\u521b\u5efa\u7684User\u5bf9\u8c61\uff0c\u6240\u4ee5\u8fd9\u91cc\u53bb\u6389@Bean\u8fd9\u4e9b\u4e1c\u897f\uff0c\u7136\u540e\u5f00\u542f\u626b\u63cf\u3002\u4e4b\u540e\u5728User\u5934\u4e0a\u7528@Component\u5373\u53ef\u8fbe\u5230spring\u81ea\u52a8\u521b\u5efaUser\u5bf9\u8c61\u4e86 //\u8fd9\u4e2a\u4e5f\u4f1aSpring\u5bb9\u5668\u6258\u7ba1,\u6ce8\u518c\u5230\u5bb9\u5668\u4e2d,\u56e0\u4e3a\u4ed6\u672c\u7c73\u5c31\u662f\u4e00\u4e2a@Component // @Configuration\u8868\u8fd9\u662f\u4e00\u4e2a\u914d\u7f6e\u7c7b,\u5c31\u50cf\u6211\u4eec\u4e4b\u524d\u770b\u7684beans.xml\uff0c\u7c7b\u4f3c\u4e8e<beans>\u6807\u7b7e @Configuration @componentScan ( \"com.Kuang.pojo\" ) //\u5f00\u542f\u626b\u63cf //@Import(KuangConfig2.class) public class KuangConfig { //\u6ce8\u518c\u4e00\u4e2abean , \u5c31\u76f8\u5f53\u4e8e\u6211\u4eec\u4e4b\u524d\u5199\u7684\u4e00\u4e2abean \u6807\u7b7e //\u8fd9\u4e2a\u65b9\u6cd5\u7684\u540d\u5b57,\u5c31\u76f8\u5f53\u4e8ebean \u6807\u7b7e\u4e2d\u7684 id \u5c5e\u6027 ->getUser //\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8fd4\u540c\u503c,\u5c31\u76f8\u5f53\u4e8ebean \u6807\u7b7e\u4e2d\u7684class \u5c5e\u6027 ->User //@Bean public User getUser (){ return new User (); //\u5c31\u662f\u8fd4\u56de\u8981\u6ce8\u5165\u5230bean\u7684\u5bf9\u8c61! } } \u5f39\u5e55\u8bc4\u8bba\uff1aComponentScan\u3001@Component(\"pojo\u201d) \u8fd9\u4e24\u4e2a\u6ce8\u89e3\u914d\u5408\u4f7f\u7528 \u6d4b\u8bd5\u7c7b public class MyTest { public static void main ( String [ ] args ) { //\u5982\u679c\u5b8c\u5168\u4f7f\u7528\u4e86\u914d\u7f6e\u7c7b\u65b9\u5f0f\u53bb\u505a,\u6211\u4eec\u5c31\u53ea\u80fd\u901a\u8fc7 Annotationconfig \u4e0a\u4e0b\u6587\u6765\u83b7\u53d6\u5bb9\u5668,\u901a\u8fc7\u914d\u7f6e\u7c7b\u7684class\u5bf9\u8c61\u52a0\u8f7d! ApplicationContext context = new AnnotationConfigApplicationContext ( KuangConfig . Class ); //class\u5bf9\u8c61 User getUser = ( User ) context . getBean ( \"getUser\" ); //\u65b9\u6cd5\u540dgetUser System . out . Println ( getUser . getName ()); } } \u4f1a\u521b\u5efa\u4e24\u4e2a\u76f8\u540c\u5bf9\u8c61\u95ee\u9898\u7684\u8bf4\u660e\uff1a \u5f39\u5e55\u603b\u7ed3 - -> @Bean\u662f\u76f8\u5f53\u4e8e< bean>\u6807\u7b7e\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u800c\u6211\u4eec\u4e4b\u524d\u5b66\u7684@Component\u662f\u901a\u8fc7spring\u81ea\u52a8\u521b\u5efa\u7684\u8fd9\u4e2a\u88ab\u6ce8\u89e3\u58f0\u660e\u7684\u5bf9\u8c61\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f8\u5f53\u4e8e\u6709\u4e24\u4e2aUser\u5bf9\u8c61\u88ab\u521b\u5efa\u4e86\u3002\u4e00\u4e2a\u662fbean\u6807\u7b7e\u521b\u5efa\u7684\uff08@Bean\uff09\uff0c\u4e00\u4e2a\u662f\u901a\u8fc7\u626b\u63cf\u7136\u540e\u4f7f\u7528@Component\uff0cspring\u81ea\u52a8\u521b\u5efa\u7684User\u5bf9\u8c61\uff0c\u6240\u4ee5\u8fd9\u91cc\u53bb\u6389@Bean\u8fd9\u4e9b\u4e1c\u897f\uff0c\u7136\u540e\u5f00\u542f\u626b\u63cf\u3002\u4e4b\u540e\u5728User\u5934\u4e0a\u7528@Component\u5373\u53ef\u8fbe\u5230spring\u81ea\u52a8\u521b\u5efaUser\u5bf9\u8c61\u4e86","title":"9\u3001\u4f7f\u7528Java\u7684\u65b9\u5f0f\u914d\u7f6eSpring"},{"location":"Java/Spring/Spring5/#10","text":"\u4ee3\u7406\u6a21\u5f0f\u662fSpringAOP\u7684\u5e95\u5c42 \u5206\u7c7b\uff1a\u52a8\u6001\u4ee3\u7406\u548c\u9759\u6001\u4ee3\u7406","title":"10\u3001\u52a8\u6001\u4ee3\u7406"},{"location":"Java/Spring/Spring5/#101","text":"\u4ee3\u7801\u6b65\u9aa4\uff1a 1\u3001\u63a5\u53e3 package pojo ; public interface Host { public void rent (); } 2\u3001\u771f\u5b9e\u89d2\u8272 package pojo ; public class HostMaster implements Host { public void rent () { System . out . println ( \"\u623f\u4e1c\u8981\u51fa\u79df\u623f\u5b50\" ); } } 3\u3001\u4ee3\u7406\u89d2\u8272 package pojo ; public class Proxy { public Host host ; public Proxy () { } public Proxy ( Host host ) { super (); this . host = host ; } public void rent () { seeHouse (); host . rent (); fee (); sign (); } //\u770b\u623f public void seeHouse () { System . out . println ( \"\u770b\u623f\u5b50\" ); } //\u6536\u8d39 public void fee () { System . out . println ( \"\u6536\u4e2d\u4ecb\u8d39\" ); } //\u5408\u540c public void sign () { System . out . println ( \"\u7b7e\u5408\u540c\" ); } } 4\u3001\u5ba2\u6237\u7aef\u8bbf\u95ee\u4ee3\u7406\u89d2\u8272 package holle4_proxy ; import pojo.Host ; import pojo.HostMaster ; import pojo.Proxy ; public class My { public static void main ( String [] args ) { //\u623f\u4e1c\u8981\u51fa\u79df\u623f\u5b50 Host host = new HostMaster (); //\u4e2d\u4ecb\u5e2e\u623f\u4e1c\u51fa\u79df\u623f\u5b50\uff0c\u4f46\u4e5f\u6536\u53d6\u4e00\u5b9a\u8d39\u7528\uff08\u589e\u52a0\u4e00\u4e9b\u623f\u4e1c\u4e0d\u505a\u7684\u64cd\u4f5c\uff09 Proxy proxy = new Proxy ( host ); //\u770b\u4e0d\u5230\u623f\u4e1c\uff0c\u4f46\u901a\u8fc7\u4ee3\u7406\uff0c\u8fd8\u662f\u79df\u5230\u4e86\u623f\u5b50 proxy . rent (); } } \u4ee3\u7801\u7ffb\u500d\uff1a\u51e0\u5341\u4e2a\u771f\u5b9e\u89d2\u8272\u5c31\u5f97\u5199\u51e0\u5341\u4e2a\u4ee3\u7406 AOP\u6a2a\u5411\u5f00\u53d1","title":"10.1\u3001\u9759\u6001\u4ee3\u7406"},{"location":"Java/Spring/Spring5/#102","text":"\u52a8\u6001\u4ee3\u7406\u548c\u9759\u6001\u89d2\u8272\u4e00\u6837\uff0c\u52a8\u6001\u4ee3\u7406\u5e95\u5c42\u662f\u53cd\u5c04\u673a\u5236 \u52a8\u6001\u4ee3\u7406\u7c7b\u662f\u52a8\u6001\u751f\u6210\u7684\uff0c\u4e0d\u662f\u6211\u4eec\u76f4\u63a5\u5199\u597d\u7684\uff01 \u52a8\u6001\u4ee3\u7406(\u4e24\u5927\u7c7b)\uff1a\u57fa\u4e8e\u63a5\u53e3\uff0c\u57fa\u4e8e\u7c7b \u57fa\u4e8e\u63a5\u53e3\uff1aJDK\u7684\u52a8\u6001\u4ee3\u7406\u3010\u4f7f\u7528ing\u3011 \u57fa\u4e8e\u7c7b\uff1acglib java\u5b57\u8282\u7801\u5b9e\u73b0\uff1ajavasisit \u4e86\u89e3\u4e24\u4e2a\u7c7b 1\u3001Proxy\uff1a\u4ee3\u7406 2\u3001InvocationHandler\uff1a\u8c03\u7528\u5904\u7406\u7a0b\u5e8f \u5b9e\u4f8b\uff1a \u63a5\u53e3 Host.java //\u63a5\u53e3 package pojo2 ; public interface Host { public void rent (); } \u63a5\u53e3Host\u5b9e\u73b0\u7c7b HostMaster.java //\u63a5\u53e3\u5b9e\u73b0\u7c7b package pojo2 ; public class HostMaster implements Host { public void rent () { System . out . println ( \"\u623f\u4e1c\u8981\u79df\u623f\u5b50\" ); } } \u4ee3\u7406\u89d2\u8272\u7684\u5904\u7406\u7a0b\u5e8f\u7c7b ProxyInvocationHandler.java package pojo2 ; import java.lang.reflect.InvocationHandler ; import java.lang.reflect.Method ; import java.lang.reflect.Proxy ; ///\u7528\u8fd9\u4e2a\u7c7b\uff0c\u81ea\u52a8\u751f\u6210\u4ee3\u7406 public class ProxyInvocationHandler implements InvocationHandler { // Foo f =(Foo) Proxy.NewProxyInstance(Foo. Class.GetClassLoader(), // new Class<?>[] { Foo.Class }, // handler); // \u88ab\u4ee3\u7406\u7684\u63a5\u53e3 public HostMaster hostMaster ; public void setHostMaster ( HostMaster hostMaster ) { this . hostMaster = hostMaster ; } // \u5f97\u5230\u751f\u6210\u7684\u4ee3\u7406\u7c7b public Object getProxy () { // newProxyInstance() -> \u751f\u6210\u4ee3\u7406\u5bf9\u8c61\uff0c\u5c31\u4e0d\u7528\u518d\u5199\u5177\u4f53\u7684\u4ee3\u7406\u7c7b\u4e86 // this.getClass().getClassLoader() -> \u627e\u5230\u52a0\u8f7d\u7c7b\u7684\u4f4d\u7f6e // hostMaster.getClass().getInterfaces() -> \u4ee3\u7406\u7684\u5177\u4f53\u63a5\u53e3 // this -> \u4ee3\u8868\u4e86\u63a5\u53e3InvocationHandler\u7684\u5b9e\u73b0\u7c7bProxyInvocationHandler return Proxy . newProxyInstance ( this . getClass (). getClassLoader (), hostMaster . getClass (). getInterfaces (), this ); // \u5904\u7406\u4ee3\u7406\u5b9e\u4f8b\u5e76\u8fd4\u56de\u7ed3\u679c public Object invoke ( Object proxy , Method method , Object [] args ) throws Throwable { seeHouse (); // \u52a8\u6001\u4ee3\u7406\u7684\u672c\u8d28\uff0c\u5c31\u662f\u4f7f\u7528\u53cd\u5c04\u673a\u5236\u5b9e\u73b0\u7684 // invoke()\u6267\u884c\u5b83\u771f\u6b63\u8981\u6267\u884c\u7684\u65b9\u6cd5 Object result = method . invoke ( hostMaster , args ); fee (); return result ; } public void seeHouse () { System . out . println ( \"\u770b\u623f\u5b50\" ); } public void fee () { System . out . println ( \"\u6536\u4e2d\u4ecb\u8d39\" ); } } \u7528\u6237\u7c7b My2.java package holle4_proxy ; import pojo2.Host ; import pojo2.Host2 ; import pojo2.HostMaster ; import pojo2.ProxyInvocationHandler ; public class My2 { public static void main ( String [] args ) { //\u771f\u5b9e\u89d2\u8272 HostMaster hostMaster = new HostMaster (); //\u4ee3\u7406\u89d2\u8272\uff0c\u73b0\u5728\u6ca1\u6709\uff1b\u7528\u4ee3\u7406\u89d2\u8272\u7684\u5904\u7406\u7a0b\u5e8f\u6765\u5b9e\u73b0Host\u63a5\u53e3\u7684\u8c03\u7528 ProxyInvocationHandler pih = new ProxyInvocationHandler (); //pih -> HostMaster\u63a5\u53e3\u7c7b -> Host\u63a5\u53e3 pih . setHostMaster ( hostMaster ); //\u83b7\u53d6newProxyInstance\u52a8\u6001\u751f\u6210\u4ee3\u7406\u7c7b Host proxy = ( Host ) pih . getProxy (); proxy . rent (); } } \u5f39\u5e55\u8bc4\u8bba\uff1a \u4ec0\u4e48\u65f6\u5019\u8c03\u7528invoke\u65b9\u6cd5\u7684? \u4ee3\u7406\u5b9e\u4f8b\u8c03\u7528\u65b9\u6cd5\u65f6invoke\u65b9\u6cd5\u5c31\u4f1a\u88ab\u8c03\u7528\uff0c\u53ef\u4ee5debug\u8bd5\u8bd5 \u6539\u4e3a \u4e07\u80fd\u4ee3\u7406\u7c7b ///\u7528\u8fd9\u4e2a\u7c7b\uff0c\u81ea\u52a8\u751f\u4ee3\u7406 public class ProxyInvocationHandler implements InvocationHandler { // \u88ab\u4ee3\u7406\u7684\u63a5\u53e3 public Object target ; public void setTarget ( Object target ) { this . target = target ; } // \u5f97\u5230\u751f\u6210\u7684\u4ee3\u7406\u7c7b -> \u56fa\u5b9a\u7684\u4ee3\u7801 public Object getProxy () { return Proxy . newProxyInstance ( this . getClass (). getClassLoader (), target . getClass (). getInterfaces (), this ); } // \u5904\u7406\u4ee3\u7406\u5b9e\u4f8b\u5e76\u8fd4\u56de\u7ed3\u679c public Object invoke ( Object proxy , Method method , Object [] args ) throws Throwable { // \u52a8\u6001\u4ee3\u7406\u7684\u672c\u8d28\uff0c\u5c31\u662f\u4f7f\u7528\u53cd\u5c04\u673a\u5236\u5b9e\u73b0\u7684 // invoke()\u6267\u884c\u5b83\u771f\u6b63\u8981\u6267\u884c\u7684\u65b9\u6cd5 Object result = method . invoke ( target , args ); return result ; } }","title":"10.2\u3001\u52a8\u6001\u4ee3\u7406"},{"location":"Java/Spring/Spring5/#11aop","text":"","title":"11\u3001AOP"},{"location":"Java/Spring/Spring5/#111aop","text":"","title":"11.1\u3001\u4ec0\u4e48\u662fAOP"},{"location":"Java/Spring/Spring5/#112aopspring","text":"\u63d0\u4f9b\u58f0\u660e\u5f0f\u4e8b\u52a1\uff0c\u5141\u8bb8\u7528\u6237\u81ea\u5b9a\u4e49\u5207\u9762 \u6a2a\u5207\u5173\u6ce8\u70b9\uff1a\u8de8\u8d8a\u5e94\u7528\u7a0b\u5e8f\u591a\u4e2a\u6a21\u5757\u7684\u65b9\u6cd5\u6216\u529f\u80fd\u3002\u5373\u662f\uff0c\u4e0e\u6211\u4eec\u4e1a\u52a1\u903b\u8f91\u65e0\u5173\u7684\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u5173\u6ce8\u7684\u90e8\u5206\uff0c\u5c31\u662f\u6a2a\u5207\u5173\u6ce8\u70b9\u3002\u5982\u65e5\u5fd7\uff0c\u5b89\u5168\uff0c\u7f13\u5b58\uff0c\u4e8b\u52a1\u7b49\u7b49\u2026 \u5207\u9762(Aspect)\uff1a\u6a2a\u5207\u5173\u6ce8\u70b9 \u88ab\u6a21\u5757\u5316\u7684\u7279\u6b8a\u5bf9\u8c61\u3002\u5373\uff0c\u5b83\u662f\u4e00\u4e2a\u7c7b\u3002\uff08Log\u7c7b\uff09 \u901a\u77e5(Advice)\uff1a\u5207\u9762\u5fc5\u987b\u8981\u5b8c\u6210\u7684\u5de5\u4f5c\u3002\u5373\uff0c\u5b83\u662f\u7c7b\u4e2d\u7684\u4e00\u4e2a\u65b9\u6cd5\u3002\uff08Log\u7c7b\u4e2d\u7684\u65b9\u6cd5\uff09 \u76ee\u6807(Target)\uff1a\u88ab\u901a\u77e5\u5bf9\u8c61\u3002\uff08\u751f\u6210\u7684\u4ee3\u7406\u7c7b) \u4ee3\u7406(Proxy)\uff1a\u5411\u76ee\u6807\u5bf9\u8c61\u5e94\u7528\u901a\u77e5\u4e4b\u540e\u521b\u5efa\u7684\u5bf9\u8c61\u3002\uff08\u751f\u6210\u7684\u4ee3\u7406\u7c7b\uff09 \u5207\u5165\u70b9(PointCut)\uff1a\u5207\u9762\u901a\u77e5\u6267\u884c\u7684\u201d\u5730\u70b9\u201d\u7684\u5b9a\u4e49\u3002\uff08\u6700\u540e\u4e24\u70b9\uff1a\u5728\u54ea\u4e2a\u5730\u65b9\u6267\u884c\uff0c\u6bd4\u5982\uff1amethod.invoke()\uff09 \u8fde\u63a5\u70b9(JointPoint)\uff1a\u4e0e\u5207\u5165\u70b9\u5339\u914d\u7684\u6267\u884c\u70b9\u3002 SpringAOP\u4e2d\uff0c\u901a\u8fc7Advice\u5b9a\u4e49\u6a2a\u5207\u903b\u8f91\uff0cSpring\u4e2d\u652f\u63015\u79cd\u7c7b\u578b\u7684Advice: \u5373AOP\u5728\u4e0d\u6539\u53d8\u539f\u6709\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u53bb\u589e\u52a0\u65b0\u7684\u529f\u80fd\u3002 \uff08\u4ee3\u7406\uff09","title":"11.2\u3001AOP\u5728Spring\u4e2d\u7684\u4f7f\u7528"},{"location":"Java/Spring/Spring5/#113springaop","text":"\u5bfc\u5165jar\u5305 <!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --> <dependency> <groupId> org.aspectj </groupId> <artifactId> aspectjweaver </artifactId> <version> 1.9.4 </version> </dependency>","title":"11.3\u3001\u4f7f\u7528Spring\u5b9e\u73b0AOP"},{"location":"Java/Spring/Spring5/#1131spring","text":"springAPI\u63a5\u53e3\u5b9e\u73b0 applicationContext.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd\" > <!--\u6ce8\u518cbean--> <bean id= \"userservice\" class= \"service.UserServiceImpl\" /> <bean id= \"log\" class= \"log.Log\" /> <bean id= \"afterLog\" class= \"log.AfterLog\" /> <!--\u65b9\u5f0f\u4e00\uff0c\u4f7f\u7528\u539f\u751fSpring API\u63a5\u53e3--> <!--\u914d\u7f6eaop,\u8fd8\u9700\u8981\u5bfc\u5165aop\u7ea6\u675f--> <aop:config> <!--\u5207\u5165\u70b9\uff1aexpression:\u8868\u8fbe\u5f0f\uff0cexecution\uff08\u8981\u6267\u884c\u7684\u4f4d\u7f6e\uff09--> <aop:pointcut id= \"pointcut\" expression= \"execution(* service.UserServiceImpl.*(..))\" /> <!--UserServiceImpl.*(..) -\u300b UserServiceImpl\u7c7b\u4e0b\u7684\u6240\u4ee5\u65b9\u6cd5(\u53c2\u6570)--> <!--\u6267\u884c\u73af\u7ed5\u589e\u52a0--> <aop:advisor advice-ref= \"log\" pointcut-ref= \"pointcut\" /> <aop:advisor advice-ref= \"afterLog\" pointcut-ref= \"pointcut\" /> <!-- \u73af\u7ed5,\u5728id=\"pointcut\"\u7684\u524d\u540e\u5207\u5165 --> </aop:config> </beans> execution(\u8fd4\u56de\u7c7b\u578b\uff0c\u7c7b\u540d\uff0c\u65b9\u6cd5\u540d(\u53c2\u6570)) -> execution( com.service. ,*(\u2026)) UserService.java package service ; public interface UserService { public void add () ; public void delete () ; public void query () ; public void update (); } UserService \u7684\u5b9e\u73b0\u7c7b UserServiceImp.java package service ; public class UserServiceImpl implements UserService { public void add () { System . out . println ( \"add\u589e\" ); } public void delete () { System . out . println ( \"delete\u5220\" ); } public void update () { System . out . println ( \"update\u6539\" ); } public void query () { System . out . println ( \"query\u67e5\" ); } } \u524d\u7f6eLog.java package log ; import org.springframework.aop.MethodBeforeAdvice ; import java.lang.reflect.Method ; public class Log implements MethodBeforeAdvice { //method\uff1a\u8981\u6267\u884c\u7684\u76ee\u6807\u5bf9\u8c61\u7684\u65b9\u6cd5 //args\uff1a\u53c2\u6570 //target\uff1a\u76ee\u6807\u5bf9\u8c61 public void before ( Method method , Object [] args , Object target ) throws Throwable { System . out . println ( target . getClass (). getName () + \"\u7684\" + method . getName () + \"\u88ab\u6267\u884c\u4e86\" ); } } \u540e\u7f6eAfterLog.java package log ; import java.lang.reflect.Method ; import org.springframework.aop.AfterReturningAdvice ; public class AfterLog implements AfterReturningAdvice { //returnVaule: \u8fd4\u56de\u503c public void afterReturning ( Object returnValue , Method method , Object [] args , Object target ) throws Throwable { System . out . println ( \"\u6267\u884c\u4e86\" + method . getName () + \"\u65b9\u6cd5\uff0c\u8fd4\u56de\u503c\u662f\" + returnValue ); } } \u6d4b\u8bd5\u7c7bMyTest5 import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import service.UserService ; public class MyTest5 { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"applicationContext.xml\" ); //\u6ce8\u610f:\u52a8\u6001\u4ee3\u7406\u4ee3\u7406\u7684\u662f\u63a5\u53e3 UserService userService = ( UserService ) context . getBean ( \"userservice\" ); userService . add (); } }","title":"11.3.1\u3001\u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528\u539f\u751fspring\u63a5\u53e3"},{"location":"Java/Spring/Spring5/#1132aop","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd\" > <!--\u6ce8\u518cbean--> <bean id= \"userservice\" class= \"service.UserServiceImpl\" /> <bean id= \"log\" class= \"log.Log\" /> <bean id= \"afterLog\" class= \"log.AfterLog\" /> <!-- \u65b9\u5f0f\u4e8c\uff0c\u81ea\u5b9a\u4e49 --> <bean id= \"diy\" class= \"diy.DiyPointcut\" /> <aop:config> <!--\u81ea\u5b9a\u4e49\u5207\u9762--> <aop:aspect ref= \"diy\" > <!--\u5207\u5165\u70b9--> <aop:pointcut id= \"point\" expression= \"execution(* service.UserServiceImpl.*(..))\" /> <aop:before method= \"before\" pointcut-ref= \"point\" /> <aop:after method= \"after\" pointcut-ref= \"point\" /> </aop:aspect> </aop:config> </beans> package diy ; public class DiyPointcut { public void before (){ System . out . println ( \"\u63d2\u5165\u5230\u524d\u9762\" ); } public void after (){ System . out . println ( \"\u63d2\u5165\u5230\u540e\u9762\" ); } } //\u6d4b\u8bd5 public class MyTest5 { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"applicationContext.xml\" ); //\u6ce8\u610f:\u52a8\u6001\u4ee3\u7406\u4ee3\u7406\u7684\u662f\u63a5\u53e3 UserService userService = ( UserService ) context . getBean ( \"userservice\" ); userService . add (); } }","title":"11.3.2\u3001\u65b9\u6cd5\u4e8c\uff1a\u81ea\u5b9a\u4e49\u7c7b\u5b9e\u73b0AOP"},{"location":"Java/Spring/Spring5/#1133","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd\" > <!-- \u6ce8\u518c --> <bean id= \"userservice\" class= \"service.UserServiceImpl\" /> <!--\u65b9\u5f0f\u4e09\uff0c\u4f7f\u7528\u6ce8\u89e3\u5b9e\u73b0--> <bean id= \"diyAnnotation\" class= \"diy.DiyAnnotation\" ></bean> <!-- \u5f00\u542f\u81ea\u52a8\u4ee3\u7406 \u5b9e\u73b0\u65b9\u5f0f\uff1a\u9ed8\u8ba4JDK (proxy-targer-class=\"fasle\") cgbin (proxy-targer-class=\"true\")--> <aop:aspectj-autoproxy/> </beans> DiyAnnotation.java package diy ; import org.aspectj.lang.ProceedingJoinPoint ; import org.aspectj.lang.annotation.After ; import org.aspectj.lang.annotation.Around ; import org.aspectj.lang.annotation.Aspect ; import org.aspectj.lang.annotation.Before ; @Aspect //\u6807\u6ce8\u8fd9\u4e2a\u7c7b\u662f\u4e00\u4e2a\u5207\u9762 public class DiyAnnotation { @Before ( \"execution(* service.UserServiceImpl.*(..))\" ) public void before (){ System . out . println ( \"=====\u65b9\u6cd5\u6267\u884c\u524d=====\" ); } @After ( \"execution(* service.UserServiceImpl.*(..))\" ) public void after (){ System . out . println ( \"=====\u65b9\u6cd5\u6267\u884c\u540e=====\" ); } //\u5728\u73af\u7ed5\u589e\u5f3a\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u5730\u6696\u7ba1\u4e00\u4e2a\u53c2\u6570\uff0c\u4ee3\u8868\u6211\u4eec\u8981\u83b7\u53d6\u5207\u5165\u7684\u70b9 @Around ( \"execution(* service.UserServiceImpl.*(..))\" ) public void around ( ProceedingJoinPoint joinPoint ) throws Throwable { System . out . println ( \"\u73af\u7ed5\u524d\" ); Object proceed = joinPoint . proceed (); System . out . println ( \"\u73af\u7ed5\u540e\" ); } } \u6d4b\u8bd5 public class MyTest5 { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"applicationContext.xml\" ); //\u6ce8\u610f:\u52a8\u6001\u4ee3\u7406\u4ee3\u7406\u7684\u662f\u63a5\u53e3 UserService userService = ( UserService ) context . getBean ( \"userservice\" ); userService . add (); } } \u8f93\u51fa\u7ed3\u679c\uff1a","title":"11.3.3\u3001\u65b9\u6cd5\u4e09\uff1a\u4f7f\u7528\u6ce8\u89e3\u5b9e\u73b0"},{"location":"Java/Spring/Spring5/#12mybatis","text":"mybatis-spring\u5b98\u7f51\uff1ahttps://mybatis.org/spring/zh/ mybatis\u7684\u914d\u7f6e\u6d41\u7a0b\uff1a \u7f16\u5199\u5b9e\u4f53\u7c7b \u7f16\u5199\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6 \u7f16\u5199\u63a5\u53e3 \u7f16\u5199Mapper.xmi \u6d4b\u8bd5","title":"12\u3001\u6574\u5408mybatis"},{"location":"Java/Spring/Spring5/#121mybatis-spring-","text":"\u7f16\u5199\u6570\u636e\u6e90\u914d\u7f6e sqISessionFactory sqISessionTemplate\uff08\u76f8\u5f53\u4e8esqISession\uff09 \u9700\u8981\u7ed9\u63a5\u53e3\u52a0\u5b9e\u73b0\u7c7b\u3010new\u3011 \u5c06\u81ea\u5df1\u5199\u7684\u5b9e\u73b0\u7c7b\uff0c\u6ce8\u5165\u5230Spring\u4e2d \u6d4b\u8bd5\uff01 \u5148\u5bfc\u5165jar\u5305 <dependencies> <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-webmvc </artifactId> <version> 5.2.7.RELEASE </version> </dependency> <dependency> <groupId> org.aspectj </groupId> <artifactId> aspectjweaver </artifactId> <version> 1.9.4 </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-jdbc </artifactId> <version> 5.2.7.RELEASE </version> </dependency> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis </artifactId> <version> 3.5.2 </version> </dependency> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis-spring </artifactId> <version> 2.0.4 </version> </dependency> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.12 </version> </dependency> <dependency> <groupId> org.projectlombok </groupId> <artifactId> lombok </artifactId> <version> 1.18.12 </version> </dependency> </dependencies> <!--\u5728build\u4e2d\u914d\u7f6eresources\uff0c\u6765\u9632\u6b62\u8d44\u6e90\u5bfc\u51fa\u5931\u8d25\u7684\u95ee\u9898--> <!-- Maven\u89e3\u51b3\u9759\u6001\u8d44\u6e90\u8fc7\u6ee4\u95ee\u9898 --> <build> <resources> <resource> <directory> src/main/java </directory> <includes> <include> **/*.properties </include> <include> **/*.xml </include> </includes> <filtering> false </filtering> </resource> <resource> <directory> src/main/resources </directory> <includes> <include> **/*.properties </include> <include> **/*.xml </include> </includes> <filtering> false </filtering> </resource> </resources> </build> \u7f16\u5199\u987a\u5e8f\uff1a User -> UserMapper -> UserMapper.xml -> spring-dao.xml -> UserServiceImpl -> applicationContext.xml -> MyTest6 \u4ee3\u7801\u6b65\u9aa4\uff1a pojo\u5b9e\u4f53\u7c7b User package pojo ; import lombok.Data ; @Data public class User { private int id ; private String name ; private String pwd ; } mapper\u76ee\u5f55\u4e0b\u7684 UserMapper\u3001UserMapperImpl\u3001UserMapper.xml \u63a5\u53e3UserMapper package mapper ; import java.util.List ; import pojo.User ; public interface UserMapper { public List < User > getUser (); } UserMapperImpl package mapper ; import java.util.List ; import org.mybatis.spring.SqlSessionTemplate ; import pojo.User ; public class UserMapperImpl implements UserMapper { //\u6211\u4eec\u7684\u6240\u6709\u64cd\u4f5c\uff0c\u5728\u539f\u6765\u90fd\u4f7f\u7528sqlSession\u6765\u6267\u884c\uff0c\u73b0\u5728\u90fd\u4f7f\u7528SqlSessionTemplate\uff1b private SqlSessionTemplate sqlSessionTemplate ; public void setSqlSessionTemplate ( SqlSessionTemplate sqlSessionTemplate ) { this . sqlSessionTemplate = sqlSessionTemplate ; } public List < User > getUser () { UserMapper mapper = sqlSessionTemplate . getMapper ( UserMapper . class ); return mapper . getUser (); } } UserMapper.xml \uff08\u72c2\u795e\u7ed9\u9762\u5b50\u624d\u7559\u4e0b\u6765\u7684\uff09 <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <!-- \u7ed1\u5b9a\u63a5\u53e3 --> <mapper namespace= \"mapper.UserMapper\" > <select id= \"getUser\" resultType= \"pojo.User\" > select * from mybatis.mybatis </select> </mapper> resource\u76ee\u5f55\u4e0b\u7684 mybatis-config.xml\u3001spring-dao.xml\u3001applicationContext.xml mybatis-config.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <configuration> <!--\u5f00\u542f\u65e5\u5fd7--> <settings> <setting name= \"logImpl\" value= \"STDOUT_LOGGING\" /> </settings> <!--\u53ef\u4ee5\u7ed9\u5b9e\u4f53\u7c7b\u8d77\u522b\u540d --> <typeAliases> <package name= \"pojo\" /> </typeAliases> </configuration> spring-dao.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd\" > <!--DataSource:\u4f7f\u7528Spring\u7684\u6570\u5e2e\u6e90\u66ff\u6362Mybatis\u7684\u914d\u7f6e \u5176\u4ed6\u6570\u636e\u6e90\uff1ac3p0\u3001dbcp\u3001druid \u8fd9\u4f7f\u7528Spring\u63d0\u4f9b\u7684JDBC: org.springframework.jdbc.datasource --> <!--data source --> <bean id= \"datasource\" class= \"org.springframework.jdbc.datasource.DriverManagerDataSource\" > <property name= \"driverClassName\" value= \"com.mysql.cj.jdbc.Driver\" /> <property name= \"url\" value= \"jdbc:mysql://127.0.0.1:3306/mybatis?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=Asia/Shanghai\" /> <property name= \"username\" value= \"root\" /> <property name= \"password\" value= \"root\" /> </bean> <!--sqlSessionFactory--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"datasource\" /> <!--\u7ed1\u5b9a mybatis \u914d\u7f6e\u6587\u4ef6--> <property name= \"configLocation\" value= \"classpath:mybatis-config.xml\" /> <property name= \"mapperLocations\" value= \"classpath:mapper/*.xml\" /> </bean> <!-- sqlSessionTemplate \u5c31\u662f\u4e4b\u524d\u4f7f\u7528\u7684\uff1asqlsession --> <bean id= \"sqlSession\" class= \"org.mybatis.spring.SqlSessionTemplate\" > <!-- \u53ea\u80fd\u4f7f\u7528\u6784\u9020\u5668\u6ce8\u5165sqlSessionFactory \u539f\u56e0\uff1a\u5b83\u6ca1\u6709set\u65b9\u6cd5--> <constructor-arg index= \"0\" ref= \"sqlSessionFactory\" /> </bean> </beans> applicationContext.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd\" > <!-- \u5bfc\u5165spring-dao.xml --> <import resource= \"spring-dao.xml\" /> <bean id= \"userMapper\" class= \"mapper.UserMapperImpl\" > <property name= \"sqlSessionTemplate\" ref= \"sqlSession\" ></property> </bean> </beans> \u6d4b\u8bd5\u7c7b import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import mapper.UserMapper ; import pojo.User ; public class MyTest6 { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"applicationContext.xml\" ); UserMapper userMapper = ( UserMapper ) context . getBean ( \"userMapper\" ); for ( User user : userMapper . getUser ()) { System . out . println ( user ); } } }","title":"12.1\u3001mybatis-spring-\u65b9\u5f0f\u4e00"},{"location":"Java/Spring/Spring5/#122mybatis-spring-","text":"UserServiceImpl2 package mapper ; import pojo.User ; import org.apache.ibatis.session.SqlSession ; import org.mybatis.spring.support.SqlSessionDaoSupport ; import java.util.List ; //\u7ee7\u627fSqlSessionDaoSupport \u7c7b public class UserMapperImpl2 extends SqlSessionDaoSupport implements UserMapper { public List < User > getUser () { SqlSession sqlSession = getSqlSession (); UserMapper mapper = sqlSession . getMapper ( UserMapper . class ); return mapper . getUser (); //\u6216\u8005\u4e00\u53e5\u8bdd\uff1areturn getSqlSession().getMapper(UserMapper.class).getUser(); } } spring-dao.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd\" > <!--DataSource:\u4f7f\u7528Spring\u7684\u6570\u5e2e\u6e90\u66ff\u6362Mybatis\u7684\u914d\u7f6e c3p0 dbcp druid \u8fd9\u4f7f\u7528Spring\u63d0\u4f9b\u7684JDBC: org.springframework.jdbc.datasource --> <!--data source --> <bean id= \"datasource\" class= \"org.springframework.jdbc.datasource.DriverManagerDataSource\" > <property name= \"driverClassName\" value= \"com.mysql.cj.jdbc.Driver\" /> <property name= \"url\" value= \"jdbc:mysql://127.0.0.1:3306/mybatis?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=Asia/Shanghai\" /> <property name= \"username\" value= \"root\" /> <property name= \"password\" value= \"root\" /> </bean> <!--sqlSessionFactory--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"datasource\" /> <!--\u7ed1\u5b9a mybatis \u914d\u7f6e\u6587\u4ef6--> <property name= \"configLocation\" value= \"classpath:mybatis-config.xml\" /> <property name= \"mapperLocations\" value= \"classpath:mapper/*.xml\" /> </bean> <!-- \u65b9\u6cd5\u4e8c\uff1aSqlSessionTemplate \u53ef\u4ee5\u4e0d\u5199\u4e86--> </beans> applicationContext.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd\" > <import resource= \"spring-dao.xml\" /> <!-- \u65b9\u6cd5\u4e8c --> <bean id= \"userMapper2\" class= \"mapper.UserMapperImpl2\" > <property name= \"sqlSessionFactory\" ref= \"sqlSessionFactory\" ></property> </bean> </beans> \u6d4b\u8bd5 public class MyTest6 { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"applicationContext.xml\" ); UserMapper userMapper = ( UserMapper ) context . getBean ( \"userMapper2\" ); for ( User user : userMapper . getUser ()) { System . out . println ( user ); } } }","title":"12.2\u3001mybatis-spring-\u65b9\u5f0f\u4e8c"},{"location":"Java/Spring/Spring5/#13_1","text":"\u628a\u4e00\u7ec4\u4e1a\u52a1\u5f53\u6210\u4e00\u4e2a\u4e1a\u52a1\u6765\u505a\uff1b\u8981\u4e48\u90fd\u6210\u529f\uff0c\u8981\u4e48\u90fd\u5931\u8d25\uff01 \u4e8b\u52a1\u5728\u9879\u76ee\u5f00\u53d1\u4e2d\uff0c\u5341\u5206\u7684\u91cd\u8981\uff0c\u6d89\u53ca\u5230\u6570\u636e\u7684\u4e00\u81f4\u6027\u95ee\u9898 \u786e\u4fdd\u5b8c\u6574\u6027\u548c\u4e00\u81f4\u6027 \u4e8b\u52a1\u7684ACID\u539f\u5219\uff1a 1\u3001\u539f\u5b50\u6027 2\u3001\u9694\u79bb\u6027 3\u3001\u4e00\u81f4\u6027 4\u3001\u6301\u4e45\u6027 ACID\u53c2\u8003\u6587\u7ae0\uff1ahttps://www.cnblogs.com/malaikuangren/archive/2012/04/06/2434760.html Spring\u4e2d\u7684\u4e8b\u52a1\u7ba1\u7406 \u58f0\u660e\u5f0f\u4e8b\u52a1\uff1aAOP \u7f16\u7a0b\u5f0f\u4e8b\u52a1\uff1a\u9700\u8981\u518d\u4ee3\u7801\u4e2d\uff0c\u8fdb\u884c\u4e8b\u52a1\u7ba1\u7406 \u58f0\u660e\u5f0f\u4e8b\u52a1 \u5148\u5bfc\u5165jar\u5305 <dependencies> <!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-webmvc </artifactId> <version> 5.2.7.RELEASE </version> </dependency> <dependency> <groupId> org.aspectj </groupId> <artifactId> aspectjweaver </artifactId> <version> 1.9.4 </version> </dependency> <!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-jdbc </artifactId> <version> 5.2.7.RELEASE </version> </dependency> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis </artifactId> <version> 3.5.2 </version> </dependency> <dependency> <groupId> org.mybatis </groupId> <artifactId> mybatis-spring </artifactId> <version> 2.0.4 </version> </dependency> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <version> 8.0.12 </version> </dependency> <dependency> <groupId> org.projectlombok </groupId> <artifactId> lombok </artifactId> <version> 1.18.12 </version> </dependency> </dependencies> <!--\u5728build\u4e2d\u914d\u7f6eresources\uff0c\u6765\u9632\u6b62\u8d44\u6e90\u5bfc\u51fa\u5931\u8d25\u7684\u95ee\u9898--> <!-- Maven\u89e3\u51b3\u9759\u6001\u8d44\u6e90\u8fc7\u6ee4\u95ee\u9898 --> <build> <resources> <resource> <directory> src/main/java </directory> <includes> <include> **/*.properties </include> <include> **/*.xml </include> </includes> <filtering> false </filtering> </resource> <resource> <directory> src/main/resources </directory> <includes> <include> **/*.properties </include> <include> **/*.xml </include> </includes> <filtering> false </filtering> </resource> </resources> </build> \u4ee3\u7801\u6b65\u9aa4\uff1a pojo\u5b9e\u4f53\u7c7b User package pojo ; import lombok.AllArgsConstructor ; import lombok.Data ; import lombok.NoArgsConstructor ; @Data @AllArgsConstructor @NoArgsConstructor public class User { private int id ; private String name ; private String pwd ; } mapper\u76ee\u5f55\u4e0b\u7684 UserMapper\u3001UserMapperImpl\u3001UserMapper.xml \u63a5\u53e3UserMapper package mapper ; import java.util.List ; import org.apache.ibatis.annotations.Param ; import pojo.User ; public interface UserMapper { public List < User > getUser (); public int insertUser ( User user ); public int delUser ( @Param ( \"id\" ) int id ); } UserMapperImpl package mapper ; import pojo.User ; import org.apache.ibatis.session.SqlSession ; import org.mybatis.spring.support.SqlSessionDaoSupport ; import java.util.List ; public class UserMapperImpl extends SqlSessionDaoSupport implements UserMapper { public List < User > getUser () { User user = new User ( 5 , \"\u4f60\u597d\" , \"ok\" ); insertUser ( user ); delUser ( 5 ); SqlSession sqlSession = getSqlSession (); UserMapper mapper = sqlSession . getMapper ( UserMapper . class ); return mapper . getUser (); //\u6216\u8005return getSqlSession().getMapper(UserMapper.class).getUser(); } //\u63d2\u5165 public int insertUser ( User user ) { return getSqlSession (). getMapper ( UserMapper . class ). insertUser ( user ); } //\u5220\u9664 public int delUser ( int id ) { return getSqlSession (). getMapper ( UserMapper . class ). delUser ( id ); } } UserMapper.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <!-- \u7ed1\u5b9a\u63a5\u53e3 --> <mapper namespace= \"mapper.UserMapper\" > <select id= \"getUser\" resultType= \"pojo.User\" > select * from mybatis.mybatis </select> <insert id= \"insertUser\" parameterType= \"pojo.User\" > insert into mybatis.mybatis (id,name,pwd) values (#{id},#{name},#{pwd}) </insert> <delete id= \"delUser\" parameterType= \"_int\" > deleteAAAAA from mybatis.mybatis where id = #{id} <!-- deleteAAAAA\u662f\u6545\u610f\u5199\u9519\u7684 --> </delete> </mapper> resource\u76ee\u5f55\u4e0b\u7684 mybatis-config.xml\u3001spring-dao.xml\u3001applicationContext.xml mybatis-config.xml <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <!-- configuration --> <configuration> <!--\u5f00\u542f\u65e5\u5fd7--> <settings> <setting name= \"logImpl\" value= \"STDOUT_LOGGING\" /> </settings> <!--\u53ef\u4ee5\u7ed9\u5b9e\u4f53\u7c7b\u8d77\u522b\u540d--> <typeAliases> <package name= \"pojo\" /> </typeAliases> </configuration> spring-dao.xml\uff08\u5df2\u5bfc\u5165\u7ea6\u675f\uff09 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xmlns:tx= \"http://www.springframework.org/schema/tx\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd\" > <!--data source --> <bean id= \"datasource\" class= \"org.springframework.jdbc.datasource.DriverManagerDataSource\" > <property name= \"driverClassName\" value= \"com.mysql.cj.jdbc.Driver\" /> <property name= \"url\" value= \"jdbc:mysql://127.0.0.1:3306/mybatis?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=Asia/Shanghai\" /> <property name= \"username\" value= \"root\" /> <property name= \"password\" value= \"root\" /> </bean> <!--sqlSessionFactory--> <bean id= \"sqlSessionFactory\" class= \"org.mybatis.spring.SqlSessionFactoryBean\" > <property name= \"dataSource\" ref= \"datasource\" /> <!--\u7ed1\u5b9a mybatis \u914d\u7f6e\u6587\u4ef6--> <property name= \"configLocation\" value= \"classpath:mybatis-config.xml\" /> <property name= \"mapperLocations\" value= \"classpath:mapper/*.xml\" /> </bean> <!--\u58f0\u660e\u5f0f\u4e8b\u52a1--> <bean id= \"transactionManager\" class= \"org.springframework.jdbc.datasource.DataSourceTransactionManager\" > <constructor-arg ref= \"datasource\" /> </bean> <!--\u7ed3\u5408aop\u5b9e\u73b0\u4e8b\u52a1\u7ec7\u5165--> <!--\u914d\u7f6e\u4e8b\u52a1\u7684\u901a\u77e5\u7c7b--> <tx:advice id= \"txAdvice\" transaction-manager= \"transactionManager\" > <!--\u7ed9\u54ea\u4e9b\u65b9\u6cd5\u914d\u7f6e\u4e8b\u52a1--> <!--\u65b0\u4e1c\u897f\uff1a\u914d\u7f6e\u4e8b\u52a1\u7684\u4f20\u64ad\u7279\u6027 propagation--> <tx:attributes> <tx:method name= \"add\" propagation= \"REQUIRED\" /> <tx:method name= \"delete\" propagation= \"REQUIRED\" /> <tx:method name= \"update\" propagation= \"REQUIRED\" /> <tx:method name= \"query\" read-only= \"true\" /> <!-- *\u53f7\u5305\u542b\u4e0a\u97624\u4e2a\u65b9\u6cd5\uff1a <tx:method name=\"*\" propagation=\"REQUIRED\"/> --> </tx:attributes> </tx:advice> <!--\u914d\u7f6e\u4e8b\u52a1\u5207\u5165--> <aop:config> <aop:pointcut id= \"txpointcut\" expression= \"execution(* mapper.*.*(..))\" /> <aop:advisor advice-ref= \"txAdvice\" pointcut-ref= \"txpointcut\" /> </aop:config> </beans> applicationContext.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:aop= \"http://www.springframework.org/schema/aop\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd\" > <import resource= \"spring-dao.xml\" /> <bean id= \"userMapper\" class= \"mapper.UserMapperImpl\" > <property name= \"sqlSessionFactory\" ref= \"sqlSessionFactory\" ></property> </bean> </beans> \u6d4b\u8bd5\u7c7b import org.springframework.context.ApplicationContext ; import org.springframework.context.support.ClassPathXmlApplicationContext ; import mapper.UserMapper ; import pojo.User ; public class MyTest7 { public static void main ( String [] args ) { ApplicationContext context = new ClassPathXmlApplicationContext ( \"applicationContext.xml\" ); UserMapper userMapper = ( UserMapper ) context . getBean ( \"userMapper\" ); for ( User user : userMapper . getUser ()) { System . out . println ( user ); } } } \u601d\u8003\uff1a \u4e3a\u4ec0\u4e48\u9700\u8981\u4e8b\u52a1\uff1f \u5982\u679c\u4e0d\u914d\u7f6e\u4e8b\u52a1\uff0c\u53ef\u80fd\u5b58\u5728\u6570\u636e\u63d0\u4ea4\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\u4e0b\uff1b \u5982\u679c\u4e0d\u5728spring\u4e2d\u53bb\u914d\u7f6e\u58f0\u660e\u5f0f\u4e8b\u52a1\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5728\u4ee3\u7801\u4e2d\u624b\u52a8\u914d\u7f6e\u4e8b\u52a1\uff01 \u4e8b\u52a1\u5728\u9879\u76ee\u7684\u5f00\u53d1\u4e2d\u975e\u5e38\u91cd\u8981\uff0c\u6d89\u53ca\u5230\u6570\u636e\u7684\u4e00\u81f4\u6027\u548c\u5b8c\u6574\u6027\u95ee\u9898\uff01","title":"13. \u58f0\u660e\u5f0f\u4e8b\u52a1"},{"location":"Java/SpringBoot/SpringBoot/","text":"\u4e00\u3001Spring Boot \u5165\u95e8 \u00b6 1\u3001Spring Boot \u7b80\u4ecb \u00b6 \u7b80\u5316Spring\u5e94\u7528\u5f00\u53d1\u7684\u4e00\u4e2a\u6846\u67b6\uff1b \u6574\u4e2aSpring\u6280\u672f\u6808\u7684\u4e00\u4e2a\u5927\u6574\u5408\uff1b J2EE\u5f00\u53d1\u7684\u4e00\u7ad9\u5f0f\u89e3\u51b3\u65b9\u6848\uff1b 2\u3001\u5fae\u670d\u52a1 \u00b6 2014\uff0cmartin fowler \u5fae\u670d\u52a1\uff1a\u67b6\u6784\u98ce\u683c\uff08\u670d\u52a1\u5fae\u5316\uff09 \u4e00\u4e2a\u5e94\u7528\u5e94\u8be5\u662f\u4e00\u7ec4\u5c0f\u578b\u670d\u52a1\uff1b\u53ef\u4ee5\u901a\u8fc7HTTP\u7684\u65b9\u5f0f\u8fdb\u884c\u4e92\u901a\uff1b \u5355\u4f53\u5e94\u7528\uff1aALL IN ONE \u5fae\u670d\u52a1\uff1a\u6bcf\u4e00\u4e2a\u529f\u80fd\u5143\u7d20\u6700\u7ec8\u90fd\u662f\u4e00\u4e2a\u53ef\u72ec\u7acb\u66ff\u6362\u548c\u72ec\u7acb\u5347\u7ea7\u7684\u8f6f\u4ef6\u5355\u5143\uff1b \u8be6\u7ec6\u53c2\u7167\u5fae\u670d\u52a1\u6587\u6863 3\u3001\u73af\u5883\u51c6\u5907 \u00b6 http://www.gulixueyuan.com/ \u8c37\u7c92\u5b66\u9662 \u73af\u5883\u7ea6\u675f \u2013jdk1.8\uff1aSpring Boot \u63a8\u8350jdk1.7\u53ca\u4ee5\u4e0a\uff1bjava version \"1.8.0_112\" \u2013maven3.x\uff1amaven 3.3\u4ee5\u4e0a\u7248\u672c\uff1bApache Maven 3.3.9 \u2013IntelliJIDEA2017\uff1aIntelliJ IDEA 2017.2.2 x64\u3001STS \u2013SpringBoot 1.5.9.RELEASE\uff1a1.5.9\uff1b \u7edf\u4e00\u73af\u5883\uff1b 1\u3001MAVEN\u8bbe\u7f6e\uff1b \u00b6 \u7ed9maven \u7684settings.xml\u914d\u7f6e\u6587\u4ef6\u7684profiles\u6807\u7b7e\u6dfb\u52a0 <profile> <id> jdk-1.8 </id> <activation> <activeByDefault> true </activeByDefault> <jdk> 1.8 </jdk> </activation> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> <maven.compiler.compilerVersion> 1.8 </maven.compiler.compilerVersion> </properties> </profile> 2\u3001IDEA\u8bbe\u7f6e \u00b6 \u6574\u5408maven\u8fdb\u6765\uff1b 4\u3001Spring Boot HelloWorld \u00b6 \u4e00\u4e2a\u529f\u80fd\uff1a \u6d4f\u89c8\u5668\u53d1\u9001hello\u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u63a5\u53d7\u8bf7\u6c42\u5e76\u5904\u7406\uff0c\u54cd\u5e94Hello World\u5b57\u7b26\u4e32\uff1b 1\u3001\u521b\u5efa\u4e00\u4e2amaven\u5de5\u7a0b\uff1b\uff08jar\uff09 \u00b6 2\u3001\u5bfc\u5165spring boot\u76f8\u5173\u7684\u4f9d\u8d56 \u00b6 <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 1.5.9.RELEASE </version> </parent> <dependencies> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> </dependency> </dependencies> 3\u3001\u7f16\u5199\u4e00\u4e2a\u4e3b\u7a0b\u5e8f\uff1b\u542f\u52a8Spring Boot\u5e94\u7528 \u00b6 /** * @SpringBootApplication \u6765\u6807\u6ce8\u4e00\u4e2a\u4e3b\u7a0b\u5e8f\u7c7b\uff0c\u8bf4\u660e\u8fd9\u662f\u4e00\u4e2aSpring Boot\u5e94\u7528 */ @SpringBootApplication public class HelloWorldMainApplication { public static void main ( String [] args ) { // Spring\u5e94\u7528\u542f\u52a8\u8d77\u6765 SpringApplication . run ( HelloWorldMainApplication . class , args ); } } 4\u3001\u7f16\u5199\u76f8\u5173\u7684Controller\u3001Service \u00b6 @Controller public class HelloController { @ResponseBody @RequestMapping ( \"/hello\" ) public String hello (){ return \"Hello World!\" ; } } 5\u3001\u8fd0\u884c\u4e3b\u7a0b\u5e8f\u6d4b\u8bd5 \u00b6 6\u3001\u7b80\u5316\u90e8\u7f72 \u00b6 <!-- \u8fd9\u4e2a\u63d2\u4ef6\uff0c\u53ef\u4ee5\u5c06\u5e94\u7528\u6253\u5305\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u7684jar\u5305\uff1b--> <build> <plugins> <plugin> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-maven-plugin </artifactId> </plugin> </plugins> </build> \u5c06\u8fd9\u4e2a\u5e94\u7528\u6253\u6210jar\u5305\uff0c\u76f4\u63a5\u4f7f\u7528java -jar\u7684\u547d\u4ee4\u8fdb\u884c\u6267\u884c\uff1b 5\u3001Hello World\u63a2\u7a76 \u00b6 1\u3001POM\u6587\u4ef6 \u00b6 1\u3001\u7236\u9879\u76ee \u00b6 <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 1.5.9.RELEASE </version> </parent> \u4ed6\u7684\u7236\u9879\u76ee\u662f <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-dependencies </artifactId> <version> 1.5.9.RELEASE </version> <relativePath> ../../spring-boot-dependencies </relativePath> </parent> \u4ed6\u6765\u771f\u6b63\u7ba1\u7406Spring Boot\u5e94\u7528\u91cc\u9762\u7684\u6240\u6709\u4f9d\u8d56\u7248\u672c\uff1b Spring Boot\u7684\u7248\u672c\u4ef2\u88c1\u4e2d\u5fc3\uff1b \u4ee5\u540e\u6211\u4eec\u5bfc\u5165\u4f9d\u8d56\u9ed8\u8ba4\u662f\u4e0d\u9700\u8981\u5199\u7248\u672c\uff1b\uff08\u6ca1\u6709\u5728dependencies\u91cc\u9762\u7ba1\u7406\u7684\u4f9d\u8d56\u81ea\u7136\u9700\u8981\u58f0\u660e\u7248\u672c\u53f7\uff09 2\u3001\u542f\u52a8\u5668 \u00b6 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> </dependency> spring-boot-starter -==web==\uff1a \u200b spring-boot-starter\uff1aspring-boot\u573a\u666f\u542f\u52a8\u5668\uff1b\u5e2e\u6211\u4eec\u5bfc\u5165\u4e86web\u6a21\u5757\u6b63\u5e38\u8fd0\u884c\u6240\u4f9d\u8d56\u7684\u7ec4\u4ef6\uff1b Spring Boot\u5c06\u6240\u6709\u7684\u529f\u80fd\u573a\u666f\u90fd\u62bd\u53d6\u51fa\u6765\uff0c\u505a\u6210\u4e00\u4e2a\u4e2a\u7684starters\uff08\u542f\u52a8\u5668\uff09\uff0c\u53ea\u9700\u8981\u5728\u9879\u76ee\u91cc\u9762\u5f15\u5165\u8fd9\u4e9bstarter\u76f8\u5173\u573a\u666f\u7684\u6240\u6709\u4f9d\u8d56\u90fd\u4f1a\u5bfc\u5165\u8fdb\u6765\u3002\u8981\u7528\u4ec0\u4e48\u529f\u80fd\u5c31\u5bfc\u5165\u4ec0\u4e48\u573a\u666f\u7684\u542f\u52a8\u5668 2\u3001\u4e3b\u7a0b\u5e8f\u7c7b\uff0c\u4e3b\u5165\u53e3\u7c7b \u00b6 /** * @SpringBootApplication \u6765\u6807\u6ce8\u4e00\u4e2a\u4e3b\u7a0b\u5e8f\u7c7b\uff0c\u8bf4\u660e\u8fd9\u662f\u4e00\u4e2aSpring Boot\u5e94\u7528 */ @SpringBootApplication public class HelloWorldMainApplication { public static void main ( String [] args ) { // Spring\u5e94\u7528\u542f\u52a8\u8d77\u6765 SpringApplication . run ( HelloWorldMainApplication . class , args ); } } @ SpringBootApplication : Spring Boot\u5e94\u7528\u6807\u6ce8\u5728\u67d0\u4e2a\u7c7b\u4e0a\u8bf4\u660e\u8fd9\u4e2a\u7c7b\u662fSpringBoot\u7684\u4e3b\u914d\u7f6e\u7c7b\uff0cSpringBoot\u5c31\u5e94\u8be5\u8fd0\u884c\u8fd9\u4e2a\u7c7b\u7684main\u65b9\u6cd5\u6765\u542f\u52a8SpringBoot\u5e94\u7528\uff1b @Target ( ElementType . TYPE ) @Retention ( RetentionPolicy . RUNTIME ) @Documented @Inherited @SpringBootConfiguration @EnableAutoConfiguration @ComponentScan ( excludeFilters = { @Filter ( type = FilterType . CUSTOM , classes = TypeExcludeFilter . class ), @Filter ( type = FilterType . CUSTOM , classes = AutoConfigurationExcludeFilter . class ) }) public @interface SpringBootApplication { @ SpringBootConfiguration :Spring Boot\u7684\u914d\u7f6e\u7c7b\uff1b \u200b \u6807\u6ce8\u5728\u67d0\u4e2a\u7c7b\u4e0a\uff0c\u8868\u793a\u8fd9\u662f\u4e00\u4e2aSpring Boot\u7684\u914d\u7f6e\u7c7b\uff1b \u200b @ Configuration :\u914d\u7f6e\u7c7b\u4e0a\u6765\u6807\u6ce8\u8fd9\u4e2a\u6ce8\u89e3\uff1b \u200b \u914d\u7f6e\u7c7b ----- \u914d\u7f6e\u6587\u4ef6\uff1b\u914d\u7f6e\u7c7b\u4e5f\u662f\u5bb9\u5668\u4e2d\u7684\u4e00\u4e2a\u7ec4\u4ef6\uff1b@Component @ EnableAutoConfiguration \uff1a\u5f00\u542f\u81ea\u52a8\u914d\u7f6e\u529f\u80fd\uff1b \u200b \u4ee5\u524d\u6211\u4eec\u9700\u8981\u914d\u7f6e\u7684\u4e1c\u897f\uff0cSpring Boot\u5e2e\u6211\u4eec\u81ea\u52a8\u914d\u7f6e\uff1b@ EnableAutoConfiguration \u544a\u8bc9SpringBoot\u5f00\u542f\u81ea\u52a8\u914d\u7f6e\u529f\u80fd\uff1b\u8fd9\u6837\u81ea\u52a8\u914d\u7f6e\u624d\u80fd\u751f\u6548\uff1b @AutoConfigurationPackage @Import ( EnableAutoConfigurationImportSelector . class ) public @interface EnableAutoConfiguration { \u200b @ AutoConfigurationPackage \uff1a\u81ea\u52a8\u914d\u7f6e\u5305 \u200b @ Import (AutoConfigurationPackages.Registrar.class)\uff1a \u200b Spring\u7684\u5e95\u5c42\u6ce8\u89e3@Import\uff0c\u7ed9\u5bb9\u5668\u4e2d\u5bfc\u5165\u4e00\u4e2a\u7ec4\u4ef6\uff1b\u5bfc\u5165\u7684\u7ec4\u4ef6\u7531AutoConfigurationPackages.Registrar.class\uff1b ==\u5c06\u4e3b\u914d\u7f6e\u7c7b\uff08@SpringBootApplication\u6807\u6ce8\u7684\u7c7b\uff09\u7684\u6240\u5728\u5305\u53ca\u4e0b\u9762\u6240\u6709\u5b50\u5305\u91cc\u9762\u7684\u6240\u6709\u7ec4\u4ef6\u626b\u63cf\u5230Spring\u5bb9\u5668\uff1b== \u200b @ Import (EnableAutoConfigurationImportSelector.class)\uff1b \u200b \u7ed9\u5bb9\u5668\u4e2d\u5bfc\u5165\u7ec4\u4ef6\uff1f \u200b EnableAutoConfigurationImportSelector \uff1a\u5bfc\u5165\u54ea\u4e9b\u7ec4\u4ef6\u7684\u9009\u62e9\u5668\uff1b \u200b \u5c06\u6240\u6709\u9700\u8981\u5bfc\u5165\u7684\u7ec4\u4ef6\u4ee5\u5168\u7c7b\u540d\u7684\u65b9\u5f0f\u8fd4\u56de\uff1b\u8fd9\u4e9b\u7ec4\u4ef6\u5c31\u4f1a\u88ab\u6dfb\u52a0\u5230\u5bb9\u5668\u4e2d\uff1b \u200b \u4f1a\u7ed9\u5bb9\u5668\u4e2d\u5bfc\u5165\u975e\u5e38\u591a\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\uff08xxxAutoConfiguration\uff09\uff1b\u5c31\u662f\u7ed9\u5bb9\u5668\u4e2d\u5bfc\u5165\u8fd9\u4e2a\u573a\u666f\u9700\u8981\u7684\u6240\u6709\u7ec4\u4ef6\uff0c\u5e76\u914d\u7f6e\u597d\u8fd9\u4e9b\u7ec4\u4ef6\uff1b \u6709\u4e86\u81ea\u52a8\u914d\u7f6e\u7c7b\uff0c\u514d\u53bb\u4e86\u6211\u4eec\u624b\u52a8\u7f16\u5199\u914d\u7f6e\u6ce8\u5165\u529f\u80fd\u7ec4\u4ef6\u7b49\u7684\u5de5\u4f5c\uff1b \u200b SpringFactoriesLoader.loadFactoryNames(EnableAutoConfiguration.class,classLoader)\uff1b ==Spring Boot\u5728\u542f\u52a8\u7684\u65f6\u5019\u4ece\u7c7b\u8def\u5f84\u4e0b\u7684META-INF/spring.factories\u4e2d\u83b7\u53d6EnableAutoConfiguration\u6307\u5b9a\u7684\u503c\uff0c\u5c06\u8fd9\u4e9b\u503c\u4f5c\u4e3a\u81ea\u52a8\u914d\u7f6e\u7c7b\u5bfc\u5165\u5230\u5bb9\u5668\u4e2d\uff0c\u81ea\u52a8\u914d\u7f6e\u7c7b\u5c31\u751f\u6548\uff0c\u5e2e\u6211\u4eec\u8fdb\u884c\u81ea\u52a8\u914d\u7f6e\u5de5\u4f5c\uff1b==\u4ee5\u524d\u6211\u4eec\u9700\u8981\u81ea\u5df1\u914d\u7f6e\u7684\u4e1c\u897f\uff0c\u81ea\u52a8\u914d\u7f6e\u7c7b\u90fd\u5e2e\u6211\u4eec\uff1b J2EE\u7684\u6574\u4f53\u6574\u5408\u89e3\u51b3\u65b9\u6848\u548c\u81ea\u52a8\u914d\u7f6e\u90fd\u5728spring-boot-autoconfigure-1.5.9.RELEASE.jar\uff1b \u200b ==Spring\u6ce8\u89e3\u7248\uff08\u8c37\u7c92\u5b66\u9662\uff09== 6\u3001\u4f7f\u7528Spring Initializer\u5feb\u901f\u521b\u5efaSpring Boot\u9879\u76ee \u00b6 1\u3001IDEA\uff1a\u4f7f\u7528 Spring Initializer\u5feb\u901f\u521b\u5efa\u9879\u76ee \u00b6 IDE\u90fd\u652f\u6301\u4f7f\u7528Spring\u7684\u9879\u76ee\u521b\u5efa\u5411\u5bfc\u5feb\u901f\u521b\u5efa\u4e00\u4e2aSpring Boot\u9879\u76ee\uff1b \u9009\u62e9\u6211\u4eec\u9700\u8981\u7684\u6a21\u5757\uff1b\u5411\u5bfc\u4f1a\u8054\u7f51\u521b\u5efaSpring Boot\u9879\u76ee\uff1b \u9ed8\u8ba4\u751f\u6210\u7684Spring Boot\u9879\u76ee\uff1b \u4e3b\u7a0b\u5e8f\u5df2\u7ecf\u751f\u6210\u597d\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6211\u4eec\u81ea\u5df1\u7684\u903b\u8f91 resources\u6587\u4ef6\u5939\u4e2d\u76ee\u5f55\u7ed3\u6784 static\uff1a\u4fdd\u5b58\u6240\u6709\u7684\u9759\u6001\u8d44\u6e90\uff1b js css images\uff1b templates\uff1a\u4fdd\u5b58\u6240\u6709\u7684\u6a21\u677f\u9875\u9762\uff1b\uff08Spring Boot\u9ed8\u8ba4jar\u5305\u4f7f\u7528\u5d4c\u5165\u5f0f\u7684Tomcat\uff0c\u9ed8\u8ba4\u4e0d\u652f\u6301JSP\u9875\u9762\uff09\uff1b\u53ef\u4ee5\u4f7f\u7528\u6a21\u677f\u5f15\u64ce\uff08freemarker\u3001thymeleaf\uff09\uff1b application.properties\uff1aSpring Boot\u5e94\u7528\u7684\u914d\u7f6e\u6587\u4ef6\uff1b\u53ef\u4ee5\u4fee\u6539\u4e00\u4e9b\u9ed8\u8ba4\u8bbe\u7f6e\uff1b 2\u3001STS\u4f7f\u7528 Spring Starter Project\u5feb\u901f\u521b\u5efa\u9879\u76ee \u00b6 \u4e8c\u3001\u914d\u7f6e\u6587\u4ef6 \u00b6 1\u3001\u914d\u7f6e\u6587\u4ef6 \u00b6 SpringBoot\u4f7f\u7528\u4e00\u4e2a\u5168\u5c40\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u6587\u4ef6\u540d\u662f\u56fa\u5b9a\u7684\uff1b \u2022application.properties \u2022application.yml \u914d\u7f6e\u6587\u4ef6\u7684\u4f5c\u7528\uff1a\u4fee\u6539SpringBoot\u81ea\u52a8\u914d\u7f6e\u7684\u9ed8\u8ba4\u503c\uff1bSpringBoot\u5728\u5e95\u5c42\u90fd\u7ed9\u6211\u4eec\u81ea\u52a8\u914d\u7f6e\u597d\uff1b YAML\uff08YAML Ain't Markup Language\uff09 \u200b YAML A Markup Language\uff1a\u662f\u4e00\u4e2a\u6807\u8bb0\u8bed\u8a00 \u200b YAML isn't Markup Language\uff1a\u4e0d\u662f\u4e00\u4e2a\u6807\u8bb0\u8bed\u8a00\uff1b \u6807\u8bb0\u8bed\u8a00\uff1a \u200b \u4ee5\u524d\u7684\u914d\u7f6e\u6587\u4ef6\uff1b\u5927\u591a\u90fd\u4f7f\u7528\u7684\u662f xxxx.xml \u6587\u4ef6\uff1b \u200b YAML\uff1a \u4ee5\u6570\u636e\u4e3a\u4e2d\u5fc3 \uff0c\u6bd4json\u3001xml\u7b49\u66f4\u9002\u5408\u505a\u914d\u7f6e\u6587\u4ef6\uff1b \u200b YAML\uff1a\u914d\u7f6e\u4f8b\u5b50 server : port : 8081 \u200b XML\uff1a <server> <port> 8081 </port> </server> 2\u3001YAML\u8bed\u6cd5\uff1a \u00b6 1\u3001\u57fa\u672c\u8bed\u6cd5 \u00b6 k:(\u7a7a\u683c)v\uff1a\u8868\u793a\u4e00\u5bf9\u952e\u503c\u5bf9\uff08\u7a7a\u683c\u5fc5\u987b\u6709\uff09\uff1b \u4ee5 \u7a7a\u683c \u7684\u7f29\u8fdb\u6765\u63a7\u5236\u5c42\u7ea7\u5173\u7cfb\uff1b\u53ea\u8981\u662f\u5de6\u5bf9\u9f50\u7684\u4e00\u5217\u6570\u636e\uff0c\u90fd\u662f\u540c\u4e00\u4e2a\u5c42\u7ea7\u7684 server : port : 8081 path : /hello \u5c5e\u6027\u548c\u503c\u4e5f\u662f\u5927\u5c0f\u5199\u654f\u611f\uff1b 2\u3001\u503c\u7684\u5199\u6cd5 \u00b6 \u5b57\u9762\u91cf\uff1a\u666e\u901a\u7684\u503c\uff08\u6570\u5b57\uff0c\u5b57\u7b26\u4e32\uff0c\u5e03\u5c14\uff09 \u00b6 \u200b k: v\uff1a\u5b57\u9762\u76f4\u63a5\u6765\u5199\uff1b \u200b \u5b57\u7b26\u4e32\u9ed8\u8ba4\u4e0d\u7528\u52a0\u4e0a\u5355\u5f15\u53f7\u6216\u8005\u53cc\u5f15\u53f7\uff1b \u200b \"\"\uff1a\u53cc\u5f15\u53f7\uff1b\u4e0d\u4f1a\u8f6c\u4e49\u5b57\u7b26\u4e32\u91cc\u9762\u7684\u7279\u6b8a\u5b57\u7b26\uff1b\u7279\u6b8a\u5b57\u7b26\u4f1a\u4f5c\u4e3a\u672c\u8eab\u60f3\u8868\u793a\u7684\u610f\u601d \u200b name: \"zhangsan \\n lisi\"\uff1a\u8f93\u51fa\uff1bzhangsan \u6362\u884c lisi \u200b ''\uff1a\u5355\u5f15\u53f7\uff1b\u4f1a\u8f6c\u4e49\u7279\u6b8a\u5b57\u7b26\uff0c\u7279\u6b8a\u5b57\u7b26\u6700\u7ec8\u53ea\u662f\u4e00\u4e2a\u666e\u901a\u7684\u5b57\u7b26\u4e32\u6570\u636e \u200b name: \u2018zhangsan \\n lisi\u2019\uff1a\u8f93\u51fa\uff1bzhangsan \\n lisi \u5bf9\u8c61\u3001Map\uff08\u5c5e\u6027\u548c\u503c\uff09\uff08\u952e\u503c\u5bf9\uff09\uff1a \u00b6 \u200b k: v\uff1a\u5728\u4e0b\u4e00\u884c\u6765\u5199\u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u503c\u7684\u5173\u7cfb\uff1b\u6ce8\u610f\u7f29\u8fdb \u200b \u5bf9\u8c61\u8fd8\u662fk: v\u7684\u65b9\u5f0f friends : lastName : zhangsan age : 20 \u884c\u5185\u5199\u6cd5\uff1a friends : { lastName : zhangsan , age : 18 } \u6570\u7ec4\uff08List\u3001Set\uff09\uff1a \u00b6 \u7528- \u503c\u8868\u793a\u6570\u7ec4\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20 pets : - cat - dog - pig \u884c\u5185\u5199\u6cd5 pets : [ cat , dog , pig ] 3\u3001\u914d\u7f6e\u6587\u4ef6\u503c\u6ce8\u5165 \u00b6 \u914d\u7f6e\u6587\u4ef6 person : lastName : hello age : 18 boss : false birth : 2017/12/12 maps : { k1 : v1 , k2 : 12 } lists : - lisi - zhaoliu dog : name : \u5c0f\u72d7 age : 12 javaBean\uff1a /** * \u5c06\u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\u7684\u6bcf\u4e00\u4e2a\u5c5e\u6027\u7684\u503c\uff0c\u6620\u5c04\u5230\u8fd9\u4e2a\u7ec4\u4ef6\u4e2d * @ConfigurationProperties\uff1a\u544a\u8bc9SpringBoot\u5c06\u672c\u7c7b\u4e2d\u7684\u6240\u6709\u5c5e\u6027\u548c\u914d\u7f6e\u6587\u4ef6\u4e2d\u76f8\u5173\u7684\u914d\u7f6e\u8fdb\u884c\u7ed1\u5b9a\uff1b * prefix = \"person\"\uff1a\u914d\u7f6e\u6587\u4ef6\u4e2d\u54ea\u4e2a\u4e0b\u9762\u7684\u6240\u6709\u5c5e\u6027\u8fdb\u884c\u4e00\u4e00\u6620\u5c04 * * \u53ea\u6709\u8fd9\u4e2a\u7ec4\u4ef6\u662f\u5bb9\u5668\u4e2d\u7684\u7ec4\u4ef6\uff0c\u624d\u80fd\u5bb9\u5668\u63d0\u4f9b\u7684@ConfigurationProperties\u529f\u80fd\uff1b * */ @Component @ConfigurationProperties ( prefix = \"person\" ) public class Person { private String lastName ; private Integer age ; private Boolean boss ; private Date birth ; private Map < String , Object > maps ; private List < Object > lists ; private Dog dog ; \u6211\u4eec\u53ef\u4ee5\u5bfc\u5165\u914d\u7f6e\u6587\u4ef6\u5904\u7406\u5668\uff0c\u4ee5\u540e\u7f16\u5199\u914d\u7f6e\u5c31\u6709\u63d0\u793a\u4e86 <!--\u5bfc\u5165\u914d\u7f6e\u6587\u4ef6\u5904\u7406\u5668\uff0c\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u7ed1\u5b9a\u5c31\u4f1a\u6709\u63d0\u793a--> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-configuration-processor </artifactId> <optional> true </optional> </dependency> 1\u3001properties\u914d\u7f6e\u6587\u4ef6\u5728idea\u4e2d\u9ed8\u8ba4utf-8\u53ef\u80fd\u4f1a\u4e71\u7801 \u00b6 \u8c03\u6574 2\u3001@Value\u83b7\u53d6\u503c\u548c@ConfigurationProperties\u83b7\u53d6\u503c\u6bd4\u8f83 \u00b6 @ConfigurationProperties @Value \u529f\u80fd \u6279\u91cf\u6ce8\u5165\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u5c5e\u6027 \u4e00\u4e2a\u4e2a\u6307\u5b9a \u677e\u6563\u7ed1\u5b9a\uff08\u677e\u6563\u8bed\u6cd5\uff09 \u652f\u6301 \u4e0d\u652f\u6301 SpEL \u4e0d\u652f\u6301 \u652f\u6301 JSR303\u6570\u636e\u6821\u9a8c \u652f\u6301 \u4e0d\u652f\u6301 \u590d\u6742\u7c7b\u578b\u5c01\u88c5 \u652f\u6301 \u4e0d\u652f\u6301 \u914d\u7f6e\u6587\u4ef6yml\u8fd8\u662fproperties\u4ed6\u4eec\u90fd\u80fd\u83b7\u53d6\u5230\u503c\uff1b \u5982\u679c\u8bf4\uff0c\u6211\u4eec\u53ea\u662f\u5728\u67d0\u4e2a\u4e1a\u52a1\u903b\u8f91\u4e2d\u9700\u8981\u83b7\u53d6\u4e00\u4e0b\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u67d0\u9879\u503c\uff0c\u4f7f\u7528@Value\uff1b \u5982\u679c\u8bf4\uff0c\u6211\u4eec\u4e13\u95e8\u7f16\u5199\u4e86\u4e00\u4e2ajavaBean\u6765\u548c\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u6620\u5c04\uff0c\u6211\u4eec\u5c31\u76f4\u63a5\u4f7f\u7528@ConfigurationProperties\uff1b 3\u3001\u914d\u7f6e\u6587\u4ef6\u6ce8\u5165\u503c\u6570\u636e\u6821\u9a8c \u00b6 @Component @ConfigurationProperties ( prefix = \"person\" ) @Validated public class Person { /** * <bean class=\"Person\"> * <property name=\"lastName\" value=\"\u5b57\u9762\u91cf/${key}\u4ece\u73af\u5883\u53d8\u91cf\u3001\u914d\u7f6e\u6587\u4ef6\u4e2d\u83b7\u53d6\u503c/#{SpEL}\"></property> * <bean/> */ //lastName\u5fc5\u987b\u662f\u90ae\u7bb1\u683c\u5f0f @Email //@Value(\"${person.last-name}\") private String lastName ; //@Value(\"#{11*2}\") private Integer age ; //@Value(\"true\") private Boolean boss ; private Date birth ; private Map < String , Object > maps ; private List < Object > lists ; private Dog dog ; 4\u3001@PropertySource&@ImportResource&@Bean \u00b6 @ PropertySource \uff1a\u52a0\u8f7d\u6307\u5b9a\u7684\u914d\u7f6e\u6587\u4ef6\uff1b /** * \u5c06\u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\u7684\u6bcf\u4e00\u4e2a\u5c5e\u6027\u7684\u503c\uff0c\u6620\u5c04\u5230\u8fd9\u4e2a\u7ec4\u4ef6\u4e2d * @ConfigurationProperties\uff1a\u544a\u8bc9SpringBoot\u5c06\u672c\u7c7b\u4e2d\u7684\u6240\u6709\u5c5e\u6027\u548c\u914d\u7f6e\u6587\u4ef6\u4e2d\u76f8\u5173\u7684\u914d\u7f6e\u8fdb\u884c\u7ed1\u5b9a\uff1b * prefix = \"person\"\uff1a\u914d\u7f6e\u6587\u4ef6\u4e2d\u54ea\u4e2a\u4e0b\u9762\u7684\u6240\u6709\u5c5e\u6027\u8fdb\u884c\u4e00\u4e00\u6620\u5c04 * * \u53ea\u6709\u8fd9\u4e2a\u7ec4\u4ef6\u662f\u5bb9\u5668\u4e2d\u7684\u7ec4\u4ef6\uff0c\u624d\u80fd\u5bb9\u5668\u63d0\u4f9b\u7684@ConfigurationProperties\u529f\u80fd\uff1b * @ConfigurationProperties(prefix = \"person\")\u9ed8\u8ba4\u4ece\u5168\u5c40\u914d\u7f6e\u6587\u4ef6\u4e2d\u83b7\u53d6\u503c\uff1b * */ @PropertySource ( value = { \"classpath:person.properties\" }) @Component @ConfigurationProperties ( prefix = \"person\" ) //@Validated public class Person { /** * <bean class=\"Person\"> * <property name=\"lastName\" value=\"\u5b57\u9762\u91cf/${key}\u4ece\u73af\u5883\u53d8\u91cf\u3001\u914d\u7f6e\u6587\u4ef6\u4e2d\u83b7\u53d6\u503c/#{SpEL}\"></property> * <bean/> */ //lastName\u5fc5\u987b\u662f\u90ae\u7bb1\u683c\u5f0f // @Email //@Value(\"${person.last-name}\") private String lastName ; //@Value(\"#{11*2}\") private Integer age ; //@Value(\"true\") private Boolean boss ; @ ImportResource \uff1a\u5bfc\u5165Spring\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u8ba9\u914d\u7f6e\u6587\u4ef6\u91cc\u9762\u7684\u5185\u5bb9\u751f\u6548\uff1b Spring Boot\u91cc\u9762\u6ca1\u6709Spring\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u4eec\u81ea\u5df1\u7f16\u5199\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u4e5f\u4e0d\u80fd\u81ea\u52a8\u8bc6\u522b\uff1b \u60f3\u8ba9Spring\u7684\u914d\u7f6e\u6587\u4ef6\u751f\u6548\uff0c\u52a0\u8f7d\u8fdb\u6765\uff1b@ ImportResource \u6807\u6ce8\u5728\u4e00\u4e2a\u914d\u7f6e\u7c7b\u4e0a @ImportResource ( locations = { \"classpath:beans.xml\" }) \u5bfc\u5165Spring\u7684\u914d\u7f6e\u6587\u4ef6\u8ba9\u5176\u751f\u6548 \u4e0d\u6765\u7f16\u5199Spring\u7684\u914d\u7f6e\u6587\u4ef6 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"helloService\" class= \"com.atguigu.springboot.service.HelloService\" ></bean> </beans> SpringBoot\u63a8\u8350\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u7ec4\u4ef6\u7684\u65b9\u5f0f\uff1b\u63a8\u8350\u4f7f\u7528\u5168\u6ce8\u89e3\u7684\u65b9\u5f0f 1\u3001\u914d\u7f6e\u7c7b @Configuration ------>Spring\u914d\u7f6e\u6587\u4ef6 2\u3001\u4f7f\u7528 @Bean \u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u7ec4\u4ef6 /** * @Configuration\uff1a\u6307\u660e\u5f53\u524d\u7c7b\u662f\u4e00\u4e2a\u914d\u7f6e\u7c7b\uff1b\u5c31\u662f\u6765\u66ff\u4ee3\u4e4b\u524d\u7684Spring\u914d\u7f6e\u6587\u4ef6 * * \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u7528<bean><bean/>\u6807\u7b7e\u6dfb\u52a0\u7ec4\u4ef6 * */ @Configuration public class MyAppConfig { //\u5c06\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u6dfb\u52a0\u5230\u5bb9\u5668\u4e2d\uff1b\u5bb9\u5668\u4e2d\u8fd9\u4e2a\u7ec4\u4ef6\u9ed8\u8ba4\u7684id\u5c31\u662f\u65b9\u6cd5\u540d @Bean public HelloService helloService02 (){ System . out . println ( \"\u914d\u7f6e\u7c7b@Bean\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u7ec4\u4ef6\u4e86...\" ); return new HelloService (); } } 4\u3001\u914d\u7f6e\u6587\u4ef6\u5360\u4f4d\u7b26 \u00b6 1\u3001\u968f\u673a\u6570 \u00b6 $ { random . value } \u3001 $ { random . int } \u3001 $ { random . long } $ { random . int ( 10 )} \u3001 $ { random . int [ 1024 , 65536 ] } 2\u3001\u5360\u4f4d\u7b26\u83b7\u53d6\u4e4b\u524d\u914d\u7f6e\u7684\u503c\uff0c\u5982\u679c\u6ca1\u6709\u53ef\u4ee5\u662f\u7528:\u6307\u5b9a\u9ed8\u8ba4\u503c \u00b6 person.last-name = \u5f20\u4e09${random.uuid} person.age = ${random.int} person.birth = 2017/12/15 person.boss = false person.maps.k1 = v1 person.maps.k2 = 14 person.lists = a,b,c person.dog.name = ${person.hello:hello}_dog person.dog.age = 15 5\u3001Profile \u00b6 1\u3001\u591aProfile\u6587\u4ef6 \u00b6 \u6211\u4eec\u5728\u4e3b\u914d\u7f6e\u6587\u4ef6\u7f16\u5199\u7684\u65f6\u5019\uff0c\u6587\u4ef6\u540d\u53ef\u4ee5\u662f application-{profile}.properties/yml \u9ed8\u8ba4\u4f7f\u7528application.properties\u7684\u914d\u7f6e\uff1b 2\u3001yml\u652f\u6301\u591a\u6587\u6863\u5757\u65b9\u5f0f \u00b6 server: port: 8081 spring: profiles: active: prod --- server: port: 8083 spring: profiles: dev --- server: port: 8084 spring: profiles: prod #\u6307\u5b9a\u5c5e\u4e8e\u54ea\u4e2a\u73af\u5883 3\u3001\u6fc0\u6d3b\u6307\u5b9aprofile \u00b6 \u200b 1\u3001\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a spring.profiles.active=dev \u200b 2\u3001\u547d\u4ee4\u884c\uff1a \u200b java -jar spring-boot-02-config-0.0.1-SNAPSHOT.jar --spring.profiles.active=dev\uff1b \u200b \u53ef\u4ee5\u76f4\u63a5\u5728\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u914d\u7f6e\u4f20\u5165\u547d\u4ee4\u884c\u53c2\u6570 \u200b 3\u3001\u865a\u62df\u673a\u53c2\u6570\uff1b \u200b -Dspring.profiles.active=dev 6\u3001\u914d\u7f6e\u6587\u4ef6\u52a0\u8f7d\u4f4d\u7f6e \u00b6 springboot \u542f\u52a8\u4f1a\u626b\u63cf\u4ee5\u4e0b\u4f4d\u7f6e\u7684application.properties\u6216\u8005application.yml\u6587\u4ef6\u4f5c\u4e3aSpring boot\u7684\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6 \u2013file:./config/ \u2013file:./ \u2013classpath:/config/ \u2013classpath:/ \u4f18\u5148\u7ea7\u7531\u9ad8\u5230\u5e95\uff0c\u9ad8\u4f18\u5148\u7ea7\u7684\u914d\u7f6e\u4f1a\u8986\u76d6\u4f4e\u4f18\u5148\u7ea7\u7684\u914d\u7f6e\uff1b SpringBoot\u4f1a\u4ece\u8fd9\u56db\u4e2a\u4f4d\u7f6e\u5168\u90e8\u52a0\u8f7d\u4e3b\u914d\u7f6e\u6587\u4ef6\uff1b \u4e92\u8865\u914d\u7f6e \uff1b ==\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7spring.config.location\u6765\u6539\u53d8\u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e== \u9879\u76ee\u6253\u5305\u597d\u4ee5\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u884c\u53c2\u6570\u7684\u5f62\u5f0f\uff0c\u542f\u52a8\u9879\u76ee\u7684\u65f6\u5019\u6765\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u7684\u65b0\u4f4d\u7f6e\uff1b\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u548c\u9ed8\u8ba4\u52a0\u8f7d\u7684\u8fd9\u4e9b\u914d\u7f6e\u6587\u4ef6\u5171\u540c\u8d77\u4f5c\u7528\u5f62\u6210\u4e92\u8865\u914d\u7f6e\uff1b java -jar spring-boot-02-config-02-0.0.1-SNAPSHOT.jar --spring.config.location=G:/application.properties 7\u3001\u5916\u90e8\u914d\u7f6e\u52a0\u8f7d\u987a\u5e8f \u00b6 ==SpringBoot\u4e5f\u53ef\u4ee5\u4ece\u4ee5\u4e0b\u4f4d\u7f6e\u52a0\u8f7d\u914d\u7f6e\uff1b \u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\uff1b\u9ad8\u4f18\u5148\u7ea7\u7684\u914d\u7f6e\u8986\u76d6\u4f4e\u4f18\u5148\u7ea7\u7684\u914d\u7f6e\uff0c\u6240\u6709\u7684\u914d\u7f6e\u4f1a\u5f62\u6210\u4e92\u8865\u914d\u7f6e== 1.\u547d\u4ee4\u884c\u53c2\u6570 \u6240\u6709\u7684\u914d\u7f6e\u90fd\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e0a\u8fdb\u884c\u6307\u5b9a java -jar spring-boot-02-config-02-0.0.1-SNAPSHOT.jar --server.port=8087 --server.context-path=/abc \u591a\u4e2a\u914d\u7f6e\u7528\u7a7a\u683c\u5206\u5f00\uff1b --\u914d\u7f6e\u9879=\u503c 2.\u6765\u81eajava:comp/env\u7684JNDI\u5c5e\u6027 3.Java\u7cfb\u7edf\u5c5e\u6027\uff08System.getProperties()\uff09 4.\u64cd\u4f5c\u7cfb\u7edf\u73af\u5883\u53d8\u91cf 5.RandomValuePropertySource\u914d\u7f6e\u7684random.*\u5c5e\u6027\u503c == \u7531jar\u5305\u5916\u5411jar\u5305\u5185\u8fdb\u884c\u5bfb\u627e\uff1b == == \u4f18\u5148\u52a0\u8f7d\u5e26profile == 6.jar\u5305\u5916\u90e8\u7684application-{profile}.properties\u6216application.yml(\u5e26spring.profile)\u914d\u7f6e\u6587\u4ef6 7.jar\u5305\u5185\u90e8\u7684application-{profile}.properties\u6216application.yml(\u5e26spring.profile)\u914d\u7f6e\u6587\u4ef6 == \u518d\u6765\u52a0\u8f7d\u4e0d\u5e26profile == 8.jar\u5305\u5916\u90e8\u7684application.properties\u6216application.yml(\u4e0d\u5e26spring.profile)\u914d\u7f6e\u6587\u4ef6 9.jar\u5305\u5185\u90e8\u7684application.properties\u6216application.yml(\u4e0d\u5e26spring.profile)\u914d\u7f6e\u6587\u4ef6 10.@Configuration\u6ce8\u89e3\u7c7b\u4e0a\u7684@PropertySource 11.\u901a\u8fc7SpringApplication.setDefaultProperties\u6307\u5b9a\u7684\u9ed8\u8ba4\u5c5e\u6027 \u6240\u6709\u652f\u6301\u7684\u914d\u7f6e\u52a0\u8f7d\u6765\u6e90\uff1b \u53c2\u8003\u5b98\u65b9\u6587\u6863 8\u3001\u81ea\u52a8\u914d\u7f6e\u539f\u7406 \u00b6 \u914d\u7f6e\u6587\u4ef6\u5230\u5e95\u80fd\u5199\u4ec0\u4e48\uff1f\u600e\u4e48\u5199\uff1f\u81ea\u52a8\u914d\u7f6e\u539f\u7406\uff1b \u914d\u7f6e\u6587\u4ef6\u80fd\u914d\u7f6e\u7684\u5c5e\u6027\u53c2\u7167 1\u3001 \u81ea\u52a8\u914d\u7f6e\u539f\u7406\uff1a \u00b6 1\uff09\u3001SpringBoot\u542f\u52a8\u7684\u65f6\u5019\u52a0\u8f7d\u4e3b\u914d\u7f6e\u7c7b\uff0c\u5f00\u542f\u4e86\u81ea\u52a8\u914d\u7f6e\u529f\u80fd ==@EnableAutoConfiguration== 2\uff09\u3001@EnableAutoConfiguration \u4f5c\u7528\uff1a \u5229\u7528EnableAutoConfigurationImportSelector\u7ed9\u5bb9\u5668\u4e2d\u5bfc\u5165\u4e00\u4e9b\u7ec4\u4ef6\uff1f \u53ef\u4ee5\u67e5\u770bselectImports()\u65b9\u6cd5\u7684\u5185\u5bb9\uff1b List configurations = getCandidateConfigurations(annotationMetadata, attributes);\u83b7\u53d6\u5019\u9009\u7684\u914d\u7f6e ```java SpringFactoriesLoader.loadFactoryNames() \u626b\u63cf\u6240\u6709jar\u5305\u7c7b\u8def\u5f84\u4e0b META-INF/spring.factories \u628a\u626b\u63cf\u5230\u7684\u8fd9\u4e9b\u6587\u4ef6\u7684\u5185\u5bb9\u5305\u88c5\u6210properties\u5bf9\u8c61 \u4eceproperties\u4e2d\u83b7\u53d6\u5230EnableAutoConfiguration.class\u7c7b\uff08\u7c7b\u540d\uff09\u5bf9\u5e94\u7684\u503c\uff0c\u7136\u540e\u628a\u4ed6\u4eec\u6dfb\u52a0\u5728\u5bb9\u5668\u4e2d ``` \u200b ==\u5c06 \u7c7b\u8def\u5f84\u4e0b META-INF/spring.factories \u91cc\u9762\u914d\u7f6e\u7684\u6240\u6709EnableAutoConfiguration\u7684\u503c\u52a0\u5165\u5230\u4e86\u5bb9\u5668\u4e2d\uff1b== # Auto Configure org.springframework.boot.autoconfigure.EnableAutoConfiguration = \\ org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\\ org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\\ org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration,\\ org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration,\\ org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration,\\ org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration,\\ org.springframework.boot.autoconfigure.cloud.CloudAutoConfiguration,\\ org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,\\ org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration,\\ org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,\\ org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration,\\ org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.ldap.LdapDataAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.solr.SolrRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration,\\ org.springframework.boot.autoconfigure.elasticsearch.jest.JestAutoConfiguration,\\ org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration,\\ org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration,\\ org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration,\\ org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration,\\ org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration,\\ org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration,\\ org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration,\\ org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration,\\ org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration,\\ org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\\ org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,\\ org.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration,\\ org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration,\\ org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\\ org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration,\\ org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration,\\ org.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration,\\ org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration,\\ org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration,\\ org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration,\\ org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration,\\ org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration,\\ org.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration,\\ org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration,\\ org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration,\\ org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration,\\ org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration,\\ org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration,\\ org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration,\\ org.springframework.boot.autoconfigure.mobile.DeviceResolverAutoConfiguration,\\ org.springframework.boot.autoconfigure.mobile.DeviceDelegatingViewResolverAutoConfiguration,\\ org.springframework.boot.autoconfigure.mobile.SitePreferenceAutoConfiguration,\\ org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration,\\ org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration,\\ org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration,\\ org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\\ org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration,\\ org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration,\\ org.springframework.boot.autoconfigure.security.SecurityFilterAutoConfiguration,\\ org.springframework.boot.autoconfigure.security.FallbackWebSecurityAutoConfiguration,\\ org.springframework.boot.autoconfigure.security.oauth2.OAuth2AutoConfiguration,\\ org.springframework.boot.autoconfigure.sendgrid.SendGridAutoConfiguration,\\ org.springframework.boot.autoconfigure.session.SessionAutoConfiguration,\\ org.springframework.boot.autoconfigure.social.SocialWebAutoConfiguration,\\ org.springframework.boot.autoconfigure.social.FacebookAutoConfiguration,\\ org.springframework.boot.autoconfigure.social.LinkedInAutoConfiguration,\\ org.springframework.boot.autoconfigure.social.TwitterAutoConfiguration,\\ org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration,\\ org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration,\\ org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration,\\ org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration,\\ org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration,\\ org.springframework.boot.autoconfigure.web.DispatcherServletAutoConfiguration,\\ org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration,\\ org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration,\\ org.springframework.boot.autoconfigure.web.HttpEncodingAutoConfiguration,\\ org.springframework.boot.autoconfigure.web.HttpMessageConvertersAutoConfiguration,\\ org.springframework.boot.autoconfigure.web.MultipartAutoConfiguration,\\ org.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration,\\ org.springframework.boot.autoconfigure.web.WebClientAutoConfiguration,\\ org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration,\\ org.springframework.boot.autoconfigure.websocket.WebSocketAutoConfiguration,\\ org.springframework.boot.autoconfigure.websocket.WebSocketMessagingAutoConfiguration,\\ org.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration \u6bcf\u4e00\u4e2a\u8fd9\u6837\u7684 xxxAutoConfiguration\u7c7b\u90fd\u662f\u5bb9\u5668\u4e2d\u7684\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u90fd\u52a0\u5165\u5230\u5bb9\u5668\u4e2d\uff1b\u7528\u4ed6\u4eec\u6765\u505a\u81ea\u52a8\u914d\u7f6e\uff1b 3\uff09\u3001\u6bcf\u4e00\u4e2a\u81ea\u52a8\u914d\u7f6e\u7c7b\u8fdb\u884c\u81ea\u52a8\u914d\u7f6e\u529f\u80fd\uff1b 4\uff09\u3001\u4ee5 HttpEncodingAutoConfiguration\uff08Http\u7f16\u7801\u81ea\u52a8\u914d\u7f6e\uff09 \u4e3a\u4f8b\u89e3\u91ca\u81ea\u52a8\u914d\u7f6e\u539f\u7406\uff1b @Configuration //\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u914d\u7f6e\u7c7b\uff0c\u4ee5\u524d\u7f16\u5199\u7684\u914d\u7f6e\u6587\u4ef6\u4e00\u6837\uff0c\u4e5f\u53ef\u4ee5\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u7ec4\u4ef6 @EnableConfigurationProperties ( HttpEncodingProperties . class ) //\u542f\u52a8\u6307\u5b9a\u7c7b\u7684ConfigurationProperties\u529f\u80fd\uff1b\u5c06\u914d\u7f6e\u6587\u4ef6\u4e2d\u5bf9\u5e94\u7684\u503c\u548cHttpEncodingProperties\u7ed1\u5b9a\u8d77\u6765\uff1b\u5e76\u628aHttpEncodingProperties\u52a0\u5165\u5230ioc\u5bb9\u5668\u4e2d @ConditionalOnWebApplication //Spring\u5e95\u5c42@Conditional\u6ce8\u89e3\uff08Spring\u6ce8\u89e3\u7248\uff09\uff0c\u6839\u636e\u4e0d\u540c\u7684\u6761\u4ef6\uff0c\u5982\u679c\u6ee1\u8db3\u6307\u5b9a\u7684\u6761\u4ef6\uff0c\u6574\u4e2a\u914d\u7f6e\u7c7b\u91cc\u9762\u7684\u914d\u7f6e\u5c31\u4f1a\u751f\u6548\uff1b \u5224\u65ad\u5f53\u524d\u5e94\u7528\u662f\u5426\u662fweb\u5e94\u7528\uff0c\u5982\u679c\u662f\uff0c\u5f53\u524d\u914d\u7f6e\u7c7b\u751f\u6548 @ConditionalOnClass ( CharacterEncodingFilter . class ) //\u5224\u65ad\u5f53\u524d\u9879\u76ee\u6709\u6ca1\u6709\u8fd9\u4e2a\u7c7bCharacterEncodingFilter\uff1bSpringMVC\u4e2d\u8fdb\u884c\u4e71\u7801\u89e3\u51b3\u7684\u8fc7\u6ee4\u5668\uff1b @ConditionalOnProperty ( prefix = \"spring.http.encoding\" , value = \"enabled\" , matchIfMissing = true ) //\u5224\u65ad\u914d\u7f6e\u6587\u4ef6\u4e2d\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u914d\u7f6e spring.http.encoding.enabled\uff1b\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5224\u65ad\u4e5f\u662f\u6210\u7acb\u7684 //\u5373\u4f7f\u6211\u4eec\u914d\u7f6e\u6587\u4ef6\u4e2d\u4e0d\u914d\u7f6epring.http.encoding.enabled=true\uff0c\u4e5f\u662f\u9ed8\u8ba4\u751f\u6548\u7684\uff1b public class HttpEncodingAutoConfiguration { //\u4ed6\u5df2\u7ecf\u548cSpringBoot\u7684\u914d\u7f6e\u6587\u4ef6\u6620\u5c04\u4e86 private final HttpEncodingProperties properties ; //\u53ea\u6709\u4e00\u4e2a\u6709\u53c2\u6784\u9020\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u53c2\u6570\u7684\u503c\u5c31\u4f1a\u4ece\u5bb9\u5668\u4e2d\u62ff public HttpEncodingAutoConfiguration ( HttpEncodingProperties properties ) { this . properties = properties ; } @Bean //\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u8fd9\u4e2a\u7ec4\u4ef6\u7684\u67d0\u4e9b\u503c\u9700\u8981\u4eceproperties\u4e2d\u83b7\u53d6 @ConditionalOnMissingBean ( CharacterEncodingFilter . class ) //\u5224\u65ad\u5bb9\u5668\u6ca1\u6709\u8fd9\u4e2a\u7ec4\u4ef6\uff1f public CharacterEncodingFilter characterEncodingFilter () { CharacterEncodingFilter filter = new OrderedCharacterEncodingFilter (); filter . setEncoding ( this . properties . getCharset (). name ()); filter . setForceRequestEncoding ( this . properties . shouldForce ( Type . REQUEST )); filter . setForceResponseEncoding ( this . properties . shouldForce ( Type . RESPONSE )); return filter ; } \u6839\u636e\u5f53\u524d\u4e0d\u540c\u7684\u6761\u4ef6\u5224\u65ad\uff0c\u51b3\u5b9a\u8fd9\u4e2a\u914d\u7f6e\u7c7b\u662f\u5426\u751f\u6548\uff1f \u4e00\u4f46\u8fd9\u4e2a\u914d\u7f6e\u7c7b\u751f\u6548\uff1b\u8fd9\u4e2a\u914d\u7f6e\u7c7b\u5c31\u4f1a\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u5404\u79cd\u7ec4\u4ef6\uff1b\u8fd9\u4e9b\u7ec4\u4ef6\u7684\u5c5e\u6027\u662f\u4ece\u5bf9\u5e94\u7684properties\u7c7b\u4e2d\u83b7\u53d6\u7684\uff0c\u8fd9\u4e9b\u7c7b\u91cc\u9762\u7684\u6bcf\u4e00\u4e2a\u5c5e\u6027\u53c8\u662f\u548c\u914d\u7f6e\u6587\u4ef6\u7ed1\u5b9a\u7684\uff1b 5\uff09\u3001\u6240\u6709\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u80fd\u914d\u7f6e\u7684\u5c5e\u6027\u90fd\u662f\u5728xxxxProperties\u7c7b\u4e2d\u5c01\u88c5\u8005\u2018\uff1b\u914d\u7f6e\u6587\u4ef6\u80fd\u914d\u7f6e\u4ec0\u4e48\u5c31\u53ef\u4ee5\u53c2\u7167\u67d0\u4e2a\u529f\u80fd\u5bf9\u5e94\u7684\u8fd9\u4e2a\u5c5e\u6027\u7c7b @ConfigurationProperties ( prefix = \"spring.http.encoding\" ) //\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u83b7\u53d6\u6307\u5b9a\u7684\u503c\u548cbean\u7684\u5c5e\u6027\u8fdb\u884c\u7ed1\u5b9a public class HttpEncodingProperties { public static final Charset DEFAULT_CHARSET = Charset . forName ( \"UTF-8\" ); \u7cbe\u9ad3\uff1a \u200b 1\uff09\u3001SpringBoot\u542f\u52a8\u4f1a\u52a0\u8f7d\u5927\u91cf\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b \u200b 2\uff09\u3001\u6211\u4eec\u770b\u6211\u4eec\u9700\u8981\u7684\u529f\u80fd\u6709\u6ca1\u6709SpringBoot\u9ed8\u8ba4\u5199\u597d\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\uff1b \u200b 3\uff09\u3001\u6211\u4eec\u518d\u6765\u770b\u8fd9\u4e2a\u81ea\u52a8\u914d\u7f6e\u7c7b\u4e2d\u5230\u5e95\u914d\u7f6e\u4e86\u54ea\u4e9b\u7ec4\u4ef6\uff1b\uff08\u53ea\u8981\u6211\u4eec\u8981\u7528\u7684\u7ec4\u4ef6\u6709\uff0c\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u518d\u6765\u914d\u7f6e\u4e86\uff09 \u200b 4\uff09\u3001\u7ed9\u5bb9\u5668\u4e2d\u81ea\u52a8\u914d\u7f6e\u7c7b\u6dfb\u52a0\u7ec4\u4ef6\u7684\u65f6\u5019\uff0c\u4f1a\u4eceproperties\u7c7b\u4e2d\u83b7\u53d6\u67d0\u4e9b\u5c5e\u6027\u3002\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u8fd9\u4e9b\u5c5e\u6027\u7684\u503c\uff1b xxxxAutoConfigurartion\uff1a\u81ea\u52a8\u914d\u7f6e\u7c7b\uff1b \u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u7ec4\u4ef6 xxxxProperties:\u5c01\u88c5\u914d\u7f6e\u6587\u4ef6\u4e2d\u76f8\u5173\u5c5e\u6027\uff1b 2\u3001\u7ec6\u8282 \u00b6 1\u3001@Conditional\u6d3e\u751f\u6ce8\u89e3\uff08Spring\u6ce8\u89e3\u7248\u539f\u751f\u7684@Conditional\u4f5c\u7528\uff09 \u00b6 \u4f5c\u7528\uff1a\u5fc5\u987b\u662f@Conditional\u6307\u5b9a\u7684\u6761\u4ef6\u6210\u7acb\uff0c\u624d\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u7ec4\u4ef6\uff0c\u914d\u7f6e\u914d\u91cc\u9762\u7684\u6240\u6709\u5185\u5bb9\u624d\u751f\u6548\uff1b @Conditional\u6269\u5c55\u6ce8\u89e3 \u4f5c\u7528\uff08\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u5f53\u524d\u6307\u5b9a\u6761\u4ef6\uff09 @ConditionalOnJava \u7cfb\u7edf\u7684java\u7248\u672c\u662f\u5426\u7b26\u5408\u8981\u6c42 @ConditionalOnBean \u5bb9\u5668\u4e2d\u5b58\u5728\u6307\u5b9aBean\uff1b @ConditionalOnMissingBean \u5bb9\u5668\u4e2d\u4e0d\u5b58\u5728\u6307\u5b9aBean\uff1b @ConditionalOnExpression \u6ee1\u8db3SpEL\u8868\u8fbe\u5f0f\u6307\u5b9a @ConditionalOnClass \u7cfb\u7edf\u4e2d\u6709\u6307\u5b9a\u7684\u7c7b @ConditionalOnMissingClass \u7cfb\u7edf\u4e2d\u6ca1\u6709\u6307\u5b9a\u7684\u7c7b @ConditionalOnSingleCandidate \u5bb9\u5668\u4e2d\u53ea\u6709\u4e00\u4e2a\u6307\u5b9a\u7684Bean\uff0c\u6216\u8005\u8fd9\u4e2aBean\u662f\u9996\u9009Bean @ConditionalOnProperty \u7cfb\u7edf\u4e2d\u6307\u5b9a\u7684\u5c5e\u6027\u662f\u5426\u6709\u6307\u5b9a\u7684\u503c @ConditionalOnResource \u7c7b\u8def\u5f84\u4e0b\u662f\u5426\u5b58\u5728\u6307\u5b9a\u8d44\u6e90\u6587\u4ef6 @ConditionalOnWebApplication \u5f53\u524d\u662fweb\u73af\u5883 @ConditionalOnNotWebApplication \u5f53\u524d\u4e0d\u662fweb\u73af\u5883 @ConditionalOnJndi JNDI\u5b58\u5728\u6307\u5b9a\u9879 \u81ea\u52a8\u914d\u7f6e\u7c7b\u5fc5\u987b\u5728\u4e00\u5b9a\u7684\u6761\u4ef6\u4e0b\u624d\u80fd\u751f\u6548\uff1b \u6211\u4eec\u600e\u4e48\u77e5\u9053\u54ea\u4e9b\u81ea\u52a8\u914d\u7f6e\u7c7b\u751f\u6548\uff1b ==\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u542f\u7528 debug=true\u5c5e\u6027\uff1b\u6765\u8ba9\u63a7\u5236\u53f0\u6253\u5370\u81ea\u52a8\u914d\u7f6e\u62a5\u544a== \uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u77e5\u9053\u54ea\u4e9b\u81ea\u52a8\u914d\u7f6e\u7c7b\u751f\u6548\uff1b ========================= AUTO - CONFIGURATION REPORT ========================= Positive matches : \uff08 \u81ea\u52a8\u914d\u7f6e\u7c7b\u542f\u7528\u7684 \uff09 ----------------- DispatcherServletAutoConfiguration matched : - @ConditionalOnClass found required class ' org . springframework . web . servlet . DispatcherServlet ' ; @ConditionalOnMissingClass did not find unwanted class ( OnClassCondition ) - @ConditionalOnWebApplication ( required ) found StandardServletEnvironment ( OnWebApplicationCondition ) Negative matches : \uff08 \u6ca1\u6709\u542f\u52a8 \uff0c \u6ca1\u6709\u5339\u914d\u6210\u529f\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b \uff09 ----------------- ActiveMQAutoConfiguration : Did not match : - @ConditionalOnClass did not find required classes ' javax . jms . ConnectionFactory ' , ' org . apache . activemq . ActiveMQConnectionFactory ' ( OnClassCondition ) AopAutoConfiguration : Did not match : - @ConditionalOnClass did not find required classes ' org . aspectj . lang . annotation . Aspect ' , ' org . aspectj . lang . reflect . Advice ' ( OnClassCondition ) \u4e09\u3001\u65e5\u5fd7 \u00b6 1\u3001\u65e5\u5fd7\u6846\u67b6 \u00b6 \u5c0f\u5f20\uff1b\u5f00\u53d1\u4e00\u4e2a\u5927\u578b\u7cfb\u7edf\uff1b \u200b 1\u3001System.out.println(\"\")\uff1b\u5c06\u5173\u952e\u6570\u636e\u6253\u5370\u5728\u63a7\u5236\u53f0\uff1b\u53bb\u6389\uff1f\u5199\u5728\u4e00\u4e2a\u6587\u4ef6\uff1f \u200b 2\u3001\u6846\u67b6\u6765\u8bb0\u5f55\u7cfb\u7edf\u7684\u4e00\u4e9b\u8fd0\u884c\u65f6\u4fe1\u606f\uff1b\u65e5\u5fd7\u6846\u67b6 \uff1b zhanglogging.jar\uff1b \u200b 3\u3001\u9ad8\u5927\u4e0a\u7684\u51e0\u4e2a\u529f\u80fd\uff1f\u5f02\u6b65\u6a21\u5f0f\uff1f\u81ea\u52a8\u5f52\u6863\uff1fxxxx\uff1f zhanglogging-good.jar\uff1f \u200b 4\u3001\u5c06\u4ee5\u524d\u6846\u67b6\u5378\u4e0b\u6765\uff1f\u6362\u4e0a\u65b0\u7684\u6846\u67b6\uff0c\u91cd\u65b0\u4fee\u6539\u4e4b\u524d\u76f8\u5173\u7684API\uff1bzhanglogging-prefect.jar\uff1b \u200b 5\u3001JDBC---\u6570\u636e\u5e93\u9a71\u52a8\uff1b \u200b \u5199\u4e86\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\u5c42\uff1b\u65e5\u5fd7\u95e8\u9762\uff08\u65e5\u5fd7\u7684\u4e00\u4e2a\u62bd\u8c61\u5c42\uff09\uff1blogging-abstract.jar\uff1b \u200b \u7ed9\u9879\u76ee\u4e2d\u5bfc\u5165\u5177\u4f53\u7684\u65e5\u5fd7\u5b9e\u73b0\u5c31\u884c\u4e86\uff1b\u6211\u4eec\u4e4b\u524d\u7684\u65e5\u5fd7\u6846\u67b6\u90fd\u662f\u5b9e\u73b0\u7684\u62bd\u8c61\u5c42\uff1b \u5e02\u9762\u4e0a\u7684\u65e5\u5fd7\u6846\u67b6\uff1b JUL\u3001JCL\u3001Jboss-logging\u3001logback\u3001log4j\u3001log4j2\u3001slf4j.... \u65e5\u5fd7\u95e8\u9762 \uff08\u65e5\u5fd7\u7684\u62bd\u8c61\u5c42\uff09 \u65e5\u5fd7\u5b9e\u73b0 ~~JCL\uff08Jakarta Commons Logging\uff09~~ SLF4j\uff08Simple Logging Facade for Java\uff09 ~~jboss-logging~~ Log4j JUL\uff08java.util.logging\uff09 Log4j2 Logback \u5de6\u8fb9\u9009\u4e00\u4e2a\u95e8\u9762\uff08\u62bd\u8c61\u5c42\uff09\u3001\u53f3\u8fb9\u6765\u9009\u4e00\u4e2a\u5b9e\u73b0\uff1b \u65e5\u5fd7\u95e8\u9762\uff1a SLF4J\uff1b \u65e5\u5fd7\u5b9e\u73b0\uff1aLogback\uff1b SpringBoot\uff1a\u5e95\u5c42\u662fSpring\u6846\u67b6\uff0cSpring\u6846\u67b6\u9ed8\u8ba4\u662f\u7528JCL\uff1b\u2018 \u200b ==SpringBoot\u9009\u7528 SLF4j\u548clogback\uff1b== 2\u3001SLF4j\u4f7f\u7528 \u00b6 1\u3001\u5982\u4f55\u5728\u7cfb\u7edf\u4e2d\u4f7f\u7528SLF4j https://www.slf4j.org \u00b6 \u4ee5\u540e\u5f00\u53d1\u7684\u65f6\u5019\uff0c\u65e5\u5fd7\u8bb0\u5f55\u65b9\u6cd5\u7684\u8c03\u7528\uff0c\u4e0d\u5e94\u8be5\u6765\u76f4\u63a5\u8c03\u7528\u65e5\u5fd7\u7684\u5b9e\u73b0\u7c7b\uff0c\u800c\u662f\u8c03\u7528\u65e5\u5fd7\u62bd\u8c61\u5c42\u91cc\u9762\u7684\u65b9\u6cd5\uff1b \u7ed9\u7cfb\u7edf\u91cc\u9762\u5bfc\u5165slf4j\u7684jar\u548c logback\u7684\u5b9e\u73b0jar import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; public class HelloWorld { public static void main ( String [] args ) { Logger logger = LoggerFactory . getLogger ( HelloWorld . class ); logger . info ( \"Hello World\" ); } } \u56fe\u793a\uff1b \u6bcf\u4e00\u4e2a\u65e5\u5fd7\u7684\u5b9e\u73b0\u6846\u67b6\u90fd\u6709\u81ea\u5df1\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u4f7f\u7528slf4j\u4ee5\u540e\uff0c \u914d\u7f6e\u6587\u4ef6\u8fd8\u662f\u505a\u6210\u65e5\u5fd7\u5b9e\u73b0\u6846\u67b6\u81ea\u5df1\u672c\u8eab\u7684\u914d\u7f6e\u6587\u4ef6\uff1b 2\u3001\u9057\u7559\u95ee\u9898 \u00b6 a\uff08slf4j+logback\uff09: Spring\uff08commons-logging\uff09\u3001Hibernate\uff08jboss-logging\uff09\u3001MyBatis\u3001xxxx \u7edf\u4e00\u65e5\u5fd7\u8bb0\u5f55\uff0c\u5373\u4f7f\u662f\u522b\u7684\u6846\u67b6\u548c\u6211\u4e00\u8d77\u7edf\u4e00\u4f7f\u7528slf4j\u8fdb\u884c\u8f93\u51fa\uff1f \u5982\u4f55\u8ba9\u7cfb\u7edf\u4e2d\u6240\u6709\u7684\u65e5\u5fd7\u90fd\u7edf\u4e00\u5230slf4j\uff1b ==1\u3001\u5c06\u7cfb\u7edf\u4e2d\u5176\u4ed6\u65e5\u5fd7\u6846\u67b6\u5148\u6392\u9664\u51fa\u53bb\uff1b== ==2\u3001\u7528\u4e2d\u95f4\u5305\u6765\u66ff\u6362\u539f\u6709\u7684\u65e5\u5fd7\u6846\u67b6\uff1b== ==3\u3001\u6211\u4eec\u5bfc\u5165slf4j\u5176\u4ed6\u7684\u5b9e\u73b0== 3\u3001SpringBoot\u65e5\u5fd7\u5173\u7cfb \u00b6 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter </artifactId> </dependency> SpringBoot\u4f7f\u7528\u5b83\u6765\u505a\u65e5\u5fd7\u529f\u80fd\uff1b <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-logging </artifactId> </dependency> \u5e95\u5c42\u4f9d\u8d56\u5173\u7cfb \u603b\u7ed3\uff1a \u200b 1\uff09\u3001SpringBoot\u5e95\u5c42\u4e5f\u662f\u4f7f\u7528slf4j+logback\u7684\u65b9\u5f0f\u8fdb\u884c\u65e5\u5fd7\u8bb0\u5f55 \u200b 2\uff09\u3001SpringBoot\u4e5f\u628a\u5176\u4ed6\u7684\u65e5\u5fd7\u90fd\u66ff\u6362\u6210\u4e86slf4j\uff1b \u200b 3\uff09\u3001\u4e2d\u95f4\u66ff\u6362\u5305\uff1f @SuppressWarnings ( \"rawtypes\" ) public abstract class LogFactory { static String UNSUPPORTED_OPERATION_IN_JCL_OVER_SLF4J = \"http://www.slf4j.org/codes.html#unsupported_operation_in_jcl_over_slf4j\" ; static LogFactory logFactory = new SLF4JLogFactory (); \u200b 4\uff09\u3001\u5982\u679c\u6211\u4eec\u8981\u5f15\u5165\u5176\u4ed6\u6846\u67b6\uff1f\u4e00\u5b9a\u8981\u628a\u8fd9\u4e2a\u6846\u67b6\u7684\u9ed8\u8ba4\u65e5\u5fd7\u4f9d\u8d56\u79fb\u9664\u6389\uff1f \u200b Spring\u6846\u67b6\u7528\u7684\u662fcommons-logging\uff1b <dependency> <groupId> org.springframework </groupId> <artifactId> spring-core </artifactId> <exclusions> <exclusion> <groupId> commons-logging </groupId> <artifactId> commons-logging </artifactId> </exclusion> </exclusions> </dependency> ==SpringBoot\u80fd\u81ea\u52a8\u9002\u914d\u6240\u6709\u7684\u65e5\u5fd7\uff0c\u800c\u4e14\u5e95\u5c42\u4f7f\u7528slf4j+logback\u7684\u65b9\u5f0f\u8bb0\u5f55\u65e5\u5fd7\uff0c\u5f15\u5165\u5176\u4ed6\u6846\u67b6\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u628a\u8fd9\u4e2a\u6846\u67b6\u4f9d\u8d56\u7684\u65e5\u5fd7\u6846\u67b6\u6392\u9664\u6389\u5373\u53ef\uff1b== 4\u3001\u65e5\u5fd7\u4f7f\u7528\uff1b \u00b6 1\u3001\u9ed8\u8ba4\u914d\u7f6e \u00b6 SpringBoot\u9ed8\u8ba4\u5e2e\u6211\u4eec\u914d\u7f6e\u597d\u4e86\u65e5\u5fd7\uff1b //\u8bb0\u5f55\u5668 Logger logger = LoggerFactory . getLogger ( getClass ()); @Test public void contextLoads () { //System.out.println(); //\u65e5\u5fd7\u7684\u7ea7\u522b\uff1b //\u7531\u4f4e\u5230\u9ad8 trace<debug<info<warn<error //\u53ef\u4ee5\u8c03\u6574\u8f93\u51fa\u7684\u65e5\u5fd7\u7ea7\u522b\uff1b\u65e5\u5fd7\u5c31\u53ea\u4f1a\u5728\u8fd9\u4e2a\u7ea7\u522b\u4ee5\u4ee5\u540e\u7684\u9ad8\u7ea7\u522b\u751f\u6548 logger . trace ( \"\u8fd9\u662ftrace\u65e5\u5fd7...\" ); logger . debug ( \"\u8fd9\u662fdebug\u65e5\u5fd7...\" ); //SpringBoot\u9ed8\u8ba4\u7ed9\u6211\u4eec\u4f7f\u7528\u7684\u662finfo\u7ea7\u522b\u7684\uff0c\u6ca1\u6709\u6307\u5b9a\u7ea7\u522b\u7684\u5c31\u7528SpringBoot\u9ed8\u8ba4\u89c4\u5b9a\u7684\u7ea7\u522b\uff1broot\u7ea7\u522b logger . info ( \"\u8fd9\u662finfo\u65e5\u5fd7...\" ); logger . warn ( \"\u8fd9\u662fwarn\u65e5\u5fd7...\" ); logger . error ( \"\u8fd9\u662ferror\u65e5\u5fd7...\" ); } \u65e5\u5fd7\u8f93\u51fa\u683c\u5f0f\uff1a %d\u8868\u793a\u65e5\u671f\u65f6\u95f4\uff0c %thread\u8868\u793a\u7ebf\u7a0b\u540d\uff0c %-5level\uff1a\u7ea7\u522b\u4ece\u5de6\u663e\u793a5\u4e2a\u5b57\u7b26\u5bbd\u5ea6 %logger{50} \u8868\u793alogger\u540d\u5b57\u6700\u957f50\u4e2a\u5b57\u7b26\uff0c\u5426\u5219\u6309\u7167\u53e5\u70b9\u5206\u5272\u3002 %msg\uff1a\u65e5\u5fd7\u6d88\u606f\uff0c %n\u662f\u6362\u884c\u7b26 --> %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n SpringBoot\u4fee\u6539\u65e5\u5fd7\u7684\u9ed8\u8ba4\u914d\u7f6e logging.level.com.atguigu = trace #logging.path= # \u4e0d\u6307\u5b9a\u8def\u5f84\u5728\u5f53\u524d\u9879\u76ee\u4e0b\u751f\u6210springboot.log\u65e5\u5fd7 # \u53ef\u4ee5\u6307\u5b9a\u5b8c\u6574\u7684\u8def\u5f84\uff1b #logging.file=G:/springboot.log # \u5728\u5f53\u524d\u78c1\u76d8\u7684\u6839\u8def\u5f84\u4e0b\u521b\u5efaspring\u6587\u4ef6\u5939\u548c\u91cc\u9762\u7684log\u6587\u4ef6\u5939\uff1b\u4f7f\u7528 spring.log \u4f5c\u4e3a\u9ed8\u8ba4\u6587\u4ef6 logging.path = /spring/log # \u5728\u63a7\u5236\u53f0\u8f93\u51fa\u7684\u65e5\u5fd7\u7684\u683c\u5f0f logging.pattern.console = %d{yyyy-MM-dd} [%thread] %-5level %logger{50} - %msg%n # \u6307\u5b9a\u6587\u4ef6\u4e2d\u65e5\u5fd7\u8f93\u51fa\u7684\u683c\u5f0f logging.pattern.file = %d{yyyy-MM-dd} === [%thread] === %-5level === %logger{50} ==== %msg%n logging.file logging.path Example Description (none) (none) \u53ea\u5728\u63a7\u5236\u53f0\u8f93\u51fa \u6307\u5b9a\u6587\u4ef6\u540d (none) my.log \u8f93\u51fa\u65e5\u5fd7\u5230my.log\u6587\u4ef6 (none) \u6307\u5b9a\u76ee\u5f55 /var/log \u8f93\u51fa\u5230\u6307\u5b9a\u76ee\u5f55\u7684 spring.log \u6587\u4ef6\u4e2d 2\u3001\u6307\u5b9a\u914d\u7f6e \u00b6 \u7ed9\u7c7b\u8def\u5f84\u4e0b\u653e\u4e0a\u6bcf\u4e2a\u65e5\u5fd7\u6846\u67b6\u81ea\u5df1\u7684\u914d\u7f6e\u6587\u4ef6\u5373\u53ef\uff1bSpringBoot\u5c31\u4e0d\u4f7f\u7528\u4ed6\u9ed8\u8ba4\u914d\u7f6e\u7684\u4e86 Logging System Customization Logback logback-spring.xml , logback-spring.groovy , logback.xml or logback.groovy Log4j2 log4j2-spring.xml or log4j2.xml JDK (Java Util Logging) logging.properties logback.xml\uff1a\u76f4\u63a5\u5c31\u88ab\u65e5\u5fd7\u6846\u67b6\u8bc6\u522b\u4e86\uff1b logback-spring.xml \uff1a\u65e5\u5fd7\u6846\u67b6\u5c31\u4e0d\u76f4\u63a5\u52a0\u8f7d\u65e5\u5fd7\u7684\u914d\u7f6e\u9879\uff0c\u7531SpringBoot\u89e3\u6790\u65e5\u5fd7\u914d\u7f6e\uff0c\u53ef\u4ee5\u4f7f\u7528SpringBoot\u7684\u9ad8\u7ea7Profile\u529f\u80fd <springProfile name= \"staging\" > <!-- configuration to be enabled when the \"staging\" profile is active --> \u53ef\u4ee5\u6307\u5b9a\u67d0\u6bb5\u914d\u7f6e\u53ea\u5728\u67d0\u4e2a\u73af\u5883\u4e0b\u751f\u6548 </springProfile> \u5982\uff1a <appender name= \"stdout\" class= \"ch.qos.logback.core.ConsoleAppender\" > <!-- \u65e5\u5fd7\u8f93\u51fa\u683c\u5f0f\uff1a %d\u8868\u793a\u65e5\u671f\u65f6\u95f4\uff0c %thread\u8868\u793a\u7ebf\u7a0b\u540d\uff0c %-5level\uff1a\u7ea7\u522b\u4ece\u5de6\u663e\u793a5\u4e2a\u5b57\u7b26\u5bbd\u5ea6 %logger{50} \u8868\u793alogger\u540d\u5b57\u6700\u957f50\u4e2a\u5b57\u7b26\uff0c\u5426\u5219\u6309\u7167\u53e5\u70b9\u5206\u5272\u3002 %msg\uff1a\u65e5\u5fd7\u6d88\u606f\uff0c %n\u662f\u6362\u884c\u7b26 --> <layout class= \"ch.qos.logback.classic.PatternLayout\" > <springProfile name= \"dev\" > <pattern> %d{yyyy-MM-dd HH:mm:ss.SSS} ----> [%thread] ---> %-5level %logger{50} - %msg%n </pattern> </springProfile> <springProfile name= \"!dev\" > <pattern> %d{yyyy-MM-dd HH:mm:ss.SSS} ==== [%thread] ==== %-5level %logger{50} - %msg%n </pattern> </springProfile> </layout> </appender> \u5982\u679c\u4f7f\u7528logback.xml\u4f5c\u4e3a\u65e5\u5fd7\u914d\u7f6e\u6587\u4ef6\uff0c\u8fd8\u8981\u4f7f\u7528profile\u529f\u80fd\uff0c\u4f1a\u6709\u4ee5\u4e0b\u9519\u8bef no applicable action for [springProfile] 5\u3001\u5207\u6362\u65e5\u5fd7\u6846\u67b6 \u00b6 \u53ef\u4ee5\u6309\u7167slf4j\u7684\u65e5\u5fd7\u9002\u914d\u56fe\uff0c\u8fdb\u884c\u76f8\u5173\u7684\u5207\u6362\uff1b slf4j+log4j\u7684\u65b9\u5f0f\uff1b <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> <exclusions> <exclusion> <artifactId> logback-classic </artifactId> <groupId> ch.qos.logback </groupId> </exclusion> <exclusion> <artifactId> log4j-over-slf4j </artifactId> <groupId> org.slf4j </groupId> </exclusion> </exclusions> </dependency> <dependency> <groupId> org.slf4j </groupId> <artifactId> slf4j-log4j12 </artifactId> </dependency> \u5207\u6362\u4e3alog4j2 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> <exclusions> <exclusion> <artifactId> spring-boot-starter-logging </artifactId> <groupId> org.springframework.boot </groupId> </exclusion> </exclusions> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-log4j2 </artifactId> </dependency> \u56db\u3001Web\u5f00\u53d1 \u00b6 1\u3001\u7b80\u4ecb \u00b6 \u4f7f\u7528SpringBoot\uff1b 1\uff09\u3001\u521b\u5efaSpringBoot\u5e94\u7528\uff0c\u9009\u4e2d\u6211\u4eec\u9700\u8981\u7684\u6a21\u5757\uff1b 2\uff09\u3001SpringBoot\u5df2\u7ecf\u9ed8\u8ba4\u5c06\u8fd9\u4e9b\u573a\u666f\u914d\u7f6e\u597d\u4e86\uff0c\u53ea\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u5c11\u91cf\u914d\u7f6e\u5c31\u53ef\u4ee5\u8fd0\u884c\u8d77\u6765 3\uff09\u3001\u81ea\u5df1\u7f16\u5199\u4e1a\u52a1\u4ee3\u7801\uff1b \u81ea\u52a8\u914d\u7f6e\u539f\u7406\uff1f \u8fd9\u4e2a\u573a\u666fSpringBoot\u5e2e\u6211\u4eec\u914d\u7f6e\u4e86\u4ec0\u4e48\uff1f\u80fd\u4e0d\u80fd\u4fee\u6539\uff1f\u80fd\u4fee\u6539\u54ea\u4e9b\u914d\u7f6e\uff1f\u80fd\u4e0d\u80fd\u6269\u5c55\uff1fxxx xxxxAutoConfiguration\uff1a\u5e2e\u6211\u4eec\u7ed9\u5bb9\u5668\u4e2d\u81ea\u52a8\u914d\u7f6e\u7ec4\u4ef6\uff1b xxxxProperties:\u914d\u7f6e\u7c7b\u6765\u5c01\u88c5\u914d\u7f6e\u6587\u4ef6\u7684\u5185\u5bb9\uff1b 2\u3001SpringBoot\u5bf9\u9759\u6001\u8d44\u6e90\u7684\u6620\u5c04\u89c4\u5219\uff1b \u00b6 @ConfigurationProperties ( prefix = \"spring.resources\" , ignoreUnknownFields = false ) public class ResourceProperties implements ResourceLoaderAware { //\u53ef\u4ee5\u8bbe\u7f6e\u548c\u9759\u6001\u8d44\u6e90\u6709\u5173\u7684\u53c2\u6570\uff0c\u7f13\u5b58\u65f6\u95f4\u7b49 WebMvcAuotConfiguration \uff1a @Override public void addResourceHandlers ( ResourceHandlerRegistry registry ) { if ( ! this . resourceProperties . isAddMappings ()) { logger . debug ( \"Default resource handling disabled\" ); return ; } Integer cachePeriod = this . resourceProperties . getCachePeriod (); if ( ! registry . hasMappingForPattern ( \"/webjars/**\" )) { customizeResourceHandlerRegistration ( registry . addResourceHandler ( \"/webjars/**\" ) . addResourceLocations ( \"classpath:/META-INF/resources/webjars/\" ) . setCachePeriod ( cachePeriod )); } String staticPathPattern = this . mvcProperties . getStaticPathPattern (); //\u9759\u6001\u8d44\u6e90\u6587\u4ef6\u5939\u6620\u5c04 if ( ! registry . hasMappingForPattern ( staticPathPattern )) { customizeResourceHandlerRegistration ( registry . addResourceHandler ( staticPathPattern ) . addResourceLocations ( this . resourceProperties . getStaticLocations ()) . setCachePeriod ( cachePeriod )); } } //\u914d\u7f6e\u6b22\u8fce\u9875\u6620\u5c04 @Bean public WelcomePageHandlerMapping welcomePageHandlerMapping ( ResourceProperties resourceProperties ) { return new WelcomePageHandlerMapping ( resourceProperties . getWelcomePage (), this . mvcProperties . getStaticPathPattern ()); } //\u914d\u7f6e\u559c\u6b22\u7684\u56fe\u6807 @Configuration @ConditionalOnProperty ( value = \"spring.mvc.favicon.enabled\" , matchIfMissing = true ) public static class FaviconConfiguration { private final ResourceProperties resourceProperties ; public FaviconConfiguration ( ResourceProperties resourceProperties ) { this . resourceProperties = resourceProperties ; } @Bean public SimpleUrlHandlerMapping faviconHandlerMapping () { SimpleUrlHandlerMapping mapping = new SimpleUrlHandlerMapping (); mapping . setOrder ( Ordered . HIGHEST_PRECEDENCE + 1 ); //\u6240\u6709 **/favicon.ico mapping . setUrlMap ( Collections . singletonMap ( \"**/favicon.ico\" , faviconRequestHandler ())); return mapping ; } @Bean public ResourceHttpRequestHandler faviconRequestHandler () { ResourceHttpRequestHandler requestHandler = new ResourceHttpRequestHandler (); requestHandler . setLocations ( this . resourceProperties . getFaviconLocations ()); return requestHandler ; } } ==1\uff09\u3001\u6240\u6709 /webjars/** \uff0c\u90fd\u53bb classpath:/META-INF/resources/webjars/ \u627e\u8d44\u6e90\uff1b== \u200b webjars\uff1a\u4ee5jar\u5305\u7684\u65b9\u5f0f\u5f15\u5165\u9759\u6001\u8d44\u6e90\uff1b http://www.webjars.org/ localhost:8080/webjars/jquery/3.3.1/jquery.js <!--\u5f15\u5165jquery-webjar--> \u5728\u8bbf\u95ee\u7684\u65f6\u5019\u53ea\u9700\u8981\u5199webjars\u4e0b\u9762\u8d44\u6e90\u7684\u540d\u79f0\u5373\u53ef <dependency> <groupId> org.webjars </groupId> <artifactId> jquery </artifactId> <version> 3.3.1 </version> </dependency> ==2\uff09\u3001\"/**\" \u8bbf\u95ee\u5f53\u524d\u9879\u76ee\u7684\u4efb\u4f55\u8d44\u6e90\uff0c\u90fd\u53bb\uff08\u9759\u6001\u8d44\u6e90\u7684\u6587\u4ef6\u5939\uff09\u627e\u6620\u5c04== \"classpath:/META-INF/resources/\", \"classpath:/resources/\", \"classpath:/static/\", \"classpath:/public/\" \"/\"\uff1a\u5f53\u524d\u9879\u76ee\u7684\u6839\u8def\u5f84 localhost:8080/abc === \u53bb\u9759\u6001\u8d44\u6e90\u6587\u4ef6\u5939\u91cc\u9762\u627eabc ==3\uff09\u3001\u6b22\u8fce\u9875\uff1b \u9759\u6001\u8d44\u6e90\u6587\u4ef6\u5939\u4e0b\u7684\u6240\u6709index.html\u9875\u9762\uff1b\u88ab\"/**\"\u6620\u5c04\uff1b== \u200b localhost:8080/ \u627eindex\u9875\u9762 ==4\uff09\u3001\u6240\u6709\u7684 **/favicon.ico \u90fd\u662f\u5728\u9759\u6001\u8d44\u6e90\u6587\u4ef6\u4e0b\u627e\uff1b== 3\u3001\u6a21\u677f\u5f15\u64ce \u00b6 JSP\u3001Velocity\u3001Freemarker\u3001Thymeleaf SpringBoot\u63a8\u8350\u7684Thymeleaf\uff1b \u8bed\u6cd5\u66f4\u7b80\u5355\uff0c\u529f\u80fd\u66f4\u5f3a\u5927\uff1b 1\u3001\u5f15\u5165thymeleaf\uff1b \u00b6 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-thymeleaf </artifactId> 2.1.6 </dependency> \u5207\u6362thymeleaf\u7248\u672c <properties> <thymeleaf.version> 3.0.9.RELEASE </thymeleaf.version> <!-- \u5e03\u5c40\u529f\u80fd\u7684\u652f\u6301\u7a0b\u5e8f thymeleaf3\u4e3b\u7a0b\u5e8f layout2\u4ee5\u4e0a\u7248\u672c --> <!-- thymeleaf2 layout1--> <thymeleaf-layout-dialect.version> 2.2.2 </thymeleaf-layout-dialect.version> </properties> 2\u3001Thymeleaf\u4f7f\u7528 \u00b6 @ConfigurationProperties ( prefix = \"spring.thymeleaf\" ) public class ThymeleafProperties { private static final Charset DEFAULT_ENCODING = Charset . forName ( \"UTF-8\" ); private static final MimeType DEFAULT_CONTENT_TYPE = MimeType . valueOf ( \"text/html\" ); public static final String DEFAULT_PREFIX = \"classpath:/templates/\" ; public static final String DEFAULT_SUFFIX = \".html\" ; // \u53ea\u8981\u6211\u4eec\u628aHTML\u9875\u9762\u653e\u5728classpath:/templates/\uff0cthymeleaf\u5c31\u80fd\u81ea\u52a8\u6e32\u67d3\uff1b \u4f7f\u7528\uff1a 1\u3001\u5bfc\u5165thymeleaf\u7684\u540d\u79f0\u7a7a\u95f4 <html lang= \"en\" xmlns:th= \"http://www.thymeleaf.org\" > 2\u3001\u4f7f\u7528thymeleaf\u8bed\u6cd5\uff1b <!DOCTYPE html> < html lang = \"en\" xmlns:th = \"http://www.thymeleaf.org\" > < head > < meta charset = \"UTF-8\" > < title > Title </ title > </ head > < body > < h1 > \u6210\u529f\uff01 </ h1 > <!--th:text \u5c06div\u91cc\u9762\u7684\u6587\u672c\u5185\u5bb9\u8bbe\u7f6e\u4e3a --> < div th:text = \"${hello}\" > \u8fd9\u662f\u663e\u793a\u6b22\u8fce\u4fe1\u606f </ div > </ body > </ html > 3\u3001\u8bed\u6cd5\u89c4\u5219 \u00b6 1\uff09\u3001th:text\uff1b\u6539\u53d8\u5f53\u524d\u5143\u7d20\u91cc\u9762\u7684\u6587\u672c\u5185\u5bb9\uff1b \u200b th\uff1a\u4efb\u610fhtml\u5c5e\u6027\uff1b\u6765\u66ff\u6362\u539f\u751f\u5c5e\u6027\u7684\u503c 2\uff09\u3001\u8868\u8fbe\u5f0f\uff1f Simple expressions : \uff08\u8868\u8fbe\u5f0f\u8bed\u6cd5\uff09 Variable Expressions : ${...}\uff1a\u83b7\u53d6\u53d8\u91cf\u503c\uff1bOGNL\uff1b 1\uff09\u3001\u83b7\u53d6\u5bf9\u8c61\u7684\u5c5e\u6027\u3001\u8c03\u7528\u65b9\u6cd5 2\uff09\u3001\u4f7f\u7528\u5185\u7f6e\u7684\u57fa\u672c\u5bf9\u8c61\uff1a #ctx : the context object. #vars: the context variables. #locale : the context locale. #request : (only in Web Contexts) the HttpServletRequest object. #response : (only in Web Contexts) the HttpServletResponse object. #session : (only in Web Contexts) the HttpSession object. #servletContext : (only in Web Contexts) the ServletContext object. ${session.foo} 3\uff09\u3001\u5185\u7f6e\u7684\u4e00\u4e9b\u5de5\u5177\u5bf9\u8c61\uff1a #execInfo : information about the template being processed. #messages : methods for obtaining externalized messages inside variables expressions, in the same way as they would be obtained using #{\u2026} syntax. #uris : methods for escaping parts of URLs/URIs #conversions : methods for executing the configured conversion service (if any). #dates : methods for java.util.Date objects: formatting, component extraction, etc. #calendars : analogous to #dates , but for java.util.Calendar objects. #numbers : methods for formatting numeric objects. #strings : methods for String objects: contains, startsWith, prepending/appending, etc. #objects : methods for objects in general. #bools : methods for boolean evaluation. #arrays : methods for arrays. #lists : methods for lists. #sets : methods for sets. #maps : methods for maps. #aggregates : methods for creating aggregates on arrays or collections. #ids : methods for dealing with id attributes that might be repeated (for example, as a result of an iteration). Selection Variable Expressions : *{...}\uff1a\u9009\u62e9\u8868\u8fbe\u5f0f\uff1a\u548c${}\u5728\u529f\u80fd\u4e0a\u662f\u4e00\u6837\uff1b \u8865\u5145\uff1a\u914d\u5408 th : object=\"${session.user}\uff1a <div th : object=\"${session.user}\"> <p>Name : <span th:text=\"*{firstName}\">Sebastian</span>.</p> <p>Surname : <span th:text=\"*{lastName}\">Pepper</span>.</p> <p>Nationality : <span th:text=\"*{nationality}\">Saturn</span>.</p> </div> Message Expressions : #{...}\uff1a\u83b7\u53d6\u56fd\u9645\u5316\u5185\u5bb9 Link URL Expressions : @{...}\uff1a\u5b9a\u4e49URL\uff1b @{/order/process(execId = ${execId},execType='FAST')} Fragment Expressions : ~{...}\uff1a\u7247\u6bb5\u5f15\u7528\u8868\u8fbe\u5f0f <div th : insert=\"~{commons :: main}\">...</div> Literals\uff08\u5b57\u9762\u91cf\uff09 Text literals : 'one text' , 'Another one!' ,\u2026 Number literals : 0 , 34 , 3.0 , 12.3 ,\u2026 Boolean literals : true , false Null literal : null Literal tokens : one , sometext , main ,\u2026 Text operations : \uff08\u6587\u672c\u64cd\u4f5c\uff09 String concatenation : + Literal substitutions : |The name is ${name}| Arithmetic operations : \uff08\u6570\u5b66\u8fd0\u7b97\uff09 Binary operators : + , - , * , / , % Minus sign (unary operator) : - Boolean operations : \uff08\u5e03\u5c14\u8fd0\u7b97\uff09 Binary operators : and , or Boolean negation (unary operator) : ! , not Comparisons and equality : \uff08\u6bd4\u8f83\u8fd0\u7b97\uff09 Comparators : > , < , >= , <= ( gt , lt , ge , le ) Equality operators : == , != ( eq , ne ) Conditional operators : \u6761\u4ef6\u8fd0\u7b97\uff08\u4e09\u5143\u8fd0\u7b97\u7b26\uff09 If-then : (if) ? (then) If-then-else : (if) ? (then) : (else) Default : (value) ?: (defaultvalue) Special tokens : No-Operation : _ 4\u3001SpringMVC\u81ea\u52a8\u914d\u7f6e \u00b6 https://docs.spring.io/spring-boot/docs/1.5.10.RELEASE/reference/htmlsingle/#boot-features-developing-web-applications 1. Spring MVC auto-configuration \u00b6 Spring Boot \u81ea\u52a8\u914d\u7f6e\u597d\u4e86SpringMVC \u4ee5\u4e0b\u662fSpringBoot\u5bf9SpringMVC\u7684\u9ed8\u8ba4\u914d\u7f6e: ==\uff08WebMvcAutoConfiguration\uff09== Inclusion of ContentNegotiatingViewResolver and BeanNameViewResolver beans. \u81ea\u52a8\u914d\u7f6e\u4e86ViewResolver\uff08\u89c6\u56fe\u89e3\u6790\u5668\uff1a\u6839\u636e\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u5f97\u5230\u89c6\u56fe\u5bf9\u8c61\uff08View\uff09\uff0c\u89c6\u56fe\u5bf9\u8c61\u51b3\u5b9a\u5982\u4f55\u6e32\u67d3\uff08\u8f6c\u53d1\uff1f\u91cd\u5b9a\u5411\uff1f\uff09\uff09 ContentNegotiatingViewResolver\uff1a\u7ec4\u5408\u6240\u6709\u7684\u89c6\u56fe\u89e3\u6790\u5668\u7684\uff1b ==\u5982\u4f55\u5b9a\u5236\uff1a\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u89c6\u56fe\u89e3\u6790\u5668\uff1b\u81ea\u52a8\u7684\u5c06\u5176\u7ec4\u5408\u8fdb\u6765\uff1b== Support for serving static resources, including support for WebJars (see below).\u9759\u6001\u8d44\u6e90\u6587\u4ef6\u5939\u8def\u5f84,webjars Static index.html support. \u9759\u6001\u9996\u9875\u8bbf\u95ee Custom Favicon support (see below). favicon.ico \u200b \u81ea\u52a8\u6ce8\u518c\u4e86 of Converter , GenericConverter , Formatter beans. Converter\uff1a\u8f6c\u6362\u5668\uff1b public String hello(User user)\uff1a\u7c7b\u578b\u8f6c\u6362\u4f7f\u7528Converter Formatter \u683c\u5f0f\u5316\u5668\uff1b 2017.12.17===Date\uff1b @Bean @ConditionalOnProperty ( prefix = \"spring.mvc\" , name = \"date-format\" ) //\u5728\u6587\u4ef6\u4e2d\u914d\u7f6e\u65e5\u671f\u683c\u5f0f\u5316\u7684\u89c4\u5219 public Formatter < Date > dateFormatter () { return new DateFormatter ( this . mvcProperties . getDateFormat ()); //\u65e5\u671f\u683c\u5f0f\u5316\u7ec4\u4ef6 } \u200b ==\u81ea\u5df1\u6dfb\u52a0\u7684\u683c\u5f0f\u5316\u5668\u8f6c\u6362\u5668\uff0c\u6211\u4eec\u53ea\u9700\u8981\u653e\u5728\u5bb9\u5668\u4e2d\u5373\u53ef== Support for HttpMessageConverters (see below). HttpMessageConverter\uff1aSpringMVC\u7528\u6765\u8f6c\u6362Http\u8bf7\u6c42\u548c\u54cd\u5e94\u7684\uff1bUser---Json\uff1b HttpMessageConverters \u662f\u4ece\u5bb9\u5668\u4e2d\u786e\u5b9a\uff1b\u83b7\u53d6\u6240\u6709\u7684HttpMessageConverter\uff1b ==\u81ea\u5df1\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0HttpMessageConverter\uff0c\u53ea\u9700\u8981\u5c06\u81ea\u5df1\u7684\u7ec4\u4ef6\u6ce8\u518c\u5bb9\u5668\u4e2d\uff08@Bean,@Component\uff09== \u200b Automatic registration of MessageCodesResolver (see below).\u5b9a\u4e49\u9519\u8bef\u4ee3\u7801\u751f\u6210\u89c4\u5219 Automatic use of a ConfigurableWebBindingInitializer bean (see below). ==\u6211\u4eec\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e2aConfigurableWebBindingInitializer\u6765\u66ff\u6362\u9ed8\u8ba4\u7684\uff1b\uff08\u6dfb\u52a0\u5230\u5bb9\u5668\uff09== \u521d\u59cb\u5316WebDataBinder\uff1b \u8bf7\u6c42\u6570\u636e=====JavaBean\uff1b org.springframework.boot.autoconfigure.web\uff1aweb\u7684\u6240\u6709\u81ea\u52a8\u573a\u666f\uff1b If you want to keep Spring Boot MVC features, and you just want to add additional MVC configuration (interceptors, formatters, view controllers etc.) you can add your own @Configuration class of type WebMvcConfigurerAdapter , but without @EnableWebMvc . If you wish to provide custom instances of RequestMappingHandlerMapping , RequestMappingHandlerAdapter or ExceptionHandlerExceptionResolver you can declare a WebMvcRegistrationsAdapter instance providing such components. If you want to take complete control of Spring MVC, you can add your own @Configuration annotated with @EnableWebMvc . 2\u3001\u6269\u5c55SpringMVC \u00b6 <mvc:view-controller path= \"/hello\" view-name= \"success\" /> <mvc:interceptors> <mvc:interceptor> <mvc:mapping path= \"/hello\" /> <bean></bean> </mvc:interceptor> </mvc:interceptors> ==\u7f16\u5199\u4e00\u4e2a\u914d\u7f6e\u7c7b\uff08@Configuration\uff09\uff0c\u662fWebMvcConfigurerAdapter\u7c7b\u578b\uff1b\u4e0d\u80fd\u6807\u6ce8@EnableWebMvc== ; \u65e2\u4fdd\u7559\u4e86\u6240\u6709\u7684\u81ea\u52a8\u914d\u7f6e\uff0c\u4e5f\u80fd\u7528\u6211\u4eec\u6269\u5c55\u7684\u914d\u7f6e\uff1b //\u4f7f\u7528WebMvcConfigurerAdapter\u53ef\u4ee5\u6765\u6269\u5c55SpringMVC\u7684\u529f\u80fd @Configuration public class MyMvcConfig extends WebMvcConfigurerAdapter { @Override public void addViewControllers ( ViewControllerRegistry registry ) { // super.addViewControllers(registry); //\u6d4f\u89c8\u5668\u53d1\u9001 /atguigu \u8bf7\u6c42\u6765\u5230 success registry . addViewController ( \"/atguigu\" ). setViewName ( \"success\" ); } } \u539f\u7406\uff1a \u200b 1\uff09\u3001WebMvcAutoConfiguration\u662fSpringMVC\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b \u200b 2\uff09\u3001\u5728\u505a\u5176\u4ed6\u81ea\u52a8\u914d\u7f6e\u65f6\u4f1a\u5bfc\u5165\uff1b@Import( EnableWebMvcConfiguration .class) @Configuration public static class EnableWebMvcConfiguration extends DelegatingWebMvcConfiguration { private final WebMvcConfigurerComposite configurers = new WebMvcConfigurerComposite (); //\u4ece\u5bb9\u5668\u4e2d\u83b7\u53d6\u6240\u6709\u7684WebMvcConfigurer @Autowired ( required = false ) public void setConfigurers ( List < WebMvcConfigurer > configurers ) { if ( ! CollectionUtils . isEmpty ( configurers )) { this . configurers . addWebMvcConfigurers ( configurers ); //\u4e00\u4e2a\u53c2\u8003\u5b9e\u73b0\uff1b\u5c06\u6240\u6709\u7684WebMvcConfigurer\u76f8\u5173\u914d\u7f6e\u90fd\u6765\u4e00\u8d77\u8c03\u7528\uff1b @Override // public void addViewControllers(ViewControllerRegistry registry) { // for (WebMvcConfigurer delegate : this.delegates) { // delegate.addViewControllers(registry); // } } } } \u200b 3\uff09\u3001\u5bb9\u5668\u4e2d\u6240\u6709\u7684WebMvcConfigurer\u90fd\u4f1a\u4e00\u8d77\u8d77\u4f5c\u7528\uff1b \u200b 4\uff09\u3001\u6211\u4eec\u7684\u914d\u7f6e\u7c7b\u4e5f\u4f1a\u88ab\u8c03\u7528\uff1b \u200b \u6548\u679c\uff1aSpringMVC\u7684\u81ea\u52a8\u914d\u7f6e\u548c\u6211\u4eec\u7684\u6269\u5c55\u914d\u7f6e\u90fd\u4f1a\u8d77\u4f5c\u7528\uff1b 3\u3001\u5168\u9762\u63a5\u7ba1SpringMVC\uff1b \u00b6 SpringBoot\u5bf9SpringMVC\u7684\u81ea\u52a8\u914d\u7f6e\u4e0d\u9700\u8981\u4e86\uff0c\u6240\u6709\u90fd\u662f\u6211\u4eec\u81ea\u5df1\u914d\u7f6e\uff1b\u6240\u6709\u7684SpringMVC\u7684\u81ea\u52a8\u914d\u7f6e\u90fd\u5931\u6548\u4e86 \u6211\u4eec\u9700\u8981\u5728\u914d\u7f6e\u7c7b\u4e2d\u6dfb\u52a0@EnableWebMvc\u5373\u53ef\uff1b //\u4f7f\u7528WebMvcConfigurerAdapter\u53ef\u4ee5\u6765\u6269\u5c55SpringMVC\u7684\u529f\u80fd @EnableWebMvc @Configuration public class MyMvcConfig extends WebMvcConfigurerAdapter { @Override public void addViewControllers ( ViewControllerRegistry registry ) { // super.addViewControllers(registry); //\u6d4f\u89c8\u5668\u53d1\u9001 /atguigu \u8bf7\u6c42\u6765\u5230 success registry . addViewController ( \"/atguigu\" ). setViewName ( \"success\" ); } } \u539f\u7406\uff1a \u4e3a\u4ec0\u4e48@EnableWebMvc\u81ea\u52a8\u914d\u7f6e\u5c31\u5931\u6548\u4e86\uff1b 1\uff09@EnableWebMvc\u7684\u6838\u5fc3 @Import ( DelegatingWebMvcConfiguration . class ) public @interface EnableWebMvc { 2\uff09\u3001 @Configuration public class DelegatingWebMvcConfiguration extends WebMvcConfigurationSupport { 3\uff09\u3001 @Configuration @ConditionalOnWebApplication @ConditionalOnClass ({ Servlet . class , DispatcherServlet . class , WebMvcConfigurerAdapter . class }) //\u5bb9\u5668\u4e2d\u6ca1\u6709\u8fd9\u4e2a\u7ec4\u4ef6\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u81ea\u52a8\u914d\u7f6e\u7c7b\u624d\u751f\u6548 @ConditionalOnMissingBean ( WebMvcConfigurationSupport . class ) @AutoConfigureOrder ( Ordered . HIGHEST_PRECEDENCE + 10 ) @AutoConfigureAfter ({ DispatcherServletAutoConfiguration . class , ValidationAutoConfiguration . class }) public class WebMvcAutoConfiguration { 4\uff09\u3001@EnableWebMvc\u5c06WebMvcConfigurationSupport\u7ec4\u4ef6\u5bfc\u5165\u8fdb\u6765\uff1b 5\uff09\u3001\u5bfc\u5165\u7684WebMvcConfigurationSupport\u53ea\u662fSpringMVC\u6700\u57fa\u672c\u7684\u529f\u80fd\uff1b 5\u3001\u5982\u4f55\u4fee\u6539SpringBoot\u7684\u9ed8\u8ba4\u914d\u7f6e \u00b6 \u6a21\u5f0f\uff1a \u200b 1\uff09\u3001SpringBoot\u5728\u81ea\u52a8\u914d\u7f6e\u5f88\u591a\u7ec4\u4ef6\u7684\u65f6\u5019\uff0c\u5148\u770b\u5bb9\u5668\u4e2d\u6709\u6ca1\u6709\u7528\u6237\u81ea\u5df1\u914d\u7f6e\u7684\uff08@Bean\u3001@Component\uff09\u5982\u679c\u6709\u5c31\u7528\u7528\u6237\u914d\u7f6e\u7684\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u624d\u81ea\u52a8\u914d\u7f6e\uff1b\u5982\u679c\u6709\u4e9b\u7ec4\u4ef6\u53ef\u4ee5\u6709\u591a\u4e2a\uff08ViewResolver\uff09\u5c06\u7528\u6237\u914d\u7f6e\u7684\u548c\u81ea\u5df1\u9ed8\u8ba4\u7684\u7ec4\u5408\u8d77\u6765\uff1b \u200b 2\uff09\u3001\u5728SpringBoot\u4e2d\u4f1a\u6709\u975e\u5e38\u591a\u7684xxxConfigurer\u5e2e\u52a9\u6211\u4eec\u8fdb\u884c\u6269\u5c55\u914d\u7f6e \u200b 3\uff09\u3001\u5728SpringBoot\u4e2d\u4f1a\u6709\u5f88\u591a\u7684xxxCustomizer\u5e2e\u52a9\u6211\u4eec\u8fdb\u884c\u5b9a\u5236\u914d\u7f6e 6\u3001RestfulCRUD \u00b6 1\uff09\u3001\u9ed8\u8ba4\u8bbf\u95ee\u9996\u9875 \u00b6 //\u4f7f\u7528WebMvcConfigurerAdapter\u53ef\u4ee5\u6765\u6269\u5c55SpringMVC\u7684\u529f\u80fd //@EnableWebMvc \u4e0d\u8981\u63a5\u7ba1SpringMVC @Configuration public class MyMvcConfig extends WebMvcConfigurerAdapter { @Override public void addViewControllers ( ViewControllerRegistry registry ) { // super.addViewControllers(registry); //\u6d4f\u89c8\u5668\u53d1\u9001 /atguigu \u8bf7\u6c42\u6765\u5230 success registry . addViewController ( \"/atguigu\" ). setViewName ( \"success\" ); } //\u6240\u6709\u7684WebMvcConfigurerAdapter\u7ec4\u4ef6\u90fd\u4f1a\u4e00\u8d77\u8d77\u4f5c\u7528 @Bean //\u5c06\u7ec4\u4ef6\u6ce8\u518c\u5728\u5bb9\u5668 public WebMvcConfigurerAdapter webMvcConfigurerAdapter (){ WebMvcConfigurerAdapter adapter = new WebMvcConfigurerAdapter () { @Override public void addViewControllers ( ViewControllerRegistry registry ) { registry . addViewController ( \"/\" ). setViewName ( \"login\" ); registry . addViewController ( \"/index.html\" ). setViewName ( \"login\" ); } }; return adapter ; } } 2\uff09\u3001\u56fd\u9645\u5316 \u00b6 1\uff09\u3001\u7f16\u5199\u56fd\u9645\u5316\u914d\u7f6e\u6587\u4ef6\uff1b 2\uff09\u3001\u4f7f\u7528ResourceBundleMessageSource\u7ba1\u7406\u56fd\u9645\u5316\u8d44\u6e90\u6587\u4ef6 3\uff09\u3001\u5728\u9875\u9762\u4f7f\u7528fmt:message\u53d6\u51fa\u56fd\u9645\u5316\u5185\u5bb9 \u6b65\u9aa4\uff1a 1\uff09\u3001\u7f16\u5199\u56fd\u9645\u5316\u914d\u7f6e\u6587\u4ef6\uff0c\u62bd\u53d6\u9875\u9762\u9700\u8981\u663e\u793a\u7684\u56fd\u9645\u5316\u6d88\u606f 2\uff09\u3001SpringBoot\u81ea\u52a8\u914d\u7f6e\u597d\u4e86\u7ba1\u7406\u56fd\u9645\u5316\u8d44\u6e90\u6587\u4ef6\u7684\u7ec4\u4ef6\uff1b @ConfigurationProperties ( prefix = \"spring.messages\" ) public class MessageSourceAutoConfiguration { /** * Comma-separated list of basenames (essentially a fully-qualified classpath * location), each following the ResourceBundle convention with relaxed support for * slash based locations. If it doesn't contain a package qualifier (such as * \"org.mypackage\"), it will be resolved from the classpath root. */ private String basename = \"messages\" ; //\u6211\u4eec\u7684\u914d\u7f6e\u6587\u4ef6\u53ef\u4ee5\u76f4\u63a5\u653e\u5728\u7c7b\u8def\u5f84\u4e0b\u53ebmessages.properties\uff1b @Bean public MessageSource messageSource () { ResourceBundleMessageSource messageSource = new ResourceBundleMessageSource (); if ( StringUtils . hasText ( this . basename )) { //\u8bbe\u7f6e\u56fd\u9645\u5316\u8d44\u6e90\u6587\u4ef6\u7684\u57fa\u7840\u540d\uff08\u53bb\u6389\u8bed\u8a00\u56fd\u5bb6\u4ee3\u7801\u7684\uff09 messageSource . setBasenames ( StringUtils . commaDelimitedListToStringArray ( StringUtils . trimAllWhitespace ( this . basename ))); } if ( this . encoding != null ) { messageSource . setDefaultEncoding ( this . encoding . name ()); } messageSource . setFallbackToSystemLocale ( this . fallbackToSystemLocale ); messageSource . setCacheSeconds ( this . cacheSeconds ); messageSource . setAlwaysUseMessageFormat ( this . alwaysUseMessageFormat ); return messageSource ; } 3\uff09\u3001\u53bb\u9875\u9762\u83b7\u53d6\u56fd\u9645\u5316\u7684\u503c\uff1b <!DOCTYPE html> < html lang = \"en\" xmlns:th = \"http://www.thymeleaf.org\" > < head > < meta http-equiv = \"Content-Type\" content = \"text/html; charset=UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1, shrink-to-fit=no\" > < meta name = \"description\" content = \"\" > < meta name = \"author\" content = \"\" > < title > Signin Template for Bootstrap </ title > <!-- Bootstrap core CSS --> < link href = \"asserts/css/bootstrap.min.css\" th:href = \"@{/webjars/bootstrap/4.0.0/css/bootstrap.css}\" rel = \"stylesheet\" > <!-- Custom styles for this template --> < link href = \"asserts/css/signin.css\" th:href = \"@{/asserts/css/signin.css}\" rel = \"stylesheet\" > </ head > < body class = \"text-center\" > < form class = \"form-signin\" action = \"dashboard.html\" > < img class = \"mb-4\" th:src = \"@{/asserts/img/bootstrap-solid.svg}\" src = \"asserts/img/bootstrap-solid.svg\" alt = \"\" width = \"72\" height = \"72\" > < h1 class = \"h3 mb-3 font-weight-normal\" th:text = \"#{login.tip}\" > Please sign in </ h1 > < label class = \"sr-only\" th:text = \"#{login.username}\" > Username </ label > < input type = \"text\" class = \"form-control\" placeholder = \"Username\" th:placeholder = \"#{login.username}\" required = \"\" autofocus = \"\" > < label class = \"sr-only\" th:text = \"#{login.password}\" > Password </ label > < input type = \"password\" class = \"form-control\" placeholder = \"Password\" th:placeholder = \"#{login.password}\" required = \"\" > < div class = \"checkbox mb-3\" > < label > < input type = \"checkbox\" value = \"remember-me\" /> [[#{login.remember}]] </ label > </ div > < button class = \"btn btn-lg btn-primary btn-block\" type = \"submit\" th:text = \"#{login.btn}\" > Sign in </ button > < p class = \"mt-5 mb-3 text-muted\" > \u00a9 2017-2018 </ p > < a class = \"btn btn-sm\" > \u4e2d\u6587 </ a > < a class = \"btn btn-sm\" > English </ a > </ form > </ body > </ html > \u6548\u679c\uff1a\u6839\u636e\u6d4f\u89c8\u5668\u8bed\u8a00\u8bbe\u7f6e\u7684\u4fe1\u606f\u5207\u6362\u4e86\u56fd\u9645\u5316\uff1b \u539f\u7406\uff1a \u200b \u56fd\u9645\u5316Locale\uff08\u533a\u57df\u4fe1\u606f\u5bf9\u8c61\uff09\uff1bLocaleResolver\uff08\u83b7\u53d6\u533a\u57df\u4fe1\u606f\u5bf9\u8c61\uff09\uff1b @Bean @ConditionalOnMissingBean @ConditionalOnProperty ( prefix = \"spring.mvc\" , name = \"locale\" ) public LocaleResolver localeResolver () { if ( this . mvcProperties . getLocaleResolver () == WebMvcProperties . LocaleResolver . FIXED ) { return new FixedLocaleResolver ( this . mvcProperties . getLocale ()); } AcceptHeaderLocaleResolver localeResolver = new AcceptHeaderLocaleResolver (); localeResolver . setDefaultLocale ( this . mvcProperties . getLocale ()); return localeResolver ; } \u9ed8\u8ba4\u7684\u5c31\u662f\u6839\u636e\u8bf7\u6c42\u5934\u5e26\u6765\u7684\u533a\u57df\u4fe1\u606f\u83b7\u53d6Locale\u8fdb\u884c\u56fd\u9645\u5316 4\uff09\u3001\u70b9\u51fb\u94fe\u63a5\u5207\u6362\u56fd\u9645\u5316 /** * \u53ef\u4ee5\u5728\u8fde\u63a5\u4e0a\u643a\u5e26\u533a\u57df\u4fe1\u606f */ public class MyLocaleResolver implements LocaleResolver { @Override public Locale resolveLocale ( HttpServletRequest request ) { String l = request . getParameter ( \"l\" ); Locale locale = Locale . getDefault (); if ( ! StringUtils . isEmpty ( l )){ String [] split = l . split ( \"_\" ); locale = new Locale ( split [ 0 ] , split [ 1 ] ); } return locale ; } @Override public void setLocale ( HttpServletRequest request , HttpServletResponse response , Locale locale ) { } } @Bean public LocaleResolver localeResolver (){ return new MyLocaleResolver (); } } 3\uff09\u3001\u767b\u9646 \u00b6 \u5f00\u53d1\u671f\u95f4\u6a21\u677f\u5f15\u64ce\u9875\u9762\u4fee\u6539\u4ee5\u540e\uff0c\u8981\u5b9e\u65f6\u751f\u6548 1\uff09\u3001\u7981\u7528\u6a21\u677f\u5f15\u64ce\u7684\u7f13\u5b58 # \u7981\u7528\u7f13\u5b58 spring.thymeleaf.cache=false 2\uff09\u3001\u9875\u9762\u4fee\u6539\u5b8c\u6210\u4ee5\u540ectrl+f9\uff1a\u91cd\u65b0\u7f16\u8bd1\uff1b \u767b\u9646\u9519\u8bef\u6d88\u606f\u7684\u663e\u793a < p style = \"color: red\" th:text = \"${msg}\" th:if = \"${not #strings.isEmpty(msg)}\" ></ p > 4\uff09\u3001\u62e6\u622a\u5668\u8fdb\u884c\u767b\u9646\u68c0\u67e5 \u00b6 \u62e6\u622a\u5668 /** * \u767b\u9646\u68c0\u67e5\uff0c */ public class LoginHandlerInterceptor implements HandlerInterceptor { //\u76ee\u6807\u65b9\u6cd5\u6267\u884c\u4e4b\u524d @Override public boolean preHandle ( HttpServletRequest request , HttpServletResponse response , Object handler ) throws Exception { Object user = request . getSession (). getAttribute ( \"loginUser\" ); if ( user == null ){ //\u672a\u767b\u9646\uff0c\u8fd4\u56de\u767b\u9646\u9875\u9762 request . setAttribute ( \"msg\" , \"\u6ca1\u6709\u6743\u9650\u8bf7\u5148\u767b\u9646\" ); request . getRequestDispatcher ( \"/index.html\" ). forward ( request , response ); return false ; } else { //\u5df2\u767b\u9646\uff0c\u653e\u884c\u8bf7\u6c42 return true ; } } @Override public void postHandle ( HttpServletRequest request , HttpServletResponse response , Object handler , ModelAndView modelAndView ) throws Exception { } @Override public void afterCompletion ( HttpServletRequest request , HttpServletResponse response , Object handler , Exception ex ) throws Exception { } } \u6ce8\u518c\u62e6\u622a\u5668 //\u6240\u6709\u7684WebMvcConfigurerAdapter\u7ec4\u4ef6\u90fd\u4f1a\u4e00\u8d77\u8d77\u4f5c\u7528 @Bean //\u5c06\u7ec4\u4ef6\u6ce8\u518c\u5728\u5bb9\u5668 public WebMvcConfigurerAdapter webMvcConfigurerAdapter (){ WebMvcConfigurerAdapter adapter = new WebMvcConfigurerAdapter () { @Override public void addViewControllers ( ViewControllerRegistry registry ) { registry . addViewController ( \"/\" ). setViewName ( \"login\" ); registry . addViewController ( \"/index.html\" ). setViewName ( \"login\" ); registry . addViewController ( \"/main.html\" ). setViewName ( \"dashboard\" ); } //\u6ce8\u518c\u62e6\u622a\u5668 @Override public void addInterceptors ( InterceptorRegistry registry ) { //super.addInterceptors(registry); //\u9759\u6001\u8d44\u6e90\uff1b *.css , *.js //SpringBoot\u5df2\u7ecf\u505a\u597d\u4e86\u9759\u6001\u8d44\u6e90\u6620\u5c04 registry . addInterceptor ( new LoginHandlerInterceptor ()). addPathPatterns ( \"/**\" ) . excludePathPatterns ( \"/index.html\" , \"/\" , \"/user/login\" ); } }; return adapter ; } 5\uff09\u3001CRUD-\u5458\u5de5\u5217\u8868 \u00b6 \u5b9e\u9a8c\u8981\u6c42\uff1a 1\uff09\u3001RestfulCRUD\uff1aCRUD\u6ee1\u8db3Rest\u98ce\u683c\uff1b URI\uff1a /\u8d44\u6e90\u540d\u79f0/\u8d44\u6e90\u6807\u8bc6 HTTP\u8bf7\u6c42\u65b9\u5f0f\u533a\u5206\u5bf9\u8d44\u6e90CRUD\u64cd\u4f5c \u666e\u901aCRUD\uff08uri\u6765\u533a\u5206\u64cd\u4f5c\uff09 RestfulCRUD \u67e5\u8be2 getEmp emp---GET \u6dfb\u52a0 addEmp?xxx emp---POST \u4fee\u6539 updateEmp?id=xxx&xxx=xx emp/{id}---PUT \u5220\u9664 deleteEmp?id=1 emp/{id}---DELETE 2\uff09\u3001\u5b9e\u9a8c\u7684\u8bf7\u6c42\u67b6\u6784; \u5b9e\u9a8c\u529f\u80fd \u8bf7\u6c42URI \u8bf7\u6c42\u65b9\u5f0f \u67e5\u8be2\u6240\u6709\u5458\u5de5 emps GET \u67e5\u8be2\u67d0\u4e2a\u5458\u5de5(\u6765\u5230\u4fee\u6539\u9875\u9762) emp/1 GET \u6765\u5230\u6dfb\u52a0\u9875\u9762 emp GET \u6dfb\u52a0\u5458\u5de5 emp POST \u6765\u5230\u4fee\u6539\u9875\u9762\uff08\u67e5\u51fa\u5458\u5de5\u8fdb\u884c\u4fe1\u606f\u56de\u663e\uff09 emp/1 GET \u4fee\u6539\u5458\u5de5 emp PUT \u5220\u9664\u5458\u5de5 emp/1 DELETE 3\uff09\u3001\u5458\u5de5\u5217\u8868\uff1a thymeleaf\u516c\u5171\u9875\u9762\u5143\u7d20\u62bd\u53d6 \u00b6 1\u3001\u62bd\u53d6\u516c\u5171\u7247\u6bb5 < div th:fragment = \"copy\" > &copy; 2011 The Good Thymes Virtual Grocery </ div > 2\u3001\u5f15\u5165\u516c\u5171\u7247\u6bb5 < div th:insert = \"~{footer :: copy}\" ></ div > ~{templatename::selector}\uff1a\u6a21\u677f\u540d::\u9009\u62e9\u5668 ~{templatename::fragmentname}:\u6a21\u677f\u540d::\u7247\u6bb5\u540d 3\u3001\u9ed8\u8ba4\u6548\u679c\uff1a insert\u7684\u516c\u5171\u7247\u6bb5\u5728div\u6807\u7b7e\u4e2d \u5982\u679c\u4f7f\u7528th:insert\u7b49\u5c5e\u6027\u8fdb\u884c\u5f15\u5165\uff0c\u53ef\u4ee5\u4e0d\u7528\u5199~{}\uff1a \u884c\u5185\u5199\u6cd5\u53ef\u4ee5\u52a0\u4e0a\uff1a[[~{}]];[(~{})]\uff1b \u4e09\u79cd\u5f15\u5165\u516c\u5171\u7247\u6bb5\u7684th\u5c5e\u6027\uff1a th:insert \uff1a\u5c06\u516c\u5171\u7247\u6bb5\u6574\u4e2a\u63d2\u5165\u5230\u58f0\u660e\u5f15\u5165\u7684\u5143\u7d20\u4e2d th:replace \uff1a\u5c06\u58f0\u660e\u5f15\u5165\u7684\u5143\u7d20\u66ff\u6362\u4e3a\u516c\u5171\u7247\u6bb5 th:include \uff1a\u5c06\u88ab\u5f15\u5165\u7684\u7247\u6bb5\u7684\u5185\u5bb9\u5305\u542b\u8fdb\u8fd9\u4e2a\u6807\u7b7e\u4e2d < footer th:fragment = \"copy\" > &copy; 2011 The Good Thymes Virtual Grocery </ footer > \u5f15\u5165\u65b9\u5f0f < div th:insert = \"footer :: copy\" ></ div > < div th:replace = \"footer :: copy\" ></ div > < div th:include = \"footer :: copy\" ></ div > \u6548\u679c < div > < footer > &copy; 2011 The Good Thymes Virtual Grocery </ footer > </ div > < footer > &copy; 2011 The Good Thymes Virtual Grocery </ footer > < div > &copy; 2011 The Good Thymes Virtual Grocery </ div > \u5f15\u5165\u7247\u6bb5\u7684\u65f6\u5019\u4f20\u5165\u53c2\u6570\uff1a < nav class = \"col-md-2 d-none d-md-block bg-light sidebar\" id = \"sidebar\" > < div class = \"sidebar-sticky\" > < ul class = \"nav flex-column\" > < li class = \"nav-item\" > < a class = \"nav-link active\" th:class = \"${activeUri=='main.html'?'nav-link active':'nav-link'}\" href = \"#\" th:href = \"@{/main.html}\" > < svg xmlns = \"http://www.w3.org/2000/svg\" width = \"24\" height = \"24\" viewBox = \"0 0 24 24\" fill = \"none\" stroke = \"currentColor\" stroke-width = \"2\" stroke-linecap = \"round\" stroke-linejoin = \"round\" class = \"feather feather-home\" > < path d = \"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\" ></ path > < polyline points = \"9 22 9 12 15 12 15 22\" ></ polyline > </ svg > Dashboard < span class = \"sr-only\" > (current) </ span > </ a > </ li > <!--\u5f15\u5165\u4fa7\u8fb9\u680f;\u4f20\u5165\u53c2\u6570--> < div th:replace = \"commons/bar::#sidebar(activeUri='emps')\" ></ div > 6\uff09\u3001CRUD-\u5458\u5de5\u6dfb\u52a0 \u00b6 \u6dfb\u52a0\u9875\u9762 < form > < div class = \"form-group\" > < label > LastName </ label > < input type = \"text\" class = \"form-control\" placeholder = \"zhangsan\" > </ div > < div class = \"form-group\" > < label > Email </ label > < input type = \"email\" class = \"form-control\" placeholder = \"zhangsan@atguigu.com\" > </ div > < div class = \"form-group\" > < label > Gender </ label >< br /> < div class = \"form-check form-check-inline\" > < input class = \"form-check-input\" type = \"radio\" name = \"gender\" value = \"1\" > < label class = \"form-check-label\" > \u7537 </ label > </ div > < div class = \"form-check form-check-inline\" > < input class = \"form-check-input\" type = \"radio\" name = \"gender\" value = \"0\" > < label class = \"form-check-label\" > \u5973 </ label > </ div > </ div > < div class = \"form-group\" > < label > department </ label > < select class = \"form-control\" > < option > 1 </ option > < option > 2 </ option > < option > 3 </ option > < option > 4 </ option > < option > 5 </ option > </ select > </ div > < div class = \"form-group\" > < label > Birth </ label > < input type = \"text\" class = \"form-control\" placeholder = \"zhangsan\" > </ div > < button type = \"submit\" class = \"btn btn-primary\" > \u6dfb\u52a0 </ button > </ form > \u63d0\u4ea4\u7684\u6570\u636e\u683c\u5f0f\u4e0d\u5bf9\uff1a\u751f\u65e5\uff1a\u65e5\u671f\uff1b 2017-12-12\uff1b2017/12/12\uff1b2017.12.12\uff1b \u65e5\u671f\u7684\u683c\u5f0f\u5316\uff1bSpringMVC\u5c06\u9875\u9762\u63d0\u4ea4\u7684\u503c\u9700\u8981\u8f6c\u6362\u4e3a\u6307\u5b9a\u7684\u7c7b\u578b; 2017-12-12---Date\uff1b \u7c7b\u578b\u8f6c\u6362\uff0c\u683c\u5f0f\u5316; \u9ed8\u8ba4\u65e5\u671f\u662f\u6309\u7167/\u7684\u65b9\u5f0f\uff1b 7\uff09\u3001CRUD-\u5458\u5de5\u4fee\u6539 \u00b6 \u4fee\u6539\u6dfb\u52a0\u4e8c\u5408\u4e00\u8868\u5355 <!--\u9700\u8981\u533a\u5206\u662f\u5458\u5de5\u4fee\u6539\u8fd8\u662f\u6dfb\u52a0\uff1b--> < form th:action = \"@{/emp}\" method = \"post\" > <!--\u53d1\u9001put\u8bf7\u6c42\u4fee\u6539\u5458\u5de5\u6570\u636e--> <!-- 1\u3001SpringMVC\u4e2d\u914d\u7f6eHiddenHttpMethodFilter;\uff08SpringBoot\u81ea\u52a8\u914d\u7f6e\u597d\u7684\uff09 2\u3001\u9875\u9762\u521b\u5efa\u4e00\u4e2apost\u8868\u5355 3\u3001\u521b\u5efa\u4e00\u4e2ainput\u9879\uff0cname=\"_method\";\u503c\u5c31\u662f\u6211\u4eec\u6307\u5b9a\u7684\u8bf7\u6c42\u65b9\u5f0f --> < input type = \"hidden\" name = \"_method\" value = \"put\" th:if = \"${emp!=null}\" /> < input type = \"hidden\" name = \"id\" th:if = \"${emp!=null}\" th:value = \"${emp.id}\" > < div class = \"form-group\" > < label > LastName </ label > < input name = \"lastName\" type = \"text\" class = \"form-control\" placeholder = \"zhangsan\" th:value = \"${emp!=null}?${emp.lastName}\" > </ div > < div class = \"form-group\" > < label > Email </ label > < input name = \"email\" type = \"email\" class = \"form-control\" placeholder = \"zhangsan@atguigu.com\" th:value = \"${emp!=null}?${emp.email}\" > </ div > < div class = \"form-group\" > < label > Gender </ label >< br /> < div class = \"form-check form-check-inline\" > < input class = \"form-check-input\" type = \"radio\" name = \"gender\" value = \"1\" th:checked = \"${emp!=null}?${emp.gender==1}\" > < label class = \"form-check-label\" > \u7537 </ label > </ div > < div class = \"form-check form-check-inline\" > < input class = \"form-check-input\" type = \"radio\" name = \"gender\" value = \"0\" th:checked = \"${emp!=null}?${emp.gender==0}\" > < label class = \"form-check-label\" > \u5973 </ label > </ div > </ div > < div class = \"form-group\" > < label > department </ label > <!--\u63d0\u4ea4\u7684\u662f\u90e8\u95e8\u7684id--> < select class = \"form-control\" name = \"department.id\" > < option th:selected = \"${emp!=null}?${dept.id == emp.department.id}\" th:value = \"${dept.id}\" th:each = \"dept:${depts}\" th:text = \"${dept.departmentName}\" > 1 </ option > </ select > </ div > < div class = \"form-group\" > < label > Birth </ label > < input name = \"birth\" type = \"text\" class = \"form-control\" placeholder = \"zhangsan\" th:value = \"${emp!=null}?${#dates.format(emp.birth, 'yyyy-MM-dd HH:mm')}\" > </ div > < button type = \"submit\" class = \"btn btn-primary\" th:text = \"${emp!=null}?'\u4fee\u6539':'\u6dfb\u52a0'\" > \u6dfb\u52a0 </ button > </ form > 8\uff09\u3001CRUD-\u5458\u5de5\u5220\u9664 \u00b6 < tr th:each = \"emp:${emps}\" > < td th:text = \"${emp.id}\" ></ td > < td > [[${emp.lastName}]] </ td > < td th:text = \"${emp.email}\" ></ td > < td th:text = \"${emp.gender}==0?'\u5973':'\u7537'\" ></ td > < td th:text = \"${emp.department.departmentName}\" ></ td > < td th:text = \"${#dates.format(emp.birth, 'yyyy-MM-dd HH:mm')}\" ></ td > < td > < a class = \"btn btn-sm btn-primary\" th:href = \"@{/emp/}+${emp.id}\" > \u7f16\u8f91 </ a > < button th:attr = \"del_uri=@{/emp/}+${emp.id}\" class = \"btn btn-sm btn-danger deleteBtn\" > \u5220\u9664 </ button > </ td > </ tr > < script > $ ( \".deleteBtn\" ). click ( function (){ //\u5220\u9664\u5f53\u524d\u5458\u5de5\u7684 $ ( \"#deleteEmpForm\" ). attr ( \"action\" , $ ( this ). attr ( \"del_uri\" )). submit (); return false ; }); </ script > 7\u3001\u9519\u8bef\u5904\u7406\u673a\u5236 \u00b6 1\uff09\u3001SpringBoot\u9ed8\u8ba4\u7684\u9519\u8bef\u5904\u7406\u673a\u5236 \u00b6 \u9ed8\u8ba4\u6548\u679c\uff1a \u200b 1\uff09\u3001\u6d4f\u89c8\u5668\uff0c\u8fd4\u56de\u4e00\u4e2a\u9ed8\u8ba4\u7684\u9519\u8bef\u9875\u9762 \u6d4f\u89c8\u5668\u53d1\u9001\u8bf7\u6c42\u7684\u8bf7\u6c42\u5934\uff1a \u200b 2\uff09\u3001\u5982\u679c\u662f\u5176\u4ed6\u5ba2\u6237\u7aef\uff0c\u9ed8\u8ba4\u54cd\u5e94\u4e00\u4e2ajson\u6570\u636e \u200b \u539f\u7406\uff1a \u200b \u53ef\u4ee5\u53c2\u7167ErrorMvcAutoConfiguration\uff1b\u9519\u8bef\u5904\u7406\u7684\u81ea\u52a8\u914d\u7f6e\uff1b \u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u4e86\u4ee5\u4e0b\u7ec4\u4ef6 \u200b 1\u3001DefaultErrorAttributes\uff1a \u5e2e\u6211\u4eec\u5728\u9875\u9762\u5171\u4eab\u4fe1\u606f \uff1b @Override public Map < String , Object > getErrorAttributes ( RequestAttributes requestAttributes , boolean includeStackTrace ) { Map < String , Object > errorAttributes = new LinkedHashMap < String , Object > (); errorAttributes . put ( \"timestamp\" , new Date ()); addStatus ( errorAttributes , requestAttributes ); addErrorDetails ( errorAttributes , requestAttributes , includeStackTrace ); addPath ( errorAttributes , requestAttributes ); return errorAttributes ; } \u200b 2\u3001BasicErrorController\uff1a\u5904\u7406\u9ed8\u8ba4/error\u8bf7\u6c42 @Controller @RequestMapping ( \"${server.error.path:${error.path:/error}}\" ) public class BasicErrorController extends AbstractErrorController { @RequestMapping ( produces = \"text/html\" ) //\u4ea7\u751fhtml\u7c7b\u578b\u7684\u6570\u636e\uff1b\u6d4f\u89c8\u5668\u53d1\u9001\u7684\u8bf7\u6c42\u6765\u5230\u8fd9\u4e2a\u65b9\u6cd5\u5904\u7406 public ModelAndView errorHtml ( HttpServletRequest request , HttpServletResponse response ) { HttpStatus status = getStatus ( request ); Map < String , Object > model = Collections . unmodifiableMap ( getErrorAttributes ( request , isIncludeStackTrace ( request , MediaType . TEXT_HTML ))); response . setStatus ( status . value ()); //\u53bb\u54ea\u4e2a\u9875\u9762\u4f5c\u4e3a\u9519\u8bef\u9875\u9762\uff1b\u5305\u542b\u9875\u9762\u5730\u5740\u548c\u9875\u9762\u5185\u5bb9 ModelAndView modelAndView = resolveErrorView ( request , response , status , model ); return ( modelAndView == null ? new ModelAndView ( \"error\" , model ) : modelAndView ); } @RequestMapping @ResponseBody //\u4ea7\u751fjson\u6570\u636e\uff0c\u5176\u4ed6\u5ba2\u6237\u7aef\u6765\u5230\u8fd9\u4e2a\u65b9\u6cd5\u5904\u7406\uff1b public ResponseEntity < Map < String , Object >> error ( HttpServletRequest request ) { Map < String , Object > body = getErrorAttributes ( request , isIncludeStackTrace ( request , MediaType . ALL )); HttpStatus status = getStatus ( request ); return new ResponseEntity < Map < String , Object >> ( body , status ); } \u200b 3\u3001ErrorPageCustomizer\uff1a @Value ( \"${error.path:/error}\" ) private String path = \"/error\" ; \u7cfb\u7edf\u51fa\u73b0\u9519\u8bef\u4ee5\u540e\u6765\u5230error\u8bf7\u6c42\u8fdb\u884c\u5904\u7406 \uff1b\uff08 web . xml\u6ce8\u518c\u7684\u9519\u8bef\u9875\u9762\u89c4\u5219 \uff09 \u200b 4\u3001DefaultErrorViewResolver\uff1a @Override public ModelAndView resolveErrorView ( HttpServletRequest request , HttpStatus status , Map < String , Object > model ) { ModelAndView modelAndView = resolve ( String . valueOf ( status ), model ); if ( modelAndView == null && SERIES_VIEWS . containsKey ( status . series ())) { modelAndView = resolve ( SERIES_VIEWS . get ( status . series ()), model ); } return modelAndView ; } private ModelAndView resolve ( String viewName , Map < String , Object > model ) { //\u9ed8\u8ba4SpringBoot\u53ef\u4ee5\u53bb\u627e\u5230\u4e00\u4e2a\u9875\u9762\uff1f error/404 String errorViewName = \"error/\" + viewName ; //\u6a21\u677f\u5f15\u64ce\u53ef\u4ee5\u89e3\u6790\u8fd9\u4e2a\u9875\u9762\u5730\u5740\u5c31\u7528\u6a21\u677f\u5f15\u64ce\u89e3\u6790 TemplateAvailabilityProvider provider = this . templateAvailabilityProviders . getProvider ( errorViewName , this . applicationContext ); if ( provider != null ) { //\u6a21\u677f\u5f15\u64ce\u53ef\u7528\u7684\u60c5\u51b5\u4e0b\u8fd4\u56de\u5230errorViewName\u6307\u5b9a\u7684\u89c6\u56fe\u5730\u5740 return new ModelAndView ( errorViewName , model ); } //\u6a21\u677f\u5f15\u64ce\u4e0d\u53ef\u7528\uff0c\u5c31\u5728\u9759\u6001\u8d44\u6e90\u6587\u4ef6\u5939\u4e0b\u627eerrorViewName\u5bf9\u5e94\u7684\u9875\u9762 error/404.html return resolveResource ( errorViewName , model ); } \u200b \u6b65\u9aa4\uff1a \u200b \u4e00\u4f46\u7cfb\u7edf\u51fa\u73b04xx\u6216\u80055xx\u4e4b\u7c7b\u7684\u9519\u8bef\uff1bErrorPageCustomizer\u5c31\u4f1a\u751f\u6548\uff08\u5b9a\u5236\u9519\u8bef\u7684\u54cd\u5e94\u89c4\u5219\uff09\uff1b\u5c31\u4f1a\u6765\u5230/error\u8bf7\u6c42\uff1b\u5c31\u4f1a\u88ab BasicErrorController \u5904\u7406\uff1b \u200b 1\uff09\u54cd\u5e94\u9875\u9762\uff1b\u53bb\u54ea\u4e2a\u9875\u9762\u662f\u7531 DefaultErrorViewResolver \u89e3\u6790\u5f97\u5230\u7684\uff1b protected ModelAndView resolveErrorView ( HttpServletRequest request , HttpServletResponse response , HttpStatus status , Map < String , Object > model ) { //\u6240\u6709\u7684ErrorViewResolver\u5f97\u5230ModelAndView for ( ErrorViewResolver resolver : this . errorViewResolvers ) { ModelAndView modelAndView = resolver . resolveErrorView ( request , status , model ); if ( modelAndView != null ) { return modelAndView ; } } return null ; } 2\uff09\u3001\u5982\u679c\u5b9a\u5236\u9519\u8bef\u54cd\u5e94\uff1a \u00b6 1\uff09\u3001\u5982\u4f55\u5b9a\u5236\u9519\u8bef\u7684\u9875\u9762\uff1b \u00b6 \u200b 1\uff09\u3001\u6709\u6a21\u677f\u5f15\u64ce\u7684\u60c5\u51b5\u4e0b\uff1berror/\u72b6\u6001\u7801; \u3010\u5c06\u9519\u8bef\u9875\u9762\u547d\u540d\u4e3a \u9519\u8bef\u72b6\u6001\u7801.html \u653e\u5728\u6a21\u677f\u5f15\u64ce\u6587\u4ef6\u5939\u91cc\u9762\u7684 error\u6587\u4ef6\u5939\u4e0b\u3011\uff0c\u53d1\u751f\u6b64\u72b6\u6001\u7801\u7684\u9519\u8bef\u5c31\u4f1a\u6765\u5230 \u5bf9\u5e94\u7684\u9875\u9762\uff1b \u200b \u6211\u4eec\u53ef\u4ee5\u4f7f\u75284xx\u548c5xx\u4f5c\u4e3a\u9519\u8bef\u9875\u9762\u7684\u6587\u4ef6\u540d\u6765\u5339\u914d\u8fd9\u79cd\u7c7b\u578b\u7684\u6240\u6709\u9519\u8bef\uff0c\u7cbe\u786e\u4f18\u5148\uff08\u4f18\u5148\u5bfb\u627e\u7cbe\u786e\u7684\u72b6\u6001\u7801.html\uff09\uff1b \u200b \u9875\u9762\u80fd\u83b7\u53d6\u7684\u4fe1\u606f\uff1b \u200b timestamp\uff1a\u65f6\u95f4\u6233 \u200b status\uff1a\u72b6\u6001\u7801 \u200b error\uff1a\u9519\u8bef\u63d0\u793a \u200b exception\uff1a\u5f02\u5e38\u5bf9\u8c61 \u200b message\uff1a\u5f02\u5e38\u6d88\u606f \u200b errors\uff1aJSR303\u6570\u636e\u6821\u9a8c\u7684\u9519\u8bef\u90fd\u5728\u8fd9\u91cc \u200b 2\uff09\u3001\u6ca1\u6709\u6a21\u677f\u5f15\u64ce\uff08\u6a21\u677f\u5f15\u64ce\u627e\u4e0d\u5230\u8fd9\u4e2a\u9519\u8bef\u9875\u9762\uff09\uff0c\u9759\u6001\u8d44\u6e90\u6587\u4ef6\u5939\u4e0b\u627e\uff1b \u200b 3\uff09\u3001\u4ee5\u4e0a\u90fd\u6ca1\u6709\u9519\u8bef\u9875\u9762\uff0c\u5c31\u662f\u9ed8\u8ba4\u6765\u5230SpringBoot\u9ed8\u8ba4\u7684\u9519\u8bef\u63d0\u793a\u9875\u9762\uff1b 2\uff09\u3001\u5982\u4f55\u5b9a\u5236\u9519\u8bef\u7684json\u6570\u636e\uff1b \u00b6 \u200b 1\uff09\u3001\u81ea\u5b9a\u4e49\u5f02\u5e38\u5904\u7406&\u8fd4\u56de\u5b9a\u5236json\u6570\u636e\uff1b @ControllerAdvice public class MyExceptionHandler { @ResponseBody @ExceptionHandler ( UserNotExistException . class ) public Map < String , Object > handleException ( Exception e ){ Map < String , Object > map = new HashMap <> (); map . put ( \"code\" , \"user.notexist\" ); map . put ( \"message\" , e . getMessage ()); return map ; } } //\u6ca1\u6709\u81ea\u9002\u5e94\u6548\u679c... \u200b 2\uff09\u3001\u8f6c\u53d1\u5230/error\u8fdb\u884c\u81ea\u9002\u5e94\u54cd\u5e94\u6548\u679c\u5904\u7406 @ExceptionHandler ( UserNotExistException . class ) public String handleException ( Exception e , HttpServletRequest request ){ Map < String , Object > map = new HashMap <> (); //\u4f20\u5165\u6211\u4eec\u81ea\u5df1\u7684\u9519\u8bef\u72b6\u6001\u7801 4xx 5xx\uff0c\u5426\u5219\u5c31\u4e0d\u4f1a\u8fdb\u5165\u5b9a\u5236\u9519\u8bef\u9875\u9762\u7684\u89e3\u6790\u6d41\u7a0b /** * Integer statusCode = (Integer) request .getAttribute(\"javax.servlet.error.status_code\"); */ request . setAttribute ( \"javax.servlet.error.status_code\" , 500 ); map . put ( \"code\" , \"user.notexist\" ); map . put ( \"message\" , e . getMessage ()); //\u8f6c\u53d1\u5230/error return \"forward:/error\" ; } 3\uff09\u3001\u5c06\u6211\u4eec\u7684\u5b9a\u5236\u6570\u636e\u643a\u5e26\u51fa\u53bb\uff1b \u00b6 \u51fa\u73b0\u9519\u8bef\u4ee5\u540e\uff0c\u4f1a\u6765\u5230/error\u8bf7\u6c42\uff0c\u4f1a\u88abBasicErrorController\u5904\u7406\uff0c\u54cd\u5e94\u51fa\u53bb\u53ef\u4ee5\u83b7\u53d6\u7684\u6570\u636e\u662f\u7531getErrorAttributes\u5f97\u5230\u7684\uff08\u662fAbstractErrorController\uff08ErrorController\uff09\u89c4\u5b9a\u7684\u65b9\u6cd5\uff09\uff1b \u200b 1\u3001\u5b8c\u5168\u6765\u7f16\u5199\u4e00\u4e2aErrorController\u7684\u5b9e\u73b0\u7c7b\u3010\u6216\u8005\u662f\u7f16\u5199AbstractErrorController\u7684\u5b50\u7c7b\u3011\uff0c\u653e\u5728\u5bb9\u5668\u4e2d\uff1b \u200b 2\u3001\u9875\u9762\u4e0a\u80fd\u7528\u7684\u6570\u636e\uff0c\u6216\u8005\u662fjson\u8fd4\u56de\u80fd\u7528\u7684\u6570\u636e\u90fd\u662f\u901a\u8fc7errorAttributes.getErrorAttributes\u5f97\u5230\uff1b \u200b \u5bb9\u5668\u4e2dDefaultErrorAttributes.getErrorAttributes()\uff1b\u9ed8\u8ba4\u8fdb\u884c\u6570\u636e\u5904\u7406\u7684\uff1b \u81ea\u5b9a\u4e49ErrorAttributes //\u7ed9\u5bb9\u5668\u4e2d\u52a0\u5165\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684ErrorAttributes @Component public class MyErrorAttributes extends DefaultErrorAttributes { @Override public Map < String , Object > getErrorAttributes ( RequestAttributes requestAttributes , boolean includeStackTrace ) { Map < String , Object > map = super . getErrorAttributes ( requestAttributes , includeStackTrace ); map . put ( \"company\" , \"atguigu\" ); return map ; } } \u6700\u7ec8\u7684\u6548\u679c\uff1a\u54cd\u5e94\u662f\u81ea\u9002\u5e94\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b9a\u5236ErrorAttributes\u6539\u53d8\u9700\u8981\u8fd4\u56de\u7684\u5185\u5bb9\uff0c 8\u3001\u914d\u7f6e\u5d4c\u5165\u5f0fServlet\u5bb9\u5668 \u00b6 SpringBoot\u9ed8\u8ba4\u4f7f\u7528Tomcat\u4f5c\u4e3a\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\uff1b \u95ee\u9898\uff1f 1\uff09\u3001\u5982\u4f55\u5b9a\u5236\u548c\u4fee\u6539Servlet\u5bb9\u5668\u7684\u76f8\u5173\u914d\u7f6e\uff1b \u00b6 1\u3001\u4fee\u6539\u548cserver\u6709\u5173\u7684\u914d\u7f6e\uff08ServerProperties\u3010\u4e5f\u662fEmbeddedServletContainerCustomizer\u3011\uff09\uff1b server.port = 8081 server.context-path = /crud server.tomcat.uri-encoding = UTF-8 //\u901a\u7528\u7684Servlet\u5bb9\u5668\u8bbe\u7f6e server.xxx //Tomcat\u7684\u8bbe\u7f6e server.tomcat.xxx 2\u3001\u7f16\u5199\u4e00\u4e2a EmbeddedServletContainerCustomizer \uff1a\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u7684\u5b9a\u5236\u5668\uff1b\u6765\u4fee\u6539Servlet\u5bb9\u5668\u7684\u914d\u7f6e @Bean //\u4e00\u5b9a\u8981\u5c06\u8fd9\u4e2a\u5b9a\u5236\u5668\u52a0\u5165\u5230\u5bb9\u5668\u4e2d public EmbeddedServletContainerCustomizer embeddedServletContainerCustomizer (){ return new EmbeddedServletContainerCustomizer () { //\u5b9a\u5236\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u76f8\u5173\u7684\u89c4\u5219 @Override public void customize ( ConfigurableEmbeddedServletContainer container ) { container . setPort ( 8083 ); } }; } 2\uff09\u3001\u6ce8\u518cServlet\u4e09\u5927\u7ec4\u4ef6\u3010Servlet\u3001Filter\u3001Listener\u3011 \u00b6 \u7531\u4e8eSpringBoot\u9ed8\u8ba4\u662f\u4ee5jar\u5305\u7684\u65b9\u5f0f\u542f\u52a8\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u6765\u542f\u52a8SpringBoot\u7684web\u5e94\u7528\uff0c\u6ca1\u6709web.xml\u6587\u4ef6\u3002 \u6ce8\u518c\u4e09\u5927\u7ec4\u4ef6\u7528\u4ee5\u4e0b\u65b9\u5f0f ServletRegistrationBean //\u6ce8\u518c\u4e09\u5927\u7ec4\u4ef6 @Bean public ServletRegistrationBean myServlet (){ ServletRegistrationBean registrationBean = new ServletRegistrationBean ( new MyServlet (), \"/myServlet\" ); return registrationBean ; } FilterRegistrationBean @Bean public FilterRegistrationBean myFilter (){ FilterRegistrationBean registrationBean = new FilterRegistrationBean (); registrationBean . setFilter ( new MyFilter ()); registrationBean . setUrlPatterns ( Arrays . asList ( \"/hello\" , \"/myServlet\" )); return registrationBean ; } ServletListenerRegistrationBean @Bean public ServletListenerRegistrationBean myListener (){ ServletListenerRegistrationBean < MyListener > registrationBean = new ServletListenerRegistrationBean <> ( new MyListener ()); return registrationBean ; } SpringBoot\u5e2e\u6211\u4eec\u81ea\u52a8SpringMVC\u7684\u65f6\u5019\uff0c\u81ea\u52a8\u7684\u6ce8\u518cSpringMVC\u7684\u524d\u7aef\u63a7\u5236\u5668\uff1bDIspatcherServlet\uff1b DispatcherServletAutoConfiguration\u4e2d\uff1a @Bean ( name = DEFAULT_DISPATCHER_SERVLET_REGISTRATION_BEAN_NAME ) @ConditionalOnBean ( value = DispatcherServlet . class , name = DEFAULT_DISPATCHER_SERVLET_BEAN_NAME ) public ServletRegistrationBean dispatcherServletRegistration ( DispatcherServlet dispatcherServlet ) { ServletRegistrationBean registration = new ServletRegistrationBean ( dispatcherServlet , this . serverProperties . getServletMapping ()); //\u9ed8\u8ba4\u62e6\u622a\uff1a / \u6240\u6709\u8bf7\u6c42\uff1b\u5305\u9759\u6001\u8d44\u6e90\uff0c\u4f46\u662f\u4e0d\u62e6\u622ajsp\u8bf7\u6c42\uff1b /*\u4f1a\u62e6\u622ajsp //\u53ef\u4ee5\u901a\u8fc7server.servletPath\u6765\u4fee\u6539SpringMVC\u524d\u7aef\u63a7\u5236\u5668\u9ed8\u8ba4\u62e6\u622a\u7684\u8bf7\u6c42\u8def\u5f84 registration . setName ( DEFAULT_DISPATCHER_SERVLET_BEAN_NAME ); registration . setLoadOnStartup ( this . webMvcProperties . getServlet (). getLoadOnStartup ()); if ( this . multipartConfig != null ) { registration . setMultipartConfig ( this . multipartConfig ); } return registration ; } 2\uff09\u3001SpringBoot\u80fd\u4e0d\u80fd\u652f\u6301\u5176\u4ed6\u7684Servlet\u5bb9\u5668\uff1b 3\uff09\u3001\u66ff\u6362\u4e3a\u5176\u4ed6\u5d4c\u5165\u5f0fServlet\u5bb9\u5668 \u00b6 \u9ed8\u8ba4\u652f\u6301\uff1a Tomcat\uff08\u9ed8\u8ba4\u4f7f\u7528\uff09 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> \u5f15\u5165web\u6a21\u5757\u9ed8\u8ba4\u5c31\u662f\u4f7f\u7528\u5d4c\u5165\u5f0f\u7684Tomcat\u4f5c\u4e3aServlet\u5bb9\u5668\uff1b </dependency> Jetty <!-- \u5f15\u5165web\u6a21\u5757 --> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> <exclusions> <exclusion> <artifactId> spring-boot-starter-tomcat </artifactId> <groupId> org.springframework.boot </groupId> </exclusion> </exclusions> </dependency> <!--\u5f15\u5165\u5176\u4ed6\u7684Servlet\u5bb9\u5668--> <dependency> <artifactId> spring-boot-starter-jetty </artifactId> <groupId> org.springframework.boot </groupId> </dependency> Undertow <!-- \u5f15\u5165web\u6a21\u5757 --> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> <exclusions> <exclusion> <artifactId> spring-boot-starter-tomcat </artifactId> <groupId> org.springframework.boot </groupId> </exclusion> </exclusions> </dependency> <!--\u5f15\u5165\u5176\u4ed6\u7684Servlet\u5bb9\u5668--> <dependency> <artifactId> spring-boot-starter-undertow </artifactId> <groupId> org.springframework.boot </groupId> </dependency> 4\uff09\u3001\u5d4c\u5165\u5f0fServlet\u5bb9\u5668\u81ea\u52a8\u914d\u7f6e\u539f\u7406\uff1b \u00b6 EmbeddedServletContainerAutoConfiguration\uff1a\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u81ea\u52a8\u914d\u7f6e\uff1f @AutoConfigureOrder ( Ordered . HIGHEST_PRECEDENCE ) @Configuration @ConditionalOnWebApplication @Import ( BeanPostProcessorsRegistrar . class ) //\u5bfc\u5165BeanPostProcessorsRegistrar\uff1aSpring\u6ce8\u89e3\u7248\uff1b\u7ed9\u5bb9\u5668\u4e2d\u5bfc\u5165\u4e00\u4e9b\u7ec4\u4ef6 //\u5bfc\u5165\u4e86EmbeddedServletContainerCustomizerBeanPostProcessor\uff1a //\u540e\u7f6e\u5904\u7406\u5668\uff1abean\u521d\u59cb\u5316\u524d\u540e\uff08\u521b\u5efa\u5b8c\u5bf9\u8c61\uff0c\u8fd8\u6ca1\u8d4b\u503c\u8d4b\u503c\uff09\u6267\u884c\u521d\u59cb\u5316\u5de5\u4f5c public class EmbeddedServletContainerAutoConfiguration { @Configuration @ConditionalOnClass ({ Servlet . class , Tomcat . class }) //\u5224\u65ad\u5f53\u524d\u662f\u5426\u5f15\u5165\u4e86Tomcat\u4f9d\u8d56\uff1b @ConditionalOnMissingBean ( value = EmbeddedServletContainerFactory . class , search = SearchStrategy . CURRENT ) //\u5224\u65ad\u5f53\u524d\u5bb9\u5668\u6ca1\u6709\u7528\u6237\u81ea\u5df1\u5b9a\u4e49EmbeddedServletContainerFactory\uff1a\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u5de5\u5382\uff1b\u4f5c\u7528\uff1a\u521b\u5efa\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668 public static class EmbeddedTomcat { @Bean public TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory () { return new TomcatEmbeddedServletContainerFactory (); } } /** * Nested configuration if Jetty is being used. */ @Configuration @ConditionalOnClass ({ Servlet . class , Server . class , Loader . class , WebAppContext . class }) @ConditionalOnMissingBean ( value = EmbeddedServletContainerFactory . class , search = SearchStrategy . CURRENT ) public static class EmbeddedJetty { @Bean public JettyEmbeddedServletContainerFactory jettyEmbeddedServletContainerFactory () { return new JettyEmbeddedServletContainerFactory (); } } /** * Nested configuration if Undertow is being used. */ @Configuration @ConditionalOnClass ({ Servlet . class , Undertow . class , SslClientAuthMode . class }) @ConditionalOnMissingBean ( value = EmbeddedServletContainerFactory . class , search = SearchStrategy . CURRENT ) public static class EmbeddedUndertow { @Bean public UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory () { return new UndertowEmbeddedServletContainerFactory (); } } 1\uff09\u3001EmbeddedServletContainerFactory\uff08\u5d4c\u5165\u5f0fServlet\u5bb9\u5668\u5de5\u5382\uff09 public interface EmbeddedServletContainerFactory { //\u83b7\u53d6\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668 EmbeddedServletContainer getEmbeddedServletContainer ( ServletContextInitializer ... initializers ); } 2\uff09\u3001EmbeddedServletContainer\uff1a\uff08\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\uff09 3\uff09\u3001\u4ee5 TomcatEmbeddedServletContainerFactory \u4e3a\u4f8b @Override public EmbeddedServletContainer getEmbeddedServletContainer ( ServletContextInitializer ... initializers ) { //\u521b\u5efa\u4e00\u4e2aTomcat Tomcat tomcat = new Tomcat (); //\u914d\u7f6eTomcat\u7684\u57fa\u672c\u73af\u8282 File baseDir = ( this . baseDirectory != null ? this . baseDirectory : createTempDir ( \"tomcat\" )); tomcat . setBaseDir ( baseDir . getAbsolutePath ()); Connector connector = new Connector ( this . protocol ); tomcat . getService (). addConnector ( connector ); customizeConnector ( connector ); tomcat . setConnector ( connector ); tomcat . getHost (). setAutoDeploy ( false ); configureEngine ( tomcat . getEngine ()); for ( Connector additionalConnector : this . additionalTomcatConnectors ) { tomcat . getService (). addConnector ( additionalConnector ); } prepareContext ( tomcat . getHost (), initializers ); //\u5c06\u914d\u7f6e\u597d\u7684Tomcat\u4f20\u5165\u8fdb\u53bb\uff0c\u8fd4\u56de\u4e00\u4e2aEmbeddedServletContainer\uff1b\u5e76\u4e14\u542f\u52a8Tomcat\u670d\u52a1\u5668 return getTomcatEmbeddedServletContainer ( tomcat ); } 4\uff09\u3001\u6211\u4eec\u5bf9\u5d4c\u5165\u5f0f\u5bb9\u5668\u7684\u914d\u7f6e\u4fee\u6539\u662f\u600e\u4e48\u751f\u6548\uff1f ServerProperties\u3001EmbeddedServletContainerCustomizer EmbeddedServletContainerCustomizer \uff1a\u5b9a\u5236\u5668\u5e2e\u6211\u4eec\u4fee\u6539\u4e86Servlet\u5bb9\u5668\u7684\u914d\u7f6e\uff1f \u600e\u4e48\u4fee\u6539\u7684\u539f\u7406\uff1f 5\uff09\u3001\u5bb9\u5668\u4e2d\u5bfc\u5165\u4e86 EmbeddedServletContainerCustomizerBeanPostProcessor //\u521d\u59cb\u5316\u4e4b\u524d @Override public Object postProcessBeforeInitialization ( Object bean , String beanName ) throws BeansException { //\u5982\u679c\u5f53\u524d\u521d\u59cb\u5316\u7684\u662f\u4e00\u4e2aConfigurableEmbeddedServletContainer\u7c7b\u578b\u7684\u7ec4\u4ef6 if ( bean instanceof ConfigurableEmbeddedServletContainer ) { // postProcessBeforeInitialization (( ConfigurableEmbeddedServletContainer ) bean ); } return bean ; } private void postProcessBeforeInitialization ( ConfigurableEmbeddedServletContainer bean ) { //\u83b7\u53d6\u6240\u6709\u7684\u5b9a\u5236\u5668\uff0c\u8c03\u7528\u6bcf\u4e00\u4e2a\u5b9a\u5236\u5668\u7684customize\u65b9\u6cd5\u6765\u7ed9Servlet\u5bb9\u5668\u8fdb\u884c\u5c5e\u6027\u8d4b\u503c\uff1b for ( EmbeddedServletContainerCustomizer customizer : getCustomizers ()) { customizer . customize ( bean ); } } private Collection < EmbeddedServletContainerCustomizer > getCustomizers () { if ( this . customizers == null ) { // Look up does not include the parent context this . customizers = new ArrayList < EmbeddedServletContainerCustomizer > ( this . beanFactory //\u4ece\u5bb9\u5668\u4e2d\u83b7\u53d6\u6240\u6709\u8fd9\u845b\u7c7b\u578b\u7684\u7ec4\u4ef6\uff1aEmbeddedServletContainerCustomizer //\u5b9a\u5236Servlet\u5bb9\u5668\uff0c\u7ed9\u5bb9\u5668\u4e2d\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2aEmbeddedServletContainerCustomizer\u7c7b\u578b\u7684\u7ec4\u4ef6 . getBeansOfType ( EmbeddedServletContainerCustomizer . class , false , false ) . values ()); Collections . sort ( this . customizers , AnnotationAwareOrderComparator . INSTANCE ); this . customizers = Collections . unmodifiableList ( this . customizers ); } return this . customizers ; } ServerProperties\u4e5f\u662f\u5b9a\u5236\u5668 \u6b65\u9aa4\uff1a 1\uff09\u3001SpringBoot\u6839\u636e\u5bfc\u5165\u7684\u4f9d\u8d56\u60c5\u51b5\uff0c\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u76f8\u5e94\u7684EmbeddedServletContainerFactory\u3010TomcatEmbeddedServletContainerFactory\u3011 2\uff09\u3001\u5bb9\u5668\u4e2d\u67d0\u4e2a\u7ec4\u4ef6\u8981\u521b\u5efa\u5bf9\u8c61\u5c31\u4f1a\u60ca\u52a8\u540e\u7f6e\u5904\u7406\u5668\uff1bEmbeddedServletContainerCustomizerBeanPostProcessor\uff1b \u53ea\u8981\u662f\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u5de5\u5382\uff0c\u540e\u7f6e\u5904\u7406\u5668\u5c31\u5de5\u4f5c\uff1b 3\uff09\u3001\u540e\u7f6e\u5904\u7406\u5668\uff0c\u4ece\u5bb9\u5668\u4e2d\u83b7\u53d6\u6240\u6709\u7684 EmbeddedServletContainerCustomizer \uff0c\u8c03\u7528\u5b9a\u5236\u5668\u7684\u5b9a\u5236\u65b9\u6cd5 5\uff09\u3001\u5d4c\u5165\u5f0fServlet\u5bb9\u5668\u542f\u52a8\u539f\u7406\uff1b \u00b6 \u4ec0\u4e48\u65f6\u5019\u521b\u5efa\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u5de5\u5382\uff1f\u4ec0\u4e48\u65f6\u5019\u83b7\u53d6\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u5e76\u542f\u52a8Tomcat\uff1b \u83b7\u53d6\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u5de5\u5382\uff1a 1\uff09\u3001SpringBoot\u5e94\u7528\u542f\u52a8\u8fd0\u884crun\u65b9\u6cd5 2\uff09\u3001refreshContext(context);SpringBoot\u5237\u65b0IOC\u5bb9\u5668\u3010\u521b\u5efaIOC\u5bb9\u5668\u5bf9\u8c61\uff0c\u5e76\u521d\u59cb\u5316\u5bb9\u5668\uff0c\u521b\u5efa\u5bb9\u5668\u4e2d\u7684\u6bcf\u4e00\u4e2a\u7ec4\u4ef6\u3011\uff1b\u5982\u679c\u662fweb\u5e94\u7528\u521b\u5efa AnnotationConfigEmbeddedWebApplicationContext \uff0c\u5426\u5219\uff1a AnnotationConfigApplicationContext 3\uff09\u3001refresh(context); \u5237\u65b0\u521a\u624d\u521b\u5efa\u597d\u7684ioc\u5bb9\u5668\uff1b public void refresh () throws BeansException , IllegalStateException { synchronized ( this . startupShutdownMonitor ) { // Prepare this context for refreshing. prepareRefresh (); // Tell the subclass to refresh the internal bean factory. ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory (); // Prepare the bean factory for use in this context. prepareBeanFactory ( beanFactory ); try { // Allows post-processing of the bean factory in context subclasses. postProcessBeanFactory ( beanFactory ); // Invoke factory processors registered as beans in the context. invokeBeanFactoryPostProcessors ( beanFactory ); // Register bean processors that intercept bean creation. registerBeanPostProcessors ( beanFactory ); // Initialize message source for this context. initMessageSource (); // Initialize event multicaster for this context. initApplicationEventMulticaster (); // Initialize other special beans in specific context subclasses. onRefresh (); // Check for listener beans and register them. registerListeners (); // Instantiate all remaining (non-lazy-init) singletons. finishBeanFactoryInitialization ( beanFactory ); // Last step: publish corresponding event. finishRefresh (); } catch ( BeansException ex ) { if ( logger . isWarnEnabled ()) { logger . warn ( \"Exception encountered during context initialization - \" + \"cancelling refresh attempt: \" + ex ); } // Destroy already created singletons to avoid dangling resources. destroyBeans (); // Reset 'active' flag. cancelRefresh ( ex ); // Propagate exception to caller. throw ex ; } finally { // Reset common introspection caches in Spring's core, since we // might not ever need metadata for singleton beans anymore... resetCommonCaches (); } } } 4\uff09\u3001 onRefresh(); web\u7684ioc\u5bb9\u5668\u91cd\u5199\u4e86onRefresh\u65b9\u6cd5 5\uff09\u3001webioc\u5bb9\u5668\u4f1a\u521b\u5efa\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\uff1b createEmbeddedServletContainer (); 6\uff09\u3001\u83b7\u53d6\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u5de5\u5382\uff1a EmbeddedServletContainerFactory containerFactory = getEmbeddedServletContainerFactory(); \u200b \u4eceioc\u5bb9\u5668\u4e2d\u83b7\u53d6EmbeddedServletContainerFactory \u7ec4\u4ef6\uff1b TomcatEmbeddedServletContainerFactory \u521b\u5efa\u5bf9\u8c61\uff0c\u540e\u7f6e\u5904\u7406\u5668\u4e00\u770b\u662f\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u5c31\u83b7\u53d6\u6240\u6709\u7684\u5b9a\u5236\u5668\u6765\u5148\u5b9a\u5236Servlet\u5bb9\u5668\u7684\u76f8\u5173\u914d\u7f6e\uff1b 7\uff09\u3001 \u4f7f\u7528\u5bb9\u5668\u5de5\u5382\u83b7\u53d6\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668 \uff1athis.embeddedServletContainer = containerFactory .getEmbeddedServletContainer(getSelfInitializer()); 8\uff09\u3001\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u521b\u5efa\u5bf9\u8c61\u5e76\u542f\u52a8Servlet\u5bb9\u5668\uff1b \u5148\u542f\u52a8\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\uff0c\u518d\u5c06ioc\u5bb9\u5668\u4e2d\u5269\u4e0b\u6ca1\u6709\u521b\u5efa\u51fa\u7684\u5bf9\u8c61\u83b7\u53d6\u51fa\u6765\uff1b ==IOC\u5bb9\u5668\u542f\u52a8\u521b\u5efa\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668== 9\u3001\u4f7f\u7528\u5916\u7f6e\u7684Servlet\u5bb9\u5668 \u00b6 \u5d4c\u5165\u5f0fServlet\u5bb9\u5668\uff1a\u5e94\u7528\u6253\u6210\u53ef\u6267\u884c\u7684jar \u200b \u4f18\u70b9\uff1a\u7b80\u5355\u3001\u4fbf\u643a\uff1b \u200b \u7f3a\u70b9\uff1a\u9ed8\u8ba4\u4e0d\u652f\u6301JSP\u3001\u4f18\u5316\u5b9a\u5236\u6bd4\u8f83\u590d\u6742\uff08\u4f7f\u7528\u5b9a\u5236\u5668\u3010ServerProperties\u3001\u81ea\u5b9a\u4e49EmbeddedServletContainerCustomizer\u3011\uff0c\u81ea\u5df1\u7f16\u5199\u5d4c\u5165\u5f0fServlet\u5bb9\u5668\u7684\u521b\u5efa\u5de5\u5382\u3010EmbeddedServletContainerFactory\u3011\uff09\uff1b \u5916\u7f6e\u7684Servlet\u5bb9\u5668\uff1a\u5916\u9762\u5b89\u88c5Tomcat---\u5e94\u7528war\u5305\u7684\u65b9\u5f0f\u6253\u5305\uff1b \u6b65\u9aa4 \u00b6 1\uff09\u3001\u5fc5\u987b\u521b\u5efa\u4e00\u4e2awar\u9879\u76ee\uff1b\uff08\u5229\u7528idea\u521b\u5efa\u597d\u76ee\u5f55\u7ed3\u6784\uff09 2\uff09\u3001\u5c06\u5d4c\u5165\u5f0f\u7684Tomcat\u6307\u5b9a\u4e3aprovided\uff1b <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-tomcat </artifactId> <scope> provided </scope> </dependency> 3\uff09\u3001\u5fc5\u987b\u7f16\u5199\u4e00\u4e2a SpringBootServletInitializer \u7684\u5b50\u7c7b\uff0c\u5e76\u8c03\u7528configure\u65b9\u6cd5 public class ServletInitializer extends SpringBootServletInitializer { @Override protected SpringApplicationBuilder configure ( SpringApplicationBuilder application ) { //\u4f20\u5165SpringBoot\u5e94\u7528\u7684\u4e3b\u7a0b\u5e8f return application . sources ( SpringBoot04WebJspApplication . class ); } } 4\uff09\u3001\u542f\u52a8\u670d\u52a1\u5668\u5c31\u53ef\u4ee5\u4f7f\u7528\uff1b \u539f\u7406 \u00b6 jar\u5305\uff1a\u6267\u884cSpringBoot\u4e3b\u7c7b\u7684main\u65b9\u6cd5\uff0c\u542f\u52a8ioc\u5bb9\u5668\uff0c\u521b\u5efa\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\uff1b war\u5305\uff1a\u542f\u52a8\u670d\u52a1\u5668\uff0c \u670d\u52a1\u5668\u542f\u52a8SpringBoot\u5e94\u7528 \u3010SpringBootServletInitializer\u3011\uff0c\u542f\u52a8ioc\u5bb9\u5668\uff1b servlet3.0\uff08Spring\u6ce8\u89e3\u7248\uff09\uff1a 8.2.4 Shared libraries / runtimes pluggability\uff1a \u89c4\u5219\uff1a \u200b 1\uff09\u3001\u670d\u52a1\u5668\u542f\u52a8\uff08web\u5e94\u7528\u542f\u52a8\uff09\u4f1a\u521b\u5efa\u5f53\u524dweb\u5e94\u7528\u91cc\u9762\u6bcf\u4e00\u4e2ajar\u5305\u91cc\u9762ServletContainerInitializer\u5b9e\u4f8b\uff1a \u200b 2\uff09\u3001ServletContainerInitializer\u7684\u5b9e\u73b0\u653e\u5728jar\u5305\u7684META-INF/services\u6587\u4ef6\u5939\u4e0b\uff0c\u6709\u4e00\u4e2a\u540d\u4e3ajavax.servlet.ServletContainerInitializer\u7684\u6587\u4ef6\uff0c\u5185\u5bb9\u5c31\u662fServletContainerInitializer\u7684\u5b9e\u73b0\u7c7b\u7684\u5168\u7c7b\u540d \u200b 3\uff09\u3001\u8fd8\u53ef\u4ee5\u4f7f\u7528@HandlesTypes\uff0c\u5728\u5e94\u7528\u542f\u52a8\u7684\u65f6\u5019\u52a0\u8f7d\u6211\u4eec\u611f\u5174\u8da3\u7684\u7c7b\uff1b \u6d41\u7a0b\uff1a 1\uff09\u3001\u542f\u52a8Tomcat 2\uff09\u3001org\\springframework\\spring-web\\4.3.14.RELEASE\\spring-web-4.3.14.RELEASE.jar!\\META-INF\\services\\javax.servlet.ServletContainerInitializer\uff1a Spring\u7684web\u6a21\u5757\u91cc\u9762\u6709\u8fd9\u4e2a\u6587\u4ef6\uff1a org.springframework.web.SpringServletContainerInitializer 3\uff09\u3001SpringServletContainerInitializer\u5c06@HandlesTypes(WebApplicationInitializer.class)\u6807\u6ce8\u7684\u6240\u6709\u8fd9\u4e2a\u7c7b\u578b\u7684\u7c7b\u90fd\u4f20\u5165\u5230onStartup\u65b9\u6cd5\u7684Set<Class<?>>\uff1b\u4e3a\u8fd9\u4e9bWebApplicationInitializer\u7c7b\u578b\u7684\u7c7b\u521b\u5efa\u5b9e\u4f8b\uff1b 4\uff09\u3001\u6bcf\u4e00\u4e2aWebApplicationInitializer\u90fd\u8c03\u7528\u81ea\u5df1\u7684onStartup\uff1b 5\uff09\u3001\u76f8\u5f53\u4e8e\u6211\u4eec\u7684SpringBootServletInitializer\u7684\u7c7b\u4f1a\u88ab\u521b\u5efa\u5bf9\u8c61\uff0c\u5e76\u6267\u884conStartup\u65b9\u6cd5 6\uff09\u3001SpringBootServletInitializer\u5b9e\u4f8b\u6267\u884conStartup\u7684\u65f6\u5019\u4f1acreateRootApplicationContext\uff1b\u521b\u5efa\u5bb9\u5668 protected WebApplicationContext createRootApplicationContext ( ServletContext servletContext ) { //1\u3001\u521b\u5efaSpringApplicationBuilder SpringApplicationBuilder builder = createSpringApplicationBuilder (); StandardServletEnvironment environment = new StandardServletEnvironment (); environment . initPropertySources ( servletContext , null ); builder . environment ( environment ); builder . main ( getClass ()); ApplicationContext parent = getExistingRootWebApplicationContext ( servletContext ); if ( parent != null ) { this . logger . info ( \"Root context already created (using as parent).\" ); servletContext . setAttribute ( WebApplicationContext . ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE , null ); builder . initializers ( new ParentContextApplicationContextInitializer ( parent )); } builder . initializers ( new ServletContextApplicationContextInitializer ( servletContext )); builder . contextClass ( AnnotationConfigEmbeddedWebApplicationContext . class ); //\u8c03\u7528configure\u65b9\u6cd5\uff0c\u5b50\u7c7b\u91cd\u5199\u4e86\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5c06SpringBoot\u7684\u4e3b\u7a0b\u5e8f\u7c7b\u4f20\u5165\u4e86\u8fdb\u6765 builder = configure ( builder ); //\u4f7f\u7528builder\u521b\u5efa\u4e00\u4e2aSpring\u5e94\u7528 SpringApplication application = builder . build (); if ( application . getSources (). isEmpty () && AnnotationUtils . findAnnotation ( getClass (), Configuration . class ) != null ) { application . getSources (). add ( getClass ()); } Assert . state ( ! application . getSources (). isEmpty (), \"No SpringApplication sources have been defined. Either override the \" + \"configure method or add an @Configuration annotation\" ); // Ensure error pages are registered if ( this . registerErrorPageFilter ) { application . getSources (). add ( ErrorPageFilterConfiguration . class ); } //\u542f\u52a8Spring\u5e94\u7528 return run ( application ); } 7\uff09\u3001Spring\u7684\u5e94\u7528\u5c31\u542f\u52a8\u5e76\u4e14\u521b\u5efaIOC\u5bb9\u5668 public ConfigurableApplicationContext run ( String ... args ) { StopWatch stopWatch = new StopWatch (); stopWatch . start (); ConfigurableApplicationContext context = null ; FailureAnalyzers analyzers = null ; configureHeadlessProperty (); SpringApplicationRunListeners listeners = getRunListeners ( args ); listeners . starting (); try { ApplicationArguments applicationArguments = new DefaultApplicationArguments ( args ); ConfigurableEnvironment environment = prepareEnvironment ( listeners , applicationArguments ); Banner printedBanner = printBanner ( environment ); context = createApplicationContext (); analyzers = new FailureAnalyzers ( context ); prepareContext ( context , environment , listeners , applicationArguments , printedBanner ); //\u5237\u65b0IOC\u5bb9\u5668 refreshContext ( context ); afterRefresh ( context , applicationArguments ); listeners . finished ( context , null ); stopWatch . stop (); if ( this . logStartupInfo ) { new StartupInfoLogger ( this . mainApplicationClass ) . logStarted ( getApplicationLog (), stopWatch ); } return context ; } catch ( Throwable ex ) { handleRunFailure ( context , listeners , analyzers , ex ); throw new IllegalStateException ( ex ); } } ==\u542f\u52a8Servlet\u5bb9\u5668\uff0c\u518d\u542f\u52a8SpringBoot\u5e94\u7528== \u4e94\u3001Docker \u00b6 1\u3001\u7b80\u4ecb \u00b6 Docker \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5e94\u7528\u5bb9\u5668\u5f15\u64ce\uff1b\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u5bb9\u5668\u6280\u672f\uff1b Docker\u652f\u6301\u5c06\u8f6f\u4ef6\u7f16\u8bd1\u6210\u4e00\u4e2a\u955c\u50cf\uff1b\u7136\u540e\u5728\u955c\u50cf\u4e2d\u5404\u79cd\u8f6f\u4ef6\u505a\u597d\u914d\u7f6e\uff0c\u5c06\u955c\u50cf\u53d1\u5e03\u51fa\u53bb\uff0c\u5176\u4ed6\u4f7f\u7528\u8005\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u955c\u50cf\uff1b \u8fd0\u884c\u4e2d\u7684\u8fd9\u4e2a\u955c\u50cf\u79f0\u4e3a\u5bb9\u5668\uff0c\u5bb9\u5668\u542f\u52a8\u662f\u975e\u5e38\u5feb\u901f\u7684\u3002 2\u3001\u6838\u5fc3\u6982\u5ff5 \u00b6 docker\u4e3b\u673a(Host)\uff1a\u5b89\u88c5\u4e86Docker\u7a0b\u5e8f\u7684\u673a\u5668\uff08Docker\u76f4\u63a5\u5b89\u88c5\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u4e0a\uff09\uff1b docker\u5ba2\u6237\u7aef(Client)\uff1a\u8fde\u63a5docker\u4e3b\u673a\u8fdb\u884c\u64cd\u4f5c\uff1b docker\u4ed3\u5e93(Registry)\uff1a\u7528\u6765\u4fdd\u5b58\u5404\u79cd\u6253\u5305\u597d\u7684\u8f6f\u4ef6\u955c\u50cf\uff1b docker\u955c\u50cf(Images)\uff1a\u8f6f\u4ef6\u6253\u5305\u597d\u7684\u955c\u50cf\uff1b\u653e\u5728docker\u4ed3\u5e93\u4e2d\uff1b docker\u5bb9\u5668(Container)\uff1a\u955c\u50cf\u542f\u52a8\u540e\u7684\u5b9e\u4f8b\u79f0\u4e3a\u4e00\u4e2a\u5bb9\u5668\uff1b\u5bb9\u5668\u662f\u72ec\u7acb\u8fd0\u884c\u7684\u4e00\u4e2a\u6216\u4e00\u7ec4\u5e94\u7528 \u4f7f\u7528Docker\u7684\u6b65\u9aa4\uff1a 1\uff09\u3001\u5b89\u88c5Docker 2\uff09\u3001\u53bbDocker\u4ed3\u5e93\u627e\u5230\u8fd9\u4e2a\u8f6f\u4ef6\u5bf9\u5e94\u7684\u955c\u50cf\uff1b 3\uff09\u3001\u4f7f\u7528Docker\u8fd0\u884c\u8fd9\u4e2a\u955c\u50cf\uff0c\u8fd9\u4e2a\u955c\u50cf\u5c31\u4f1a\u751f\u6210\u4e00\u4e2aDocker\u5bb9\u5668\uff1b 4\uff09\u3001\u5bf9\u5bb9\u5668\u7684\u542f\u52a8\u505c\u6b62\u5c31\u662f\u5bf9\u8f6f\u4ef6\u7684\u542f\u52a8\u505c\u6b62\uff1b 3\u3001\u5b89\u88c5Docker \u00b6 1\uff09\u3001\u5b89\u88c5linux\u865a\u62df\u673a \u00b6 \u200b 1\uff09\u3001VMWare\u3001VirtualBox\uff08\u5b89\u88c5\uff09\uff1b \u200b 2\uff09\u3001\u5bfc\u5165\u865a\u62df\u673a\u6587\u4ef6centos7-atguigu.ova\uff1b \u200b 3\uff09\u3001\u53cc\u51fb\u542f\u52a8linux\u865a\u62df\u673a;\u4f7f\u7528 root/ 123456\u767b\u9646 \u200b 4\uff09\u3001\u4f7f\u7528\u5ba2\u6237\u7aef\u8fde\u63a5linux\u670d\u52a1\u5668\u8fdb\u884c\u547d\u4ee4\u64cd\u4f5c\uff1b \u200b 5\uff09\u3001\u8bbe\u7f6e\u865a\u62df\u673a\u7f51\u7edc\uff1b \u200b \u6865\u63a5\u7f51\u7edc===\u9009\u597d\u7f51\u5361====\u63a5\u5165\u7f51\u7ebf\uff1b \u200b 6\uff09\u3001\u8bbe\u7f6e\u597d\u7f51\u7edc\u4ee5\u540e\u4f7f\u7528\u547d\u4ee4\u91cd\u542f\u865a\u62df\u673a\u7684\u7f51\u7edc service network restart \u200b 7\uff09\u3001\u67e5\u770blinux\u7684ip\u5730\u5740 ip addr \u200b 8\uff09\u3001\u4f7f\u7528\u5ba2\u6237\u7aef\u8fde\u63a5linux\uff1b 2\uff09\u3001\u5728linux\u865a\u62df\u673a\u4e0a\u5b89\u88c5docker \u00b6 \u6b65\u9aa4\uff1a 1 \u3001\u68c0\u67e5\u5185\u6838\u7248\u672c\uff0c\u5fc5\u987b\u662f3.10\u53ca\u4ee5\u4e0a uname -r 2 \u3001\u5b89\u88c5docker yum install docker 3 \u3001\u8f93\u5165y\u786e\u8ba4\u5b89\u88c5 4 \u3001\u542f\u52a8docker [ root@localhost ~ ] # systemctl start docker [ root@localhost ~ ] # docker -v Docker version 1 .12.6, build 3e8e77d/1.12.6 5 \u3001\u5f00\u673a\u542f\u52a8docker [ root@localhost ~ ] # systemctl enable docker Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service. 6 \u3001\u505c\u6b62docker systemctl stop docker 4\u3001Docker\u5e38\u7528\u547d\u4ee4&\u64cd\u4f5c \u00b6 1\uff09\u3001\u955c\u50cf\u64cd\u4f5c \u00b6 \u64cd\u4f5c \u547d\u4ee4 \u8bf4\u660e \u68c0\u7d22 docker search \u5173\u952e\u5b57 eg\uff1adocker search redis \u6211\u4eec\u7ecf\u5e38\u53bbdocker hub\u4e0a\u68c0\u7d22\u955c\u50cf\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5982\u955c\u50cf\u7684TAG\u3002 \u62c9\u53d6 docker pull \u955c\u50cf\u540d:tag :tag\u662f\u53ef\u9009\u7684\uff0ctag\u8868\u793a\u6807\u7b7e\uff0c\u591a\u4e3a\u8f6f\u4ef6\u7684\u7248\u672c\uff0c\u9ed8\u8ba4\u662flatest \u5217\u8868 docker images \u67e5\u770b\u6240\u6709\u672c\u5730\u955c\u50cf \u5220\u9664 docker rmi image-id \u5220\u9664\u6307\u5b9a\u7684\u672c\u5730\u955c\u50cf https://hub.docker.com/ 2\uff09\u3001\u5bb9\u5668\u64cd\u4f5c \u00b6 \u8f6f\u4ef6\u955c\u50cf\uff08QQ\u5b89\u88c5\u7a0b\u5e8f\uff09----\u8fd0\u884c\u955c\u50cf----\u4ea7\u751f\u4e00\u4e2a\u5bb9\u5668\uff08\u6b63\u5728\u8fd0\u884c\u7684\u8f6f\u4ef6\uff0c\u8fd0\u884c\u7684QQ\uff09\uff1b \u6b65\u9aa4\uff1a 1 \u3001\u641c\u7d22\u955c\u50cf [ root@localhost ~ ] # docker search tomcat 2 \u3001\u62c9\u53d6\u955c\u50cf [ root@localhost ~ ] # docker pull tomcat 3 \u3001\u6839\u636e\u955c\u50cf\u542f\u52a8\u5bb9\u5668 docker run --name mytomcat -d tomcat:latest 4 \u3001docker ps \u67e5\u770b\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668 5 \u3001 \u505c\u6b62\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668 docker stop \u5bb9\u5668\u7684id 6 \u3001\u67e5\u770b\u6240\u6709\u7684\u5bb9\u5668 docker ps -a 7 \u3001\u542f\u52a8\u5bb9\u5668 docker start \u5bb9\u5668id 8 \u3001\u5220\u9664\u4e00\u4e2a\u5bb9\u5668 docker rm \u5bb9\u5668id 9 \u3001\u542f\u52a8\u4e00\u4e2a\u505a\u4e86\u7aef\u53e3\u6620\u5c04\u7684tomcat [ root@localhost ~ ] # docker run -d -p 8888:8080 tomcat -d\uff1a\u540e\u53f0\u8fd0\u884c -p: \u5c06\u4e3b\u673a\u7684\u7aef\u53e3\u6620\u5c04\u5230\u5bb9\u5668\u7684\u4e00\u4e2a\u7aef\u53e3 \u4e3b\u673a\u7aef\u53e3:\u5bb9\u5668\u5185\u90e8\u7684\u7aef\u53e3 10 \u3001\u4e3a\u4e86\u6f14\u793a\u7b80\u5355\u5173\u95ed\u4e86linux\u7684\u9632\u706b\u5899 service firewalld status \uff1b\u67e5\u770b\u9632\u706b\u5899\u72b6\u6001 service firewalld stop\uff1a\u5173\u95ed\u9632\u706b\u5899 11 \u3001\u67e5\u770b\u5bb9\u5668\u7684\u65e5\u5fd7 docker logs container-name/container-id \u66f4\u591a\u547d\u4ee4\u53c2\u770b https://docs.docker.com/engine/reference/commandline/docker/ \u53ef\u4ee5\u53c2\u8003\u6bcf\u4e00\u4e2a\u955c\u50cf\u7684\u6587\u6863 3\uff09\u3001\u5b89\u88c5MySQL\u793a\u4f8b \u00b6 docker pull mysql \u9519\u8bef\u7684\u542f\u52a8 [ root@localhost ~ ] # docker run --name mysql01 -d mysql 42f09819908bb72dd99ae19e792e0a5d03c48638421fa64cce5f8ba0f40f5846 mysql\u9000\u51fa\u4e86 [ root@localhost ~ ] # docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 42f09819908b mysql \"docker-entrypoint.sh\" 34 seconds ago Exited ( 1 ) 33 seconds ago mysql01 538bde63e500 tomcat \"catalina.sh run\" About an hour ago Exited ( 143 ) About an hour ago compassionate_ goldstine c4f1ac60b3fc tomcat \"catalina.sh run\" About an hour ago Exited ( 143 ) About an hour ago lonely_fermi 81ec743a5271 tomcat \"catalina.sh run\" About an hour ago Exited ( 143 ) About an hour ago sick_ramanujan //\u9519\u8bef\u65e5\u5fd7 [ root@localhost ~ ] # docker logs 42f09819908b error: database is uninitialized and password option is not specified You need to specify one of MYSQL_ROOT_PASSWORD, MYSQL_ALLOW_EMPTY_PASSWORD and MYSQL_RANDOM_ROOT_PASSWORD\uff1b\u8fd9\u4e2a\u4e09\u4e2a\u53c2\u6570\u5fc5\u987b\u6307\u5b9a\u4e00\u4e2a \u6b63\u786e\u7684\u542f\u52a8 [ root@localhost ~ ] # docker run --name mysql01 -e MYSQL_ROOT_PASSWORD=123456 -d mysql b874c56bec49fb43024b3805ab51e9097da779f2f572c22c695305dedd684c5f [ root@localhost ~ ] # docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES b874c56bec49 mysql \"docker-entrypoint.sh\" 4 seconds ago Up 3 seconds 3306 /tcp mysql01 \u505a\u4e86\u7aef\u53e3\u6620\u5c04 [ root@localhost ~ ] # docker run -p 3306:3306 --name mysql02 -e MYSQL_ROOT_PASSWORD=123456 -d mysql ad10e4bc5c6a0f61cbad43898de71d366117d120e39db651844c0e73863b9434 [ root@localhost ~ ] # docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES ad10e4bc5c6a mysql \"docker-entrypoint.sh\" 4 seconds ago Up 2 seconds 0 .0.0.0:3306->3306/tcp mysql02 \u51e0\u4e2a\u5176\u4ed6\u7684\u9ad8\u7ea7\u64cd\u4f5c docker run --name mysql03 -v /conf/mysql:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag \u628a\u4e3b\u673a\u7684/conf/mysql\u6587\u4ef6\u5939\u6302\u8f7d\u5230 mysqldocker\u5bb9\u5668\u7684/etc/mysql/conf.d\u6587\u4ef6\u5939\u91cc\u9762 \u6539mysql\u7684\u914d\u7f6e\u6587\u4ef6\u5c31\u53ea\u9700\u8981\u628amysql\u914d\u7f6e\u6587\u4ef6\u653e\u5728\u81ea\u5b9a\u4e49\u7684\u6587\u4ef6\u5939\u4e0b\uff08/conf/mysql\uff09 docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci \u6307\u5b9amysql\u7684\u4e00\u4e9b\u914d\u7f6e\u53c2\u6570 \u516d\u3001SpringBoot\u4e0e\u6570\u636e\u8bbf\u95ee \u00b6 1\u3001JDBC \u00b6 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-jdbc </artifactId> </dependency> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <scope> runtime </scope> </dependency> spring : datasource : username : root password : 123456 url : jdbc:mysql://192.168.15.22:3306/jdbc driver-class-name : com.mysql.jdbc.Driver \u6548\u679c\uff1a \u200b \u9ed8\u8ba4\u662f\u7528org.apache.tomcat.jdbc.pool.DataSource\u4f5c\u4e3a\u6570\u636e\u6e90\uff1b \u200b \u6570\u636e\u6e90\u7684\u76f8\u5173\u914d\u7f6e\u90fd\u5728DataSourceProperties\u91cc\u9762\uff1b \u81ea\u52a8\u914d\u7f6e\u539f\u7406\uff1a org.springframework.boot.autoconfigure.jdbc\uff1a 1\u3001\u53c2\u8003DataSourceConfiguration\uff0c\u6839\u636e\u914d\u7f6e\u521b\u5efa\u6570\u636e\u6e90\uff0c\u9ed8\u8ba4\u4f7f\u7528Tomcat\u8fde\u63a5\u6c60\uff1b\u53ef\u4ee5\u4f7f\u7528spring.datasource.type\u6307\u5b9a\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u6e90\u7c7b\u578b\uff1b 2\u3001SpringBoot\u9ed8\u8ba4\u53ef\u4ee5\u652f\u6301\uff1b org.apache.tomcat.jdbc.pool.DataSource\u3001HikariDataSource\u3001BasicDataSource\u3001 3\u3001\u81ea\u5b9a\u4e49\u6570\u636e\u6e90\u7c7b\u578b /** * Generic DataSource configuration. */ @ConditionalOnMissingBean ( DataSource . class ) @ConditionalOnProperty ( name = \"spring.datasource.type\" ) static class Generic { @Bean public DataSource dataSource ( DataSourceProperties properties ) { //\u4f7f\u7528DataSourceBuilder\u521b\u5efa\u6570\u636e\u6e90\uff0c\u5229\u7528\u53cd\u5c04\u521b\u5efa\u54cd\u5e94type\u7684\u6570\u636e\u6e90\uff0c\u5e76\u4e14\u7ed1\u5b9a\u76f8\u5173\u5c5e\u6027 return properties . initializeDataSourceBuilder (). build (); } } 4\u3001 DataSourceInitializer\uff1aApplicationListener \uff1b \u200b \u4f5c\u7528\uff1a \u200b 1\uff09\u3001runSchemaScripts();\u8fd0\u884c\u5efa\u8868\u8bed\u53e5\uff1b \u200b 2\uff09\u3001runDataScripts();\u8fd0\u884c\u63d2\u5165\u6570\u636e\u7684sql\u8bed\u53e5\uff1b \u9ed8\u8ba4\u53ea\u9700\u8981\u5c06\u6587\u4ef6\u547d\u540d\u4e3a\uff1a schema-*.sql\u3001data-*.sql \u9ed8\u8ba4\u89c4\u5219\uff1aschema.sql\uff0cschema-all.sql\uff1b \u53ef\u4ee5\u4f7f\u7528 schema : - classpath : department.sql \u6307\u5b9a\u4f4d\u7f6e 5\u3001\u64cd\u4f5c\u6570\u636e\u5e93\uff1a\u81ea\u52a8\u914d\u7f6e\u4e86JdbcTemplate\u64cd\u4f5c\u6570\u636e\u5e93 2\u3001\u6574\u5408Druid\u6570\u636e\u6e90 \u00b6 \u5bfc\u5165druid\u6570\u636e\u6e90 @Configuration public class DruidConfig { @ConfigurationProperties ( prefix = \"spring.datasource\" ) @Bean public DataSource druid (){ return new DruidDataSource (); } //\u914d\u7f6eDruid\u7684\u76d1\u63a7 //1\u3001\u914d\u7f6e\u4e00\u4e2a\u7ba1\u7406\u540e\u53f0\u7684Servlet @Bean public ServletRegistrationBean statViewServlet (){ ServletRegistrationBean bean = new ServletRegistrationBean ( new StatViewServlet (), \"/druid/*\" ); Map < String , String > initParams = new HashMap <> (); initParams . put ( \"loginUsername\" , \"admin\" ); initParams . put ( \"loginPassword\" , \"123456\" ); initParams . put ( \"allow\" , \"\" ); //\u9ed8\u8ba4\u5c31\u662f\u5141\u8bb8\u6240\u6709\u8bbf\u95ee initParams . put ( \"deny\" , \"192.168.15.21\" ); bean . setInitParameters ( initParams ); return bean ; } //2\u3001\u914d\u7f6e\u4e00\u4e2aweb\u76d1\u63a7\u7684filter @Bean public FilterRegistrationBean webStatFilter (){ FilterRegistrationBean bean = new FilterRegistrationBean (); bean . setFilter ( new WebStatFilter ()); Map < String , String > initParams = new HashMap <> (); initParams . put ( \"exclusions\" , \"*.js,*.css,/druid/*\" ); bean . setInitParameters ( initParams ); bean . setUrlPatterns ( Arrays . asList ( \"/*\" )); return bean ; } } 3\u3001\u6574\u5408MyBatis \u00b6 <dependency> <groupId> org.mybatis.spring.boot </groupId> <artifactId> mybatis-spring-boot-starter </artifactId> <version> 1.3.1 </version> </dependency> \u6b65\u9aa4\uff1a \u200b 1\uff09\u3001\u914d\u7f6e\u6570\u636e\u6e90\u76f8\u5173\u5c5e\u6027\uff08\u89c1\u4e0a\u4e00\u8282Druid\uff09 \u200b 2\uff09\u3001\u7ed9\u6570\u636e\u5e93\u5efa\u8868 \u200b 3\uff09\u3001\u521b\u5efaJavaBean 4\uff09\u3001\u6ce8\u89e3\u7248 \u00b6 //\u6307\u5b9a\u8fd9\u662f\u4e00\u4e2a\u64cd\u4f5c\u6570\u636e\u5e93\u7684mapper @Mapper public interface DepartmentMapper { @Select ( \"select * from department where id=#{id}\" ) public Department getDeptById ( Integer id ); @Delete ( \"delete from department where id=#{id}\" ) public int deleteDeptById ( Integer id ); @Options ( useGeneratedKeys = true , keyProperty = \"id\" ) @Insert ( \"insert into department(departmentName) values(#{departmentName})\" ) public int insertDept ( Department department ); @Update ( \"update department set departmentName=#{departmentName} where id=#{id}\" ) public int updateDept ( Department department ); } \u95ee\u9898\uff1a \u81ea\u5b9a\u4e49MyBatis\u7684\u914d\u7f6e\u89c4\u5219\uff1b\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u4e00\u4e2aConfigurationCustomizer\uff1b @org.springframework.context.annotation.Configuration public class MyBatisConfig { @Bean public ConfigurationCustomizer configurationCustomizer (){ return new ConfigurationCustomizer (){ @Override public void customize ( Configuration configuration ) { configuration . setMapUnderscoreToCamelCase ( true ); } }; } } \u4f7f\u7528MapperScan\u6279\u91cf\u626b\u63cf\u6240\u6709\u7684Mapper\u63a5\u53e3 \uff1b @MapperScan ( value = \"com.atguigu.springboot.mapper\" ) @SpringBootApplication public class SpringBoot06DataMybatisApplication { public static void main ( String [] args ) { SpringApplication . run ( SpringBoot06DataMybatisApplication . class , args ); } } 5\uff09\u3001\u914d\u7f6e\u6587\u4ef6\u7248 \u00b6 mybatis : config-location : classpath:mybatis/mybatis-config.xml \u6307\u5b9a\u5168\u5c40\u914d\u7f6e\u6587\u4ef6\u7684\u4f4d\u7f6e mapper-locations : classpath:mybatis/mapper/*.xml \u6307\u5b9asql\u6620\u5c04\u6587\u4ef6\u7684\u4f4d\u7f6e \u66f4\u591a\u4f7f\u7528\u53c2\u7167 http://www.mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/ 4\u3001\u6574\u5408SpringData JPA \u00b6 1\uff09\u3001SpringData\u7b80\u4ecb \u00b6 2\uff09\u3001\u6574\u5408SpringData JPA \u00b6 JPA:ORM\uff08Object Relational Mapping\uff09\uff1b 1\uff09\u3001\u7f16\u5199\u4e00\u4e2a\u5b9e\u4f53\u7c7b\uff08bean\uff09\u548c\u6570\u636e\u8868\u8fdb\u884c\u6620\u5c04\uff0c\u5e76\u4e14\u914d\u7f6e\u597d\u6620\u5c04\u5173\u7cfb\uff1b //\u4f7f\u7528JPA\u6ce8\u89e3\u914d\u7f6e\u6620\u5c04\u5173\u7cfb @Entity //\u544a\u8bc9JPA\u8fd9\u662f\u4e00\u4e2a\u5b9e\u4f53\u7c7b\uff08\u548c\u6570\u636e\u8868\u6620\u5c04\u7684\u7c7b\uff09 @Table ( name = \"tbl_user\" ) //@Table\u6765\u6307\u5b9a\u548c\u54ea\u4e2a\u6570\u636e\u8868\u5bf9\u5e94;\u5982\u679c\u7701\u7565\u9ed8\u8ba4\u8868\u540d\u5c31\u662fuser\uff1b public class User { @Id //\u8fd9\u662f\u4e00\u4e2a\u4e3b\u952e @GeneratedValue ( strategy = GenerationType . IDENTITY ) //\u81ea\u589e\u4e3b\u952e private Integer id ; @Column ( name = \"last_name\" , length = 50 ) //\u8fd9\u662f\u548c\u6570\u636e\u8868\u5bf9\u5e94\u7684\u4e00\u4e2a\u5217 private String lastName ; @Column //\u7701\u7565\u9ed8\u8ba4\u5217\u540d\u5c31\u662f\u5c5e\u6027\u540d private String email ; 2\uff09\u3001\u7f16\u5199\u4e00\u4e2aDao\u63a5\u53e3\u6765\u64cd\u4f5c\u5b9e\u4f53\u7c7b\u5bf9\u5e94\u7684\u6570\u636e\u8868\uff08Repository\uff09 //\u7ee7\u627fJpaRepository\u6765\u5b8c\u6210\u5bf9\u6570\u636e\u5e93\u7684\u64cd\u4f5c public interface UserRepository extends JpaRepository < User , Integer > { } 3\uff09\u3001\u57fa\u672c\u7684\u914d\u7f6eJpaProperties spring : jpa : hibernate : # \u66f4\u65b0\u6216\u8005\u521b\u5efa\u6570\u636e\u8868\u7ed3\u6784 ddl-auto : update # \u63a7\u5236\u53f0\u663e\u793aSQL show-sql : true \u4e03\u3001\u542f\u52a8\u914d\u7f6e\u539f\u7406 \u00b6 \u51e0\u4e2a\u91cd\u8981\u7684\u4e8b\u4ef6\u56de\u8c03\u673a\u5236 \u914d\u7f6e\u5728META-INF/spring.factories ApplicationContextInitializer SpringApplicationRunListener \u53ea\u9700\u8981\u653e\u5728ioc\u5bb9\u5668\u4e2d ApplicationRunner CommandLineRunner \u542f\u52a8\u6d41\u7a0b\uff1a 1\u3001\u521b\u5efaSpringApplication\u5bf9\u8c61 \u00b6 initialize ( sources ); private void initialize ( Object [] sources ) { //\u4fdd\u5b58\u4e3b\u914d\u7f6e\u7c7b if ( sources != null && sources . length > 0 ) { this . sources . addAll ( Arrays . asList ( sources )); } //\u5224\u65ad\u5f53\u524d\u662f\u5426\u4e00\u4e2aweb\u5e94\u7528 this . webEnvironment = deduceWebEnvironment (); //\u4ece\u7c7b\u8def\u5f84\u4e0b\u627e\u5230META-INF/spring.factories\u914d\u7f6e\u7684\u6240\u6709ApplicationContextInitializer\uff1b\u7136\u540e\u4fdd\u5b58\u8d77\u6765 setInitializers (( Collection ) getSpringFactoriesInstances ( ApplicationContextInitializer . class )); //\u4ece\u7c7b\u8def\u5f84\u4e0b\u627e\u5230ETA-INF/spring.factories\u914d\u7f6e\u7684\u6240\u6709ApplicationListener setListeners (( Collection ) getSpringFactoriesInstances ( ApplicationListener . class )); //\u4ece\u591a\u4e2a\u914d\u7f6e\u7c7b\u4e2d\u627e\u5230\u6709main\u65b9\u6cd5\u7684\u4e3b\u914d\u7f6e\u7c7b this . mainApplicationClass = deduceMainApplicationClass (); } 2\u3001\u8fd0\u884crun\u65b9\u6cd5 \u00b6 public ConfigurableApplicationContext run ( String ... args ) { StopWatch stopWatch = new StopWatch (); stopWatch . start (); ConfigurableApplicationContext context = null ; FailureAnalyzers analyzers = null ; configureHeadlessProperty (); //\u83b7\u53d6SpringApplicationRunListeners\uff1b\u4ece\u7c7b\u8def\u5f84\u4e0bMETA-INF/spring.factories SpringApplicationRunListeners listeners = getRunListeners ( args ); //\u56de\u8c03\u6240\u6709\u7684\u83b7\u53d6SpringApplicationRunListener.starting()\u65b9\u6cd5 listeners . starting (); try { //\u5c01\u88c5\u547d\u4ee4\u884c\u53c2\u6570 ApplicationArguments applicationArguments = new DefaultApplicationArguments ( args ); //\u51c6\u5907\u73af\u5883 ConfigurableEnvironment environment = prepareEnvironment ( listeners , applicationArguments ); //\u521b\u5efa\u73af\u5883\u5b8c\u6210\u540e\u56de\u8c03SpringApplicationRunListener.environmentPrepared()\uff1b\u8868\u793a\u73af\u5883\u51c6\u5907\u5b8c\u6210 Banner printedBanner = printBanner ( environment ); //\u521b\u5efaApplicationContext\uff1b\u51b3\u5b9a\u521b\u5efaweb\u7684ioc\u8fd8\u662f\u666e\u901a\u7684ioc context = createApplicationContext (); analyzers = new FailureAnalyzers ( context ); //\u51c6\u5907\u4e0a\u4e0b\u6587\u73af\u5883;\u5c06environment\u4fdd\u5b58\u5230ioc\u4e2d\uff1b\u800c\u4e14applyInitializers()\uff1b //applyInitializers()\uff1a\u56de\u8c03\u4e4b\u524d\u4fdd\u5b58\u7684\u6240\u6709\u7684ApplicationContextInitializer\u7684initialize\u65b9\u6cd5 //\u56de\u8c03\u6240\u6709\u7684SpringApplicationRunListener\u7684contextPrepared()\uff1b // prepareContext ( context , environment , listeners , applicationArguments , printedBanner ); //prepareContext\u8fd0\u884c\u5b8c\u6210\u4ee5\u540e\u56de\u8c03\u6240\u6709\u7684SpringApplicationRunListener\u7684contextLoaded\uff08\uff09\uff1b //s\u5237\u65b0\u5bb9\u5668\uff1bioc\u5bb9\u5668\u521d\u59cb\u5316\uff08\u5982\u679c\u662fweb\u5e94\u7528\u8fd8\u4f1a\u521b\u5efa\u5d4c\u5165\u5f0f\u7684Tomcat\uff09\uff1bSpring\u6ce8\u89e3\u7248 //\u626b\u63cf\uff0c\u521b\u5efa\uff0c\u52a0\u8f7d\u6240\u6709\u7ec4\u4ef6\u7684\u5730\u65b9\uff1b\uff08\u914d\u7f6e\u7c7b\uff0c\u7ec4\u4ef6\uff0c\u81ea\u52a8\u914d\u7f6e\uff09 refreshContext ( context ); //\u4eceioc\u5bb9\u5668\u4e2d\u83b7\u53d6\u6240\u6709\u7684ApplicationRunner\u548cCommandLineRunner\u8fdb\u884c\u56de\u8c03 //ApplicationRunner\u5148\u56de\u8c03\uff0cCommandLineRunner\u518d\u56de\u8c03 afterRefresh ( context , applicationArguments ); //\u6240\u6709\u7684SpringApplicationRunListener\u56de\u8c03finished\u65b9\u6cd5 listeners . finished ( context , null ); stopWatch . stop (); if ( this . logStartupInfo ) { new StartupInfoLogger ( this . mainApplicationClass ) . logStarted ( getApplicationLog (), stopWatch ); } //\u6574\u4e2aSpringBoot\u5e94\u7528\u542f\u52a8\u5b8c\u6210\u4ee5\u540e\u8fd4\u56de\u542f\u52a8\u7684ioc\u5bb9\u5668\uff1b return context ; } catch ( Throwable ex ) { handleRunFailure ( context , listeners , analyzers , ex ); throw new IllegalStateException ( ex ); } } 3\u3001\u4e8b\u4ef6\u76d1\u542c\u673a\u5236 \u00b6 \u914d\u7f6e\u5728META-INF/spring.factories ApplicationContextInitializer public class HelloApplicationContextInitializer implements ApplicationContextInitializer < ConfigurableApplicationContext > { @Override public void initialize ( ConfigurableApplicationContext applicationContext ) { System . out . println ( \"ApplicationContextInitializer...initialize...\" + applicationContext ); } } SpringApplicationRunListener public class HelloSpringApplicationRunListener implements SpringApplicationRunListener { //\u5fc5\u987b\u6709\u7684\u6784\u9020\u5668 public HelloSpringApplicationRunListener ( SpringApplication application , String [] args ){ } @Override public void starting () { System . out . println ( \"SpringApplicationRunListener...starting...\" ); } @Override public void environmentPrepared ( ConfigurableEnvironment environment ) { Object o = environment . getSystemProperties (). get ( \"os.name\" ); System . out . println ( \"SpringApplicationRunListener...environmentPrepared..\" + o ); } @Override public void contextPrepared ( ConfigurableApplicationContext context ) { System . out . println ( \"SpringApplicationRunListener...contextPrepared...\" ); } @Override public void contextLoaded ( ConfigurableApplicationContext context ) { System . out . println ( \"SpringApplicationRunListener...contextLoaded...\" ); } @Override public void finished ( ConfigurableApplicationContext context , Throwable exception ) { System . out . println ( \"SpringApplicationRunListener...finished...\" ); } } \u914d\u7f6e\uff08META-INF/spring.factories\uff09 org.springframework.context.ApplicationContextInitializer = \\ com.atguigu.springboot.listener.HelloApplicationContextInitializer org.springframework.boot.SpringApplicationRunListener = \\ com.atguigu.springboot.listener.HelloSpringApplicationRunListener \u53ea\u9700\u8981\u653e\u5728ioc\u5bb9\u5668\u4e2d ApplicationRunner @Component public class HelloApplicationRunner implements ApplicationRunner { @Override public void run ( ApplicationArguments args ) throws Exception { System . out . println ( \"ApplicationRunner...run....\" ); } } CommandLineRunner @Component public class HelloCommandLineRunner implements CommandLineRunner { @Override public void run ( String ... args ) throws Exception { System . out . println ( \"CommandLineRunner...run...\" + Arrays . asList ( args )); } } \u516b\u3001\u81ea\u5b9a\u4e49starter \u00b6 starter\uff1a \u200b 1\u3001\u8fd9\u4e2a\u573a\u666f\u9700\u8981\u4f7f\u7528\u5230\u7684\u4f9d\u8d56\u662f\u4ec0\u4e48\uff1f \u200b 2\u3001\u5982\u4f55\u7f16\u5199\u81ea\u52a8\u914d\u7f6e @Configuration //\u6307\u5b9a\u8fd9\u4e2a\u7c7b\u662f\u4e00\u4e2a\u914d\u7f6e\u7c7b @ConditionalOnXXX //\u5728\u6307\u5b9a\u6761\u4ef6\u6210\u7acb\u7684\u60c5\u51b5\u4e0b\u81ea\u52a8\u914d\u7f6e\u7c7b\u751f\u6548 @AutoConfigureAfter //\u6307\u5b9a\u81ea\u52a8\u914d\u7f6e\u7c7b\u7684\u987a\u5e8f @Bean //\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u7ec4\u4ef6 @ConfigurationPropertie\u7ed3\u5408\u76f8\u5173xxxProperties\u7c7b\u6765\u7ed1\u5b9a\u76f8\u5173\u7684\u914d\u7f6e @EnableConfigurationProperties //\u8ba9xxxProperties\u751f\u6548\u52a0\u5165\u5230\u5bb9\u5668\u4e2d \u81ea\u52a8\u914d\u7f6e\u7c7b\u8981\u80fd\u52a0\u8f7d \u5c06\u9700\u8981\u542f\u52a8\u5c31\u52a0\u8f7d\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b \uff0c \u914d\u7f6e\u5728META - INF / spring . factories org . springframework . boot . autoconfigure . EnableAutoConfiguration = \\ org . springframework . boot . autoconfigure . admin . SpringApplicationAdminJmxAutoConfiguration , \\ org . springframework . boot . autoconfigure . aop . AopAutoConfiguration , \\ \u200b 3\u3001\u6a21\u5f0f\uff1a \u542f\u52a8\u5668\u53ea\u7528\u6765\u505a\u4f9d\u8d56\u5bfc\u5165\uff1b \u4e13\u95e8\u6765\u5199\u4e00\u4e2a\u81ea\u52a8\u914d\u7f6e\u6a21\u5757\uff1b \u542f\u52a8\u5668\u4f9d\u8d56\u81ea\u52a8\u914d\u7f6e\uff1b\u522b\u4eba\u53ea\u9700\u8981\u5f15\u5165\u542f\u52a8\u5668\uff08starter\uff09 mybatis-spring-boot-starter\uff1b\u81ea\u5b9a\u4e49\u542f\u52a8\u5668\u540d-spring-boot-starter \u6b65\u9aa4\uff1a 1\uff09\u3001\u542f\u52a8\u5668\u6a21\u5757 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> com.atguigu.starter </groupId> <artifactId> atguigu-spring-boot-starter </artifactId> <version> 1.0-SNAPSHOT </version> <!--\u542f\u52a8\u5668--> <dependencies> <!--\u5f15\u5165\u81ea\u52a8\u914d\u7f6e\u6a21\u5757--> <dependency> <groupId> com.atguigu.starter </groupId> <artifactId> atguigu-spring-boot-starter-autoconfigurer </artifactId> <version> 0.0.1-SNAPSHOT </version> </dependency> </dependencies> </project> 2\uff09\u3001\u81ea\u52a8\u914d\u7f6e\u6a21\u5757 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> com.atguigu.starter </groupId> <artifactId> atguigu-spring-boot-starter-autoconfigurer </artifactId> <version> 0.0.1-SNAPSHOT </version> <packaging> jar </packaging> <name> atguigu-spring-boot-starter-autoconfigurer </name> <description> Demo project for Spring Boot </description> <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 1.5.10.RELEASE </version> <relativePath/> <!-- lookup parent from repository --> </parent> <properties> <project.build.sourceEncoding> UTF-8 </project.build.sourceEncoding> <project.reporting.outputEncoding> UTF-8 </project.reporting.outputEncoding> <java.version> 1.8 </java.version> </properties> <dependencies> <!--\u5f15\u5165spring-boot-starter\uff1b\u6240\u6709starter\u7684\u57fa\u672c\u914d\u7f6e--> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter </artifactId> </dependency> </dependencies> </project> package com.atguigu.starter ; import org.springframework.boot.context.properties.ConfigurationProperties ; @ConfigurationProperties ( prefix = \"atguigu.hello\" ) public class HelloProperties { private String prefix ; private String suffix ; public String getPrefix () { return prefix ; } public void setPrefix ( String prefix ) { this . prefix = prefix ; } public String getSuffix () { return suffix ; } public void setSuffix ( String suffix ) { this . suffix = suffix ; } } package com.atguigu.starter ; public class HelloService { HelloProperties helloProperties ; public HelloProperties getHelloProperties () { return helloProperties ; } public void setHelloProperties ( HelloProperties helloProperties ) { this . helloProperties = helloProperties ; } public String sayHellAtguigu ( String name ){ return helloProperties . getPrefix () + \"-\" + name + helloProperties . getSuffix (); } } package com.atguigu.starter ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication ; import org.springframework.boot.context.properties.EnableConfigurationProperties ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; @Configuration @ConditionalOnWebApplication //web\u5e94\u7528\u624d\u751f\u6548 @EnableConfigurationProperties ( HelloProperties . class ) public class HelloServiceAutoConfiguration { @Autowired HelloProperties helloProperties ; @Bean public HelloService helloService (){ HelloService service = new HelloService (); service . setHelloProperties ( helloProperties ); return service ; } } \u66f4\u591aSpringBoot\u6574\u5408\u793a\u4f8b \u00b6 https://github.com/spring-projects/spring-boot/tree/master/spring-boot-samples","title":"SpringBoot"},{"location":"Java/SpringBoot/SpringBoot/#spring-boot","text":"","title":"\u4e00\u3001Spring Boot \u5165\u95e8"},{"location":"Java/SpringBoot/SpringBoot/#1spring-boot","text":"\u7b80\u5316Spring\u5e94\u7528\u5f00\u53d1\u7684\u4e00\u4e2a\u6846\u67b6\uff1b \u6574\u4e2aSpring\u6280\u672f\u6808\u7684\u4e00\u4e2a\u5927\u6574\u5408\uff1b J2EE\u5f00\u53d1\u7684\u4e00\u7ad9\u5f0f\u89e3\u51b3\u65b9\u6848\uff1b","title":"1\u3001Spring Boot \u7b80\u4ecb"},{"location":"Java/SpringBoot/SpringBoot/#2","text":"2014\uff0cmartin fowler \u5fae\u670d\u52a1\uff1a\u67b6\u6784\u98ce\u683c\uff08\u670d\u52a1\u5fae\u5316\uff09 \u4e00\u4e2a\u5e94\u7528\u5e94\u8be5\u662f\u4e00\u7ec4\u5c0f\u578b\u670d\u52a1\uff1b\u53ef\u4ee5\u901a\u8fc7HTTP\u7684\u65b9\u5f0f\u8fdb\u884c\u4e92\u901a\uff1b \u5355\u4f53\u5e94\u7528\uff1aALL IN ONE \u5fae\u670d\u52a1\uff1a\u6bcf\u4e00\u4e2a\u529f\u80fd\u5143\u7d20\u6700\u7ec8\u90fd\u662f\u4e00\u4e2a\u53ef\u72ec\u7acb\u66ff\u6362\u548c\u72ec\u7acb\u5347\u7ea7\u7684\u8f6f\u4ef6\u5355\u5143\uff1b \u8be6\u7ec6\u53c2\u7167\u5fae\u670d\u52a1\u6587\u6863","title":"2\u3001\u5fae\u670d\u52a1"},{"location":"Java/SpringBoot/SpringBoot/#3","text":"http://www.gulixueyuan.com/ \u8c37\u7c92\u5b66\u9662 \u73af\u5883\u7ea6\u675f \u2013jdk1.8\uff1aSpring Boot \u63a8\u8350jdk1.7\u53ca\u4ee5\u4e0a\uff1bjava version \"1.8.0_112\" \u2013maven3.x\uff1amaven 3.3\u4ee5\u4e0a\u7248\u672c\uff1bApache Maven 3.3.9 \u2013IntelliJIDEA2017\uff1aIntelliJ IDEA 2017.2.2 x64\u3001STS \u2013SpringBoot 1.5.9.RELEASE\uff1a1.5.9\uff1b \u7edf\u4e00\u73af\u5883\uff1b","title":"3\u3001\u73af\u5883\u51c6\u5907"},{"location":"Java/SpringBoot/SpringBoot/#1maven","text":"\u7ed9maven \u7684settings.xml\u914d\u7f6e\u6587\u4ef6\u7684profiles\u6807\u7b7e\u6dfb\u52a0 <profile> <id> jdk-1.8 </id> <activation> <activeByDefault> true </activeByDefault> <jdk> 1.8 </jdk> </activation> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> <maven.compiler.compilerVersion> 1.8 </maven.compiler.compilerVersion> </properties> </profile>","title":"1\u3001MAVEN\u8bbe\u7f6e\uff1b"},{"location":"Java/SpringBoot/SpringBoot/#2idea","text":"\u6574\u5408maven\u8fdb\u6765\uff1b","title":"2\u3001IDEA\u8bbe\u7f6e"},{"location":"Java/SpringBoot/SpringBoot/#4spring-boot-helloworld","text":"\u4e00\u4e2a\u529f\u80fd\uff1a \u6d4f\u89c8\u5668\u53d1\u9001hello\u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u63a5\u53d7\u8bf7\u6c42\u5e76\u5904\u7406\uff0c\u54cd\u5e94Hello World\u5b57\u7b26\u4e32\uff1b","title":"4\u3001Spring Boot HelloWorld"},{"location":"Java/SpringBoot/SpringBoot/#1mavenjar","text":"","title":"1\u3001\u521b\u5efa\u4e00\u4e2amaven\u5de5\u7a0b\uff1b\uff08jar\uff09"},{"location":"Java/SpringBoot/SpringBoot/#2spring-boot","text":"<parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 1.5.9.RELEASE </version> </parent> <dependencies> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> </dependency> </dependencies>","title":"2\u3001\u5bfc\u5165spring boot\u76f8\u5173\u7684\u4f9d\u8d56"},{"location":"Java/SpringBoot/SpringBoot/#3spring-boot","text":"/** * @SpringBootApplication \u6765\u6807\u6ce8\u4e00\u4e2a\u4e3b\u7a0b\u5e8f\u7c7b\uff0c\u8bf4\u660e\u8fd9\u662f\u4e00\u4e2aSpring Boot\u5e94\u7528 */ @SpringBootApplication public class HelloWorldMainApplication { public static void main ( String [] args ) { // Spring\u5e94\u7528\u542f\u52a8\u8d77\u6765 SpringApplication . run ( HelloWorldMainApplication . class , args ); } }","title":"3\u3001\u7f16\u5199\u4e00\u4e2a\u4e3b\u7a0b\u5e8f\uff1b\u542f\u52a8Spring Boot\u5e94\u7528"},{"location":"Java/SpringBoot/SpringBoot/#4controllerservice","text":"@Controller public class HelloController { @ResponseBody @RequestMapping ( \"/hello\" ) public String hello (){ return \"Hello World!\" ; } }","title":"4\u3001\u7f16\u5199\u76f8\u5173\u7684Controller\u3001Service"},{"location":"Java/SpringBoot/SpringBoot/#5","text":"","title":"5\u3001\u8fd0\u884c\u4e3b\u7a0b\u5e8f\u6d4b\u8bd5"},{"location":"Java/SpringBoot/SpringBoot/#6","text":"<!-- \u8fd9\u4e2a\u63d2\u4ef6\uff0c\u53ef\u4ee5\u5c06\u5e94\u7528\u6253\u5305\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u7684jar\u5305\uff1b--> <build> <plugins> <plugin> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-maven-plugin </artifactId> </plugin> </plugins> </build> \u5c06\u8fd9\u4e2a\u5e94\u7528\u6253\u6210jar\u5305\uff0c\u76f4\u63a5\u4f7f\u7528java -jar\u7684\u547d\u4ee4\u8fdb\u884c\u6267\u884c\uff1b","title":"6\u3001\u7b80\u5316\u90e8\u7f72"},{"location":"Java/SpringBoot/SpringBoot/#5hello-world","text":"","title":"5\u3001Hello World\u63a2\u7a76"},{"location":"Java/SpringBoot/SpringBoot/#1pom","text":"","title":"1\u3001POM\u6587\u4ef6"},{"location":"Java/SpringBoot/SpringBoot/#1","text":"<parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 1.5.9.RELEASE </version> </parent> \u4ed6\u7684\u7236\u9879\u76ee\u662f <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-dependencies </artifactId> <version> 1.5.9.RELEASE </version> <relativePath> ../../spring-boot-dependencies </relativePath> </parent> \u4ed6\u6765\u771f\u6b63\u7ba1\u7406Spring Boot\u5e94\u7528\u91cc\u9762\u7684\u6240\u6709\u4f9d\u8d56\u7248\u672c\uff1b Spring Boot\u7684\u7248\u672c\u4ef2\u88c1\u4e2d\u5fc3\uff1b \u4ee5\u540e\u6211\u4eec\u5bfc\u5165\u4f9d\u8d56\u9ed8\u8ba4\u662f\u4e0d\u9700\u8981\u5199\u7248\u672c\uff1b\uff08\u6ca1\u6709\u5728dependencies\u91cc\u9762\u7ba1\u7406\u7684\u4f9d\u8d56\u81ea\u7136\u9700\u8981\u58f0\u660e\u7248\u672c\u53f7\uff09","title":"1\u3001\u7236\u9879\u76ee"},{"location":"Java/SpringBoot/SpringBoot/#2_1","text":"<dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> </dependency> spring-boot-starter -==web==\uff1a \u200b spring-boot-starter\uff1aspring-boot\u573a\u666f\u542f\u52a8\u5668\uff1b\u5e2e\u6211\u4eec\u5bfc\u5165\u4e86web\u6a21\u5757\u6b63\u5e38\u8fd0\u884c\u6240\u4f9d\u8d56\u7684\u7ec4\u4ef6\uff1b Spring Boot\u5c06\u6240\u6709\u7684\u529f\u80fd\u573a\u666f\u90fd\u62bd\u53d6\u51fa\u6765\uff0c\u505a\u6210\u4e00\u4e2a\u4e2a\u7684starters\uff08\u542f\u52a8\u5668\uff09\uff0c\u53ea\u9700\u8981\u5728\u9879\u76ee\u91cc\u9762\u5f15\u5165\u8fd9\u4e9bstarter\u76f8\u5173\u573a\u666f\u7684\u6240\u6709\u4f9d\u8d56\u90fd\u4f1a\u5bfc\u5165\u8fdb\u6765\u3002\u8981\u7528\u4ec0\u4e48\u529f\u80fd\u5c31\u5bfc\u5165\u4ec0\u4e48\u573a\u666f\u7684\u542f\u52a8\u5668","title":"2\u3001\u542f\u52a8\u5668"},{"location":"Java/SpringBoot/SpringBoot/#2_2","text":"/** * @SpringBootApplication \u6765\u6807\u6ce8\u4e00\u4e2a\u4e3b\u7a0b\u5e8f\u7c7b\uff0c\u8bf4\u660e\u8fd9\u662f\u4e00\u4e2aSpring Boot\u5e94\u7528 */ @SpringBootApplication public class HelloWorldMainApplication { public static void main ( String [] args ) { // Spring\u5e94\u7528\u542f\u52a8\u8d77\u6765 SpringApplication . run ( HelloWorldMainApplication . class , args ); } } @ SpringBootApplication : Spring Boot\u5e94\u7528\u6807\u6ce8\u5728\u67d0\u4e2a\u7c7b\u4e0a\u8bf4\u660e\u8fd9\u4e2a\u7c7b\u662fSpringBoot\u7684\u4e3b\u914d\u7f6e\u7c7b\uff0cSpringBoot\u5c31\u5e94\u8be5\u8fd0\u884c\u8fd9\u4e2a\u7c7b\u7684main\u65b9\u6cd5\u6765\u542f\u52a8SpringBoot\u5e94\u7528\uff1b @Target ( ElementType . TYPE ) @Retention ( RetentionPolicy . RUNTIME ) @Documented @Inherited @SpringBootConfiguration @EnableAutoConfiguration @ComponentScan ( excludeFilters = { @Filter ( type = FilterType . CUSTOM , classes = TypeExcludeFilter . class ), @Filter ( type = FilterType . CUSTOM , classes = AutoConfigurationExcludeFilter . class ) }) public @interface SpringBootApplication { @ SpringBootConfiguration :Spring Boot\u7684\u914d\u7f6e\u7c7b\uff1b \u200b \u6807\u6ce8\u5728\u67d0\u4e2a\u7c7b\u4e0a\uff0c\u8868\u793a\u8fd9\u662f\u4e00\u4e2aSpring Boot\u7684\u914d\u7f6e\u7c7b\uff1b \u200b @ Configuration :\u914d\u7f6e\u7c7b\u4e0a\u6765\u6807\u6ce8\u8fd9\u4e2a\u6ce8\u89e3\uff1b \u200b \u914d\u7f6e\u7c7b ----- \u914d\u7f6e\u6587\u4ef6\uff1b\u914d\u7f6e\u7c7b\u4e5f\u662f\u5bb9\u5668\u4e2d\u7684\u4e00\u4e2a\u7ec4\u4ef6\uff1b@Component @ EnableAutoConfiguration \uff1a\u5f00\u542f\u81ea\u52a8\u914d\u7f6e\u529f\u80fd\uff1b \u200b \u4ee5\u524d\u6211\u4eec\u9700\u8981\u914d\u7f6e\u7684\u4e1c\u897f\uff0cSpring Boot\u5e2e\u6211\u4eec\u81ea\u52a8\u914d\u7f6e\uff1b@ EnableAutoConfiguration \u544a\u8bc9SpringBoot\u5f00\u542f\u81ea\u52a8\u914d\u7f6e\u529f\u80fd\uff1b\u8fd9\u6837\u81ea\u52a8\u914d\u7f6e\u624d\u80fd\u751f\u6548\uff1b @AutoConfigurationPackage @Import ( EnableAutoConfigurationImportSelector . class ) public @interface EnableAutoConfiguration { \u200b @ AutoConfigurationPackage \uff1a\u81ea\u52a8\u914d\u7f6e\u5305 \u200b @ Import (AutoConfigurationPackages.Registrar.class)\uff1a \u200b Spring\u7684\u5e95\u5c42\u6ce8\u89e3@Import\uff0c\u7ed9\u5bb9\u5668\u4e2d\u5bfc\u5165\u4e00\u4e2a\u7ec4\u4ef6\uff1b\u5bfc\u5165\u7684\u7ec4\u4ef6\u7531AutoConfigurationPackages.Registrar.class\uff1b ==\u5c06\u4e3b\u914d\u7f6e\u7c7b\uff08@SpringBootApplication\u6807\u6ce8\u7684\u7c7b\uff09\u7684\u6240\u5728\u5305\u53ca\u4e0b\u9762\u6240\u6709\u5b50\u5305\u91cc\u9762\u7684\u6240\u6709\u7ec4\u4ef6\u626b\u63cf\u5230Spring\u5bb9\u5668\uff1b== \u200b @ Import (EnableAutoConfigurationImportSelector.class)\uff1b \u200b \u7ed9\u5bb9\u5668\u4e2d\u5bfc\u5165\u7ec4\u4ef6\uff1f \u200b EnableAutoConfigurationImportSelector \uff1a\u5bfc\u5165\u54ea\u4e9b\u7ec4\u4ef6\u7684\u9009\u62e9\u5668\uff1b \u200b \u5c06\u6240\u6709\u9700\u8981\u5bfc\u5165\u7684\u7ec4\u4ef6\u4ee5\u5168\u7c7b\u540d\u7684\u65b9\u5f0f\u8fd4\u56de\uff1b\u8fd9\u4e9b\u7ec4\u4ef6\u5c31\u4f1a\u88ab\u6dfb\u52a0\u5230\u5bb9\u5668\u4e2d\uff1b \u200b \u4f1a\u7ed9\u5bb9\u5668\u4e2d\u5bfc\u5165\u975e\u5e38\u591a\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\uff08xxxAutoConfiguration\uff09\uff1b\u5c31\u662f\u7ed9\u5bb9\u5668\u4e2d\u5bfc\u5165\u8fd9\u4e2a\u573a\u666f\u9700\u8981\u7684\u6240\u6709\u7ec4\u4ef6\uff0c\u5e76\u914d\u7f6e\u597d\u8fd9\u4e9b\u7ec4\u4ef6\uff1b \u6709\u4e86\u81ea\u52a8\u914d\u7f6e\u7c7b\uff0c\u514d\u53bb\u4e86\u6211\u4eec\u624b\u52a8\u7f16\u5199\u914d\u7f6e\u6ce8\u5165\u529f\u80fd\u7ec4\u4ef6\u7b49\u7684\u5de5\u4f5c\uff1b \u200b SpringFactoriesLoader.loadFactoryNames(EnableAutoConfiguration.class,classLoader)\uff1b ==Spring Boot\u5728\u542f\u52a8\u7684\u65f6\u5019\u4ece\u7c7b\u8def\u5f84\u4e0b\u7684META-INF/spring.factories\u4e2d\u83b7\u53d6EnableAutoConfiguration\u6307\u5b9a\u7684\u503c\uff0c\u5c06\u8fd9\u4e9b\u503c\u4f5c\u4e3a\u81ea\u52a8\u914d\u7f6e\u7c7b\u5bfc\u5165\u5230\u5bb9\u5668\u4e2d\uff0c\u81ea\u52a8\u914d\u7f6e\u7c7b\u5c31\u751f\u6548\uff0c\u5e2e\u6211\u4eec\u8fdb\u884c\u81ea\u52a8\u914d\u7f6e\u5de5\u4f5c\uff1b==\u4ee5\u524d\u6211\u4eec\u9700\u8981\u81ea\u5df1\u914d\u7f6e\u7684\u4e1c\u897f\uff0c\u81ea\u52a8\u914d\u7f6e\u7c7b\u90fd\u5e2e\u6211\u4eec\uff1b J2EE\u7684\u6574\u4f53\u6574\u5408\u89e3\u51b3\u65b9\u6848\u548c\u81ea\u52a8\u914d\u7f6e\u90fd\u5728spring-boot-autoconfigure-1.5.9.RELEASE.jar\uff1b \u200b ==Spring\u6ce8\u89e3\u7248\uff08\u8c37\u7c92\u5b66\u9662\uff09==","title":"2\u3001\u4e3b\u7a0b\u5e8f\u7c7b\uff0c\u4e3b\u5165\u53e3\u7c7b"},{"location":"Java/SpringBoot/SpringBoot/#6spring-initializerspring-boot","text":"","title":"6\u3001\u4f7f\u7528Spring Initializer\u5feb\u901f\u521b\u5efaSpring Boot\u9879\u76ee"},{"location":"Java/SpringBoot/SpringBoot/#1idea-spring-initializer","text":"IDE\u90fd\u652f\u6301\u4f7f\u7528Spring\u7684\u9879\u76ee\u521b\u5efa\u5411\u5bfc\u5feb\u901f\u521b\u5efa\u4e00\u4e2aSpring Boot\u9879\u76ee\uff1b \u9009\u62e9\u6211\u4eec\u9700\u8981\u7684\u6a21\u5757\uff1b\u5411\u5bfc\u4f1a\u8054\u7f51\u521b\u5efaSpring Boot\u9879\u76ee\uff1b \u9ed8\u8ba4\u751f\u6210\u7684Spring Boot\u9879\u76ee\uff1b \u4e3b\u7a0b\u5e8f\u5df2\u7ecf\u751f\u6210\u597d\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6211\u4eec\u81ea\u5df1\u7684\u903b\u8f91 resources\u6587\u4ef6\u5939\u4e2d\u76ee\u5f55\u7ed3\u6784 static\uff1a\u4fdd\u5b58\u6240\u6709\u7684\u9759\u6001\u8d44\u6e90\uff1b js css images\uff1b templates\uff1a\u4fdd\u5b58\u6240\u6709\u7684\u6a21\u677f\u9875\u9762\uff1b\uff08Spring Boot\u9ed8\u8ba4jar\u5305\u4f7f\u7528\u5d4c\u5165\u5f0f\u7684Tomcat\uff0c\u9ed8\u8ba4\u4e0d\u652f\u6301JSP\u9875\u9762\uff09\uff1b\u53ef\u4ee5\u4f7f\u7528\u6a21\u677f\u5f15\u64ce\uff08freemarker\u3001thymeleaf\uff09\uff1b application.properties\uff1aSpring Boot\u5e94\u7528\u7684\u914d\u7f6e\u6587\u4ef6\uff1b\u53ef\u4ee5\u4fee\u6539\u4e00\u4e9b\u9ed8\u8ba4\u8bbe\u7f6e\uff1b","title":"1\u3001IDEA\uff1a\u4f7f\u7528 Spring Initializer\u5feb\u901f\u521b\u5efa\u9879\u76ee"},{"location":"Java/SpringBoot/SpringBoot/#2sts-spring-starter-project","text":"","title":"2\u3001STS\u4f7f\u7528 Spring Starter Project\u5feb\u901f\u521b\u5efa\u9879\u76ee"},{"location":"Java/SpringBoot/SpringBoot/#_1","text":"","title":"\u4e8c\u3001\u914d\u7f6e\u6587\u4ef6"},{"location":"Java/SpringBoot/SpringBoot/#1_1","text":"SpringBoot\u4f7f\u7528\u4e00\u4e2a\u5168\u5c40\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u6587\u4ef6\u540d\u662f\u56fa\u5b9a\u7684\uff1b \u2022application.properties \u2022application.yml \u914d\u7f6e\u6587\u4ef6\u7684\u4f5c\u7528\uff1a\u4fee\u6539SpringBoot\u81ea\u52a8\u914d\u7f6e\u7684\u9ed8\u8ba4\u503c\uff1bSpringBoot\u5728\u5e95\u5c42\u90fd\u7ed9\u6211\u4eec\u81ea\u52a8\u914d\u7f6e\u597d\uff1b YAML\uff08YAML Ain't Markup Language\uff09 \u200b YAML A Markup Language\uff1a\u662f\u4e00\u4e2a\u6807\u8bb0\u8bed\u8a00 \u200b YAML isn't Markup Language\uff1a\u4e0d\u662f\u4e00\u4e2a\u6807\u8bb0\u8bed\u8a00\uff1b \u6807\u8bb0\u8bed\u8a00\uff1a \u200b \u4ee5\u524d\u7684\u914d\u7f6e\u6587\u4ef6\uff1b\u5927\u591a\u90fd\u4f7f\u7528\u7684\u662f xxxx.xml \u6587\u4ef6\uff1b \u200b YAML\uff1a \u4ee5\u6570\u636e\u4e3a\u4e2d\u5fc3 \uff0c\u6bd4json\u3001xml\u7b49\u66f4\u9002\u5408\u505a\u914d\u7f6e\u6587\u4ef6\uff1b \u200b YAML\uff1a\u914d\u7f6e\u4f8b\u5b50 server : port : 8081 \u200b XML\uff1a <server> <port> 8081 </port> </server>","title":"1\u3001\u914d\u7f6e\u6587\u4ef6"},{"location":"Java/SpringBoot/SpringBoot/#2yaml","text":"","title":"2\u3001YAML\u8bed\u6cd5\uff1a"},{"location":"Java/SpringBoot/SpringBoot/#1_2","text":"k:(\u7a7a\u683c)v\uff1a\u8868\u793a\u4e00\u5bf9\u952e\u503c\u5bf9\uff08\u7a7a\u683c\u5fc5\u987b\u6709\uff09\uff1b \u4ee5 \u7a7a\u683c \u7684\u7f29\u8fdb\u6765\u63a7\u5236\u5c42\u7ea7\u5173\u7cfb\uff1b\u53ea\u8981\u662f\u5de6\u5bf9\u9f50\u7684\u4e00\u5217\u6570\u636e\uff0c\u90fd\u662f\u540c\u4e00\u4e2a\u5c42\u7ea7\u7684 server : port : 8081 path : /hello \u5c5e\u6027\u548c\u503c\u4e5f\u662f\u5927\u5c0f\u5199\u654f\u611f\uff1b","title":"1\u3001\u57fa\u672c\u8bed\u6cd5"},{"location":"Java/SpringBoot/SpringBoot/#2_3","text":"","title":"2\u3001\u503c\u7684\u5199\u6cd5"},{"location":"Java/SpringBoot/SpringBoot/#_2","text":"\u200b k: v\uff1a\u5b57\u9762\u76f4\u63a5\u6765\u5199\uff1b \u200b \u5b57\u7b26\u4e32\u9ed8\u8ba4\u4e0d\u7528\u52a0\u4e0a\u5355\u5f15\u53f7\u6216\u8005\u53cc\u5f15\u53f7\uff1b \u200b \"\"\uff1a\u53cc\u5f15\u53f7\uff1b\u4e0d\u4f1a\u8f6c\u4e49\u5b57\u7b26\u4e32\u91cc\u9762\u7684\u7279\u6b8a\u5b57\u7b26\uff1b\u7279\u6b8a\u5b57\u7b26\u4f1a\u4f5c\u4e3a\u672c\u8eab\u60f3\u8868\u793a\u7684\u610f\u601d \u200b name: \"zhangsan \\n lisi\"\uff1a\u8f93\u51fa\uff1bzhangsan \u6362\u884c lisi \u200b ''\uff1a\u5355\u5f15\u53f7\uff1b\u4f1a\u8f6c\u4e49\u7279\u6b8a\u5b57\u7b26\uff0c\u7279\u6b8a\u5b57\u7b26\u6700\u7ec8\u53ea\u662f\u4e00\u4e2a\u666e\u901a\u7684\u5b57\u7b26\u4e32\u6570\u636e \u200b name: \u2018zhangsan \\n lisi\u2019\uff1a\u8f93\u51fa\uff1bzhangsan \\n lisi","title":"\u5b57\u9762\u91cf\uff1a\u666e\u901a\u7684\u503c\uff08\u6570\u5b57\uff0c\u5b57\u7b26\u4e32\uff0c\u5e03\u5c14\uff09"},{"location":"Java/SpringBoot/SpringBoot/#map","text":"\u200b k: v\uff1a\u5728\u4e0b\u4e00\u884c\u6765\u5199\u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u503c\u7684\u5173\u7cfb\uff1b\u6ce8\u610f\u7f29\u8fdb \u200b \u5bf9\u8c61\u8fd8\u662fk: v\u7684\u65b9\u5f0f friends : lastName : zhangsan age : 20 \u884c\u5185\u5199\u6cd5\uff1a friends : { lastName : zhangsan , age : 18 }","title":"\u5bf9\u8c61\u3001Map\uff08\u5c5e\u6027\u548c\u503c\uff09\uff08\u952e\u503c\u5bf9\uff09\uff1a"},{"location":"Java/SpringBoot/SpringBoot/#listset","text":"\u7528- \u503c\u8868\u793a\u6570\u7ec4\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20 pets : - cat - dog - pig \u884c\u5185\u5199\u6cd5 pets : [ cat , dog , pig ]","title":"\u6570\u7ec4\uff08List\u3001Set\uff09\uff1a"},{"location":"Java/SpringBoot/SpringBoot/#3_1","text":"\u914d\u7f6e\u6587\u4ef6 person : lastName : hello age : 18 boss : false birth : 2017/12/12 maps : { k1 : v1 , k2 : 12 } lists : - lisi - zhaoliu dog : name : \u5c0f\u72d7 age : 12 javaBean\uff1a /** * \u5c06\u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\u7684\u6bcf\u4e00\u4e2a\u5c5e\u6027\u7684\u503c\uff0c\u6620\u5c04\u5230\u8fd9\u4e2a\u7ec4\u4ef6\u4e2d * @ConfigurationProperties\uff1a\u544a\u8bc9SpringBoot\u5c06\u672c\u7c7b\u4e2d\u7684\u6240\u6709\u5c5e\u6027\u548c\u914d\u7f6e\u6587\u4ef6\u4e2d\u76f8\u5173\u7684\u914d\u7f6e\u8fdb\u884c\u7ed1\u5b9a\uff1b * prefix = \"person\"\uff1a\u914d\u7f6e\u6587\u4ef6\u4e2d\u54ea\u4e2a\u4e0b\u9762\u7684\u6240\u6709\u5c5e\u6027\u8fdb\u884c\u4e00\u4e00\u6620\u5c04 * * \u53ea\u6709\u8fd9\u4e2a\u7ec4\u4ef6\u662f\u5bb9\u5668\u4e2d\u7684\u7ec4\u4ef6\uff0c\u624d\u80fd\u5bb9\u5668\u63d0\u4f9b\u7684@ConfigurationProperties\u529f\u80fd\uff1b * */ @Component @ConfigurationProperties ( prefix = \"person\" ) public class Person { private String lastName ; private Integer age ; private Boolean boss ; private Date birth ; private Map < String , Object > maps ; private List < Object > lists ; private Dog dog ; \u6211\u4eec\u53ef\u4ee5\u5bfc\u5165\u914d\u7f6e\u6587\u4ef6\u5904\u7406\u5668\uff0c\u4ee5\u540e\u7f16\u5199\u914d\u7f6e\u5c31\u6709\u63d0\u793a\u4e86 <!--\u5bfc\u5165\u914d\u7f6e\u6587\u4ef6\u5904\u7406\u5668\uff0c\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u7ed1\u5b9a\u5c31\u4f1a\u6709\u63d0\u793a--> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-configuration-processor </artifactId> <optional> true </optional> </dependency>","title":"3\u3001\u914d\u7f6e\u6587\u4ef6\u503c\u6ce8\u5165"},{"location":"Java/SpringBoot/SpringBoot/#1propertiesideautf-8","text":"\u8c03\u6574","title":"1\u3001properties\u914d\u7f6e\u6587\u4ef6\u5728idea\u4e2d\u9ed8\u8ba4utf-8\u53ef\u80fd\u4f1a\u4e71\u7801"},{"location":"Java/SpringBoot/SpringBoot/#2valueconfigurationproperties","text":"@ConfigurationProperties @Value \u529f\u80fd \u6279\u91cf\u6ce8\u5165\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u5c5e\u6027 \u4e00\u4e2a\u4e2a\u6307\u5b9a \u677e\u6563\u7ed1\u5b9a\uff08\u677e\u6563\u8bed\u6cd5\uff09 \u652f\u6301 \u4e0d\u652f\u6301 SpEL \u4e0d\u652f\u6301 \u652f\u6301 JSR303\u6570\u636e\u6821\u9a8c \u652f\u6301 \u4e0d\u652f\u6301 \u590d\u6742\u7c7b\u578b\u5c01\u88c5 \u652f\u6301 \u4e0d\u652f\u6301 \u914d\u7f6e\u6587\u4ef6yml\u8fd8\u662fproperties\u4ed6\u4eec\u90fd\u80fd\u83b7\u53d6\u5230\u503c\uff1b \u5982\u679c\u8bf4\uff0c\u6211\u4eec\u53ea\u662f\u5728\u67d0\u4e2a\u4e1a\u52a1\u903b\u8f91\u4e2d\u9700\u8981\u83b7\u53d6\u4e00\u4e0b\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u67d0\u9879\u503c\uff0c\u4f7f\u7528@Value\uff1b \u5982\u679c\u8bf4\uff0c\u6211\u4eec\u4e13\u95e8\u7f16\u5199\u4e86\u4e00\u4e2ajavaBean\u6765\u548c\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u6620\u5c04\uff0c\u6211\u4eec\u5c31\u76f4\u63a5\u4f7f\u7528@ConfigurationProperties\uff1b","title":"2\u3001@Value\u83b7\u53d6\u503c\u548c@ConfigurationProperties\u83b7\u53d6\u503c\u6bd4\u8f83"},{"location":"Java/SpringBoot/SpringBoot/#3_2","text":"@Component @ConfigurationProperties ( prefix = \"person\" ) @Validated public class Person { /** * <bean class=\"Person\"> * <property name=\"lastName\" value=\"\u5b57\u9762\u91cf/${key}\u4ece\u73af\u5883\u53d8\u91cf\u3001\u914d\u7f6e\u6587\u4ef6\u4e2d\u83b7\u53d6\u503c/#{SpEL}\"></property> * <bean/> */ //lastName\u5fc5\u987b\u662f\u90ae\u7bb1\u683c\u5f0f @Email //@Value(\"${person.last-name}\") private String lastName ; //@Value(\"#{11*2}\") private Integer age ; //@Value(\"true\") private Boolean boss ; private Date birth ; private Map < String , Object > maps ; private List < Object > lists ; private Dog dog ;","title":"3\u3001\u914d\u7f6e\u6587\u4ef6\u6ce8\u5165\u503c\u6570\u636e\u6821\u9a8c"},{"location":"Java/SpringBoot/SpringBoot/#4propertysourceimportresourcebean","text":"@ PropertySource \uff1a\u52a0\u8f7d\u6307\u5b9a\u7684\u914d\u7f6e\u6587\u4ef6\uff1b /** * \u5c06\u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\u7684\u6bcf\u4e00\u4e2a\u5c5e\u6027\u7684\u503c\uff0c\u6620\u5c04\u5230\u8fd9\u4e2a\u7ec4\u4ef6\u4e2d * @ConfigurationProperties\uff1a\u544a\u8bc9SpringBoot\u5c06\u672c\u7c7b\u4e2d\u7684\u6240\u6709\u5c5e\u6027\u548c\u914d\u7f6e\u6587\u4ef6\u4e2d\u76f8\u5173\u7684\u914d\u7f6e\u8fdb\u884c\u7ed1\u5b9a\uff1b * prefix = \"person\"\uff1a\u914d\u7f6e\u6587\u4ef6\u4e2d\u54ea\u4e2a\u4e0b\u9762\u7684\u6240\u6709\u5c5e\u6027\u8fdb\u884c\u4e00\u4e00\u6620\u5c04 * * \u53ea\u6709\u8fd9\u4e2a\u7ec4\u4ef6\u662f\u5bb9\u5668\u4e2d\u7684\u7ec4\u4ef6\uff0c\u624d\u80fd\u5bb9\u5668\u63d0\u4f9b\u7684@ConfigurationProperties\u529f\u80fd\uff1b * @ConfigurationProperties(prefix = \"person\")\u9ed8\u8ba4\u4ece\u5168\u5c40\u914d\u7f6e\u6587\u4ef6\u4e2d\u83b7\u53d6\u503c\uff1b * */ @PropertySource ( value = { \"classpath:person.properties\" }) @Component @ConfigurationProperties ( prefix = \"person\" ) //@Validated public class Person { /** * <bean class=\"Person\"> * <property name=\"lastName\" value=\"\u5b57\u9762\u91cf/${key}\u4ece\u73af\u5883\u53d8\u91cf\u3001\u914d\u7f6e\u6587\u4ef6\u4e2d\u83b7\u53d6\u503c/#{SpEL}\"></property> * <bean/> */ //lastName\u5fc5\u987b\u662f\u90ae\u7bb1\u683c\u5f0f // @Email //@Value(\"${person.last-name}\") private String lastName ; //@Value(\"#{11*2}\") private Integer age ; //@Value(\"true\") private Boolean boss ; @ ImportResource \uff1a\u5bfc\u5165Spring\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u8ba9\u914d\u7f6e\u6587\u4ef6\u91cc\u9762\u7684\u5185\u5bb9\u751f\u6548\uff1b Spring Boot\u91cc\u9762\u6ca1\u6709Spring\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u4eec\u81ea\u5df1\u7f16\u5199\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u4e5f\u4e0d\u80fd\u81ea\u52a8\u8bc6\u522b\uff1b \u60f3\u8ba9Spring\u7684\u914d\u7f6e\u6587\u4ef6\u751f\u6548\uff0c\u52a0\u8f7d\u8fdb\u6765\uff1b@ ImportResource \u6807\u6ce8\u5728\u4e00\u4e2a\u914d\u7f6e\u7c7b\u4e0a @ImportResource ( locations = { \"classpath:beans.xml\" }) \u5bfc\u5165Spring\u7684\u914d\u7f6e\u6587\u4ef6\u8ba9\u5176\u751f\u6548 \u4e0d\u6765\u7f16\u5199Spring\u7684\u914d\u7f6e\u6587\u4ef6 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns= \"http://www.springframework.org/schema/beans\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" > <bean id= \"helloService\" class= \"com.atguigu.springboot.service.HelloService\" ></bean> </beans> SpringBoot\u63a8\u8350\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u7ec4\u4ef6\u7684\u65b9\u5f0f\uff1b\u63a8\u8350\u4f7f\u7528\u5168\u6ce8\u89e3\u7684\u65b9\u5f0f 1\u3001\u914d\u7f6e\u7c7b @Configuration ------>Spring\u914d\u7f6e\u6587\u4ef6 2\u3001\u4f7f\u7528 @Bean \u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u7ec4\u4ef6 /** * @Configuration\uff1a\u6307\u660e\u5f53\u524d\u7c7b\u662f\u4e00\u4e2a\u914d\u7f6e\u7c7b\uff1b\u5c31\u662f\u6765\u66ff\u4ee3\u4e4b\u524d\u7684Spring\u914d\u7f6e\u6587\u4ef6 * * \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u7528<bean><bean/>\u6807\u7b7e\u6dfb\u52a0\u7ec4\u4ef6 * */ @Configuration public class MyAppConfig { //\u5c06\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u6dfb\u52a0\u5230\u5bb9\u5668\u4e2d\uff1b\u5bb9\u5668\u4e2d\u8fd9\u4e2a\u7ec4\u4ef6\u9ed8\u8ba4\u7684id\u5c31\u662f\u65b9\u6cd5\u540d @Bean public HelloService helloService02 (){ System . out . println ( \"\u914d\u7f6e\u7c7b@Bean\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u7ec4\u4ef6\u4e86...\" ); return new HelloService (); } }","title":"4\u3001@PropertySource&amp;@ImportResource&amp;@Bean"},{"location":"Java/SpringBoot/SpringBoot/#4","text":"","title":"4\u3001\u914d\u7f6e\u6587\u4ef6\u5360\u4f4d\u7b26"},{"location":"Java/SpringBoot/SpringBoot/#1_3","text":"$ { random . value } \u3001 $ { random . int } \u3001 $ { random . long } $ { random . int ( 10 )} \u3001 $ { random . int [ 1024 , 65536 ] }","title":"1\u3001\u968f\u673a\u6570"},{"location":"Java/SpringBoot/SpringBoot/#2_4","text":"person.last-name = \u5f20\u4e09${random.uuid} person.age = ${random.int} person.birth = 2017/12/15 person.boss = false person.maps.k1 = v1 person.maps.k2 = 14 person.lists = a,b,c person.dog.name = ${person.hello:hello}_dog person.dog.age = 15","title":"2\u3001\u5360\u4f4d\u7b26\u83b7\u53d6\u4e4b\u524d\u914d\u7f6e\u7684\u503c\uff0c\u5982\u679c\u6ca1\u6709\u53ef\u4ee5\u662f\u7528:\u6307\u5b9a\u9ed8\u8ba4\u503c"},{"location":"Java/SpringBoot/SpringBoot/#5profile","text":"","title":"5\u3001Profile"},{"location":"Java/SpringBoot/SpringBoot/#1profile","text":"\u6211\u4eec\u5728\u4e3b\u914d\u7f6e\u6587\u4ef6\u7f16\u5199\u7684\u65f6\u5019\uff0c\u6587\u4ef6\u540d\u53ef\u4ee5\u662f application-{profile}.properties/yml \u9ed8\u8ba4\u4f7f\u7528application.properties\u7684\u914d\u7f6e\uff1b","title":"1\u3001\u591aProfile\u6587\u4ef6"},{"location":"Java/SpringBoot/SpringBoot/#2yml","text":"server: port: 8081 spring: profiles: active: prod --- server: port: 8083 spring: profiles: dev --- server: port: 8084 spring: profiles: prod #\u6307\u5b9a\u5c5e\u4e8e\u54ea\u4e2a\u73af\u5883","title":"2\u3001yml\u652f\u6301\u591a\u6587\u6863\u5757\u65b9\u5f0f"},{"location":"Java/SpringBoot/SpringBoot/#3profile","text":"\u200b 1\u3001\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a spring.profiles.active=dev \u200b 2\u3001\u547d\u4ee4\u884c\uff1a \u200b java -jar spring-boot-02-config-0.0.1-SNAPSHOT.jar --spring.profiles.active=dev\uff1b \u200b \u53ef\u4ee5\u76f4\u63a5\u5728\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u914d\u7f6e\u4f20\u5165\u547d\u4ee4\u884c\u53c2\u6570 \u200b 3\u3001\u865a\u62df\u673a\u53c2\u6570\uff1b \u200b -Dspring.profiles.active=dev","title":"3\u3001\u6fc0\u6d3b\u6307\u5b9aprofile"},{"location":"Java/SpringBoot/SpringBoot/#6_1","text":"springboot \u542f\u52a8\u4f1a\u626b\u63cf\u4ee5\u4e0b\u4f4d\u7f6e\u7684application.properties\u6216\u8005application.yml\u6587\u4ef6\u4f5c\u4e3aSpring boot\u7684\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6 \u2013file:./config/ \u2013file:./ \u2013classpath:/config/ \u2013classpath:/ \u4f18\u5148\u7ea7\u7531\u9ad8\u5230\u5e95\uff0c\u9ad8\u4f18\u5148\u7ea7\u7684\u914d\u7f6e\u4f1a\u8986\u76d6\u4f4e\u4f18\u5148\u7ea7\u7684\u914d\u7f6e\uff1b SpringBoot\u4f1a\u4ece\u8fd9\u56db\u4e2a\u4f4d\u7f6e\u5168\u90e8\u52a0\u8f7d\u4e3b\u914d\u7f6e\u6587\u4ef6\uff1b \u4e92\u8865\u914d\u7f6e \uff1b ==\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7spring.config.location\u6765\u6539\u53d8\u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e== \u9879\u76ee\u6253\u5305\u597d\u4ee5\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u884c\u53c2\u6570\u7684\u5f62\u5f0f\uff0c\u542f\u52a8\u9879\u76ee\u7684\u65f6\u5019\u6765\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u7684\u65b0\u4f4d\u7f6e\uff1b\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u548c\u9ed8\u8ba4\u52a0\u8f7d\u7684\u8fd9\u4e9b\u914d\u7f6e\u6587\u4ef6\u5171\u540c\u8d77\u4f5c\u7528\u5f62\u6210\u4e92\u8865\u914d\u7f6e\uff1b java -jar spring-boot-02-config-02-0.0.1-SNAPSHOT.jar --spring.config.location=G:/application.properties","title":"6\u3001\u914d\u7f6e\u6587\u4ef6\u52a0\u8f7d\u4f4d\u7f6e"},{"location":"Java/SpringBoot/SpringBoot/#7","text":"==SpringBoot\u4e5f\u53ef\u4ee5\u4ece\u4ee5\u4e0b\u4f4d\u7f6e\u52a0\u8f7d\u914d\u7f6e\uff1b \u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\uff1b\u9ad8\u4f18\u5148\u7ea7\u7684\u914d\u7f6e\u8986\u76d6\u4f4e\u4f18\u5148\u7ea7\u7684\u914d\u7f6e\uff0c\u6240\u6709\u7684\u914d\u7f6e\u4f1a\u5f62\u6210\u4e92\u8865\u914d\u7f6e== 1.\u547d\u4ee4\u884c\u53c2\u6570 \u6240\u6709\u7684\u914d\u7f6e\u90fd\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e0a\u8fdb\u884c\u6307\u5b9a java -jar spring-boot-02-config-02-0.0.1-SNAPSHOT.jar --server.port=8087 --server.context-path=/abc \u591a\u4e2a\u914d\u7f6e\u7528\u7a7a\u683c\u5206\u5f00\uff1b --\u914d\u7f6e\u9879=\u503c 2.\u6765\u81eajava:comp/env\u7684JNDI\u5c5e\u6027 3.Java\u7cfb\u7edf\u5c5e\u6027\uff08System.getProperties()\uff09 4.\u64cd\u4f5c\u7cfb\u7edf\u73af\u5883\u53d8\u91cf 5.RandomValuePropertySource\u914d\u7f6e\u7684random.*\u5c5e\u6027\u503c == \u7531jar\u5305\u5916\u5411jar\u5305\u5185\u8fdb\u884c\u5bfb\u627e\uff1b == == \u4f18\u5148\u52a0\u8f7d\u5e26profile == 6.jar\u5305\u5916\u90e8\u7684application-{profile}.properties\u6216application.yml(\u5e26spring.profile)\u914d\u7f6e\u6587\u4ef6 7.jar\u5305\u5185\u90e8\u7684application-{profile}.properties\u6216application.yml(\u5e26spring.profile)\u914d\u7f6e\u6587\u4ef6 == \u518d\u6765\u52a0\u8f7d\u4e0d\u5e26profile == 8.jar\u5305\u5916\u90e8\u7684application.properties\u6216application.yml(\u4e0d\u5e26spring.profile)\u914d\u7f6e\u6587\u4ef6 9.jar\u5305\u5185\u90e8\u7684application.properties\u6216application.yml(\u4e0d\u5e26spring.profile)\u914d\u7f6e\u6587\u4ef6 10.@Configuration\u6ce8\u89e3\u7c7b\u4e0a\u7684@PropertySource 11.\u901a\u8fc7SpringApplication.setDefaultProperties\u6307\u5b9a\u7684\u9ed8\u8ba4\u5c5e\u6027 \u6240\u6709\u652f\u6301\u7684\u914d\u7f6e\u52a0\u8f7d\u6765\u6e90\uff1b \u53c2\u8003\u5b98\u65b9\u6587\u6863","title":"7\u3001\u5916\u90e8\u914d\u7f6e\u52a0\u8f7d\u987a\u5e8f"},{"location":"Java/SpringBoot/SpringBoot/#8","text":"\u914d\u7f6e\u6587\u4ef6\u5230\u5e95\u80fd\u5199\u4ec0\u4e48\uff1f\u600e\u4e48\u5199\uff1f\u81ea\u52a8\u914d\u7f6e\u539f\u7406\uff1b \u914d\u7f6e\u6587\u4ef6\u80fd\u914d\u7f6e\u7684\u5c5e\u6027\u53c2\u7167","title":"8\u3001\u81ea\u52a8\u914d\u7f6e\u539f\u7406"},{"location":"Java/SpringBoot/SpringBoot/#1_4","text":"1\uff09\u3001SpringBoot\u542f\u52a8\u7684\u65f6\u5019\u52a0\u8f7d\u4e3b\u914d\u7f6e\u7c7b\uff0c\u5f00\u542f\u4e86\u81ea\u52a8\u914d\u7f6e\u529f\u80fd ==@EnableAutoConfiguration== 2\uff09\u3001@EnableAutoConfiguration \u4f5c\u7528\uff1a \u5229\u7528EnableAutoConfigurationImportSelector\u7ed9\u5bb9\u5668\u4e2d\u5bfc\u5165\u4e00\u4e9b\u7ec4\u4ef6\uff1f \u53ef\u4ee5\u67e5\u770bselectImports()\u65b9\u6cd5\u7684\u5185\u5bb9\uff1b List configurations = getCandidateConfigurations(annotationMetadata, attributes);\u83b7\u53d6\u5019\u9009\u7684\u914d\u7f6e ```java SpringFactoriesLoader.loadFactoryNames() \u626b\u63cf\u6240\u6709jar\u5305\u7c7b\u8def\u5f84\u4e0b META-INF/spring.factories \u628a\u626b\u63cf\u5230\u7684\u8fd9\u4e9b\u6587\u4ef6\u7684\u5185\u5bb9\u5305\u88c5\u6210properties\u5bf9\u8c61 \u4eceproperties\u4e2d\u83b7\u53d6\u5230EnableAutoConfiguration.class\u7c7b\uff08\u7c7b\u540d\uff09\u5bf9\u5e94\u7684\u503c\uff0c\u7136\u540e\u628a\u4ed6\u4eec\u6dfb\u52a0\u5728\u5bb9\u5668\u4e2d ``` \u200b ==\u5c06 \u7c7b\u8def\u5f84\u4e0b META-INF/spring.factories \u91cc\u9762\u914d\u7f6e\u7684\u6240\u6709EnableAutoConfiguration\u7684\u503c\u52a0\u5165\u5230\u4e86\u5bb9\u5668\u4e2d\uff1b== # Auto Configure org.springframework.boot.autoconfigure.EnableAutoConfiguration = \\ org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\\ org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\\ org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration,\\ org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration,\\ org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration,\\ org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration,\\ org.springframework.boot.autoconfigure.cloud.CloudAutoConfiguration,\\ org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,\\ org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration,\\ org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,\\ org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration,\\ org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.ldap.LdapDataAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.solr.SolrRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration,\\ org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration,\\ org.springframework.boot.autoconfigure.elasticsearch.jest.JestAutoConfiguration,\\ org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration,\\ org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration,\\ org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration,\\ org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration,\\ org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration,\\ org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration,\\ org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration,\\ org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration,\\ org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration,\\ org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\\ org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,\\ org.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration,\\ org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration,\\ org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\\ org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration,\\ org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration,\\ org.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration,\\ org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration,\\ org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration,\\ org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration,\\ org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration,\\ org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration,\\ org.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration,\\ org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration,\\ org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration,\\ org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration,\\ org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration,\\ org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration,\\ org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration,\\ org.springframework.boot.autoconfigure.mobile.DeviceResolverAutoConfiguration,\\ org.springframework.boot.autoconfigure.mobile.DeviceDelegatingViewResolverAutoConfiguration,\\ org.springframework.boot.autoconfigure.mobile.SitePreferenceAutoConfiguration,\\ org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration,\\ org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration,\\ org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration,\\ org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\\ org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration,\\ org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration,\\ org.springframework.boot.autoconfigure.security.SecurityFilterAutoConfiguration,\\ org.springframework.boot.autoconfigure.security.FallbackWebSecurityAutoConfiguration,\\ org.springframework.boot.autoconfigure.security.oauth2.OAuth2AutoConfiguration,\\ org.springframework.boot.autoconfigure.sendgrid.SendGridAutoConfiguration,\\ org.springframework.boot.autoconfigure.session.SessionAutoConfiguration,\\ org.springframework.boot.autoconfigure.social.SocialWebAutoConfiguration,\\ org.springframework.boot.autoconfigure.social.FacebookAutoConfiguration,\\ org.springframework.boot.autoconfigure.social.LinkedInAutoConfiguration,\\ org.springframework.boot.autoconfigure.social.TwitterAutoConfiguration,\\ org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration,\\ org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration,\\ org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration,\\ org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration,\\ org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration,\\ org.springframework.boot.autoconfigure.web.DispatcherServletAutoConfiguration,\\ org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration,\\ org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration,\\ org.springframework.boot.autoconfigure.web.HttpEncodingAutoConfiguration,\\ org.springframework.boot.autoconfigure.web.HttpMessageConvertersAutoConfiguration,\\ org.springframework.boot.autoconfigure.web.MultipartAutoConfiguration,\\ org.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration,\\ org.springframework.boot.autoconfigure.web.WebClientAutoConfiguration,\\ org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration,\\ org.springframework.boot.autoconfigure.websocket.WebSocketAutoConfiguration,\\ org.springframework.boot.autoconfigure.websocket.WebSocketMessagingAutoConfiguration,\\ org.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration \u6bcf\u4e00\u4e2a\u8fd9\u6837\u7684 xxxAutoConfiguration\u7c7b\u90fd\u662f\u5bb9\u5668\u4e2d\u7684\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u90fd\u52a0\u5165\u5230\u5bb9\u5668\u4e2d\uff1b\u7528\u4ed6\u4eec\u6765\u505a\u81ea\u52a8\u914d\u7f6e\uff1b 3\uff09\u3001\u6bcf\u4e00\u4e2a\u81ea\u52a8\u914d\u7f6e\u7c7b\u8fdb\u884c\u81ea\u52a8\u914d\u7f6e\u529f\u80fd\uff1b 4\uff09\u3001\u4ee5 HttpEncodingAutoConfiguration\uff08Http\u7f16\u7801\u81ea\u52a8\u914d\u7f6e\uff09 \u4e3a\u4f8b\u89e3\u91ca\u81ea\u52a8\u914d\u7f6e\u539f\u7406\uff1b @Configuration //\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u914d\u7f6e\u7c7b\uff0c\u4ee5\u524d\u7f16\u5199\u7684\u914d\u7f6e\u6587\u4ef6\u4e00\u6837\uff0c\u4e5f\u53ef\u4ee5\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u7ec4\u4ef6 @EnableConfigurationProperties ( HttpEncodingProperties . class ) //\u542f\u52a8\u6307\u5b9a\u7c7b\u7684ConfigurationProperties\u529f\u80fd\uff1b\u5c06\u914d\u7f6e\u6587\u4ef6\u4e2d\u5bf9\u5e94\u7684\u503c\u548cHttpEncodingProperties\u7ed1\u5b9a\u8d77\u6765\uff1b\u5e76\u628aHttpEncodingProperties\u52a0\u5165\u5230ioc\u5bb9\u5668\u4e2d @ConditionalOnWebApplication //Spring\u5e95\u5c42@Conditional\u6ce8\u89e3\uff08Spring\u6ce8\u89e3\u7248\uff09\uff0c\u6839\u636e\u4e0d\u540c\u7684\u6761\u4ef6\uff0c\u5982\u679c\u6ee1\u8db3\u6307\u5b9a\u7684\u6761\u4ef6\uff0c\u6574\u4e2a\u914d\u7f6e\u7c7b\u91cc\u9762\u7684\u914d\u7f6e\u5c31\u4f1a\u751f\u6548\uff1b \u5224\u65ad\u5f53\u524d\u5e94\u7528\u662f\u5426\u662fweb\u5e94\u7528\uff0c\u5982\u679c\u662f\uff0c\u5f53\u524d\u914d\u7f6e\u7c7b\u751f\u6548 @ConditionalOnClass ( CharacterEncodingFilter . class ) //\u5224\u65ad\u5f53\u524d\u9879\u76ee\u6709\u6ca1\u6709\u8fd9\u4e2a\u7c7bCharacterEncodingFilter\uff1bSpringMVC\u4e2d\u8fdb\u884c\u4e71\u7801\u89e3\u51b3\u7684\u8fc7\u6ee4\u5668\uff1b @ConditionalOnProperty ( prefix = \"spring.http.encoding\" , value = \"enabled\" , matchIfMissing = true ) //\u5224\u65ad\u914d\u7f6e\u6587\u4ef6\u4e2d\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u914d\u7f6e spring.http.encoding.enabled\uff1b\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5224\u65ad\u4e5f\u662f\u6210\u7acb\u7684 //\u5373\u4f7f\u6211\u4eec\u914d\u7f6e\u6587\u4ef6\u4e2d\u4e0d\u914d\u7f6epring.http.encoding.enabled=true\uff0c\u4e5f\u662f\u9ed8\u8ba4\u751f\u6548\u7684\uff1b public class HttpEncodingAutoConfiguration { //\u4ed6\u5df2\u7ecf\u548cSpringBoot\u7684\u914d\u7f6e\u6587\u4ef6\u6620\u5c04\u4e86 private final HttpEncodingProperties properties ; //\u53ea\u6709\u4e00\u4e2a\u6709\u53c2\u6784\u9020\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u53c2\u6570\u7684\u503c\u5c31\u4f1a\u4ece\u5bb9\u5668\u4e2d\u62ff public HttpEncodingAutoConfiguration ( HttpEncodingProperties properties ) { this . properties = properties ; } @Bean //\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u8fd9\u4e2a\u7ec4\u4ef6\u7684\u67d0\u4e9b\u503c\u9700\u8981\u4eceproperties\u4e2d\u83b7\u53d6 @ConditionalOnMissingBean ( CharacterEncodingFilter . class ) //\u5224\u65ad\u5bb9\u5668\u6ca1\u6709\u8fd9\u4e2a\u7ec4\u4ef6\uff1f public CharacterEncodingFilter characterEncodingFilter () { CharacterEncodingFilter filter = new OrderedCharacterEncodingFilter (); filter . setEncoding ( this . properties . getCharset (). name ()); filter . setForceRequestEncoding ( this . properties . shouldForce ( Type . REQUEST )); filter . setForceResponseEncoding ( this . properties . shouldForce ( Type . RESPONSE )); return filter ; } \u6839\u636e\u5f53\u524d\u4e0d\u540c\u7684\u6761\u4ef6\u5224\u65ad\uff0c\u51b3\u5b9a\u8fd9\u4e2a\u914d\u7f6e\u7c7b\u662f\u5426\u751f\u6548\uff1f \u4e00\u4f46\u8fd9\u4e2a\u914d\u7f6e\u7c7b\u751f\u6548\uff1b\u8fd9\u4e2a\u914d\u7f6e\u7c7b\u5c31\u4f1a\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u5404\u79cd\u7ec4\u4ef6\uff1b\u8fd9\u4e9b\u7ec4\u4ef6\u7684\u5c5e\u6027\u662f\u4ece\u5bf9\u5e94\u7684properties\u7c7b\u4e2d\u83b7\u53d6\u7684\uff0c\u8fd9\u4e9b\u7c7b\u91cc\u9762\u7684\u6bcf\u4e00\u4e2a\u5c5e\u6027\u53c8\u662f\u548c\u914d\u7f6e\u6587\u4ef6\u7ed1\u5b9a\u7684\uff1b 5\uff09\u3001\u6240\u6709\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u80fd\u914d\u7f6e\u7684\u5c5e\u6027\u90fd\u662f\u5728xxxxProperties\u7c7b\u4e2d\u5c01\u88c5\u8005\u2018\uff1b\u914d\u7f6e\u6587\u4ef6\u80fd\u914d\u7f6e\u4ec0\u4e48\u5c31\u53ef\u4ee5\u53c2\u7167\u67d0\u4e2a\u529f\u80fd\u5bf9\u5e94\u7684\u8fd9\u4e2a\u5c5e\u6027\u7c7b @ConfigurationProperties ( prefix = \"spring.http.encoding\" ) //\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u83b7\u53d6\u6307\u5b9a\u7684\u503c\u548cbean\u7684\u5c5e\u6027\u8fdb\u884c\u7ed1\u5b9a public class HttpEncodingProperties { public static final Charset DEFAULT_CHARSET = Charset . forName ( \"UTF-8\" ); \u7cbe\u9ad3\uff1a \u200b 1\uff09\u3001SpringBoot\u542f\u52a8\u4f1a\u52a0\u8f7d\u5927\u91cf\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b \u200b 2\uff09\u3001\u6211\u4eec\u770b\u6211\u4eec\u9700\u8981\u7684\u529f\u80fd\u6709\u6ca1\u6709SpringBoot\u9ed8\u8ba4\u5199\u597d\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\uff1b \u200b 3\uff09\u3001\u6211\u4eec\u518d\u6765\u770b\u8fd9\u4e2a\u81ea\u52a8\u914d\u7f6e\u7c7b\u4e2d\u5230\u5e95\u914d\u7f6e\u4e86\u54ea\u4e9b\u7ec4\u4ef6\uff1b\uff08\u53ea\u8981\u6211\u4eec\u8981\u7528\u7684\u7ec4\u4ef6\u6709\uff0c\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u518d\u6765\u914d\u7f6e\u4e86\uff09 \u200b 4\uff09\u3001\u7ed9\u5bb9\u5668\u4e2d\u81ea\u52a8\u914d\u7f6e\u7c7b\u6dfb\u52a0\u7ec4\u4ef6\u7684\u65f6\u5019\uff0c\u4f1a\u4eceproperties\u7c7b\u4e2d\u83b7\u53d6\u67d0\u4e9b\u5c5e\u6027\u3002\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u8fd9\u4e9b\u5c5e\u6027\u7684\u503c\uff1b xxxxAutoConfigurartion\uff1a\u81ea\u52a8\u914d\u7f6e\u7c7b\uff1b \u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u7ec4\u4ef6 xxxxProperties:\u5c01\u88c5\u914d\u7f6e\u6587\u4ef6\u4e2d\u76f8\u5173\u5c5e\u6027\uff1b","title":"1\u3001\u81ea\u52a8\u914d\u7f6e\u539f\u7406\uff1a"},{"location":"Java/SpringBoot/SpringBoot/#2_5","text":"","title":"2\u3001\u7ec6\u8282"},{"location":"Java/SpringBoot/SpringBoot/#1conditionalspringconditional","text":"\u4f5c\u7528\uff1a\u5fc5\u987b\u662f@Conditional\u6307\u5b9a\u7684\u6761\u4ef6\u6210\u7acb\uff0c\u624d\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u7ec4\u4ef6\uff0c\u914d\u7f6e\u914d\u91cc\u9762\u7684\u6240\u6709\u5185\u5bb9\u624d\u751f\u6548\uff1b @Conditional\u6269\u5c55\u6ce8\u89e3 \u4f5c\u7528\uff08\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u5f53\u524d\u6307\u5b9a\u6761\u4ef6\uff09 @ConditionalOnJava \u7cfb\u7edf\u7684java\u7248\u672c\u662f\u5426\u7b26\u5408\u8981\u6c42 @ConditionalOnBean \u5bb9\u5668\u4e2d\u5b58\u5728\u6307\u5b9aBean\uff1b @ConditionalOnMissingBean \u5bb9\u5668\u4e2d\u4e0d\u5b58\u5728\u6307\u5b9aBean\uff1b @ConditionalOnExpression \u6ee1\u8db3SpEL\u8868\u8fbe\u5f0f\u6307\u5b9a @ConditionalOnClass \u7cfb\u7edf\u4e2d\u6709\u6307\u5b9a\u7684\u7c7b @ConditionalOnMissingClass \u7cfb\u7edf\u4e2d\u6ca1\u6709\u6307\u5b9a\u7684\u7c7b @ConditionalOnSingleCandidate \u5bb9\u5668\u4e2d\u53ea\u6709\u4e00\u4e2a\u6307\u5b9a\u7684Bean\uff0c\u6216\u8005\u8fd9\u4e2aBean\u662f\u9996\u9009Bean @ConditionalOnProperty \u7cfb\u7edf\u4e2d\u6307\u5b9a\u7684\u5c5e\u6027\u662f\u5426\u6709\u6307\u5b9a\u7684\u503c @ConditionalOnResource \u7c7b\u8def\u5f84\u4e0b\u662f\u5426\u5b58\u5728\u6307\u5b9a\u8d44\u6e90\u6587\u4ef6 @ConditionalOnWebApplication \u5f53\u524d\u662fweb\u73af\u5883 @ConditionalOnNotWebApplication \u5f53\u524d\u4e0d\u662fweb\u73af\u5883 @ConditionalOnJndi JNDI\u5b58\u5728\u6307\u5b9a\u9879 \u81ea\u52a8\u914d\u7f6e\u7c7b\u5fc5\u987b\u5728\u4e00\u5b9a\u7684\u6761\u4ef6\u4e0b\u624d\u80fd\u751f\u6548\uff1b \u6211\u4eec\u600e\u4e48\u77e5\u9053\u54ea\u4e9b\u81ea\u52a8\u914d\u7f6e\u7c7b\u751f\u6548\uff1b ==\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u542f\u7528 debug=true\u5c5e\u6027\uff1b\u6765\u8ba9\u63a7\u5236\u53f0\u6253\u5370\u81ea\u52a8\u914d\u7f6e\u62a5\u544a== \uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u77e5\u9053\u54ea\u4e9b\u81ea\u52a8\u914d\u7f6e\u7c7b\u751f\u6548\uff1b ========================= AUTO - CONFIGURATION REPORT ========================= Positive matches : \uff08 \u81ea\u52a8\u914d\u7f6e\u7c7b\u542f\u7528\u7684 \uff09 ----------------- DispatcherServletAutoConfiguration matched : - @ConditionalOnClass found required class ' org . springframework . web . servlet . DispatcherServlet ' ; @ConditionalOnMissingClass did not find unwanted class ( OnClassCondition ) - @ConditionalOnWebApplication ( required ) found StandardServletEnvironment ( OnWebApplicationCondition ) Negative matches : \uff08 \u6ca1\u6709\u542f\u52a8 \uff0c \u6ca1\u6709\u5339\u914d\u6210\u529f\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b \uff09 ----------------- ActiveMQAutoConfiguration : Did not match : - @ConditionalOnClass did not find required classes ' javax . jms . ConnectionFactory ' , ' org . apache . activemq . ActiveMQConnectionFactory ' ( OnClassCondition ) AopAutoConfiguration : Did not match : - @ConditionalOnClass did not find required classes ' org . aspectj . lang . annotation . Aspect ' , ' org . aspectj . lang . reflect . Advice ' ( OnClassCondition )","title":"1\u3001@Conditional\u6d3e\u751f\u6ce8\u89e3\uff08Spring\u6ce8\u89e3\u7248\u539f\u751f\u7684@Conditional\u4f5c\u7528\uff09"},{"location":"Java/SpringBoot/SpringBoot/#_3","text":"","title":"\u4e09\u3001\u65e5\u5fd7"},{"location":"Java/SpringBoot/SpringBoot/#1_5","text":"\u5c0f\u5f20\uff1b\u5f00\u53d1\u4e00\u4e2a\u5927\u578b\u7cfb\u7edf\uff1b \u200b 1\u3001System.out.println(\"\")\uff1b\u5c06\u5173\u952e\u6570\u636e\u6253\u5370\u5728\u63a7\u5236\u53f0\uff1b\u53bb\u6389\uff1f\u5199\u5728\u4e00\u4e2a\u6587\u4ef6\uff1f \u200b 2\u3001\u6846\u67b6\u6765\u8bb0\u5f55\u7cfb\u7edf\u7684\u4e00\u4e9b\u8fd0\u884c\u65f6\u4fe1\u606f\uff1b\u65e5\u5fd7\u6846\u67b6 \uff1b zhanglogging.jar\uff1b \u200b 3\u3001\u9ad8\u5927\u4e0a\u7684\u51e0\u4e2a\u529f\u80fd\uff1f\u5f02\u6b65\u6a21\u5f0f\uff1f\u81ea\u52a8\u5f52\u6863\uff1fxxxx\uff1f zhanglogging-good.jar\uff1f \u200b 4\u3001\u5c06\u4ee5\u524d\u6846\u67b6\u5378\u4e0b\u6765\uff1f\u6362\u4e0a\u65b0\u7684\u6846\u67b6\uff0c\u91cd\u65b0\u4fee\u6539\u4e4b\u524d\u76f8\u5173\u7684API\uff1bzhanglogging-prefect.jar\uff1b \u200b 5\u3001JDBC---\u6570\u636e\u5e93\u9a71\u52a8\uff1b \u200b \u5199\u4e86\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\u5c42\uff1b\u65e5\u5fd7\u95e8\u9762\uff08\u65e5\u5fd7\u7684\u4e00\u4e2a\u62bd\u8c61\u5c42\uff09\uff1blogging-abstract.jar\uff1b \u200b \u7ed9\u9879\u76ee\u4e2d\u5bfc\u5165\u5177\u4f53\u7684\u65e5\u5fd7\u5b9e\u73b0\u5c31\u884c\u4e86\uff1b\u6211\u4eec\u4e4b\u524d\u7684\u65e5\u5fd7\u6846\u67b6\u90fd\u662f\u5b9e\u73b0\u7684\u62bd\u8c61\u5c42\uff1b \u5e02\u9762\u4e0a\u7684\u65e5\u5fd7\u6846\u67b6\uff1b JUL\u3001JCL\u3001Jboss-logging\u3001logback\u3001log4j\u3001log4j2\u3001slf4j.... \u65e5\u5fd7\u95e8\u9762 \uff08\u65e5\u5fd7\u7684\u62bd\u8c61\u5c42\uff09 \u65e5\u5fd7\u5b9e\u73b0 ~~JCL\uff08Jakarta Commons Logging\uff09~~ SLF4j\uff08Simple Logging Facade for Java\uff09 ~~jboss-logging~~ Log4j JUL\uff08java.util.logging\uff09 Log4j2 Logback \u5de6\u8fb9\u9009\u4e00\u4e2a\u95e8\u9762\uff08\u62bd\u8c61\u5c42\uff09\u3001\u53f3\u8fb9\u6765\u9009\u4e00\u4e2a\u5b9e\u73b0\uff1b \u65e5\u5fd7\u95e8\u9762\uff1a SLF4J\uff1b \u65e5\u5fd7\u5b9e\u73b0\uff1aLogback\uff1b SpringBoot\uff1a\u5e95\u5c42\u662fSpring\u6846\u67b6\uff0cSpring\u6846\u67b6\u9ed8\u8ba4\u662f\u7528JCL\uff1b\u2018 \u200b ==SpringBoot\u9009\u7528 SLF4j\u548clogback\uff1b==","title":"1\u3001\u65e5\u5fd7\u6846\u67b6"},{"location":"Java/SpringBoot/SpringBoot/#2slf4j","text":"","title":"2\u3001SLF4j\u4f7f\u7528"},{"location":"Java/SpringBoot/SpringBoot/#1slf4j-httpswwwslf4jorg","text":"\u4ee5\u540e\u5f00\u53d1\u7684\u65f6\u5019\uff0c\u65e5\u5fd7\u8bb0\u5f55\u65b9\u6cd5\u7684\u8c03\u7528\uff0c\u4e0d\u5e94\u8be5\u6765\u76f4\u63a5\u8c03\u7528\u65e5\u5fd7\u7684\u5b9e\u73b0\u7c7b\uff0c\u800c\u662f\u8c03\u7528\u65e5\u5fd7\u62bd\u8c61\u5c42\u91cc\u9762\u7684\u65b9\u6cd5\uff1b \u7ed9\u7cfb\u7edf\u91cc\u9762\u5bfc\u5165slf4j\u7684jar\u548c logback\u7684\u5b9e\u73b0jar import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; public class HelloWorld { public static void main ( String [] args ) { Logger logger = LoggerFactory . getLogger ( HelloWorld . class ); logger . info ( \"Hello World\" ); } } \u56fe\u793a\uff1b \u6bcf\u4e00\u4e2a\u65e5\u5fd7\u7684\u5b9e\u73b0\u6846\u67b6\u90fd\u6709\u81ea\u5df1\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u4f7f\u7528slf4j\u4ee5\u540e\uff0c \u914d\u7f6e\u6587\u4ef6\u8fd8\u662f\u505a\u6210\u65e5\u5fd7\u5b9e\u73b0\u6846\u67b6\u81ea\u5df1\u672c\u8eab\u7684\u914d\u7f6e\u6587\u4ef6\uff1b","title":"1\u3001\u5982\u4f55\u5728\u7cfb\u7edf\u4e2d\u4f7f\u7528SLF4j   https://www.slf4j.org"},{"location":"Java/SpringBoot/SpringBoot/#2_6","text":"a\uff08slf4j+logback\uff09: Spring\uff08commons-logging\uff09\u3001Hibernate\uff08jboss-logging\uff09\u3001MyBatis\u3001xxxx \u7edf\u4e00\u65e5\u5fd7\u8bb0\u5f55\uff0c\u5373\u4f7f\u662f\u522b\u7684\u6846\u67b6\u548c\u6211\u4e00\u8d77\u7edf\u4e00\u4f7f\u7528slf4j\u8fdb\u884c\u8f93\u51fa\uff1f \u5982\u4f55\u8ba9\u7cfb\u7edf\u4e2d\u6240\u6709\u7684\u65e5\u5fd7\u90fd\u7edf\u4e00\u5230slf4j\uff1b ==1\u3001\u5c06\u7cfb\u7edf\u4e2d\u5176\u4ed6\u65e5\u5fd7\u6846\u67b6\u5148\u6392\u9664\u51fa\u53bb\uff1b== ==2\u3001\u7528\u4e2d\u95f4\u5305\u6765\u66ff\u6362\u539f\u6709\u7684\u65e5\u5fd7\u6846\u67b6\uff1b== ==3\u3001\u6211\u4eec\u5bfc\u5165slf4j\u5176\u4ed6\u7684\u5b9e\u73b0==","title":"2\u3001\u9057\u7559\u95ee\u9898"},{"location":"Java/SpringBoot/SpringBoot/#3springboot","text":"<dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter </artifactId> </dependency> SpringBoot\u4f7f\u7528\u5b83\u6765\u505a\u65e5\u5fd7\u529f\u80fd\uff1b <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-logging </artifactId> </dependency> \u5e95\u5c42\u4f9d\u8d56\u5173\u7cfb \u603b\u7ed3\uff1a \u200b 1\uff09\u3001SpringBoot\u5e95\u5c42\u4e5f\u662f\u4f7f\u7528slf4j+logback\u7684\u65b9\u5f0f\u8fdb\u884c\u65e5\u5fd7\u8bb0\u5f55 \u200b 2\uff09\u3001SpringBoot\u4e5f\u628a\u5176\u4ed6\u7684\u65e5\u5fd7\u90fd\u66ff\u6362\u6210\u4e86slf4j\uff1b \u200b 3\uff09\u3001\u4e2d\u95f4\u66ff\u6362\u5305\uff1f @SuppressWarnings ( \"rawtypes\" ) public abstract class LogFactory { static String UNSUPPORTED_OPERATION_IN_JCL_OVER_SLF4J = \"http://www.slf4j.org/codes.html#unsupported_operation_in_jcl_over_slf4j\" ; static LogFactory logFactory = new SLF4JLogFactory (); \u200b 4\uff09\u3001\u5982\u679c\u6211\u4eec\u8981\u5f15\u5165\u5176\u4ed6\u6846\u67b6\uff1f\u4e00\u5b9a\u8981\u628a\u8fd9\u4e2a\u6846\u67b6\u7684\u9ed8\u8ba4\u65e5\u5fd7\u4f9d\u8d56\u79fb\u9664\u6389\uff1f \u200b Spring\u6846\u67b6\u7528\u7684\u662fcommons-logging\uff1b <dependency> <groupId> org.springframework </groupId> <artifactId> spring-core </artifactId> <exclusions> <exclusion> <groupId> commons-logging </groupId> <artifactId> commons-logging </artifactId> </exclusion> </exclusions> </dependency> ==SpringBoot\u80fd\u81ea\u52a8\u9002\u914d\u6240\u6709\u7684\u65e5\u5fd7\uff0c\u800c\u4e14\u5e95\u5c42\u4f7f\u7528slf4j+logback\u7684\u65b9\u5f0f\u8bb0\u5f55\u65e5\u5fd7\uff0c\u5f15\u5165\u5176\u4ed6\u6846\u67b6\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u628a\u8fd9\u4e2a\u6846\u67b6\u4f9d\u8d56\u7684\u65e5\u5fd7\u6846\u67b6\u6392\u9664\u6389\u5373\u53ef\uff1b==","title":"3\u3001SpringBoot\u65e5\u5fd7\u5173\u7cfb"},{"location":"Java/SpringBoot/SpringBoot/#4_1","text":"","title":"4\u3001\u65e5\u5fd7\u4f7f\u7528\uff1b"},{"location":"Java/SpringBoot/SpringBoot/#1_6","text":"SpringBoot\u9ed8\u8ba4\u5e2e\u6211\u4eec\u914d\u7f6e\u597d\u4e86\u65e5\u5fd7\uff1b //\u8bb0\u5f55\u5668 Logger logger = LoggerFactory . getLogger ( getClass ()); @Test public void contextLoads () { //System.out.println(); //\u65e5\u5fd7\u7684\u7ea7\u522b\uff1b //\u7531\u4f4e\u5230\u9ad8 trace<debug<info<warn<error //\u53ef\u4ee5\u8c03\u6574\u8f93\u51fa\u7684\u65e5\u5fd7\u7ea7\u522b\uff1b\u65e5\u5fd7\u5c31\u53ea\u4f1a\u5728\u8fd9\u4e2a\u7ea7\u522b\u4ee5\u4ee5\u540e\u7684\u9ad8\u7ea7\u522b\u751f\u6548 logger . trace ( \"\u8fd9\u662ftrace\u65e5\u5fd7...\" ); logger . debug ( \"\u8fd9\u662fdebug\u65e5\u5fd7...\" ); //SpringBoot\u9ed8\u8ba4\u7ed9\u6211\u4eec\u4f7f\u7528\u7684\u662finfo\u7ea7\u522b\u7684\uff0c\u6ca1\u6709\u6307\u5b9a\u7ea7\u522b\u7684\u5c31\u7528SpringBoot\u9ed8\u8ba4\u89c4\u5b9a\u7684\u7ea7\u522b\uff1broot\u7ea7\u522b logger . info ( \"\u8fd9\u662finfo\u65e5\u5fd7...\" ); logger . warn ( \"\u8fd9\u662fwarn\u65e5\u5fd7...\" ); logger . error ( \"\u8fd9\u662ferror\u65e5\u5fd7...\" ); } \u65e5\u5fd7\u8f93\u51fa\u683c\u5f0f\uff1a %d\u8868\u793a\u65e5\u671f\u65f6\u95f4\uff0c %thread\u8868\u793a\u7ebf\u7a0b\u540d\uff0c %-5level\uff1a\u7ea7\u522b\u4ece\u5de6\u663e\u793a5\u4e2a\u5b57\u7b26\u5bbd\u5ea6 %logger{50} \u8868\u793alogger\u540d\u5b57\u6700\u957f50\u4e2a\u5b57\u7b26\uff0c\u5426\u5219\u6309\u7167\u53e5\u70b9\u5206\u5272\u3002 %msg\uff1a\u65e5\u5fd7\u6d88\u606f\uff0c %n\u662f\u6362\u884c\u7b26 --> %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n SpringBoot\u4fee\u6539\u65e5\u5fd7\u7684\u9ed8\u8ba4\u914d\u7f6e logging.level.com.atguigu = trace #logging.path= # \u4e0d\u6307\u5b9a\u8def\u5f84\u5728\u5f53\u524d\u9879\u76ee\u4e0b\u751f\u6210springboot.log\u65e5\u5fd7 # \u53ef\u4ee5\u6307\u5b9a\u5b8c\u6574\u7684\u8def\u5f84\uff1b #logging.file=G:/springboot.log # \u5728\u5f53\u524d\u78c1\u76d8\u7684\u6839\u8def\u5f84\u4e0b\u521b\u5efaspring\u6587\u4ef6\u5939\u548c\u91cc\u9762\u7684log\u6587\u4ef6\u5939\uff1b\u4f7f\u7528 spring.log \u4f5c\u4e3a\u9ed8\u8ba4\u6587\u4ef6 logging.path = /spring/log # \u5728\u63a7\u5236\u53f0\u8f93\u51fa\u7684\u65e5\u5fd7\u7684\u683c\u5f0f logging.pattern.console = %d{yyyy-MM-dd} [%thread] %-5level %logger{50} - %msg%n # \u6307\u5b9a\u6587\u4ef6\u4e2d\u65e5\u5fd7\u8f93\u51fa\u7684\u683c\u5f0f logging.pattern.file = %d{yyyy-MM-dd} === [%thread] === %-5level === %logger{50} ==== %msg%n logging.file logging.path Example Description (none) (none) \u53ea\u5728\u63a7\u5236\u53f0\u8f93\u51fa \u6307\u5b9a\u6587\u4ef6\u540d (none) my.log \u8f93\u51fa\u65e5\u5fd7\u5230my.log\u6587\u4ef6 (none) \u6307\u5b9a\u76ee\u5f55 /var/log \u8f93\u51fa\u5230\u6307\u5b9a\u76ee\u5f55\u7684 spring.log \u6587\u4ef6\u4e2d","title":"1\u3001\u9ed8\u8ba4\u914d\u7f6e"},{"location":"Java/SpringBoot/SpringBoot/#2_7","text":"\u7ed9\u7c7b\u8def\u5f84\u4e0b\u653e\u4e0a\u6bcf\u4e2a\u65e5\u5fd7\u6846\u67b6\u81ea\u5df1\u7684\u914d\u7f6e\u6587\u4ef6\u5373\u53ef\uff1bSpringBoot\u5c31\u4e0d\u4f7f\u7528\u4ed6\u9ed8\u8ba4\u914d\u7f6e\u7684\u4e86 Logging System Customization Logback logback-spring.xml , logback-spring.groovy , logback.xml or logback.groovy Log4j2 log4j2-spring.xml or log4j2.xml JDK (Java Util Logging) logging.properties logback.xml\uff1a\u76f4\u63a5\u5c31\u88ab\u65e5\u5fd7\u6846\u67b6\u8bc6\u522b\u4e86\uff1b logback-spring.xml \uff1a\u65e5\u5fd7\u6846\u67b6\u5c31\u4e0d\u76f4\u63a5\u52a0\u8f7d\u65e5\u5fd7\u7684\u914d\u7f6e\u9879\uff0c\u7531SpringBoot\u89e3\u6790\u65e5\u5fd7\u914d\u7f6e\uff0c\u53ef\u4ee5\u4f7f\u7528SpringBoot\u7684\u9ad8\u7ea7Profile\u529f\u80fd <springProfile name= \"staging\" > <!-- configuration to be enabled when the \"staging\" profile is active --> \u53ef\u4ee5\u6307\u5b9a\u67d0\u6bb5\u914d\u7f6e\u53ea\u5728\u67d0\u4e2a\u73af\u5883\u4e0b\u751f\u6548 </springProfile> \u5982\uff1a <appender name= \"stdout\" class= \"ch.qos.logback.core.ConsoleAppender\" > <!-- \u65e5\u5fd7\u8f93\u51fa\u683c\u5f0f\uff1a %d\u8868\u793a\u65e5\u671f\u65f6\u95f4\uff0c %thread\u8868\u793a\u7ebf\u7a0b\u540d\uff0c %-5level\uff1a\u7ea7\u522b\u4ece\u5de6\u663e\u793a5\u4e2a\u5b57\u7b26\u5bbd\u5ea6 %logger{50} \u8868\u793alogger\u540d\u5b57\u6700\u957f50\u4e2a\u5b57\u7b26\uff0c\u5426\u5219\u6309\u7167\u53e5\u70b9\u5206\u5272\u3002 %msg\uff1a\u65e5\u5fd7\u6d88\u606f\uff0c %n\u662f\u6362\u884c\u7b26 --> <layout class= \"ch.qos.logback.classic.PatternLayout\" > <springProfile name= \"dev\" > <pattern> %d{yyyy-MM-dd HH:mm:ss.SSS} ----> [%thread] ---> %-5level %logger{50} - %msg%n </pattern> </springProfile> <springProfile name= \"!dev\" > <pattern> %d{yyyy-MM-dd HH:mm:ss.SSS} ==== [%thread] ==== %-5level %logger{50} - %msg%n </pattern> </springProfile> </layout> </appender> \u5982\u679c\u4f7f\u7528logback.xml\u4f5c\u4e3a\u65e5\u5fd7\u914d\u7f6e\u6587\u4ef6\uff0c\u8fd8\u8981\u4f7f\u7528profile\u529f\u80fd\uff0c\u4f1a\u6709\u4ee5\u4e0b\u9519\u8bef no applicable action for [springProfile]","title":"2\u3001\u6307\u5b9a\u914d\u7f6e"},{"location":"Java/SpringBoot/SpringBoot/#5_1","text":"\u53ef\u4ee5\u6309\u7167slf4j\u7684\u65e5\u5fd7\u9002\u914d\u56fe\uff0c\u8fdb\u884c\u76f8\u5173\u7684\u5207\u6362\uff1b slf4j+log4j\u7684\u65b9\u5f0f\uff1b <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> <exclusions> <exclusion> <artifactId> logback-classic </artifactId> <groupId> ch.qos.logback </groupId> </exclusion> <exclusion> <artifactId> log4j-over-slf4j </artifactId> <groupId> org.slf4j </groupId> </exclusion> </exclusions> </dependency> <dependency> <groupId> org.slf4j </groupId> <artifactId> slf4j-log4j12 </artifactId> </dependency> \u5207\u6362\u4e3alog4j2 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> <exclusions> <exclusion> <artifactId> spring-boot-starter-logging </artifactId> <groupId> org.springframework.boot </groupId> </exclusion> </exclusions> </dependency> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-log4j2 </artifactId> </dependency>","title":"5\u3001\u5207\u6362\u65e5\u5fd7\u6846\u67b6"},{"location":"Java/SpringBoot/SpringBoot/#web","text":"","title":"\u56db\u3001Web\u5f00\u53d1"},{"location":"Java/SpringBoot/SpringBoot/#1_7","text":"\u4f7f\u7528SpringBoot\uff1b 1\uff09\u3001\u521b\u5efaSpringBoot\u5e94\u7528\uff0c\u9009\u4e2d\u6211\u4eec\u9700\u8981\u7684\u6a21\u5757\uff1b 2\uff09\u3001SpringBoot\u5df2\u7ecf\u9ed8\u8ba4\u5c06\u8fd9\u4e9b\u573a\u666f\u914d\u7f6e\u597d\u4e86\uff0c\u53ea\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u5c11\u91cf\u914d\u7f6e\u5c31\u53ef\u4ee5\u8fd0\u884c\u8d77\u6765 3\uff09\u3001\u81ea\u5df1\u7f16\u5199\u4e1a\u52a1\u4ee3\u7801\uff1b \u81ea\u52a8\u914d\u7f6e\u539f\u7406\uff1f \u8fd9\u4e2a\u573a\u666fSpringBoot\u5e2e\u6211\u4eec\u914d\u7f6e\u4e86\u4ec0\u4e48\uff1f\u80fd\u4e0d\u80fd\u4fee\u6539\uff1f\u80fd\u4fee\u6539\u54ea\u4e9b\u914d\u7f6e\uff1f\u80fd\u4e0d\u80fd\u6269\u5c55\uff1fxxx xxxxAutoConfiguration\uff1a\u5e2e\u6211\u4eec\u7ed9\u5bb9\u5668\u4e2d\u81ea\u52a8\u914d\u7f6e\u7ec4\u4ef6\uff1b xxxxProperties:\u914d\u7f6e\u7c7b\u6765\u5c01\u88c5\u914d\u7f6e\u6587\u4ef6\u7684\u5185\u5bb9\uff1b","title":"1\u3001\u7b80\u4ecb"},{"location":"Java/SpringBoot/SpringBoot/#2springboot","text":"@ConfigurationProperties ( prefix = \"spring.resources\" , ignoreUnknownFields = false ) public class ResourceProperties implements ResourceLoaderAware { //\u53ef\u4ee5\u8bbe\u7f6e\u548c\u9759\u6001\u8d44\u6e90\u6709\u5173\u7684\u53c2\u6570\uff0c\u7f13\u5b58\u65f6\u95f4\u7b49 WebMvcAuotConfiguration \uff1a @Override public void addResourceHandlers ( ResourceHandlerRegistry registry ) { if ( ! this . resourceProperties . isAddMappings ()) { logger . debug ( \"Default resource handling disabled\" ); return ; } Integer cachePeriod = this . resourceProperties . getCachePeriod (); if ( ! registry . hasMappingForPattern ( \"/webjars/**\" )) { customizeResourceHandlerRegistration ( registry . addResourceHandler ( \"/webjars/**\" ) . addResourceLocations ( \"classpath:/META-INF/resources/webjars/\" ) . setCachePeriod ( cachePeriod )); } String staticPathPattern = this . mvcProperties . getStaticPathPattern (); //\u9759\u6001\u8d44\u6e90\u6587\u4ef6\u5939\u6620\u5c04 if ( ! registry . hasMappingForPattern ( staticPathPattern )) { customizeResourceHandlerRegistration ( registry . addResourceHandler ( staticPathPattern ) . addResourceLocations ( this . resourceProperties . getStaticLocations ()) . setCachePeriod ( cachePeriod )); } } //\u914d\u7f6e\u6b22\u8fce\u9875\u6620\u5c04 @Bean public WelcomePageHandlerMapping welcomePageHandlerMapping ( ResourceProperties resourceProperties ) { return new WelcomePageHandlerMapping ( resourceProperties . getWelcomePage (), this . mvcProperties . getStaticPathPattern ()); } //\u914d\u7f6e\u559c\u6b22\u7684\u56fe\u6807 @Configuration @ConditionalOnProperty ( value = \"spring.mvc.favicon.enabled\" , matchIfMissing = true ) public static class FaviconConfiguration { private final ResourceProperties resourceProperties ; public FaviconConfiguration ( ResourceProperties resourceProperties ) { this . resourceProperties = resourceProperties ; } @Bean public SimpleUrlHandlerMapping faviconHandlerMapping () { SimpleUrlHandlerMapping mapping = new SimpleUrlHandlerMapping (); mapping . setOrder ( Ordered . HIGHEST_PRECEDENCE + 1 ); //\u6240\u6709 **/favicon.ico mapping . setUrlMap ( Collections . singletonMap ( \"**/favicon.ico\" , faviconRequestHandler ())); return mapping ; } @Bean public ResourceHttpRequestHandler faviconRequestHandler () { ResourceHttpRequestHandler requestHandler = new ResourceHttpRequestHandler (); requestHandler . setLocations ( this . resourceProperties . getFaviconLocations ()); return requestHandler ; } } ==1\uff09\u3001\u6240\u6709 /webjars/** \uff0c\u90fd\u53bb classpath:/META-INF/resources/webjars/ \u627e\u8d44\u6e90\uff1b== \u200b webjars\uff1a\u4ee5jar\u5305\u7684\u65b9\u5f0f\u5f15\u5165\u9759\u6001\u8d44\u6e90\uff1b http://www.webjars.org/ localhost:8080/webjars/jquery/3.3.1/jquery.js <!--\u5f15\u5165jquery-webjar--> \u5728\u8bbf\u95ee\u7684\u65f6\u5019\u53ea\u9700\u8981\u5199webjars\u4e0b\u9762\u8d44\u6e90\u7684\u540d\u79f0\u5373\u53ef <dependency> <groupId> org.webjars </groupId> <artifactId> jquery </artifactId> <version> 3.3.1 </version> </dependency> ==2\uff09\u3001\"/**\" \u8bbf\u95ee\u5f53\u524d\u9879\u76ee\u7684\u4efb\u4f55\u8d44\u6e90\uff0c\u90fd\u53bb\uff08\u9759\u6001\u8d44\u6e90\u7684\u6587\u4ef6\u5939\uff09\u627e\u6620\u5c04== \"classpath:/META-INF/resources/\", \"classpath:/resources/\", \"classpath:/static/\", \"classpath:/public/\" \"/\"\uff1a\u5f53\u524d\u9879\u76ee\u7684\u6839\u8def\u5f84 localhost:8080/abc === \u53bb\u9759\u6001\u8d44\u6e90\u6587\u4ef6\u5939\u91cc\u9762\u627eabc ==3\uff09\u3001\u6b22\u8fce\u9875\uff1b \u9759\u6001\u8d44\u6e90\u6587\u4ef6\u5939\u4e0b\u7684\u6240\u6709index.html\u9875\u9762\uff1b\u88ab\"/**\"\u6620\u5c04\uff1b== \u200b localhost:8080/ \u627eindex\u9875\u9762 ==4\uff09\u3001\u6240\u6709\u7684 **/favicon.ico \u90fd\u662f\u5728\u9759\u6001\u8d44\u6e90\u6587\u4ef6\u4e0b\u627e\uff1b==","title":"2\u3001SpringBoot\u5bf9\u9759\u6001\u8d44\u6e90\u7684\u6620\u5c04\u89c4\u5219\uff1b"},{"location":"Java/SpringBoot/SpringBoot/#3_3","text":"JSP\u3001Velocity\u3001Freemarker\u3001Thymeleaf SpringBoot\u63a8\u8350\u7684Thymeleaf\uff1b \u8bed\u6cd5\u66f4\u7b80\u5355\uff0c\u529f\u80fd\u66f4\u5f3a\u5927\uff1b","title":"3\u3001\u6a21\u677f\u5f15\u64ce"},{"location":"Java/SpringBoot/SpringBoot/#1thymeleaf","text":"<dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-thymeleaf </artifactId> 2.1.6 </dependency> \u5207\u6362thymeleaf\u7248\u672c <properties> <thymeleaf.version> 3.0.9.RELEASE </thymeleaf.version> <!-- \u5e03\u5c40\u529f\u80fd\u7684\u652f\u6301\u7a0b\u5e8f thymeleaf3\u4e3b\u7a0b\u5e8f layout2\u4ee5\u4e0a\u7248\u672c --> <!-- thymeleaf2 layout1--> <thymeleaf-layout-dialect.version> 2.2.2 </thymeleaf-layout-dialect.version> </properties>","title":"1\u3001\u5f15\u5165thymeleaf\uff1b"},{"location":"Java/SpringBoot/SpringBoot/#2thymeleaf","text":"@ConfigurationProperties ( prefix = \"spring.thymeleaf\" ) public class ThymeleafProperties { private static final Charset DEFAULT_ENCODING = Charset . forName ( \"UTF-8\" ); private static final MimeType DEFAULT_CONTENT_TYPE = MimeType . valueOf ( \"text/html\" ); public static final String DEFAULT_PREFIX = \"classpath:/templates/\" ; public static final String DEFAULT_SUFFIX = \".html\" ; // \u53ea\u8981\u6211\u4eec\u628aHTML\u9875\u9762\u653e\u5728classpath:/templates/\uff0cthymeleaf\u5c31\u80fd\u81ea\u52a8\u6e32\u67d3\uff1b \u4f7f\u7528\uff1a 1\u3001\u5bfc\u5165thymeleaf\u7684\u540d\u79f0\u7a7a\u95f4 <html lang= \"en\" xmlns:th= \"http://www.thymeleaf.org\" > 2\u3001\u4f7f\u7528thymeleaf\u8bed\u6cd5\uff1b <!DOCTYPE html> < html lang = \"en\" xmlns:th = \"http://www.thymeleaf.org\" > < head > < meta charset = \"UTF-8\" > < title > Title </ title > </ head > < body > < h1 > \u6210\u529f\uff01 </ h1 > <!--th:text \u5c06div\u91cc\u9762\u7684\u6587\u672c\u5185\u5bb9\u8bbe\u7f6e\u4e3a --> < div th:text = \"${hello}\" > \u8fd9\u662f\u663e\u793a\u6b22\u8fce\u4fe1\u606f </ div > </ body > </ html >","title":"2\u3001Thymeleaf\u4f7f\u7528"},{"location":"Java/SpringBoot/SpringBoot/#3_4","text":"1\uff09\u3001th:text\uff1b\u6539\u53d8\u5f53\u524d\u5143\u7d20\u91cc\u9762\u7684\u6587\u672c\u5185\u5bb9\uff1b \u200b th\uff1a\u4efb\u610fhtml\u5c5e\u6027\uff1b\u6765\u66ff\u6362\u539f\u751f\u5c5e\u6027\u7684\u503c 2\uff09\u3001\u8868\u8fbe\u5f0f\uff1f Simple expressions : \uff08\u8868\u8fbe\u5f0f\u8bed\u6cd5\uff09 Variable Expressions : ${...}\uff1a\u83b7\u53d6\u53d8\u91cf\u503c\uff1bOGNL\uff1b 1\uff09\u3001\u83b7\u53d6\u5bf9\u8c61\u7684\u5c5e\u6027\u3001\u8c03\u7528\u65b9\u6cd5 2\uff09\u3001\u4f7f\u7528\u5185\u7f6e\u7684\u57fa\u672c\u5bf9\u8c61\uff1a #ctx : the context object. #vars: the context variables. #locale : the context locale. #request : (only in Web Contexts) the HttpServletRequest object. #response : (only in Web Contexts) the HttpServletResponse object. #session : (only in Web Contexts) the HttpSession object. #servletContext : (only in Web Contexts) the ServletContext object. ${session.foo} 3\uff09\u3001\u5185\u7f6e\u7684\u4e00\u4e9b\u5de5\u5177\u5bf9\u8c61\uff1a #execInfo : information about the template being processed. #messages : methods for obtaining externalized messages inside variables expressions, in the same way as they would be obtained using #{\u2026} syntax. #uris : methods for escaping parts of URLs/URIs #conversions : methods for executing the configured conversion service (if any). #dates : methods for java.util.Date objects: formatting, component extraction, etc. #calendars : analogous to #dates , but for java.util.Calendar objects. #numbers : methods for formatting numeric objects. #strings : methods for String objects: contains, startsWith, prepending/appending, etc. #objects : methods for objects in general. #bools : methods for boolean evaluation. #arrays : methods for arrays. #lists : methods for lists. #sets : methods for sets. #maps : methods for maps. #aggregates : methods for creating aggregates on arrays or collections. #ids : methods for dealing with id attributes that might be repeated (for example, as a result of an iteration). Selection Variable Expressions : *{...}\uff1a\u9009\u62e9\u8868\u8fbe\u5f0f\uff1a\u548c${}\u5728\u529f\u80fd\u4e0a\u662f\u4e00\u6837\uff1b \u8865\u5145\uff1a\u914d\u5408 th : object=\"${session.user}\uff1a <div th : object=\"${session.user}\"> <p>Name : <span th:text=\"*{firstName}\">Sebastian</span>.</p> <p>Surname : <span th:text=\"*{lastName}\">Pepper</span>.</p> <p>Nationality : <span th:text=\"*{nationality}\">Saturn</span>.</p> </div> Message Expressions : #{...}\uff1a\u83b7\u53d6\u56fd\u9645\u5316\u5185\u5bb9 Link URL Expressions : @{...}\uff1a\u5b9a\u4e49URL\uff1b @{/order/process(execId = ${execId},execType='FAST')} Fragment Expressions : ~{...}\uff1a\u7247\u6bb5\u5f15\u7528\u8868\u8fbe\u5f0f <div th : insert=\"~{commons :: main}\">...</div> Literals\uff08\u5b57\u9762\u91cf\uff09 Text literals : 'one text' , 'Another one!' ,\u2026 Number literals : 0 , 34 , 3.0 , 12.3 ,\u2026 Boolean literals : true , false Null literal : null Literal tokens : one , sometext , main ,\u2026 Text operations : \uff08\u6587\u672c\u64cd\u4f5c\uff09 String concatenation : + Literal substitutions : |The name is ${name}| Arithmetic operations : \uff08\u6570\u5b66\u8fd0\u7b97\uff09 Binary operators : + , - , * , / , % Minus sign (unary operator) : - Boolean operations : \uff08\u5e03\u5c14\u8fd0\u7b97\uff09 Binary operators : and , or Boolean negation (unary operator) : ! , not Comparisons and equality : \uff08\u6bd4\u8f83\u8fd0\u7b97\uff09 Comparators : > , < , >= , <= ( gt , lt , ge , le ) Equality operators : == , != ( eq , ne ) Conditional operators : \u6761\u4ef6\u8fd0\u7b97\uff08\u4e09\u5143\u8fd0\u7b97\u7b26\uff09 If-then : (if) ? (then) If-then-else : (if) ? (then) : (else) Default : (value) ?: (defaultvalue) Special tokens : No-Operation : _","title":"3\u3001\u8bed\u6cd5\u89c4\u5219"},{"location":"Java/SpringBoot/SpringBoot/#4springmvc","text":"https://docs.spring.io/spring-boot/docs/1.5.10.RELEASE/reference/htmlsingle/#boot-features-developing-web-applications","title":"4\u3001SpringMVC\u81ea\u52a8\u914d\u7f6e"},{"location":"Java/SpringBoot/SpringBoot/#1-spring-mvc-auto-configuration","text":"Spring Boot \u81ea\u52a8\u914d\u7f6e\u597d\u4e86SpringMVC \u4ee5\u4e0b\u662fSpringBoot\u5bf9SpringMVC\u7684\u9ed8\u8ba4\u914d\u7f6e: ==\uff08WebMvcAutoConfiguration\uff09== Inclusion of ContentNegotiatingViewResolver and BeanNameViewResolver beans. \u81ea\u52a8\u914d\u7f6e\u4e86ViewResolver\uff08\u89c6\u56fe\u89e3\u6790\u5668\uff1a\u6839\u636e\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u5f97\u5230\u89c6\u56fe\u5bf9\u8c61\uff08View\uff09\uff0c\u89c6\u56fe\u5bf9\u8c61\u51b3\u5b9a\u5982\u4f55\u6e32\u67d3\uff08\u8f6c\u53d1\uff1f\u91cd\u5b9a\u5411\uff1f\uff09\uff09 ContentNegotiatingViewResolver\uff1a\u7ec4\u5408\u6240\u6709\u7684\u89c6\u56fe\u89e3\u6790\u5668\u7684\uff1b ==\u5982\u4f55\u5b9a\u5236\uff1a\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u89c6\u56fe\u89e3\u6790\u5668\uff1b\u81ea\u52a8\u7684\u5c06\u5176\u7ec4\u5408\u8fdb\u6765\uff1b== Support for serving static resources, including support for WebJars (see below).\u9759\u6001\u8d44\u6e90\u6587\u4ef6\u5939\u8def\u5f84,webjars Static index.html support. \u9759\u6001\u9996\u9875\u8bbf\u95ee Custom Favicon support (see below). favicon.ico \u200b \u81ea\u52a8\u6ce8\u518c\u4e86 of Converter , GenericConverter , Formatter beans. Converter\uff1a\u8f6c\u6362\u5668\uff1b public String hello(User user)\uff1a\u7c7b\u578b\u8f6c\u6362\u4f7f\u7528Converter Formatter \u683c\u5f0f\u5316\u5668\uff1b 2017.12.17===Date\uff1b @Bean @ConditionalOnProperty ( prefix = \"spring.mvc\" , name = \"date-format\" ) //\u5728\u6587\u4ef6\u4e2d\u914d\u7f6e\u65e5\u671f\u683c\u5f0f\u5316\u7684\u89c4\u5219 public Formatter < Date > dateFormatter () { return new DateFormatter ( this . mvcProperties . getDateFormat ()); //\u65e5\u671f\u683c\u5f0f\u5316\u7ec4\u4ef6 } \u200b ==\u81ea\u5df1\u6dfb\u52a0\u7684\u683c\u5f0f\u5316\u5668\u8f6c\u6362\u5668\uff0c\u6211\u4eec\u53ea\u9700\u8981\u653e\u5728\u5bb9\u5668\u4e2d\u5373\u53ef== Support for HttpMessageConverters (see below). HttpMessageConverter\uff1aSpringMVC\u7528\u6765\u8f6c\u6362Http\u8bf7\u6c42\u548c\u54cd\u5e94\u7684\uff1bUser---Json\uff1b HttpMessageConverters \u662f\u4ece\u5bb9\u5668\u4e2d\u786e\u5b9a\uff1b\u83b7\u53d6\u6240\u6709\u7684HttpMessageConverter\uff1b ==\u81ea\u5df1\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0HttpMessageConverter\uff0c\u53ea\u9700\u8981\u5c06\u81ea\u5df1\u7684\u7ec4\u4ef6\u6ce8\u518c\u5bb9\u5668\u4e2d\uff08@Bean,@Component\uff09== \u200b Automatic registration of MessageCodesResolver (see below).\u5b9a\u4e49\u9519\u8bef\u4ee3\u7801\u751f\u6210\u89c4\u5219 Automatic use of a ConfigurableWebBindingInitializer bean (see below). ==\u6211\u4eec\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e2aConfigurableWebBindingInitializer\u6765\u66ff\u6362\u9ed8\u8ba4\u7684\uff1b\uff08\u6dfb\u52a0\u5230\u5bb9\u5668\uff09== \u521d\u59cb\u5316WebDataBinder\uff1b \u8bf7\u6c42\u6570\u636e=====JavaBean\uff1b org.springframework.boot.autoconfigure.web\uff1aweb\u7684\u6240\u6709\u81ea\u52a8\u573a\u666f\uff1b If you want to keep Spring Boot MVC features, and you just want to add additional MVC configuration (interceptors, formatters, view controllers etc.) you can add your own @Configuration class of type WebMvcConfigurerAdapter , but without @EnableWebMvc . If you wish to provide custom instances of RequestMappingHandlerMapping , RequestMappingHandlerAdapter or ExceptionHandlerExceptionResolver you can declare a WebMvcRegistrationsAdapter instance providing such components. If you want to take complete control of Spring MVC, you can add your own @Configuration annotated with @EnableWebMvc .","title":"1. Spring MVC auto-configuration"},{"location":"Java/SpringBoot/SpringBoot/#2springmvc","text":"<mvc:view-controller path= \"/hello\" view-name= \"success\" /> <mvc:interceptors> <mvc:interceptor> <mvc:mapping path= \"/hello\" /> <bean></bean> </mvc:interceptor> </mvc:interceptors> ==\u7f16\u5199\u4e00\u4e2a\u914d\u7f6e\u7c7b\uff08@Configuration\uff09\uff0c\u662fWebMvcConfigurerAdapter\u7c7b\u578b\uff1b\u4e0d\u80fd\u6807\u6ce8@EnableWebMvc== ; \u65e2\u4fdd\u7559\u4e86\u6240\u6709\u7684\u81ea\u52a8\u914d\u7f6e\uff0c\u4e5f\u80fd\u7528\u6211\u4eec\u6269\u5c55\u7684\u914d\u7f6e\uff1b //\u4f7f\u7528WebMvcConfigurerAdapter\u53ef\u4ee5\u6765\u6269\u5c55SpringMVC\u7684\u529f\u80fd @Configuration public class MyMvcConfig extends WebMvcConfigurerAdapter { @Override public void addViewControllers ( ViewControllerRegistry registry ) { // super.addViewControllers(registry); //\u6d4f\u89c8\u5668\u53d1\u9001 /atguigu \u8bf7\u6c42\u6765\u5230 success registry . addViewController ( \"/atguigu\" ). setViewName ( \"success\" ); } } \u539f\u7406\uff1a \u200b 1\uff09\u3001WebMvcAutoConfiguration\u662fSpringMVC\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b \u200b 2\uff09\u3001\u5728\u505a\u5176\u4ed6\u81ea\u52a8\u914d\u7f6e\u65f6\u4f1a\u5bfc\u5165\uff1b@Import( EnableWebMvcConfiguration .class) @Configuration public static class EnableWebMvcConfiguration extends DelegatingWebMvcConfiguration { private final WebMvcConfigurerComposite configurers = new WebMvcConfigurerComposite (); //\u4ece\u5bb9\u5668\u4e2d\u83b7\u53d6\u6240\u6709\u7684WebMvcConfigurer @Autowired ( required = false ) public void setConfigurers ( List < WebMvcConfigurer > configurers ) { if ( ! CollectionUtils . isEmpty ( configurers )) { this . configurers . addWebMvcConfigurers ( configurers ); //\u4e00\u4e2a\u53c2\u8003\u5b9e\u73b0\uff1b\u5c06\u6240\u6709\u7684WebMvcConfigurer\u76f8\u5173\u914d\u7f6e\u90fd\u6765\u4e00\u8d77\u8c03\u7528\uff1b @Override // public void addViewControllers(ViewControllerRegistry registry) { // for (WebMvcConfigurer delegate : this.delegates) { // delegate.addViewControllers(registry); // } } } } \u200b 3\uff09\u3001\u5bb9\u5668\u4e2d\u6240\u6709\u7684WebMvcConfigurer\u90fd\u4f1a\u4e00\u8d77\u8d77\u4f5c\u7528\uff1b \u200b 4\uff09\u3001\u6211\u4eec\u7684\u914d\u7f6e\u7c7b\u4e5f\u4f1a\u88ab\u8c03\u7528\uff1b \u200b \u6548\u679c\uff1aSpringMVC\u7684\u81ea\u52a8\u914d\u7f6e\u548c\u6211\u4eec\u7684\u6269\u5c55\u914d\u7f6e\u90fd\u4f1a\u8d77\u4f5c\u7528\uff1b","title":"2\u3001\u6269\u5c55SpringMVC"},{"location":"Java/SpringBoot/SpringBoot/#3springmvc","text":"SpringBoot\u5bf9SpringMVC\u7684\u81ea\u52a8\u914d\u7f6e\u4e0d\u9700\u8981\u4e86\uff0c\u6240\u6709\u90fd\u662f\u6211\u4eec\u81ea\u5df1\u914d\u7f6e\uff1b\u6240\u6709\u7684SpringMVC\u7684\u81ea\u52a8\u914d\u7f6e\u90fd\u5931\u6548\u4e86 \u6211\u4eec\u9700\u8981\u5728\u914d\u7f6e\u7c7b\u4e2d\u6dfb\u52a0@EnableWebMvc\u5373\u53ef\uff1b //\u4f7f\u7528WebMvcConfigurerAdapter\u53ef\u4ee5\u6765\u6269\u5c55SpringMVC\u7684\u529f\u80fd @EnableWebMvc @Configuration public class MyMvcConfig extends WebMvcConfigurerAdapter { @Override public void addViewControllers ( ViewControllerRegistry registry ) { // super.addViewControllers(registry); //\u6d4f\u89c8\u5668\u53d1\u9001 /atguigu \u8bf7\u6c42\u6765\u5230 success registry . addViewController ( \"/atguigu\" ). setViewName ( \"success\" ); } } \u539f\u7406\uff1a \u4e3a\u4ec0\u4e48@EnableWebMvc\u81ea\u52a8\u914d\u7f6e\u5c31\u5931\u6548\u4e86\uff1b 1\uff09@EnableWebMvc\u7684\u6838\u5fc3 @Import ( DelegatingWebMvcConfiguration . class ) public @interface EnableWebMvc { 2\uff09\u3001 @Configuration public class DelegatingWebMvcConfiguration extends WebMvcConfigurationSupport { 3\uff09\u3001 @Configuration @ConditionalOnWebApplication @ConditionalOnClass ({ Servlet . class , DispatcherServlet . class , WebMvcConfigurerAdapter . class }) //\u5bb9\u5668\u4e2d\u6ca1\u6709\u8fd9\u4e2a\u7ec4\u4ef6\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u81ea\u52a8\u914d\u7f6e\u7c7b\u624d\u751f\u6548 @ConditionalOnMissingBean ( WebMvcConfigurationSupport . class ) @AutoConfigureOrder ( Ordered . HIGHEST_PRECEDENCE + 10 ) @AutoConfigureAfter ({ DispatcherServletAutoConfiguration . class , ValidationAutoConfiguration . class }) public class WebMvcAutoConfiguration { 4\uff09\u3001@EnableWebMvc\u5c06WebMvcConfigurationSupport\u7ec4\u4ef6\u5bfc\u5165\u8fdb\u6765\uff1b 5\uff09\u3001\u5bfc\u5165\u7684WebMvcConfigurationSupport\u53ea\u662fSpringMVC\u6700\u57fa\u672c\u7684\u529f\u80fd\uff1b","title":"3\u3001\u5168\u9762\u63a5\u7ba1SpringMVC\uff1b"},{"location":"Java/SpringBoot/SpringBoot/#5springboot","text":"\u6a21\u5f0f\uff1a \u200b 1\uff09\u3001SpringBoot\u5728\u81ea\u52a8\u914d\u7f6e\u5f88\u591a\u7ec4\u4ef6\u7684\u65f6\u5019\uff0c\u5148\u770b\u5bb9\u5668\u4e2d\u6709\u6ca1\u6709\u7528\u6237\u81ea\u5df1\u914d\u7f6e\u7684\uff08@Bean\u3001@Component\uff09\u5982\u679c\u6709\u5c31\u7528\u7528\u6237\u914d\u7f6e\u7684\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u624d\u81ea\u52a8\u914d\u7f6e\uff1b\u5982\u679c\u6709\u4e9b\u7ec4\u4ef6\u53ef\u4ee5\u6709\u591a\u4e2a\uff08ViewResolver\uff09\u5c06\u7528\u6237\u914d\u7f6e\u7684\u548c\u81ea\u5df1\u9ed8\u8ba4\u7684\u7ec4\u5408\u8d77\u6765\uff1b \u200b 2\uff09\u3001\u5728SpringBoot\u4e2d\u4f1a\u6709\u975e\u5e38\u591a\u7684xxxConfigurer\u5e2e\u52a9\u6211\u4eec\u8fdb\u884c\u6269\u5c55\u914d\u7f6e \u200b 3\uff09\u3001\u5728SpringBoot\u4e2d\u4f1a\u6709\u5f88\u591a\u7684xxxCustomizer\u5e2e\u52a9\u6211\u4eec\u8fdb\u884c\u5b9a\u5236\u914d\u7f6e","title":"5\u3001\u5982\u4f55\u4fee\u6539SpringBoot\u7684\u9ed8\u8ba4\u914d\u7f6e"},{"location":"Java/SpringBoot/SpringBoot/#6restfulcrud","text":"","title":"6\u3001RestfulCRUD"},{"location":"Java/SpringBoot/SpringBoot/#1_8","text":"//\u4f7f\u7528WebMvcConfigurerAdapter\u53ef\u4ee5\u6765\u6269\u5c55SpringMVC\u7684\u529f\u80fd //@EnableWebMvc \u4e0d\u8981\u63a5\u7ba1SpringMVC @Configuration public class MyMvcConfig extends WebMvcConfigurerAdapter { @Override public void addViewControllers ( ViewControllerRegistry registry ) { // super.addViewControllers(registry); //\u6d4f\u89c8\u5668\u53d1\u9001 /atguigu \u8bf7\u6c42\u6765\u5230 success registry . addViewController ( \"/atguigu\" ). setViewName ( \"success\" ); } //\u6240\u6709\u7684WebMvcConfigurerAdapter\u7ec4\u4ef6\u90fd\u4f1a\u4e00\u8d77\u8d77\u4f5c\u7528 @Bean //\u5c06\u7ec4\u4ef6\u6ce8\u518c\u5728\u5bb9\u5668 public WebMvcConfigurerAdapter webMvcConfigurerAdapter (){ WebMvcConfigurerAdapter adapter = new WebMvcConfigurerAdapter () { @Override public void addViewControllers ( ViewControllerRegistry registry ) { registry . addViewController ( \"/\" ). setViewName ( \"login\" ); registry . addViewController ( \"/index.html\" ). setViewName ( \"login\" ); } }; return adapter ; } }","title":"1\uff09\u3001\u9ed8\u8ba4\u8bbf\u95ee\u9996\u9875"},{"location":"Java/SpringBoot/SpringBoot/#2_8","text":"1\uff09\u3001\u7f16\u5199\u56fd\u9645\u5316\u914d\u7f6e\u6587\u4ef6\uff1b 2\uff09\u3001\u4f7f\u7528ResourceBundleMessageSource\u7ba1\u7406\u56fd\u9645\u5316\u8d44\u6e90\u6587\u4ef6 3\uff09\u3001\u5728\u9875\u9762\u4f7f\u7528fmt:message\u53d6\u51fa\u56fd\u9645\u5316\u5185\u5bb9 \u6b65\u9aa4\uff1a 1\uff09\u3001\u7f16\u5199\u56fd\u9645\u5316\u914d\u7f6e\u6587\u4ef6\uff0c\u62bd\u53d6\u9875\u9762\u9700\u8981\u663e\u793a\u7684\u56fd\u9645\u5316\u6d88\u606f 2\uff09\u3001SpringBoot\u81ea\u52a8\u914d\u7f6e\u597d\u4e86\u7ba1\u7406\u56fd\u9645\u5316\u8d44\u6e90\u6587\u4ef6\u7684\u7ec4\u4ef6\uff1b @ConfigurationProperties ( prefix = \"spring.messages\" ) public class MessageSourceAutoConfiguration { /** * Comma-separated list of basenames (essentially a fully-qualified classpath * location), each following the ResourceBundle convention with relaxed support for * slash based locations. If it doesn't contain a package qualifier (such as * \"org.mypackage\"), it will be resolved from the classpath root. */ private String basename = \"messages\" ; //\u6211\u4eec\u7684\u914d\u7f6e\u6587\u4ef6\u53ef\u4ee5\u76f4\u63a5\u653e\u5728\u7c7b\u8def\u5f84\u4e0b\u53ebmessages.properties\uff1b @Bean public MessageSource messageSource () { ResourceBundleMessageSource messageSource = new ResourceBundleMessageSource (); if ( StringUtils . hasText ( this . basename )) { //\u8bbe\u7f6e\u56fd\u9645\u5316\u8d44\u6e90\u6587\u4ef6\u7684\u57fa\u7840\u540d\uff08\u53bb\u6389\u8bed\u8a00\u56fd\u5bb6\u4ee3\u7801\u7684\uff09 messageSource . setBasenames ( StringUtils . commaDelimitedListToStringArray ( StringUtils . trimAllWhitespace ( this . basename ))); } if ( this . encoding != null ) { messageSource . setDefaultEncoding ( this . encoding . name ()); } messageSource . setFallbackToSystemLocale ( this . fallbackToSystemLocale ); messageSource . setCacheSeconds ( this . cacheSeconds ); messageSource . setAlwaysUseMessageFormat ( this . alwaysUseMessageFormat ); return messageSource ; } 3\uff09\u3001\u53bb\u9875\u9762\u83b7\u53d6\u56fd\u9645\u5316\u7684\u503c\uff1b <!DOCTYPE html> < html lang = \"en\" xmlns:th = \"http://www.thymeleaf.org\" > < head > < meta http-equiv = \"Content-Type\" content = \"text/html; charset=UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1, shrink-to-fit=no\" > < meta name = \"description\" content = \"\" > < meta name = \"author\" content = \"\" > < title > Signin Template for Bootstrap </ title > <!-- Bootstrap core CSS --> < link href = \"asserts/css/bootstrap.min.css\" th:href = \"@{/webjars/bootstrap/4.0.0/css/bootstrap.css}\" rel = \"stylesheet\" > <!-- Custom styles for this template --> < link href = \"asserts/css/signin.css\" th:href = \"@{/asserts/css/signin.css}\" rel = \"stylesheet\" > </ head > < body class = \"text-center\" > < form class = \"form-signin\" action = \"dashboard.html\" > < img class = \"mb-4\" th:src = \"@{/asserts/img/bootstrap-solid.svg}\" src = \"asserts/img/bootstrap-solid.svg\" alt = \"\" width = \"72\" height = \"72\" > < h1 class = \"h3 mb-3 font-weight-normal\" th:text = \"#{login.tip}\" > Please sign in </ h1 > < label class = \"sr-only\" th:text = \"#{login.username}\" > Username </ label > < input type = \"text\" class = \"form-control\" placeholder = \"Username\" th:placeholder = \"#{login.username}\" required = \"\" autofocus = \"\" > < label class = \"sr-only\" th:text = \"#{login.password}\" > Password </ label > < input type = \"password\" class = \"form-control\" placeholder = \"Password\" th:placeholder = \"#{login.password}\" required = \"\" > < div class = \"checkbox mb-3\" > < label > < input type = \"checkbox\" value = \"remember-me\" /> [[#{login.remember}]] </ label > </ div > < button class = \"btn btn-lg btn-primary btn-block\" type = \"submit\" th:text = \"#{login.btn}\" > Sign in </ button > < p class = \"mt-5 mb-3 text-muted\" > \u00a9 2017-2018 </ p > < a class = \"btn btn-sm\" > \u4e2d\u6587 </ a > < a class = \"btn btn-sm\" > English </ a > </ form > </ body > </ html > \u6548\u679c\uff1a\u6839\u636e\u6d4f\u89c8\u5668\u8bed\u8a00\u8bbe\u7f6e\u7684\u4fe1\u606f\u5207\u6362\u4e86\u56fd\u9645\u5316\uff1b \u539f\u7406\uff1a \u200b \u56fd\u9645\u5316Locale\uff08\u533a\u57df\u4fe1\u606f\u5bf9\u8c61\uff09\uff1bLocaleResolver\uff08\u83b7\u53d6\u533a\u57df\u4fe1\u606f\u5bf9\u8c61\uff09\uff1b @Bean @ConditionalOnMissingBean @ConditionalOnProperty ( prefix = \"spring.mvc\" , name = \"locale\" ) public LocaleResolver localeResolver () { if ( this . mvcProperties . getLocaleResolver () == WebMvcProperties . LocaleResolver . FIXED ) { return new FixedLocaleResolver ( this . mvcProperties . getLocale ()); } AcceptHeaderLocaleResolver localeResolver = new AcceptHeaderLocaleResolver (); localeResolver . setDefaultLocale ( this . mvcProperties . getLocale ()); return localeResolver ; } \u9ed8\u8ba4\u7684\u5c31\u662f\u6839\u636e\u8bf7\u6c42\u5934\u5e26\u6765\u7684\u533a\u57df\u4fe1\u606f\u83b7\u53d6Locale\u8fdb\u884c\u56fd\u9645\u5316 4\uff09\u3001\u70b9\u51fb\u94fe\u63a5\u5207\u6362\u56fd\u9645\u5316 /** * \u53ef\u4ee5\u5728\u8fde\u63a5\u4e0a\u643a\u5e26\u533a\u57df\u4fe1\u606f */ public class MyLocaleResolver implements LocaleResolver { @Override public Locale resolveLocale ( HttpServletRequest request ) { String l = request . getParameter ( \"l\" ); Locale locale = Locale . getDefault (); if ( ! StringUtils . isEmpty ( l )){ String [] split = l . split ( \"_\" ); locale = new Locale ( split [ 0 ] , split [ 1 ] ); } return locale ; } @Override public void setLocale ( HttpServletRequest request , HttpServletResponse response , Locale locale ) { } } @Bean public LocaleResolver localeResolver (){ return new MyLocaleResolver (); } }","title":"2\uff09\u3001\u56fd\u9645\u5316"},{"location":"Java/SpringBoot/SpringBoot/#3_5","text":"\u5f00\u53d1\u671f\u95f4\u6a21\u677f\u5f15\u64ce\u9875\u9762\u4fee\u6539\u4ee5\u540e\uff0c\u8981\u5b9e\u65f6\u751f\u6548 1\uff09\u3001\u7981\u7528\u6a21\u677f\u5f15\u64ce\u7684\u7f13\u5b58 # \u7981\u7528\u7f13\u5b58 spring.thymeleaf.cache=false 2\uff09\u3001\u9875\u9762\u4fee\u6539\u5b8c\u6210\u4ee5\u540ectrl+f9\uff1a\u91cd\u65b0\u7f16\u8bd1\uff1b \u767b\u9646\u9519\u8bef\u6d88\u606f\u7684\u663e\u793a < p style = \"color: red\" th:text = \"${msg}\" th:if = \"${not #strings.isEmpty(msg)}\" ></ p >","title":"3\uff09\u3001\u767b\u9646"},{"location":"Java/SpringBoot/SpringBoot/#4_2","text":"\u62e6\u622a\u5668 /** * \u767b\u9646\u68c0\u67e5\uff0c */ public class LoginHandlerInterceptor implements HandlerInterceptor { //\u76ee\u6807\u65b9\u6cd5\u6267\u884c\u4e4b\u524d @Override public boolean preHandle ( HttpServletRequest request , HttpServletResponse response , Object handler ) throws Exception { Object user = request . getSession (). getAttribute ( \"loginUser\" ); if ( user == null ){ //\u672a\u767b\u9646\uff0c\u8fd4\u56de\u767b\u9646\u9875\u9762 request . setAttribute ( \"msg\" , \"\u6ca1\u6709\u6743\u9650\u8bf7\u5148\u767b\u9646\" ); request . getRequestDispatcher ( \"/index.html\" ). forward ( request , response ); return false ; } else { //\u5df2\u767b\u9646\uff0c\u653e\u884c\u8bf7\u6c42 return true ; } } @Override public void postHandle ( HttpServletRequest request , HttpServletResponse response , Object handler , ModelAndView modelAndView ) throws Exception { } @Override public void afterCompletion ( HttpServletRequest request , HttpServletResponse response , Object handler , Exception ex ) throws Exception { } } \u6ce8\u518c\u62e6\u622a\u5668 //\u6240\u6709\u7684WebMvcConfigurerAdapter\u7ec4\u4ef6\u90fd\u4f1a\u4e00\u8d77\u8d77\u4f5c\u7528 @Bean //\u5c06\u7ec4\u4ef6\u6ce8\u518c\u5728\u5bb9\u5668 public WebMvcConfigurerAdapter webMvcConfigurerAdapter (){ WebMvcConfigurerAdapter adapter = new WebMvcConfigurerAdapter () { @Override public void addViewControllers ( ViewControllerRegistry registry ) { registry . addViewController ( \"/\" ). setViewName ( \"login\" ); registry . addViewController ( \"/index.html\" ). setViewName ( \"login\" ); registry . addViewController ( \"/main.html\" ). setViewName ( \"dashboard\" ); } //\u6ce8\u518c\u62e6\u622a\u5668 @Override public void addInterceptors ( InterceptorRegistry registry ) { //super.addInterceptors(registry); //\u9759\u6001\u8d44\u6e90\uff1b *.css , *.js //SpringBoot\u5df2\u7ecf\u505a\u597d\u4e86\u9759\u6001\u8d44\u6e90\u6620\u5c04 registry . addInterceptor ( new LoginHandlerInterceptor ()). addPathPatterns ( \"/**\" ) . excludePathPatterns ( \"/index.html\" , \"/\" , \"/user/login\" ); } }; return adapter ; }","title":"4\uff09\u3001\u62e6\u622a\u5668\u8fdb\u884c\u767b\u9646\u68c0\u67e5"},{"location":"Java/SpringBoot/SpringBoot/#5crud-","text":"\u5b9e\u9a8c\u8981\u6c42\uff1a 1\uff09\u3001RestfulCRUD\uff1aCRUD\u6ee1\u8db3Rest\u98ce\u683c\uff1b URI\uff1a /\u8d44\u6e90\u540d\u79f0/\u8d44\u6e90\u6807\u8bc6 HTTP\u8bf7\u6c42\u65b9\u5f0f\u533a\u5206\u5bf9\u8d44\u6e90CRUD\u64cd\u4f5c \u666e\u901aCRUD\uff08uri\u6765\u533a\u5206\u64cd\u4f5c\uff09 RestfulCRUD \u67e5\u8be2 getEmp emp---GET \u6dfb\u52a0 addEmp?xxx emp---POST \u4fee\u6539 updateEmp?id=xxx&xxx=xx emp/{id}---PUT \u5220\u9664 deleteEmp?id=1 emp/{id}---DELETE 2\uff09\u3001\u5b9e\u9a8c\u7684\u8bf7\u6c42\u67b6\u6784; \u5b9e\u9a8c\u529f\u80fd \u8bf7\u6c42URI \u8bf7\u6c42\u65b9\u5f0f \u67e5\u8be2\u6240\u6709\u5458\u5de5 emps GET \u67e5\u8be2\u67d0\u4e2a\u5458\u5de5(\u6765\u5230\u4fee\u6539\u9875\u9762) emp/1 GET \u6765\u5230\u6dfb\u52a0\u9875\u9762 emp GET \u6dfb\u52a0\u5458\u5de5 emp POST \u6765\u5230\u4fee\u6539\u9875\u9762\uff08\u67e5\u51fa\u5458\u5de5\u8fdb\u884c\u4fe1\u606f\u56de\u663e\uff09 emp/1 GET \u4fee\u6539\u5458\u5de5 emp PUT \u5220\u9664\u5458\u5de5 emp/1 DELETE 3\uff09\u3001\u5458\u5de5\u5217\u8868\uff1a","title":"5\uff09\u3001CRUD-\u5458\u5de5\u5217\u8868"},{"location":"Java/SpringBoot/SpringBoot/#thymeleaf","text":"1\u3001\u62bd\u53d6\u516c\u5171\u7247\u6bb5 < div th:fragment = \"copy\" > &copy; 2011 The Good Thymes Virtual Grocery </ div > 2\u3001\u5f15\u5165\u516c\u5171\u7247\u6bb5 < div th:insert = \"~{footer :: copy}\" ></ div > ~{templatename::selector}\uff1a\u6a21\u677f\u540d::\u9009\u62e9\u5668 ~{templatename::fragmentname}:\u6a21\u677f\u540d::\u7247\u6bb5\u540d 3\u3001\u9ed8\u8ba4\u6548\u679c\uff1a insert\u7684\u516c\u5171\u7247\u6bb5\u5728div\u6807\u7b7e\u4e2d \u5982\u679c\u4f7f\u7528th:insert\u7b49\u5c5e\u6027\u8fdb\u884c\u5f15\u5165\uff0c\u53ef\u4ee5\u4e0d\u7528\u5199~{}\uff1a \u884c\u5185\u5199\u6cd5\u53ef\u4ee5\u52a0\u4e0a\uff1a[[~{}]];[(~{})]\uff1b \u4e09\u79cd\u5f15\u5165\u516c\u5171\u7247\u6bb5\u7684th\u5c5e\u6027\uff1a th:insert \uff1a\u5c06\u516c\u5171\u7247\u6bb5\u6574\u4e2a\u63d2\u5165\u5230\u58f0\u660e\u5f15\u5165\u7684\u5143\u7d20\u4e2d th:replace \uff1a\u5c06\u58f0\u660e\u5f15\u5165\u7684\u5143\u7d20\u66ff\u6362\u4e3a\u516c\u5171\u7247\u6bb5 th:include \uff1a\u5c06\u88ab\u5f15\u5165\u7684\u7247\u6bb5\u7684\u5185\u5bb9\u5305\u542b\u8fdb\u8fd9\u4e2a\u6807\u7b7e\u4e2d < footer th:fragment = \"copy\" > &copy; 2011 The Good Thymes Virtual Grocery </ footer > \u5f15\u5165\u65b9\u5f0f < div th:insert = \"footer :: copy\" ></ div > < div th:replace = \"footer :: copy\" ></ div > < div th:include = \"footer :: copy\" ></ div > \u6548\u679c < div > < footer > &copy; 2011 The Good Thymes Virtual Grocery </ footer > </ div > < footer > &copy; 2011 The Good Thymes Virtual Grocery </ footer > < div > &copy; 2011 The Good Thymes Virtual Grocery </ div > \u5f15\u5165\u7247\u6bb5\u7684\u65f6\u5019\u4f20\u5165\u53c2\u6570\uff1a < nav class = \"col-md-2 d-none d-md-block bg-light sidebar\" id = \"sidebar\" > < div class = \"sidebar-sticky\" > < ul class = \"nav flex-column\" > < li class = \"nav-item\" > < a class = \"nav-link active\" th:class = \"${activeUri=='main.html'?'nav-link active':'nav-link'}\" href = \"#\" th:href = \"@{/main.html}\" > < svg xmlns = \"http://www.w3.org/2000/svg\" width = \"24\" height = \"24\" viewBox = \"0 0 24 24\" fill = \"none\" stroke = \"currentColor\" stroke-width = \"2\" stroke-linecap = \"round\" stroke-linejoin = \"round\" class = \"feather feather-home\" > < path d = \"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\" ></ path > < polyline points = \"9 22 9 12 15 12 15 22\" ></ polyline > </ svg > Dashboard < span class = \"sr-only\" > (current) </ span > </ a > </ li > <!--\u5f15\u5165\u4fa7\u8fb9\u680f;\u4f20\u5165\u53c2\u6570--> < div th:replace = \"commons/bar::#sidebar(activeUri='emps')\" ></ div >","title":"thymeleaf\u516c\u5171\u9875\u9762\u5143\u7d20\u62bd\u53d6"},{"location":"Java/SpringBoot/SpringBoot/#6crud-","text":"\u6dfb\u52a0\u9875\u9762 < form > < div class = \"form-group\" > < label > LastName </ label > < input type = \"text\" class = \"form-control\" placeholder = \"zhangsan\" > </ div > < div class = \"form-group\" > < label > Email </ label > < input type = \"email\" class = \"form-control\" placeholder = \"zhangsan@atguigu.com\" > </ div > < div class = \"form-group\" > < label > Gender </ label >< br /> < div class = \"form-check form-check-inline\" > < input class = \"form-check-input\" type = \"radio\" name = \"gender\" value = \"1\" > < label class = \"form-check-label\" > \u7537 </ label > </ div > < div class = \"form-check form-check-inline\" > < input class = \"form-check-input\" type = \"radio\" name = \"gender\" value = \"0\" > < label class = \"form-check-label\" > \u5973 </ label > </ div > </ div > < div class = \"form-group\" > < label > department </ label > < select class = \"form-control\" > < option > 1 </ option > < option > 2 </ option > < option > 3 </ option > < option > 4 </ option > < option > 5 </ option > </ select > </ div > < div class = \"form-group\" > < label > Birth </ label > < input type = \"text\" class = \"form-control\" placeholder = \"zhangsan\" > </ div > < button type = \"submit\" class = \"btn btn-primary\" > \u6dfb\u52a0 </ button > </ form > \u63d0\u4ea4\u7684\u6570\u636e\u683c\u5f0f\u4e0d\u5bf9\uff1a\u751f\u65e5\uff1a\u65e5\u671f\uff1b 2017-12-12\uff1b2017/12/12\uff1b2017.12.12\uff1b \u65e5\u671f\u7684\u683c\u5f0f\u5316\uff1bSpringMVC\u5c06\u9875\u9762\u63d0\u4ea4\u7684\u503c\u9700\u8981\u8f6c\u6362\u4e3a\u6307\u5b9a\u7684\u7c7b\u578b; 2017-12-12---Date\uff1b \u7c7b\u578b\u8f6c\u6362\uff0c\u683c\u5f0f\u5316; \u9ed8\u8ba4\u65e5\u671f\u662f\u6309\u7167/\u7684\u65b9\u5f0f\uff1b","title":"6\uff09\u3001CRUD-\u5458\u5de5\u6dfb\u52a0"},{"location":"Java/SpringBoot/SpringBoot/#7crud-","text":"\u4fee\u6539\u6dfb\u52a0\u4e8c\u5408\u4e00\u8868\u5355 <!--\u9700\u8981\u533a\u5206\u662f\u5458\u5de5\u4fee\u6539\u8fd8\u662f\u6dfb\u52a0\uff1b--> < form th:action = \"@{/emp}\" method = \"post\" > <!--\u53d1\u9001put\u8bf7\u6c42\u4fee\u6539\u5458\u5de5\u6570\u636e--> <!-- 1\u3001SpringMVC\u4e2d\u914d\u7f6eHiddenHttpMethodFilter;\uff08SpringBoot\u81ea\u52a8\u914d\u7f6e\u597d\u7684\uff09 2\u3001\u9875\u9762\u521b\u5efa\u4e00\u4e2apost\u8868\u5355 3\u3001\u521b\u5efa\u4e00\u4e2ainput\u9879\uff0cname=\"_method\";\u503c\u5c31\u662f\u6211\u4eec\u6307\u5b9a\u7684\u8bf7\u6c42\u65b9\u5f0f --> < input type = \"hidden\" name = \"_method\" value = \"put\" th:if = \"${emp!=null}\" /> < input type = \"hidden\" name = \"id\" th:if = \"${emp!=null}\" th:value = \"${emp.id}\" > < div class = \"form-group\" > < label > LastName </ label > < input name = \"lastName\" type = \"text\" class = \"form-control\" placeholder = \"zhangsan\" th:value = \"${emp!=null}?${emp.lastName}\" > </ div > < div class = \"form-group\" > < label > Email </ label > < input name = \"email\" type = \"email\" class = \"form-control\" placeholder = \"zhangsan@atguigu.com\" th:value = \"${emp!=null}?${emp.email}\" > </ div > < div class = \"form-group\" > < label > Gender </ label >< br /> < div class = \"form-check form-check-inline\" > < input class = \"form-check-input\" type = \"radio\" name = \"gender\" value = \"1\" th:checked = \"${emp!=null}?${emp.gender==1}\" > < label class = \"form-check-label\" > \u7537 </ label > </ div > < div class = \"form-check form-check-inline\" > < input class = \"form-check-input\" type = \"radio\" name = \"gender\" value = \"0\" th:checked = \"${emp!=null}?${emp.gender==0}\" > < label class = \"form-check-label\" > \u5973 </ label > </ div > </ div > < div class = \"form-group\" > < label > department </ label > <!--\u63d0\u4ea4\u7684\u662f\u90e8\u95e8\u7684id--> < select class = \"form-control\" name = \"department.id\" > < option th:selected = \"${emp!=null}?${dept.id == emp.department.id}\" th:value = \"${dept.id}\" th:each = \"dept:${depts}\" th:text = \"${dept.departmentName}\" > 1 </ option > </ select > </ div > < div class = \"form-group\" > < label > Birth </ label > < input name = \"birth\" type = \"text\" class = \"form-control\" placeholder = \"zhangsan\" th:value = \"${emp!=null}?${#dates.format(emp.birth, 'yyyy-MM-dd HH:mm')}\" > </ div > < button type = \"submit\" class = \"btn btn-primary\" th:text = \"${emp!=null}?'\u4fee\u6539':'\u6dfb\u52a0'\" > \u6dfb\u52a0 </ button > </ form >","title":"7\uff09\u3001CRUD-\u5458\u5de5\u4fee\u6539"},{"location":"Java/SpringBoot/SpringBoot/#8crud-","text":"< tr th:each = \"emp:${emps}\" > < td th:text = \"${emp.id}\" ></ td > < td > [[${emp.lastName}]] </ td > < td th:text = \"${emp.email}\" ></ td > < td th:text = \"${emp.gender}==0?'\u5973':'\u7537'\" ></ td > < td th:text = \"${emp.department.departmentName}\" ></ td > < td th:text = \"${#dates.format(emp.birth, 'yyyy-MM-dd HH:mm')}\" ></ td > < td > < a class = \"btn btn-sm btn-primary\" th:href = \"@{/emp/}+${emp.id}\" > \u7f16\u8f91 </ a > < button th:attr = \"del_uri=@{/emp/}+${emp.id}\" class = \"btn btn-sm btn-danger deleteBtn\" > \u5220\u9664 </ button > </ td > </ tr > < script > $ ( \".deleteBtn\" ). click ( function (){ //\u5220\u9664\u5f53\u524d\u5458\u5de5\u7684 $ ( \"#deleteEmpForm\" ). attr ( \"action\" , $ ( this ). attr ( \"del_uri\" )). submit (); return false ; }); </ script >","title":"8\uff09\u3001CRUD-\u5458\u5de5\u5220\u9664"},{"location":"Java/SpringBoot/SpringBoot/#7_1","text":"","title":"7\u3001\u9519\u8bef\u5904\u7406\u673a\u5236"},{"location":"Java/SpringBoot/SpringBoot/#1springboot","text":"\u9ed8\u8ba4\u6548\u679c\uff1a \u200b 1\uff09\u3001\u6d4f\u89c8\u5668\uff0c\u8fd4\u56de\u4e00\u4e2a\u9ed8\u8ba4\u7684\u9519\u8bef\u9875\u9762 \u6d4f\u89c8\u5668\u53d1\u9001\u8bf7\u6c42\u7684\u8bf7\u6c42\u5934\uff1a \u200b 2\uff09\u3001\u5982\u679c\u662f\u5176\u4ed6\u5ba2\u6237\u7aef\uff0c\u9ed8\u8ba4\u54cd\u5e94\u4e00\u4e2ajson\u6570\u636e \u200b \u539f\u7406\uff1a \u200b \u53ef\u4ee5\u53c2\u7167ErrorMvcAutoConfiguration\uff1b\u9519\u8bef\u5904\u7406\u7684\u81ea\u52a8\u914d\u7f6e\uff1b \u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u4e86\u4ee5\u4e0b\u7ec4\u4ef6 \u200b 1\u3001DefaultErrorAttributes\uff1a \u5e2e\u6211\u4eec\u5728\u9875\u9762\u5171\u4eab\u4fe1\u606f \uff1b @Override public Map < String , Object > getErrorAttributes ( RequestAttributes requestAttributes , boolean includeStackTrace ) { Map < String , Object > errorAttributes = new LinkedHashMap < String , Object > (); errorAttributes . put ( \"timestamp\" , new Date ()); addStatus ( errorAttributes , requestAttributes ); addErrorDetails ( errorAttributes , requestAttributes , includeStackTrace ); addPath ( errorAttributes , requestAttributes ); return errorAttributes ; } \u200b 2\u3001BasicErrorController\uff1a\u5904\u7406\u9ed8\u8ba4/error\u8bf7\u6c42 @Controller @RequestMapping ( \"${server.error.path:${error.path:/error}}\" ) public class BasicErrorController extends AbstractErrorController { @RequestMapping ( produces = \"text/html\" ) //\u4ea7\u751fhtml\u7c7b\u578b\u7684\u6570\u636e\uff1b\u6d4f\u89c8\u5668\u53d1\u9001\u7684\u8bf7\u6c42\u6765\u5230\u8fd9\u4e2a\u65b9\u6cd5\u5904\u7406 public ModelAndView errorHtml ( HttpServletRequest request , HttpServletResponse response ) { HttpStatus status = getStatus ( request ); Map < String , Object > model = Collections . unmodifiableMap ( getErrorAttributes ( request , isIncludeStackTrace ( request , MediaType . TEXT_HTML ))); response . setStatus ( status . value ()); //\u53bb\u54ea\u4e2a\u9875\u9762\u4f5c\u4e3a\u9519\u8bef\u9875\u9762\uff1b\u5305\u542b\u9875\u9762\u5730\u5740\u548c\u9875\u9762\u5185\u5bb9 ModelAndView modelAndView = resolveErrorView ( request , response , status , model ); return ( modelAndView == null ? new ModelAndView ( \"error\" , model ) : modelAndView ); } @RequestMapping @ResponseBody //\u4ea7\u751fjson\u6570\u636e\uff0c\u5176\u4ed6\u5ba2\u6237\u7aef\u6765\u5230\u8fd9\u4e2a\u65b9\u6cd5\u5904\u7406\uff1b public ResponseEntity < Map < String , Object >> error ( HttpServletRequest request ) { Map < String , Object > body = getErrorAttributes ( request , isIncludeStackTrace ( request , MediaType . ALL )); HttpStatus status = getStatus ( request ); return new ResponseEntity < Map < String , Object >> ( body , status ); } \u200b 3\u3001ErrorPageCustomizer\uff1a @Value ( \"${error.path:/error}\" ) private String path = \"/error\" ; \u7cfb\u7edf\u51fa\u73b0\u9519\u8bef\u4ee5\u540e\u6765\u5230error\u8bf7\u6c42\u8fdb\u884c\u5904\u7406 \uff1b\uff08 web . xml\u6ce8\u518c\u7684\u9519\u8bef\u9875\u9762\u89c4\u5219 \uff09 \u200b 4\u3001DefaultErrorViewResolver\uff1a @Override public ModelAndView resolveErrorView ( HttpServletRequest request , HttpStatus status , Map < String , Object > model ) { ModelAndView modelAndView = resolve ( String . valueOf ( status ), model ); if ( modelAndView == null && SERIES_VIEWS . containsKey ( status . series ())) { modelAndView = resolve ( SERIES_VIEWS . get ( status . series ()), model ); } return modelAndView ; } private ModelAndView resolve ( String viewName , Map < String , Object > model ) { //\u9ed8\u8ba4SpringBoot\u53ef\u4ee5\u53bb\u627e\u5230\u4e00\u4e2a\u9875\u9762\uff1f error/404 String errorViewName = \"error/\" + viewName ; //\u6a21\u677f\u5f15\u64ce\u53ef\u4ee5\u89e3\u6790\u8fd9\u4e2a\u9875\u9762\u5730\u5740\u5c31\u7528\u6a21\u677f\u5f15\u64ce\u89e3\u6790 TemplateAvailabilityProvider provider = this . templateAvailabilityProviders . getProvider ( errorViewName , this . applicationContext ); if ( provider != null ) { //\u6a21\u677f\u5f15\u64ce\u53ef\u7528\u7684\u60c5\u51b5\u4e0b\u8fd4\u56de\u5230errorViewName\u6307\u5b9a\u7684\u89c6\u56fe\u5730\u5740 return new ModelAndView ( errorViewName , model ); } //\u6a21\u677f\u5f15\u64ce\u4e0d\u53ef\u7528\uff0c\u5c31\u5728\u9759\u6001\u8d44\u6e90\u6587\u4ef6\u5939\u4e0b\u627eerrorViewName\u5bf9\u5e94\u7684\u9875\u9762 error/404.html return resolveResource ( errorViewName , model ); } \u200b \u6b65\u9aa4\uff1a \u200b \u4e00\u4f46\u7cfb\u7edf\u51fa\u73b04xx\u6216\u80055xx\u4e4b\u7c7b\u7684\u9519\u8bef\uff1bErrorPageCustomizer\u5c31\u4f1a\u751f\u6548\uff08\u5b9a\u5236\u9519\u8bef\u7684\u54cd\u5e94\u89c4\u5219\uff09\uff1b\u5c31\u4f1a\u6765\u5230/error\u8bf7\u6c42\uff1b\u5c31\u4f1a\u88ab BasicErrorController \u5904\u7406\uff1b \u200b 1\uff09\u54cd\u5e94\u9875\u9762\uff1b\u53bb\u54ea\u4e2a\u9875\u9762\u662f\u7531 DefaultErrorViewResolver \u89e3\u6790\u5f97\u5230\u7684\uff1b protected ModelAndView resolveErrorView ( HttpServletRequest request , HttpServletResponse response , HttpStatus status , Map < String , Object > model ) { //\u6240\u6709\u7684ErrorViewResolver\u5f97\u5230ModelAndView for ( ErrorViewResolver resolver : this . errorViewResolvers ) { ModelAndView modelAndView = resolver . resolveErrorView ( request , status , model ); if ( modelAndView != null ) { return modelAndView ; } } return null ; }","title":"1\uff09\u3001SpringBoot\u9ed8\u8ba4\u7684\u9519\u8bef\u5904\u7406\u673a\u5236"},{"location":"Java/SpringBoot/SpringBoot/#2_9","text":"","title":"2\uff09\u3001\u5982\u679c\u5b9a\u5236\u9519\u8bef\u54cd\u5e94\uff1a"},{"location":"Java/SpringBoot/SpringBoot/#1_9","text":"\u200b 1\uff09\u3001\u6709\u6a21\u677f\u5f15\u64ce\u7684\u60c5\u51b5\u4e0b\uff1berror/\u72b6\u6001\u7801; \u3010\u5c06\u9519\u8bef\u9875\u9762\u547d\u540d\u4e3a \u9519\u8bef\u72b6\u6001\u7801.html \u653e\u5728\u6a21\u677f\u5f15\u64ce\u6587\u4ef6\u5939\u91cc\u9762\u7684 error\u6587\u4ef6\u5939\u4e0b\u3011\uff0c\u53d1\u751f\u6b64\u72b6\u6001\u7801\u7684\u9519\u8bef\u5c31\u4f1a\u6765\u5230 \u5bf9\u5e94\u7684\u9875\u9762\uff1b \u200b \u6211\u4eec\u53ef\u4ee5\u4f7f\u75284xx\u548c5xx\u4f5c\u4e3a\u9519\u8bef\u9875\u9762\u7684\u6587\u4ef6\u540d\u6765\u5339\u914d\u8fd9\u79cd\u7c7b\u578b\u7684\u6240\u6709\u9519\u8bef\uff0c\u7cbe\u786e\u4f18\u5148\uff08\u4f18\u5148\u5bfb\u627e\u7cbe\u786e\u7684\u72b6\u6001\u7801.html\uff09\uff1b \u200b \u9875\u9762\u80fd\u83b7\u53d6\u7684\u4fe1\u606f\uff1b \u200b timestamp\uff1a\u65f6\u95f4\u6233 \u200b status\uff1a\u72b6\u6001\u7801 \u200b error\uff1a\u9519\u8bef\u63d0\u793a \u200b exception\uff1a\u5f02\u5e38\u5bf9\u8c61 \u200b message\uff1a\u5f02\u5e38\u6d88\u606f \u200b errors\uff1aJSR303\u6570\u636e\u6821\u9a8c\u7684\u9519\u8bef\u90fd\u5728\u8fd9\u91cc \u200b 2\uff09\u3001\u6ca1\u6709\u6a21\u677f\u5f15\u64ce\uff08\u6a21\u677f\u5f15\u64ce\u627e\u4e0d\u5230\u8fd9\u4e2a\u9519\u8bef\u9875\u9762\uff09\uff0c\u9759\u6001\u8d44\u6e90\u6587\u4ef6\u5939\u4e0b\u627e\uff1b \u200b 3\uff09\u3001\u4ee5\u4e0a\u90fd\u6ca1\u6709\u9519\u8bef\u9875\u9762\uff0c\u5c31\u662f\u9ed8\u8ba4\u6765\u5230SpringBoot\u9ed8\u8ba4\u7684\u9519\u8bef\u63d0\u793a\u9875\u9762\uff1b","title":"1\uff09\u3001\u5982\u4f55\u5b9a\u5236\u9519\u8bef\u7684\u9875\u9762\uff1b"},{"location":"Java/SpringBoot/SpringBoot/#2json","text":"\u200b 1\uff09\u3001\u81ea\u5b9a\u4e49\u5f02\u5e38\u5904\u7406&\u8fd4\u56de\u5b9a\u5236json\u6570\u636e\uff1b @ControllerAdvice public class MyExceptionHandler { @ResponseBody @ExceptionHandler ( UserNotExistException . class ) public Map < String , Object > handleException ( Exception e ){ Map < String , Object > map = new HashMap <> (); map . put ( \"code\" , \"user.notexist\" ); map . put ( \"message\" , e . getMessage ()); return map ; } } //\u6ca1\u6709\u81ea\u9002\u5e94\u6548\u679c... \u200b 2\uff09\u3001\u8f6c\u53d1\u5230/error\u8fdb\u884c\u81ea\u9002\u5e94\u54cd\u5e94\u6548\u679c\u5904\u7406 @ExceptionHandler ( UserNotExistException . class ) public String handleException ( Exception e , HttpServletRequest request ){ Map < String , Object > map = new HashMap <> (); //\u4f20\u5165\u6211\u4eec\u81ea\u5df1\u7684\u9519\u8bef\u72b6\u6001\u7801 4xx 5xx\uff0c\u5426\u5219\u5c31\u4e0d\u4f1a\u8fdb\u5165\u5b9a\u5236\u9519\u8bef\u9875\u9762\u7684\u89e3\u6790\u6d41\u7a0b /** * Integer statusCode = (Integer) request .getAttribute(\"javax.servlet.error.status_code\"); */ request . setAttribute ( \"javax.servlet.error.status_code\" , 500 ); map . put ( \"code\" , \"user.notexist\" ); map . put ( \"message\" , e . getMessage ()); //\u8f6c\u53d1\u5230/error return \"forward:/error\" ; }","title":"2\uff09\u3001\u5982\u4f55\u5b9a\u5236\u9519\u8bef\u7684json\u6570\u636e\uff1b"},{"location":"Java/SpringBoot/SpringBoot/#3_6","text":"\u51fa\u73b0\u9519\u8bef\u4ee5\u540e\uff0c\u4f1a\u6765\u5230/error\u8bf7\u6c42\uff0c\u4f1a\u88abBasicErrorController\u5904\u7406\uff0c\u54cd\u5e94\u51fa\u53bb\u53ef\u4ee5\u83b7\u53d6\u7684\u6570\u636e\u662f\u7531getErrorAttributes\u5f97\u5230\u7684\uff08\u662fAbstractErrorController\uff08ErrorController\uff09\u89c4\u5b9a\u7684\u65b9\u6cd5\uff09\uff1b \u200b 1\u3001\u5b8c\u5168\u6765\u7f16\u5199\u4e00\u4e2aErrorController\u7684\u5b9e\u73b0\u7c7b\u3010\u6216\u8005\u662f\u7f16\u5199AbstractErrorController\u7684\u5b50\u7c7b\u3011\uff0c\u653e\u5728\u5bb9\u5668\u4e2d\uff1b \u200b 2\u3001\u9875\u9762\u4e0a\u80fd\u7528\u7684\u6570\u636e\uff0c\u6216\u8005\u662fjson\u8fd4\u56de\u80fd\u7528\u7684\u6570\u636e\u90fd\u662f\u901a\u8fc7errorAttributes.getErrorAttributes\u5f97\u5230\uff1b \u200b \u5bb9\u5668\u4e2dDefaultErrorAttributes.getErrorAttributes()\uff1b\u9ed8\u8ba4\u8fdb\u884c\u6570\u636e\u5904\u7406\u7684\uff1b \u81ea\u5b9a\u4e49ErrorAttributes //\u7ed9\u5bb9\u5668\u4e2d\u52a0\u5165\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684ErrorAttributes @Component public class MyErrorAttributes extends DefaultErrorAttributes { @Override public Map < String , Object > getErrorAttributes ( RequestAttributes requestAttributes , boolean includeStackTrace ) { Map < String , Object > map = super . getErrorAttributes ( requestAttributes , includeStackTrace ); map . put ( \"company\" , \"atguigu\" ); return map ; } } \u6700\u7ec8\u7684\u6548\u679c\uff1a\u54cd\u5e94\u662f\u81ea\u9002\u5e94\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b9a\u5236ErrorAttributes\u6539\u53d8\u9700\u8981\u8fd4\u56de\u7684\u5185\u5bb9\uff0c","title":"3\uff09\u3001\u5c06\u6211\u4eec\u7684\u5b9a\u5236\u6570\u636e\u643a\u5e26\u51fa\u53bb\uff1b"},{"location":"Java/SpringBoot/SpringBoot/#8servlet","text":"SpringBoot\u9ed8\u8ba4\u4f7f\u7528Tomcat\u4f5c\u4e3a\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\uff1b \u95ee\u9898\uff1f","title":"8\u3001\u914d\u7f6e\u5d4c\u5165\u5f0fServlet\u5bb9\u5668"},{"location":"Java/SpringBoot/SpringBoot/#1servlet","text":"1\u3001\u4fee\u6539\u548cserver\u6709\u5173\u7684\u914d\u7f6e\uff08ServerProperties\u3010\u4e5f\u662fEmbeddedServletContainerCustomizer\u3011\uff09\uff1b server.port = 8081 server.context-path = /crud server.tomcat.uri-encoding = UTF-8 //\u901a\u7528\u7684Servlet\u5bb9\u5668\u8bbe\u7f6e server.xxx //Tomcat\u7684\u8bbe\u7f6e server.tomcat.xxx 2\u3001\u7f16\u5199\u4e00\u4e2a EmbeddedServletContainerCustomizer \uff1a\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u7684\u5b9a\u5236\u5668\uff1b\u6765\u4fee\u6539Servlet\u5bb9\u5668\u7684\u914d\u7f6e @Bean //\u4e00\u5b9a\u8981\u5c06\u8fd9\u4e2a\u5b9a\u5236\u5668\u52a0\u5165\u5230\u5bb9\u5668\u4e2d public EmbeddedServletContainerCustomizer embeddedServletContainerCustomizer (){ return new EmbeddedServletContainerCustomizer () { //\u5b9a\u5236\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u76f8\u5173\u7684\u89c4\u5219 @Override public void customize ( ConfigurableEmbeddedServletContainer container ) { container . setPort ( 8083 ); } }; }","title":"1\uff09\u3001\u5982\u4f55\u5b9a\u5236\u548c\u4fee\u6539Servlet\u5bb9\u5668\u7684\u76f8\u5173\u914d\u7f6e\uff1b"},{"location":"Java/SpringBoot/SpringBoot/#2servletservletfilterlistener","text":"\u7531\u4e8eSpringBoot\u9ed8\u8ba4\u662f\u4ee5jar\u5305\u7684\u65b9\u5f0f\u542f\u52a8\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u6765\u542f\u52a8SpringBoot\u7684web\u5e94\u7528\uff0c\u6ca1\u6709web.xml\u6587\u4ef6\u3002 \u6ce8\u518c\u4e09\u5927\u7ec4\u4ef6\u7528\u4ee5\u4e0b\u65b9\u5f0f ServletRegistrationBean //\u6ce8\u518c\u4e09\u5927\u7ec4\u4ef6 @Bean public ServletRegistrationBean myServlet (){ ServletRegistrationBean registrationBean = new ServletRegistrationBean ( new MyServlet (), \"/myServlet\" ); return registrationBean ; } FilterRegistrationBean @Bean public FilterRegistrationBean myFilter (){ FilterRegistrationBean registrationBean = new FilterRegistrationBean (); registrationBean . setFilter ( new MyFilter ()); registrationBean . setUrlPatterns ( Arrays . asList ( \"/hello\" , \"/myServlet\" )); return registrationBean ; } ServletListenerRegistrationBean @Bean public ServletListenerRegistrationBean myListener (){ ServletListenerRegistrationBean < MyListener > registrationBean = new ServletListenerRegistrationBean <> ( new MyListener ()); return registrationBean ; } SpringBoot\u5e2e\u6211\u4eec\u81ea\u52a8SpringMVC\u7684\u65f6\u5019\uff0c\u81ea\u52a8\u7684\u6ce8\u518cSpringMVC\u7684\u524d\u7aef\u63a7\u5236\u5668\uff1bDIspatcherServlet\uff1b DispatcherServletAutoConfiguration\u4e2d\uff1a @Bean ( name = DEFAULT_DISPATCHER_SERVLET_REGISTRATION_BEAN_NAME ) @ConditionalOnBean ( value = DispatcherServlet . class , name = DEFAULT_DISPATCHER_SERVLET_BEAN_NAME ) public ServletRegistrationBean dispatcherServletRegistration ( DispatcherServlet dispatcherServlet ) { ServletRegistrationBean registration = new ServletRegistrationBean ( dispatcherServlet , this . serverProperties . getServletMapping ()); //\u9ed8\u8ba4\u62e6\u622a\uff1a / \u6240\u6709\u8bf7\u6c42\uff1b\u5305\u9759\u6001\u8d44\u6e90\uff0c\u4f46\u662f\u4e0d\u62e6\u622ajsp\u8bf7\u6c42\uff1b /*\u4f1a\u62e6\u622ajsp //\u53ef\u4ee5\u901a\u8fc7server.servletPath\u6765\u4fee\u6539SpringMVC\u524d\u7aef\u63a7\u5236\u5668\u9ed8\u8ba4\u62e6\u622a\u7684\u8bf7\u6c42\u8def\u5f84 registration . setName ( DEFAULT_DISPATCHER_SERVLET_BEAN_NAME ); registration . setLoadOnStartup ( this . webMvcProperties . getServlet (). getLoadOnStartup ()); if ( this . multipartConfig != null ) { registration . setMultipartConfig ( this . multipartConfig ); } return registration ; } 2\uff09\u3001SpringBoot\u80fd\u4e0d\u80fd\u652f\u6301\u5176\u4ed6\u7684Servlet\u5bb9\u5668\uff1b","title":"2\uff09\u3001\u6ce8\u518cServlet\u4e09\u5927\u7ec4\u4ef6\u3010Servlet\u3001Filter\u3001Listener\u3011"},{"location":"Java/SpringBoot/SpringBoot/#3servlet","text":"\u9ed8\u8ba4\u652f\u6301\uff1a Tomcat\uff08\u9ed8\u8ba4\u4f7f\u7528\uff09 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> \u5f15\u5165web\u6a21\u5757\u9ed8\u8ba4\u5c31\u662f\u4f7f\u7528\u5d4c\u5165\u5f0f\u7684Tomcat\u4f5c\u4e3aServlet\u5bb9\u5668\uff1b </dependency> Jetty <!-- \u5f15\u5165web\u6a21\u5757 --> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> <exclusions> <exclusion> <artifactId> spring-boot-starter-tomcat </artifactId> <groupId> org.springframework.boot </groupId> </exclusion> </exclusions> </dependency> <!--\u5f15\u5165\u5176\u4ed6\u7684Servlet\u5bb9\u5668--> <dependency> <artifactId> spring-boot-starter-jetty </artifactId> <groupId> org.springframework.boot </groupId> </dependency> Undertow <!-- \u5f15\u5165web\u6a21\u5757 --> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web </artifactId> <exclusions> <exclusion> <artifactId> spring-boot-starter-tomcat </artifactId> <groupId> org.springframework.boot </groupId> </exclusion> </exclusions> </dependency> <!--\u5f15\u5165\u5176\u4ed6\u7684Servlet\u5bb9\u5668--> <dependency> <artifactId> spring-boot-starter-undertow </artifactId> <groupId> org.springframework.boot </groupId> </dependency>","title":"3\uff09\u3001\u66ff\u6362\u4e3a\u5176\u4ed6\u5d4c\u5165\u5f0fServlet\u5bb9\u5668"},{"location":"Java/SpringBoot/SpringBoot/#4servlet","text":"EmbeddedServletContainerAutoConfiguration\uff1a\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u81ea\u52a8\u914d\u7f6e\uff1f @AutoConfigureOrder ( Ordered . HIGHEST_PRECEDENCE ) @Configuration @ConditionalOnWebApplication @Import ( BeanPostProcessorsRegistrar . class ) //\u5bfc\u5165BeanPostProcessorsRegistrar\uff1aSpring\u6ce8\u89e3\u7248\uff1b\u7ed9\u5bb9\u5668\u4e2d\u5bfc\u5165\u4e00\u4e9b\u7ec4\u4ef6 //\u5bfc\u5165\u4e86EmbeddedServletContainerCustomizerBeanPostProcessor\uff1a //\u540e\u7f6e\u5904\u7406\u5668\uff1abean\u521d\u59cb\u5316\u524d\u540e\uff08\u521b\u5efa\u5b8c\u5bf9\u8c61\uff0c\u8fd8\u6ca1\u8d4b\u503c\u8d4b\u503c\uff09\u6267\u884c\u521d\u59cb\u5316\u5de5\u4f5c public class EmbeddedServletContainerAutoConfiguration { @Configuration @ConditionalOnClass ({ Servlet . class , Tomcat . class }) //\u5224\u65ad\u5f53\u524d\u662f\u5426\u5f15\u5165\u4e86Tomcat\u4f9d\u8d56\uff1b @ConditionalOnMissingBean ( value = EmbeddedServletContainerFactory . class , search = SearchStrategy . CURRENT ) //\u5224\u65ad\u5f53\u524d\u5bb9\u5668\u6ca1\u6709\u7528\u6237\u81ea\u5df1\u5b9a\u4e49EmbeddedServletContainerFactory\uff1a\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u5de5\u5382\uff1b\u4f5c\u7528\uff1a\u521b\u5efa\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668 public static class EmbeddedTomcat { @Bean public TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory () { return new TomcatEmbeddedServletContainerFactory (); } } /** * Nested configuration if Jetty is being used. */ @Configuration @ConditionalOnClass ({ Servlet . class , Server . class , Loader . class , WebAppContext . class }) @ConditionalOnMissingBean ( value = EmbeddedServletContainerFactory . class , search = SearchStrategy . CURRENT ) public static class EmbeddedJetty { @Bean public JettyEmbeddedServletContainerFactory jettyEmbeddedServletContainerFactory () { return new JettyEmbeddedServletContainerFactory (); } } /** * Nested configuration if Undertow is being used. */ @Configuration @ConditionalOnClass ({ Servlet . class , Undertow . class , SslClientAuthMode . class }) @ConditionalOnMissingBean ( value = EmbeddedServletContainerFactory . class , search = SearchStrategy . CURRENT ) public static class EmbeddedUndertow { @Bean public UndertowEmbeddedServletContainerFactory undertowEmbeddedServletContainerFactory () { return new UndertowEmbeddedServletContainerFactory (); } } 1\uff09\u3001EmbeddedServletContainerFactory\uff08\u5d4c\u5165\u5f0fServlet\u5bb9\u5668\u5de5\u5382\uff09 public interface EmbeddedServletContainerFactory { //\u83b7\u53d6\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668 EmbeddedServletContainer getEmbeddedServletContainer ( ServletContextInitializer ... initializers ); } 2\uff09\u3001EmbeddedServletContainer\uff1a\uff08\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\uff09 3\uff09\u3001\u4ee5 TomcatEmbeddedServletContainerFactory \u4e3a\u4f8b @Override public EmbeddedServletContainer getEmbeddedServletContainer ( ServletContextInitializer ... initializers ) { //\u521b\u5efa\u4e00\u4e2aTomcat Tomcat tomcat = new Tomcat (); //\u914d\u7f6eTomcat\u7684\u57fa\u672c\u73af\u8282 File baseDir = ( this . baseDirectory != null ? this . baseDirectory : createTempDir ( \"tomcat\" )); tomcat . setBaseDir ( baseDir . getAbsolutePath ()); Connector connector = new Connector ( this . protocol ); tomcat . getService (). addConnector ( connector ); customizeConnector ( connector ); tomcat . setConnector ( connector ); tomcat . getHost (). setAutoDeploy ( false ); configureEngine ( tomcat . getEngine ()); for ( Connector additionalConnector : this . additionalTomcatConnectors ) { tomcat . getService (). addConnector ( additionalConnector ); } prepareContext ( tomcat . getHost (), initializers ); //\u5c06\u914d\u7f6e\u597d\u7684Tomcat\u4f20\u5165\u8fdb\u53bb\uff0c\u8fd4\u56de\u4e00\u4e2aEmbeddedServletContainer\uff1b\u5e76\u4e14\u542f\u52a8Tomcat\u670d\u52a1\u5668 return getTomcatEmbeddedServletContainer ( tomcat ); } 4\uff09\u3001\u6211\u4eec\u5bf9\u5d4c\u5165\u5f0f\u5bb9\u5668\u7684\u914d\u7f6e\u4fee\u6539\u662f\u600e\u4e48\u751f\u6548\uff1f ServerProperties\u3001EmbeddedServletContainerCustomizer EmbeddedServletContainerCustomizer \uff1a\u5b9a\u5236\u5668\u5e2e\u6211\u4eec\u4fee\u6539\u4e86Servlet\u5bb9\u5668\u7684\u914d\u7f6e\uff1f \u600e\u4e48\u4fee\u6539\u7684\u539f\u7406\uff1f 5\uff09\u3001\u5bb9\u5668\u4e2d\u5bfc\u5165\u4e86 EmbeddedServletContainerCustomizerBeanPostProcessor //\u521d\u59cb\u5316\u4e4b\u524d @Override public Object postProcessBeforeInitialization ( Object bean , String beanName ) throws BeansException { //\u5982\u679c\u5f53\u524d\u521d\u59cb\u5316\u7684\u662f\u4e00\u4e2aConfigurableEmbeddedServletContainer\u7c7b\u578b\u7684\u7ec4\u4ef6 if ( bean instanceof ConfigurableEmbeddedServletContainer ) { // postProcessBeforeInitialization (( ConfigurableEmbeddedServletContainer ) bean ); } return bean ; } private void postProcessBeforeInitialization ( ConfigurableEmbeddedServletContainer bean ) { //\u83b7\u53d6\u6240\u6709\u7684\u5b9a\u5236\u5668\uff0c\u8c03\u7528\u6bcf\u4e00\u4e2a\u5b9a\u5236\u5668\u7684customize\u65b9\u6cd5\u6765\u7ed9Servlet\u5bb9\u5668\u8fdb\u884c\u5c5e\u6027\u8d4b\u503c\uff1b for ( EmbeddedServletContainerCustomizer customizer : getCustomizers ()) { customizer . customize ( bean ); } } private Collection < EmbeddedServletContainerCustomizer > getCustomizers () { if ( this . customizers == null ) { // Look up does not include the parent context this . customizers = new ArrayList < EmbeddedServletContainerCustomizer > ( this . beanFactory //\u4ece\u5bb9\u5668\u4e2d\u83b7\u53d6\u6240\u6709\u8fd9\u845b\u7c7b\u578b\u7684\u7ec4\u4ef6\uff1aEmbeddedServletContainerCustomizer //\u5b9a\u5236Servlet\u5bb9\u5668\uff0c\u7ed9\u5bb9\u5668\u4e2d\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2aEmbeddedServletContainerCustomizer\u7c7b\u578b\u7684\u7ec4\u4ef6 . getBeansOfType ( EmbeddedServletContainerCustomizer . class , false , false ) . values ()); Collections . sort ( this . customizers , AnnotationAwareOrderComparator . INSTANCE ); this . customizers = Collections . unmodifiableList ( this . customizers ); } return this . customizers ; } ServerProperties\u4e5f\u662f\u5b9a\u5236\u5668 \u6b65\u9aa4\uff1a 1\uff09\u3001SpringBoot\u6839\u636e\u5bfc\u5165\u7684\u4f9d\u8d56\u60c5\u51b5\uff0c\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u76f8\u5e94\u7684EmbeddedServletContainerFactory\u3010TomcatEmbeddedServletContainerFactory\u3011 2\uff09\u3001\u5bb9\u5668\u4e2d\u67d0\u4e2a\u7ec4\u4ef6\u8981\u521b\u5efa\u5bf9\u8c61\u5c31\u4f1a\u60ca\u52a8\u540e\u7f6e\u5904\u7406\u5668\uff1bEmbeddedServletContainerCustomizerBeanPostProcessor\uff1b \u53ea\u8981\u662f\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u5de5\u5382\uff0c\u540e\u7f6e\u5904\u7406\u5668\u5c31\u5de5\u4f5c\uff1b 3\uff09\u3001\u540e\u7f6e\u5904\u7406\u5668\uff0c\u4ece\u5bb9\u5668\u4e2d\u83b7\u53d6\u6240\u6709\u7684 EmbeddedServletContainerCustomizer \uff0c\u8c03\u7528\u5b9a\u5236\u5668\u7684\u5b9a\u5236\u65b9\u6cd5","title":"4\uff09\u3001\u5d4c\u5165\u5f0fServlet\u5bb9\u5668\u81ea\u52a8\u914d\u7f6e\u539f\u7406\uff1b"},{"location":"Java/SpringBoot/SpringBoot/#5servlet","text":"\u4ec0\u4e48\u65f6\u5019\u521b\u5efa\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u5de5\u5382\uff1f\u4ec0\u4e48\u65f6\u5019\u83b7\u53d6\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u5e76\u542f\u52a8Tomcat\uff1b \u83b7\u53d6\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u5de5\u5382\uff1a 1\uff09\u3001SpringBoot\u5e94\u7528\u542f\u52a8\u8fd0\u884crun\u65b9\u6cd5 2\uff09\u3001refreshContext(context);SpringBoot\u5237\u65b0IOC\u5bb9\u5668\u3010\u521b\u5efaIOC\u5bb9\u5668\u5bf9\u8c61\uff0c\u5e76\u521d\u59cb\u5316\u5bb9\u5668\uff0c\u521b\u5efa\u5bb9\u5668\u4e2d\u7684\u6bcf\u4e00\u4e2a\u7ec4\u4ef6\u3011\uff1b\u5982\u679c\u662fweb\u5e94\u7528\u521b\u5efa AnnotationConfigEmbeddedWebApplicationContext \uff0c\u5426\u5219\uff1a AnnotationConfigApplicationContext 3\uff09\u3001refresh(context); \u5237\u65b0\u521a\u624d\u521b\u5efa\u597d\u7684ioc\u5bb9\u5668\uff1b public void refresh () throws BeansException , IllegalStateException { synchronized ( this . startupShutdownMonitor ) { // Prepare this context for refreshing. prepareRefresh (); // Tell the subclass to refresh the internal bean factory. ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory (); // Prepare the bean factory for use in this context. prepareBeanFactory ( beanFactory ); try { // Allows post-processing of the bean factory in context subclasses. postProcessBeanFactory ( beanFactory ); // Invoke factory processors registered as beans in the context. invokeBeanFactoryPostProcessors ( beanFactory ); // Register bean processors that intercept bean creation. registerBeanPostProcessors ( beanFactory ); // Initialize message source for this context. initMessageSource (); // Initialize event multicaster for this context. initApplicationEventMulticaster (); // Initialize other special beans in specific context subclasses. onRefresh (); // Check for listener beans and register them. registerListeners (); // Instantiate all remaining (non-lazy-init) singletons. finishBeanFactoryInitialization ( beanFactory ); // Last step: publish corresponding event. finishRefresh (); } catch ( BeansException ex ) { if ( logger . isWarnEnabled ()) { logger . warn ( \"Exception encountered during context initialization - \" + \"cancelling refresh attempt: \" + ex ); } // Destroy already created singletons to avoid dangling resources. destroyBeans (); // Reset 'active' flag. cancelRefresh ( ex ); // Propagate exception to caller. throw ex ; } finally { // Reset common introspection caches in Spring's core, since we // might not ever need metadata for singleton beans anymore... resetCommonCaches (); } } } 4\uff09\u3001 onRefresh(); web\u7684ioc\u5bb9\u5668\u91cd\u5199\u4e86onRefresh\u65b9\u6cd5 5\uff09\u3001webioc\u5bb9\u5668\u4f1a\u521b\u5efa\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\uff1b createEmbeddedServletContainer (); 6\uff09\u3001\u83b7\u53d6\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u5de5\u5382\uff1a EmbeddedServletContainerFactory containerFactory = getEmbeddedServletContainerFactory(); \u200b \u4eceioc\u5bb9\u5668\u4e2d\u83b7\u53d6EmbeddedServletContainerFactory \u7ec4\u4ef6\uff1b TomcatEmbeddedServletContainerFactory \u521b\u5efa\u5bf9\u8c61\uff0c\u540e\u7f6e\u5904\u7406\u5668\u4e00\u770b\u662f\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u5c31\u83b7\u53d6\u6240\u6709\u7684\u5b9a\u5236\u5668\u6765\u5148\u5b9a\u5236Servlet\u5bb9\u5668\u7684\u76f8\u5173\u914d\u7f6e\uff1b 7\uff09\u3001 \u4f7f\u7528\u5bb9\u5668\u5de5\u5382\u83b7\u53d6\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668 \uff1athis.embeddedServletContainer = containerFactory .getEmbeddedServletContainer(getSelfInitializer()); 8\uff09\u3001\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\u521b\u5efa\u5bf9\u8c61\u5e76\u542f\u52a8Servlet\u5bb9\u5668\uff1b \u5148\u542f\u52a8\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\uff0c\u518d\u5c06ioc\u5bb9\u5668\u4e2d\u5269\u4e0b\u6ca1\u6709\u521b\u5efa\u51fa\u7684\u5bf9\u8c61\u83b7\u53d6\u51fa\u6765\uff1b ==IOC\u5bb9\u5668\u542f\u52a8\u521b\u5efa\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668==","title":"5\uff09\u3001\u5d4c\u5165\u5f0fServlet\u5bb9\u5668\u542f\u52a8\u539f\u7406\uff1b"},{"location":"Java/SpringBoot/SpringBoot/#9servlet","text":"\u5d4c\u5165\u5f0fServlet\u5bb9\u5668\uff1a\u5e94\u7528\u6253\u6210\u53ef\u6267\u884c\u7684jar \u200b \u4f18\u70b9\uff1a\u7b80\u5355\u3001\u4fbf\u643a\uff1b \u200b \u7f3a\u70b9\uff1a\u9ed8\u8ba4\u4e0d\u652f\u6301JSP\u3001\u4f18\u5316\u5b9a\u5236\u6bd4\u8f83\u590d\u6742\uff08\u4f7f\u7528\u5b9a\u5236\u5668\u3010ServerProperties\u3001\u81ea\u5b9a\u4e49EmbeddedServletContainerCustomizer\u3011\uff0c\u81ea\u5df1\u7f16\u5199\u5d4c\u5165\u5f0fServlet\u5bb9\u5668\u7684\u521b\u5efa\u5de5\u5382\u3010EmbeddedServletContainerFactory\u3011\uff09\uff1b \u5916\u7f6e\u7684Servlet\u5bb9\u5668\uff1a\u5916\u9762\u5b89\u88c5Tomcat---\u5e94\u7528war\u5305\u7684\u65b9\u5f0f\u6253\u5305\uff1b","title":"9\u3001\u4f7f\u7528\u5916\u7f6e\u7684Servlet\u5bb9\u5668"},{"location":"Java/SpringBoot/SpringBoot/#_4","text":"1\uff09\u3001\u5fc5\u987b\u521b\u5efa\u4e00\u4e2awar\u9879\u76ee\uff1b\uff08\u5229\u7528idea\u521b\u5efa\u597d\u76ee\u5f55\u7ed3\u6784\uff09 2\uff09\u3001\u5c06\u5d4c\u5165\u5f0f\u7684Tomcat\u6307\u5b9a\u4e3aprovided\uff1b <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-tomcat </artifactId> <scope> provided </scope> </dependency> 3\uff09\u3001\u5fc5\u987b\u7f16\u5199\u4e00\u4e2a SpringBootServletInitializer \u7684\u5b50\u7c7b\uff0c\u5e76\u8c03\u7528configure\u65b9\u6cd5 public class ServletInitializer extends SpringBootServletInitializer { @Override protected SpringApplicationBuilder configure ( SpringApplicationBuilder application ) { //\u4f20\u5165SpringBoot\u5e94\u7528\u7684\u4e3b\u7a0b\u5e8f return application . sources ( SpringBoot04WebJspApplication . class ); } } 4\uff09\u3001\u542f\u52a8\u670d\u52a1\u5668\u5c31\u53ef\u4ee5\u4f7f\u7528\uff1b","title":"\u6b65\u9aa4"},{"location":"Java/SpringBoot/SpringBoot/#_5","text":"jar\u5305\uff1a\u6267\u884cSpringBoot\u4e3b\u7c7b\u7684main\u65b9\u6cd5\uff0c\u542f\u52a8ioc\u5bb9\u5668\uff0c\u521b\u5efa\u5d4c\u5165\u5f0f\u7684Servlet\u5bb9\u5668\uff1b war\u5305\uff1a\u542f\u52a8\u670d\u52a1\u5668\uff0c \u670d\u52a1\u5668\u542f\u52a8SpringBoot\u5e94\u7528 \u3010SpringBootServletInitializer\u3011\uff0c\u542f\u52a8ioc\u5bb9\u5668\uff1b servlet3.0\uff08Spring\u6ce8\u89e3\u7248\uff09\uff1a 8.2.4 Shared libraries / runtimes pluggability\uff1a \u89c4\u5219\uff1a \u200b 1\uff09\u3001\u670d\u52a1\u5668\u542f\u52a8\uff08web\u5e94\u7528\u542f\u52a8\uff09\u4f1a\u521b\u5efa\u5f53\u524dweb\u5e94\u7528\u91cc\u9762\u6bcf\u4e00\u4e2ajar\u5305\u91cc\u9762ServletContainerInitializer\u5b9e\u4f8b\uff1a \u200b 2\uff09\u3001ServletContainerInitializer\u7684\u5b9e\u73b0\u653e\u5728jar\u5305\u7684META-INF/services\u6587\u4ef6\u5939\u4e0b\uff0c\u6709\u4e00\u4e2a\u540d\u4e3ajavax.servlet.ServletContainerInitializer\u7684\u6587\u4ef6\uff0c\u5185\u5bb9\u5c31\u662fServletContainerInitializer\u7684\u5b9e\u73b0\u7c7b\u7684\u5168\u7c7b\u540d \u200b 3\uff09\u3001\u8fd8\u53ef\u4ee5\u4f7f\u7528@HandlesTypes\uff0c\u5728\u5e94\u7528\u542f\u52a8\u7684\u65f6\u5019\u52a0\u8f7d\u6211\u4eec\u611f\u5174\u8da3\u7684\u7c7b\uff1b \u6d41\u7a0b\uff1a 1\uff09\u3001\u542f\u52a8Tomcat 2\uff09\u3001org\\springframework\\spring-web\\4.3.14.RELEASE\\spring-web-4.3.14.RELEASE.jar!\\META-INF\\services\\javax.servlet.ServletContainerInitializer\uff1a Spring\u7684web\u6a21\u5757\u91cc\u9762\u6709\u8fd9\u4e2a\u6587\u4ef6\uff1a org.springframework.web.SpringServletContainerInitializer 3\uff09\u3001SpringServletContainerInitializer\u5c06@HandlesTypes(WebApplicationInitializer.class)\u6807\u6ce8\u7684\u6240\u6709\u8fd9\u4e2a\u7c7b\u578b\u7684\u7c7b\u90fd\u4f20\u5165\u5230onStartup\u65b9\u6cd5\u7684Set<Class<?>>\uff1b\u4e3a\u8fd9\u4e9bWebApplicationInitializer\u7c7b\u578b\u7684\u7c7b\u521b\u5efa\u5b9e\u4f8b\uff1b 4\uff09\u3001\u6bcf\u4e00\u4e2aWebApplicationInitializer\u90fd\u8c03\u7528\u81ea\u5df1\u7684onStartup\uff1b 5\uff09\u3001\u76f8\u5f53\u4e8e\u6211\u4eec\u7684SpringBootServletInitializer\u7684\u7c7b\u4f1a\u88ab\u521b\u5efa\u5bf9\u8c61\uff0c\u5e76\u6267\u884conStartup\u65b9\u6cd5 6\uff09\u3001SpringBootServletInitializer\u5b9e\u4f8b\u6267\u884conStartup\u7684\u65f6\u5019\u4f1acreateRootApplicationContext\uff1b\u521b\u5efa\u5bb9\u5668 protected WebApplicationContext createRootApplicationContext ( ServletContext servletContext ) { //1\u3001\u521b\u5efaSpringApplicationBuilder SpringApplicationBuilder builder = createSpringApplicationBuilder (); StandardServletEnvironment environment = new StandardServletEnvironment (); environment . initPropertySources ( servletContext , null ); builder . environment ( environment ); builder . main ( getClass ()); ApplicationContext parent = getExistingRootWebApplicationContext ( servletContext ); if ( parent != null ) { this . logger . info ( \"Root context already created (using as parent).\" ); servletContext . setAttribute ( WebApplicationContext . ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE , null ); builder . initializers ( new ParentContextApplicationContextInitializer ( parent )); } builder . initializers ( new ServletContextApplicationContextInitializer ( servletContext )); builder . contextClass ( AnnotationConfigEmbeddedWebApplicationContext . class ); //\u8c03\u7528configure\u65b9\u6cd5\uff0c\u5b50\u7c7b\u91cd\u5199\u4e86\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5c06SpringBoot\u7684\u4e3b\u7a0b\u5e8f\u7c7b\u4f20\u5165\u4e86\u8fdb\u6765 builder = configure ( builder ); //\u4f7f\u7528builder\u521b\u5efa\u4e00\u4e2aSpring\u5e94\u7528 SpringApplication application = builder . build (); if ( application . getSources (). isEmpty () && AnnotationUtils . findAnnotation ( getClass (), Configuration . class ) != null ) { application . getSources (). add ( getClass ()); } Assert . state ( ! application . getSources (). isEmpty (), \"No SpringApplication sources have been defined. Either override the \" + \"configure method or add an @Configuration annotation\" ); // Ensure error pages are registered if ( this . registerErrorPageFilter ) { application . getSources (). add ( ErrorPageFilterConfiguration . class ); } //\u542f\u52a8Spring\u5e94\u7528 return run ( application ); } 7\uff09\u3001Spring\u7684\u5e94\u7528\u5c31\u542f\u52a8\u5e76\u4e14\u521b\u5efaIOC\u5bb9\u5668 public ConfigurableApplicationContext run ( String ... args ) { StopWatch stopWatch = new StopWatch (); stopWatch . start (); ConfigurableApplicationContext context = null ; FailureAnalyzers analyzers = null ; configureHeadlessProperty (); SpringApplicationRunListeners listeners = getRunListeners ( args ); listeners . starting (); try { ApplicationArguments applicationArguments = new DefaultApplicationArguments ( args ); ConfigurableEnvironment environment = prepareEnvironment ( listeners , applicationArguments ); Banner printedBanner = printBanner ( environment ); context = createApplicationContext (); analyzers = new FailureAnalyzers ( context ); prepareContext ( context , environment , listeners , applicationArguments , printedBanner ); //\u5237\u65b0IOC\u5bb9\u5668 refreshContext ( context ); afterRefresh ( context , applicationArguments ); listeners . finished ( context , null ); stopWatch . stop (); if ( this . logStartupInfo ) { new StartupInfoLogger ( this . mainApplicationClass ) . logStarted ( getApplicationLog (), stopWatch ); } return context ; } catch ( Throwable ex ) { handleRunFailure ( context , listeners , analyzers , ex ); throw new IllegalStateException ( ex ); } } ==\u542f\u52a8Servlet\u5bb9\u5668\uff0c\u518d\u542f\u52a8SpringBoot\u5e94\u7528==","title":"\u539f\u7406"},{"location":"Java/SpringBoot/SpringBoot/#docker","text":"","title":"\u4e94\u3001Docker"},{"location":"Java/SpringBoot/SpringBoot/#1_10","text":"Docker \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5e94\u7528\u5bb9\u5668\u5f15\u64ce\uff1b\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u5bb9\u5668\u6280\u672f\uff1b Docker\u652f\u6301\u5c06\u8f6f\u4ef6\u7f16\u8bd1\u6210\u4e00\u4e2a\u955c\u50cf\uff1b\u7136\u540e\u5728\u955c\u50cf\u4e2d\u5404\u79cd\u8f6f\u4ef6\u505a\u597d\u914d\u7f6e\uff0c\u5c06\u955c\u50cf\u53d1\u5e03\u51fa\u53bb\uff0c\u5176\u4ed6\u4f7f\u7528\u8005\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u955c\u50cf\uff1b \u8fd0\u884c\u4e2d\u7684\u8fd9\u4e2a\u955c\u50cf\u79f0\u4e3a\u5bb9\u5668\uff0c\u5bb9\u5668\u542f\u52a8\u662f\u975e\u5e38\u5feb\u901f\u7684\u3002","title":"1\u3001\u7b80\u4ecb"},{"location":"Java/SpringBoot/SpringBoot/#2_10","text":"docker\u4e3b\u673a(Host)\uff1a\u5b89\u88c5\u4e86Docker\u7a0b\u5e8f\u7684\u673a\u5668\uff08Docker\u76f4\u63a5\u5b89\u88c5\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u4e0a\uff09\uff1b docker\u5ba2\u6237\u7aef(Client)\uff1a\u8fde\u63a5docker\u4e3b\u673a\u8fdb\u884c\u64cd\u4f5c\uff1b docker\u4ed3\u5e93(Registry)\uff1a\u7528\u6765\u4fdd\u5b58\u5404\u79cd\u6253\u5305\u597d\u7684\u8f6f\u4ef6\u955c\u50cf\uff1b docker\u955c\u50cf(Images)\uff1a\u8f6f\u4ef6\u6253\u5305\u597d\u7684\u955c\u50cf\uff1b\u653e\u5728docker\u4ed3\u5e93\u4e2d\uff1b docker\u5bb9\u5668(Container)\uff1a\u955c\u50cf\u542f\u52a8\u540e\u7684\u5b9e\u4f8b\u79f0\u4e3a\u4e00\u4e2a\u5bb9\u5668\uff1b\u5bb9\u5668\u662f\u72ec\u7acb\u8fd0\u884c\u7684\u4e00\u4e2a\u6216\u4e00\u7ec4\u5e94\u7528 \u4f7f\u7528Docker\u7684\u6b65\u9aa4\uff1a 1\uff09\u3001\u5b89\u88c5Docker 2\uff09\u3001\u53bbDocker\u4ed3\u5e93\u627e\u5230\u8fd9\u4e2a\u8f6f\u4ef6\u5bf9\u5e94\u7684\u955c\u50cf\uff1b 3\uff09\u3001\u4f7f\u7528Docker\u8fd0\u884c\u8fd9\u4e2a\u955c\u50cf\uff0c\u8fd9\u4e2a\u955c\u50cf\u5c31\u4f1a\u751f\u6210\u4e00\u4e2aDocker\u5bb9\u5668\uff1b 4\uff09\u3001\u5bf9\u5bb9\u5668\u7684\u542f\u52a8\u505c\u6b62\u5c31\u662f\u5bf9\u8f6f\u4ef6\u7684\u542f\u52a8\u505c\u6b62\uff1b","title":"2\u3001\u6838\u5fc3\u6982\u5ff5"},{"location":"Java/SpringBoot/SpringBoot/#3docker","text":"","title":"3\u3001\u5b89\u88c5Docker"},{"location":"Java/SpringBoot/SpringBoot/#1linux","text":"\u200b 1\uff09\u3001VMWare\u3001VirtualBox\uff08\u5b89\u88c5\uff09\uff1b \u200b 2\uff09\u3001\u5bfc\u5165\u865a\u62df\u673a\u6587\u4ef6centos7-atguigu.ova\uff1b \u200b 3\uff09\u3001\u53cc\u51fb\u542f\u52a8linux\u865a\u62df\u673a;\u4f7f\u7528 root/ 123456\u767b\u9646 \u200b 4\uff09\u3001\u4f7f\u7528\u5ba2\u6237\u7aef\u8fde\u63a5linux\u670d\u52a1\u5668\u8fdb\u884c\u547d\u4ee4\u64cd\u4f5c\uff1b \u200b 5\uff09\u3001\u8bbe\u7f6e\u865a\u62df\u673a\u7f51\u7edc\uff1b \u200b \u6865\u63a5\u7f51\u7edc===\u9009\u597d\u7f51\u5361====\u63a5\u5165\u7f51\u7ebf\uff1b \u200b 6\uff09\u3001\u8bbe\u7f6e\u597d\u7f51\u7edc\u4ee5\u540e\u4f7f\u7528\u547d\u4ee4\u91cd\u542f\u865a\u62df\u673a\u7684\u7f51\u7edc service network restart \u200b 7\uff09\u3001\u67e5\u770blinux\u7684ip\u5730\u5740 ip addr \u200b 8\uff09\u3001\u4f7f\u7528\u5ba2\u6237\u7aef\u8fde\u63a5linux\uff1b","title":"1\uff09\u3001\u5b89\u88c5linux\u865a\u62df\u673a"},{"location":"Java/SpringBoot/SpringBoot/#2linuxdocker","text":"\u6b65\u9aa4\uff1a 1 \u3001\u68c0\u67e5\u5185\u6838\u7248\u672c\uff0c\u5fc5\u987b\u662f3.10\u53ca\u4ee5\u4e0a uname -r 2 \u3001\u5b89\u88c5docker yum install docker 3 \u3001\u8f93\u5165y\u786e\u8ba4\u5b89\u88c5 4 \u3001\u542f\u52a8docker [ root@localhost ~ ] # systemctl start docker [ root@localhost ~ ] # docker -v Docker version 1 .12.6, build 3e8e77d/1.12.6 5 \u3001\u5f00\u673a\u542f\u52a8docker [ root@localhost ~ ] # systemctl enable docker Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service. 6 \u3001\u505c\u6b62docker systemctl stop docker","title":"2\uff09\u3001\u5728linux\u865a\u62df\u673a\u4e0a\u5b89\u88c5docker"},{"location":"Java/SpringBoot/SpringBoot/#4docker","text":"","title":"4\u3001Docker\u5e38\u7528\u547d\u4ee4&amp;\u64cd\u4f5c"},{"location":"Java/SpringBoot/SpringBoot/#1_11","text":"\u64cd\u4f5c \u547d\u4ee4 \u8bf4\u660e \u68c0\u7d22 docker search \u5173\u952e\u5b57 eg\uff1adocker search redis \u6211\u4eec\u7ecf\u5e38\u53bbdocker hub\u4e0a\u68c0\u7d22\u955c\u50cf\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5982\u955c\u50cf\u7684TAG\u3002 \u62c9\u53d6 docker pull \u955c\u50cf\u540d:tag :tag\u662f\u53ef\u9009\u7684\uff0ctag\u8868\u793a\u6807\u7b7e\uff0c\u591a\u4e3a\u8f6f\u4ef6\u7684\u7248\u672c\uff0c\u9ed8\u8ba4\u662flatest \u5217\u8868 docker images \u67e5\u770b\u6240\u6709\u672c\u5730\u955c\u50cf \u5220\u9664 docker rmi image-id \u5220\u9664\u6307\u5b9a\u7684\u672c\u5730\u955c\u50cf https://hub.docker.com/","title":"1\uff09\u3001\u955c\u50cf\u64cd\u4f5c"},{"location":"Java/SpringBoot/SpringBoot/#2_11","text":"\u8f6f\u4ef6\u955c\u50cf\uff08QQ\u5b89\u88c5\u7a0b\u5e8f\uff09----\u8fd0\u884c\u955c\u50cf----\u4ea7\u751f\u4e00\u4e2a\u5bb9\u5668\uff08\u6b63\u5728\u8fd0\u884c\u7684\u8f6f\u4ef6\uff0c\u8fd0\u884c\u7684QQ\uff09\uff1b \u6b65\u9aa4\uff1a 1 \u3001\u641c\u7d22\u955c\u50cf [ root@localhost ~ ] # docker search tomcat 2 \u3001\u62c9\u53d6\u955c\u50cf [ root@localhost ~ ] # docker pull tomcat 3 \u3001\u6839\u636e\u955c\u50cf\u542f\u52a8\u5bb9\u5668 docker run --name mytomcat -d tomcat:latest 4 \u3001docker ps \u67e5\u770b\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668 5 \u3001 \u505c\u6b62\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668 docker stop \u5bb9\u5668\u7684id 6 \u3001\u67e5\u770b\u6240\u6709\u7684\u5bb9\u5668 docker ps -a 7 \u3001\u542f\u52a8\u5bb9\u5668 docker start \u5bb9\u5668id 8 \u3001\u5220\u9664\u4e00\u4e2a\u5bb9\u5668 docker rm \u5bb9\u5668id 9 \u3001\u542f\u52a8\u4e00\u4e2a\u505a\u4e86\u7aef\u53e3\u6620\u5c04\u7684tomcat [ root@localhost ~ ] # docker run -d -p 8888:8080 tomcat -d\uff1a\u540e\u53f0\u8fd0\u884c -p: \u5c06\u4e3b\u673a\u7684\u7aef\u53e3\u6620\u5c04\u5230\u5bb9\u5668\u7684\u4e00\u4e2a\u7aef\u53e3 \u4e3b\u673a\u7aef\u53e3:\u5bb9\u5668\u5185\u90e8\u7684\u7aef\u53e3 10 \u3001\u4e3a\u4e86\u6f14\u793a\u7b80\u5355\u5173\u95ed\u4e86linux\u7684\u9632\u706b\u5899 service firewalld status \uff1b\u67e5\u770b\u9632\u706b\u5899\u72b6\u6001 service firewalld stop\uff1a\u5173\u95ed\u9632\u706b\u5899 11 \u3001\u67e5\u770b\u5bb9\u5668\u7684\u65e5\u5fd7 docker logs container-name/container-id \u66f4\u591a\u547d\u4ee4\u53c2\u770b https://docs.docker.com/engine/reference/commandline/docker/ \u53ef\u4ee5\u53c2\u8003\u6bcf\u4e00\u4e2a\u955c\u50cf\u7684\u6587\u6863","title":"2\uff09\u3001\u5bb9\u5668\u64cd\u4f5c"},{"location":"Java/SpringBoot/SpringBoot/#3mysql","text":"docker pull mysql \u9519\u8bef\u7684\u542f\u52a8 [ root@localhost ~ ] # docker run --name mysql01 -d mysql 42f09819908bb72dd99ae19e792e0a5d03c48638421fa64cce5f8ba0f40f5846 mysql\u9000\u51fa\u4e86 [ root@localhost ~ ] # docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 42f09819908b mysql \"docker-entrypoint.sh\" 34 seconds ago Exited ( 1 ) 33 seconds ago mysql01 538bde63e500 tomcat \"catalina.sh run\" About an hour ago Exited ( 143 ) About an hour ago compassionate_ goldstine c4f1ac60b3fc tomcat \"catalina.sh run\" About an hour ago Exited ( 143 ) About an hour ago lonely_fermi 81ec743a5271 tomcat \"catalina.sh run\" About an hour ago Exited ( 143 ) About an hour ago sick_ramanujan //\u9519\u8bef\u65e5\u5fd7 [ root@localhost ~ ] # docker logs 42f09819908b error: database is uninitialized and password option is not specified You need to specify one of MYSQL_ROOT_PASSWORD, MYSQL_ALLOW_EMPTY_PASSWORD and MYSQL_RANDOM_ROOT_PASSWORD\uff1b\u8fd9\u4e2a\u4e09\u4e2a\u53c2\u6570\u5fc5\u987b\u6307\u5b9a\u4e00\u4e2a \u6b63\u786e\u7684\u542f\u52a8 [ root@localhost ~ ] # docker run --name mysql01 -e MYSQL_ROOT_PASSWORD=123456 -d mysql b874c56bec49fb43024b3805ab51e9097da779f2f572c22c695305dedd684c5f [ root@localhost ~ ] # docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES b874c56bec49 mysql \"docker-entrypoint.sh\" 4 seconds ago Up 3 seconds 3306 /tcp mysql01 \u505a\u4e86\u7aef\u53e3\u6620\u5c04 [ root@localhost ~ ] # docker run -p 3306:3306 --name mysql02 -e MYSQL_ROOT_PASSWORD=123456 -d mysql ad10e4bc5c6a0f61cbad43898de71d366117d120e39db651844c0e73863b9434 [ root@localhost ~ ] # docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES ad10e4bc5c6a mysql \"docker-entrypoint.sh\" 4 seconds ago Up 2 seconds 0 .0.0.0:3306->3306/tcp mysql02 \u51e0\u4e2a\u5176\u4ed6\u7684\u9ad8\u7ea7\u64cd\u4f5c docker run --name mysql03 -v /conf/mysql:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag \u628a\u4e3b\u673a\u7684/conf/mysql\u6587\u4ef6\u5939\u6302\u8f7d\u5230 mysqldocker\u5bb9\u5668\u7684/etc/mysql/conf.d\u6587\u4ef6\u5939\u91cc\u9762 \u6539mysql\u7684\u914d\u7f6e\u6587\u4ef6\u5c31\u53ea\u9700\u8981\u628amysql\u914d\u7f6e\u6587\u4ef6\u653e\u5728\u81ea\u5b9a\u4e49\u7684\u6587\u4ef6\u5939\u4e0b\uff08/conf/mysql\uff09 docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci \u6307\u5b9amysql\u7684\u4e00\u4e9b\u914d\u7f6e\u53c2\u6570","title":"3\uff09\u3001\u5b89\u88c5MySQL\u793a\u4f8b"},{"location":"Java/SpringBoot/SpringBoot/#springboot","text":"","title":"\u516d\u3001SpringBoot\u4e0e\u6570\u636e\u8bbf\u95ee"},{"location":"Java/SpringBoot/SpringBoot/#1jdbc","text":"<dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-jdbc </artifactId> </dependency> <dependency> <groupId> mysql </groupId> <artifactId> mysql-connector-java </artifactId> <scope> runtime </scope> </dependency> spring : datasource : username : root password : 123456 url : jdbc:mysql://192.168.15.22:3306/jdbc driver-class-name : com.mysql.jdbc.Driver \u6548\u679c\uff1a \u200b \u9ed8\u8ba4\u662f\u7528org.apache.tomcat.jdbc.pool.DataSource\u4f5c\u4e3a\u6570\u636e\u6e90\uff1b \u200b \u6570\u636e\u6e90\u7684\u76f8\u5173\u914d\u7f6e\u90fd\u5728DataSourceProperties\u91cc\u9762\uff1b \u81ea\u52a8\u914d\u7f6e\u539f\u7406\uff1a org.springframework.boot.autoconfigure.jdbc\uff1a 1\u3001\u53c2\u8003DataSourceConfiguration\uff0c\u6839\u636e\u914d\u7f6e\u521b\u5efa\u6570\u636e\u6e90\uff0c\u9ed8\u8ba4\u4f7f\u7528Tomcat\u8fde\u63a5\u6c60\uff1b\u53ef\u4ee5\u4f7f\u7528spring.datasource.type\u6307\u5b9a\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u6e90\u7c7b\u578b\uff1b 2\u3001SpringBoot\u9ed8\u8ba4\u53ef\u4ee5\u652f\u6301\uff1b org.apache.tomcat.jdbc.pool.DataSource\u3001HikariDataSource\u3001BasicDataSource\u3001 3\u3001\u81ea\u5b9a\u4e49\u6570\u636e\u6e90\u7c7b\u578b /** * Generic DataSource configuration. */ @ConditionalOnMissingBean ( DataSource . class ) @ConditionalOnProperty ( name = \"spring.datasource.type\" ) static class Generic { @Bean public DataSource dataSource ( DataSourceProperties properties ) { //\u4f7f\u7528DataSourceBuilder\u521b\u5efa\u6570\u636e\u6e90\uff0c\u5229\u7528\u53cd\u5c04\u521b\u5efa\u54cd\u5e94type\u7684\u6570\u636e\u6e90\uff0c\u5e76\u4e14\u7ed1\u5b9a\u76f8\u5173\u5c5e\u6027 return properties . initializeDataSourceBuilder (). build (); } } 4\u3001 DataSourceInitializer\uff1aApplicationListener \uff1b \u200b \u4f5c\u7528\uff1a \u200b 1\uff09\u3001runSchemaScripts();\u8fd0\u884c\u5efa\u8868\u8bed\u53e5\uff1b \u200b 2\uff09\u3001runDataScripts();\u8fd0\u884c\u63d2\u5165\u6570\u636e\u7684sql\u8bed\u53e5\uff1b \u9ed8\u8ba4\u53ea\u9700\u8981\u5c06\u6587\u4ef6\u547d\u540d\u4e3a\uff1a schema-*.sql\u3001data-*.sql \u9ed8\u8ba4\u89c4\u5219\uff1aschema.sql\uff0cschema-all.sql\uff1b \u53ef\u4ee5\u4f7f\u7528 schema : - classpath : department.sql \u6307\u5b9a\u4f4d\u7f6e 5\u3001\u64cd\u4f5c\u6570\u636e\u5e93\uff1a\u81ea\u52a8\u914d\u7f6e\u4e86JdbcTemplate\u64cd\u4f5c\u6570\u636e\u5e93","title":"1\u3001JDBC"},{"location":"Java/SpringBoot/SpringBoot/#2druid","text":"\u5bfc\u5165druid\u6570\u636e\u6e90 @Configuration public class DruidConfig { @ConfigurationProperties ( prefix = \"spring.datasource\" ) @Bean public DataSource druid (){ return new DruidDataSource (); } //\u914d\u7f6eDruid\u7684\u76d1\u63a7 //1\u3001\u914d\u7f6e\u4e00\u4e2a\u7ba1\u7406\u540e\u53f0\u7684Servlet @Bean public ServletRegistrationBean statViewServlet (){ ServletRegistrationBean bean = new ServletRegistrationBean ( new StatViewServlet (), \"/druid/*\" ); Map < String , String > initParams = new HashMap <> (); initParams . put ( \"loginUsername\" , \"admin\" ); initParams . put ( \"loginPassword\" , \"123456\" ); initParams . put ( \"allow\" , \"\" ); //\u9ed8\u8ba4\u5c31\u662f\u5141\u8bb8\u6240\u6709\u8bbf\u95ee initParams . put ( \"deny\" , \"192.168.15.21\" ); bean . setInitParameters ( initParams ); return bean ; } //2\u3001\u914d\u7f6e\u4e00\u4e2aweb\u76d1\u63a7\u7684filter @Bean public FilterRegistrationBean webStatFilter (){ FilterRegistrationBean bean = new FilterRegistrationBean (); bean . setFilter ( new WebStatFilter ()); Map < String , String > initParams = new HashMap <> (); initParams . put ( \"exclusions\" , \"*.js,*.css,/druid/*\" ); bean . setInitParameters ( initParams ); bean . setUrlPatterns ( Arrays . asList ( \"/*\" )); return bean ; } }","title":"2\u3001\u6574\u5408Druid\u6570\u636e\u6e90"},{"location":"Java/SpringBoot/SpringBoot/#3mybatis","text":"<dependency> <groupId> org.mybatis.spring.boot </groupId> <artifactId> mybatis-spring-boot-starter </artifactId> <version> 1.3.1 </version> </dependency> \u6b65\u9aa4\uff1a \u200b 1\uff09\u3001\u914d\u7f6e\u6570\u636e\u6e90\u76f8\u5173\u5c5e\u6027\uff08\u89c1\u4e0a\u4e00\u8282Druid\uff09 \u200b 2\uff09\u3001\u7ed9\u6570\u636e\u5e93\u5efa\u8868 \u200b 3\uff09\u3001\u521b\u5efaJavaBean","title":"3\u3001\u6574\u5408MyBatis"},{"location":"Java/SpringBoot/SpringBoot/#4_3","text":"//\u6307\u5b9a\u8fd9\u662f\u4e00\u4e2a\u64cd\u4f5c\u6570\u636e\u5e93\u7684mapper @Mapper public interface DepartmentMapper { @Select ( \"select * from department where id=#{id}\" ) public Department getDeptById ( Integer id ); @Delete ( \"delete from department where id=#{id}\" ) public int deleteDeptById ( Integer id ); @Options ( useGeneratedKeys = true , keyProperty = \"id\" ) @Insert ( \"insert into department(departmentName) values(#{departmentName})\" ) public int insertDept ( Department department ); @Update ( \"update department set departmentName=#{departmentName} where id=#{id}\" ) public int updateDept ( Department department ); } \u95ee\u9898\uff1a \u81ea\u5b9a\u4e49MyBatis\u7684\u914d\u7f6e\u89c4\u5219\uff1b\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u4e00\u4e2aConfigurationCustomizer\uff1b @org.springframework.context.annotation.Configuration public class MyBatisConfig { @Bean public ConfigurationCustomizer configurationCustomizer (){ return new ConfigurationCustomizer (){ @Override public void customize ( Configuration configuration ) { configuration . setMapUnderscoreToCamelCase ( true ); } }; } } \u4f7f\u7528MapperScan\u6279\u91cf\u626b\u63cf\u6240\u6709\u7684Mapper\u63a5\u53e3 \uff1b @MapperScan ( value = \"com.atguigu.springboot.mapper\" ) @SpringBootApplication public class SpringBoot06DataMybatisApplication { public static void main ( String [] args ) { SpringApplication . run ( SpringBoot06DataMybatisApplication . class , args ); } }","title":"4\uff09\u3001\u6ce8\u89e3\u7248"},{"location":"Java/SpringBoot/SpringBoot/#5_2","text":"mybatis : config-location : classpath:mybatis/mybatis-config.xml \u6307\u5b9a\u5168\u5c40\u914d\u7f6e\u6587\u4ef6\u7684\u4f4d\u7f6e mapper-locations : classpath:mybatis/mapper/*.xml \u6307\u5b9asql\u6620\u5c04\u6587\u4ef6\u7684\u4f4d\u7f6e \u66f4\u591a\u4f7f\u7528\u53c2\u7167 http://www.mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/","title":"5\uff09\u3001\u914d\u7f6e\u6587\u4ef6\u7248"},{"location":"Java/SpringBoot/SpringBoot/#4springdata-jpa","text":"","title":"4\u3001\u6574\u5408SpringData JPA"},{"location":"Java/SpringBoot/SpringBoot/#1springdata","text":"","title":"1\uff09\u3001SpringData\u7b80\u4ecb"},{"location":"Java/SpringBoot/SpringBoot/#2springdata-jpa","text":"JPA:ORM\uff08Object Relational Mapping\uff09\uff1b 1\uff09\u3001\u7f16\u5199\u4e00\u4e2a\u5b9e\u4f53\u7c7b\uff08bean\uff09\u548c\u6570\u636e\u8868\u8fdb\u884c\u6620\u5c04\uff0c\u5e76\u4e14\u914d\u7f6e\u597d\u6620\u5c04\u5173\u7cfb\uff1b //\u4f7f\u7528JPA\u6ce8\u89e3\u914d\u7f6e\u6620\u5c04\u5173\u7cfb @Entity //\u544a\u8bc9JPA\u8fd9\u662f\u4e00\u4e2a\u5b9e\u4f53\u7c7b\uff08\u548c\u6570\u636e\u8868\u6620\u5c04\u7684\u7c7b\uff09 @Table ( name = \"tbl_user\" ) //@Table\u6765\u6307\u5b9a\u548c\u54ea\u4e2a\u6570\u636e\u8868\u5bf9\u5e94;\u5982\u679c\u7701\u7565\u9ed8\u8ba4\u8868\u540d\u5c31\u662fuser\uff1b public class User { @Id //\u8fd9\u662f\u4e00\u4e2a\u4e3b\u952e @GeneratedValue ( strategy = GenerationType . IDENTITY ) //\u81ea\u589e\u4e3b\u952e private Integer id ; @Column ( name = \"last_name\" , length = 50 ) //\u8fd9\u662f\u548c\u6570\u636e\u8868\u5bf9\u5e94\u7684\u4e00\u4e2a\u5217 private String lastName ; @Column //\u7701\u7565\u9ed8\u8ba4\u5217\u540d\u5c31\u662f\u5c5e\u6027\u540d private String email ; 2\uff09\u3001\u7f16\u5199\u4e00\u4e2aDao\u63a5\u53e3\u6765\u64cd\u4f5c\u5b9e\u4f53\u7c7b\u5bf9\u5e94\u7684\u6570\u636e\u8868\uff08Repository\uff09 //\u7ee7\u627fJpaRepository\u6765\u5b8c\u6210\u5bf9\u6570\u636e\u5e93\u7684\u64cd\u4f5c public interface UserRepository extends JpaRepository < User , Integer > { } 3\uff09\u3001\u57fa\u672c\u7684\u914d\u7f6eJpaProperties spring : jpa : hibernate : # \u66f4\u65b0\u6216\u8005\u521b\u5efa\u6570\u636e\u8868\u7ed3\u6784 ddl-auto : update # \u63a7\u5236\u53f0\u663e\u793aSQL show-sql : true","title":"2\uff09\u3001\u6574\u5408SpringData JPA"},{"location":"Java/SpringBoot/SpringBoot/#_6","text":"\u51e0\u4e2a\u91cd\u8981\u7684\u4e8b\u4ef6\u56de\u8c03\u673a\u5236 \u914d\u7f6e\u5728META-INF/spring.factories ApplicationContextInitializer SpringApplicationRunListener \u53ea\u9700\u8981\u653e\u5728ioc\u5bb9\u5668\u4e2d ApplicationRunner CommandLineRunner \u542f\u52a8\u6d41\u7a0b\uff1a","title":"\u4e03\u3001\u542f\u52a8\u914d\u7f6e\u539f\u7406"},{"location":"Java/SpringBoot/SpringBoot/#1springapplication","text":"initialize ( sources ); private void initialize ( Object [] sources ) { //\u4fdd\u5b58\u4e3b\u914d\u7f6e\u7c7b if ( sources != null && sources . length > 0 ) { this . sources . addAll ( Arrays . asList ( sources )); } //\u5224\u65ad\u5f53\u524d\u662f\u5426\u4e00\u4e2aweb\u5e94\u7528 this . webEnvironment = deduceWebEnvironment (); //\u4ece\u7c7b\u8def\u5f84\u4e0b\u627e\u5230META-INF/spring.factories\u914d\u7f6e\u7684\u6240\u6709ApplicationContextInitializer\uff1b\u7136\u540e\u4fdd\u5b58\u8d77\u6765 setInitializers (( Collection ) getSpringFactoriesInstances ( ApplicationContextInitializer . class )); //\u4ece\u7c7b\u8def\u5f84\u4e0b\u627e\u5230ETA-INF/spring.factories\u914d\u7f6e\u7684\u6240\u6709ApplicationListener setListeners (( Collection ) getSpringFactoriesInstances ( ApplicationListener . class )); //\u4ece\u591a\u4e2a\u914d\u7f6e\u7c7b\u4e2d\u627e\u5230\u6709main\u65b9\u6cd5\u7684\u4e3b\u914d\u7f6e\u7c7b this . mainApplicationClass = deduceMainApplicationClass (); }","title":"1\u3001\u521b\u5efaSpringApplication\u5bf9\u8c61"},{"location":"Java/SpringBoot/SpringBoot/#2run","text":"public ConfigurableApplicationContext run ( String ... args ) { StopWatch stopWatch = new StopWatch (); stopWatch . start (); ConfigurableApplicationContext context = null ; FailureAnalyzers analyzers = null ; configureHeadlessProperty (); //\u83b7\u53d6SpringApplicationRunListeners\uff1b\u4ece\u7c7b\u8def\u5f84\u4e0bMETA-INF/spring.factories SpringApplicationRunListeners listeners = getRunListeners ( args ); //\u56de\u8c03\u6240\u6709\u7684\u83b7\u53d6SpringApplicationRunListener.starting()\u65b9\u6cd5 listeners . starting (); try { //\u5c01\u88c5\u547d\u4ee4\u884c\u53c2\u6570 ApplicationArguments applicationArguments = new DefaultApplicationArguments ( args ); //\u51c6\u5907\u73af\u5883 ConfigurableEnvironment environment = prepareEnvironment ( listeners , applicationArguments ); //\u521b\u5efa\u73af\u5883\u5b8c\u6210\u540e\u56de\u8c03SpringApplicationRunListener.environmentPrepared()\uff1b\u8868\u793a\u73af\u5883\u51c6\u5907\u5b8c\u6210 Banner printedBanner = printBanner ( environment ); //\u521b\u5efaApplicationContext\uff1b\u51b3\u5b9a\u521b\u5efaweb\u7684ioc\u8fd8\u662f\u666e\u901a\u7684ioc context = createApplicationContext (); analyzers = new FailureAnalyzers ( context ); //\u51c6\u5907\u4e0a\u4e0b\u6587\u73af\u5883;\u5c06environment\u4fdd\u5b58\u5230ioc\u4e2d\uff1b\u800c\u4e14applyInitializers()\uff1b //applyInitializers()\uff1a\u56de\u8c03\u4e4b\u524d\u4fdd\u5b58\u7684\u6240\u6709\u7684ApplicationContextInitializer\u7684initialize\u65b9\u6cd5 //\u56de\u8c03\u6240\u6709\u7684SpringApplicationRunListener\u7684contextPrepared()\uff1b // prepareContext ( context , environment , listeners , applicationArguments , printedBanner ); //prepareContext\u8fd0\u884c\u5b8c\u6210\u4ee5\u540e\u56de\u8c03\u6240\u6709\u7684SpringApplicationRunListener\u7684contextLoaded\uff08\uff09\uff1b //s\u5237\u65b0\u5bb9\u5668\uff1bioc\u5bb9\u5668\u521d\u59cb\u5316\uff08\u5982\u679c\u662fweb\u5e94\u7528\u8fd8\u4f1a\u521b\u5efa\u5d4c\u5165\u5f0f\u7684Tomcat\uff09\uff1bSpring\u6ce8\u89e3\u7248 //\u626b\u63cf\uff0c\u521b\u5efa\uff0c\u52a0\u8f7d\u6240\u6709\u7ec4\u4ef6\u7684\u5730\u65b9\uff1b\uff08\u914d\u7f6e\u7c7b\uff0c\u7ec4\u4ef6\uff0c\u81ea\u52a8\u914d\u7f6e\uff09 refreshContext ( context ); //\u4eceioc\u5bb9\u5668\u4e2d\u83b7\u53d6\u6240\u6709\u7684ApplicationRunner\u548cCommandLineRunner\u8fdb\u884c\u56de\u8c03 //ApplicationRunner\u5148\u56de\u8c03\uff0cCommandLineRunner\u518d\u56de\u8c03 afterRefresh ( context , applicationArguments ); //\u6240\u6709\u7684SpringApplicationRunListener\u56de\u8c03finished\u65b9\u6cd5 listeners . finished ( context , null ); stopWatch . stop (); if ( this . logStartupInfo ) { new StartupInfoLogger ( this . mainApplicationClass ) . logStarted ( getApplicationLog (), stopWatch ); } //\u6574\u4e2aSpringBoot\u5e94\u7528\u542f\u52a8\u5b8c\u6210\u4ee5\u540e\u8fd4\u56de\u542f\u52a8\u7684ioc\u5bb9\u5668\uff1b return context ; } catch ( Throwable ex ) { handleRunFailure ( context , listeners , analyzers , ex ); throw new IllegalStateException ( ex ); } }","title":"2\u3001\u8fd0\u884crun\u65b9\u6cd5"},{"location":"Java/SpringBoot/SpringBoot/#3_7","text":"\u914d\u7f6e\u5728META-INF/spring.factories ApplicationContextInitializer public class HelloApplicationContextInitializer implements ApplicationContextInitializer < ConfigurableApplicationContext > { @Override public void initialize ( ConfigurableApplicationContext applicationContext ) { System . out . println ( \"ApplicationContextInitializer...initialize...\" + applicationContext ); } } SpringApplicationRunListener public class HelloSpringApplicationRunListener implements SpringApplicationRunListener { //\u5fc5\u987b\u6709\u7684\u6784\u9020\u5668 public HelloSpringApplicationRunListener ( SpringApplication application , String [] args ){ } @Override public void starting () { System . out . println ( \"SpringApplicationRunListener...starting...\" ); } @Override public void environmentPrepared ( ConfigurableEnvironment environment ) { Object o = environment . getSystemProperties (). get ( \"os.name\" ); System . out . println ( \"SpringApplicationRunListener...environmentPrepared..\" + o ); } @Override public void contextPrepared ( ConfigurableApplicationContext context ) { System . out . println ( \"SpringApplicationRunListener...contextPrepared...\" ); } @Override public void contextLoaded ( ConfigurableApplicationContext context ) { System . out . println ( \"SpringApplicationRunListener...contextLoaded...\" ); } @Override public void finished ( ConfigurableApplicationContext context , Throwable exception ) { System . out . println ( \"SpringApplicationRunListener...finished...\" ); } } \u914d\u7f6e\uff08META-INF/spring.factories\uff09 org.springframework.context.ApplicationContextInitializer = \\ com.atguigu.springboot.listener.HelloApplicationContextInitializer org.springframework.boot.SpringApplicationRunListener = \\ com.atguigu.springboot.listener.HelloSpringApplicationRunListener \u53ea\u9700\u8981\u653e\u5728ioc\u5bb9\u5668\u4e2d ApplicationRunner @Component public class HelloApplicationRunner implements ApplicationRunner { @Override public void run ( ApplicationArguments args ) throws Exception { System . out . println ( \"ApplicationRunner...run....\" ); } } CommandLineRunner @Component public class HelloCommandLineRunner implements CommandLineRunner { @Override public void run ( String ... args ) throws Exception { System . out . println ( \"CommandLineRunner...run...\" + Arrays . asList ( args )); } }","title":"3\u3001\u4e8b\u4ef6\u76d1\u542c\u673a\u5236"},{"location":"Java/SpringBoot/SpringBoot/#starter","text":"starter\uff1a \u200b 1\u3001\u8fd9\u4e2a\u573a\u666f\u9700\u8981\u4f7f\u7528\u5230\u7684\u4f9d\u8d56\u662f\u4ec0\u4e48\uff1f \u200b 2\u3001\u5982\u4f55\u7f16\u5199\u81ea\u52a8\u914d\u7f6e @Configuration //\u6307\u5b9a\u8fd9\u4e2a\u7c7b\u662f\u4e00\u4e2a\u914d\u7f6e\u7c7b @ConditionalOnXXX //\u5728\u6307\u5b9a\u6761\u4ef6\u6210\u7acb\u7684\u60c5\u51b5\u4e0b\u81ea\u52a8\u914d\u7f6e\u7c7b\u751f\u6548 @AutoConfigureAfter //\u6307\u5b9a\u81ea\u52a8\u914d\u7f6e\u7c7b\u7684\u987a\u5e8f @Bean //\u7ed9\u5bb9\u5668\u4e2d\u6dfb\u52a0\u7ec4\u4ef6 @ConfigurationPropertie\u7ed3\u5408\u76f8\u5173xxxProperties\u7c7b\u6765\u7ed1\u5b9a\u76f8\u5173\u7684\u914d\u7f6e @EnableConfigurationProperties //\u8ba9xxxProperties\u751f\u6548\u52a0\u5165\u5230\u5bb9\u5668\u4e2d \u81ea\u52a8\u914d\u7f6e\u7c7b\u8981\u80fd\u52a0\u8f7d \u5c06\u9700\u8981\u542f\u52a8\u5c31\u52a0\u8f7d\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b \uff0c \u914d\u7f6e\u5728META - INF / spring . factories org . springframework . boot . autoconfigure . EnableAutoConfiguration = \\ org . springframework . boot . autoconfigure . admin . SpringApplicationAdminJmxAutoConfiguration , \\ org . springframework . boot . autoconfigure . aop . AopAutoConfiguration , \\ \u200b 3\u3001\u6a21\u5f0f\uff1a \u542f\u52a8\u5668\u53ea\u7528\u6765\u505a\u4f9d\u8d56\u5bfc\u5165\uff1b \u4e13\u95e8\u6765\u5199\u4e00\u4e2a\u81ea\u52a8\u914d\u7f6e\u6a21\u5757\uff1b \u542f\u52a8\u5668\u4f9d\u8d56\u81ea\u52a8\u914d\u7f6e\uff1b\u522b\u4eba\u53ea\u9700\u8981\u5f15\u5165\u542f\u52a8\u5668\uff08starter\uff09 mybatis-spring-boot-starter\uff1b\u81ea\u5b9a\u4e49\u542f\u52a8\u5668\u540d-spring-boot-starter \u6b65\u9aa4\uff1a 1\uff09\u3001\u542f\u52a8\u5668\u6a21\u5757 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> com.atguigu.starter </groupId> <artifactId> atguigu-spring-boot-starter </artifactId> <version> 1.0-SNAPSHOT </version> <!--\u542f\u52a8\u5668--> <dependencies> <!--\u5f15\u5165\u81ea\u52a8\u914d\u7f6e\u6a21\u5757--> <dependency> <groupId> com.atguigu.starter </groupId> <artifactId> atguigu-spring-boot-starter-autoconfigurer </artifactId> <version> 0.0.1-SNAPSHOT </version> </dependency> </dependencies> </project> 2\uff09\u3001\u81ea\u52a8\u914d\u7f6e\u6a21\u5757 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <modelVersion> 4.0.0 </modelVersion> <groupId> com.atguigu.starter </groupId> <artifactId> atguigu-spring-boot-starter-autoconfigurer </artifactId> <version> 0.0.1-SNAPSHOT </version> <packaging> jar </packaging> <name> atguigu-spring-boot-starter-autoconfigurer </name> <description> Demo project for Spring Boot </description> <parent> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-parent </artifactId> <version> 1.5.10.RELEASE </version> <relativePath/> <!-- lookup parent from repository --> </parent> <properties> <project.build.sourceEncoding> UTF-8 </project.build.sourceEncoding> <project.reporting.outputEncoding> UTF-8 </project.reporting.outputEncoding> <java.version> 1.8 </java.version> </properties> <dependencies> <!--\u5f15\u5165spring-boot-starter\uff1b\u6240\u6709starter\u7684\u57fa\u672c\u914d\u7f6e--> <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter </artifactId> </dependency> </dependencies> </project> package com.atguigu.starter ; import org.springframework.boot.context.properties.ConfigurationProperties ; @ConfigurationProperties ( prefix = \"atguigu.hello\" ) public class HelloProperties { private String prefix ; private String suffix ; public String getPrefix () { return prefix ; } public void setPrefix ( String prefix ) { this . prefix = prefix ; } public String getSuffix () { return suffix ; } public void setSuffix ( String suffix ) { this . suffix = suffix ; } } package com.atguigu.starter ; public class HelloService { HelloProperties helloProperties ; public HelloProperties getHelloProperties () { return helloProperties ; } public void setHelloProperties ( HelloProperties helloProperties ) { this . helloProperties = helloProperties ; } public String sayHellAtguigu ( String name ){ return helloProperties . getPrefix () + \"-\" + name + helloProperties . getSuffix (); } } package com.atguigu.starter ; import org.springframework.beans.factory.annotation.Autowired ; import org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication ; import org.springframework.boot.context.properties.EnableConfigurationProperties ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; @Configuration @ConditionalOnWebApplication //web\u5e94\u7528\u624d\u751f\u6548 @EnableConfigurationProperties ( HelloProperties . class ) public class HelloServiceAutoConfiguration { @Autowired HelloProperties helloProperties ; @Bean public HelloService helloService (){ HelloService service = new HelloService (); service . setHelloProperties ( helloProperties ); return service ; } }","title":"\u516b\u3001\u81ea\u5b9a\u4e49starter"},{"location":"Java/SpringBoot/SpringBoot/#springboot_1","text":"https://github.com/spring-projects/spring-boot/tree/master/spring-boot-samples","title":"\u66f4\u591aSpringBoot\u6574\u5408\u793a\u4f8b"},{"location":"Java/SpringMVC/SpringMVCNotes/","text":"\u4e00\u3001SpringMVC\u7b80\u4ecb 1\u3001\u4ec0\u4e48\u662fMVC 2\u3001\u4ec0\u4e48\u662fSpringMVC 3\u3001SpringMVC\u7684\u7279\u70b9 \u4e8c\u3001HelloWorld 1\u3001\u5f00\u53d1\u73af\u5883 2\u3001\u521b\u5efamaven\u5de5\u7a0b a>\u6dfb\u52a0web\u6a21\u5757 b>\u6253\u5305\u65b9\u5f0f\uff1awar c>\u5f15\u5165\u4f9d\u8d56 3\u3001\u914d\u7f6eweb.xml a>\u9ed8\u8ba4\u914d\u7f6e\u65b9\u5f0f b>\u6269\u5c55\u914d\u7f6e\u65b9\u5f0f 4\u3001\u521b\u5efa\u8bf7\u6c42\u63a7\u5236\u5668 5\u3001\u521b\u5efaspringMVC\u7684\u914d\u7f6e\u6587\u4ef6 6\u3001\u6d4b\u8bd5HelloWorld a>\u5b9e\u73b0\u5bf9\u9996\u9875\u7684\u8bbf\u95ee b>\u901a\u8fc7\u8d85\u94fe\u63a5\u8df3\u8f6c\u5230\u6307\u5b9a\u9875\u9762 7\u3001\u603b\u7ed3 \u4e09\u3001@RequestMapping\u6ce8\u89e3 1\u3001@RequestMapping\u6ce8\u89e3\u7684\u529f\u80fd 2\u3001@RequestMapping\u6ce8\u89e3\u7684\u4f4d\u7f6e 3\u3001@RequestMapping\u6ce8\u89e3\u7684value\u5c5e\u6027 4\u3001@RequestMapping\u6ce8\u89e3\u7684method\u5c5e\u6027 5\u3001@RequestMapping\u6ce8\u89e3\u7684params\u5c5e\u6027\uff08\u4e86\u89e3\uff09 6\u3001@RequestMapping\u6ce8\u89e3\u7684headers\u5c5e\u6027\uff08\u4e86\u89e3\uff09 7\u3001SpringMVC\u652f\u6301ant\u98ce\u683c\u7684\u8def\u5f84 8\u3001SpringMVC\u652f\u6301\u8def\u5f84\u4e2d\u7684\u5360\u4f4d\u7b26\uff08\u91cd\u70b9\uff09 \u56db\u3001SpringMVC\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570 1\u3001\u901a\u8fc7ServletAPI\u83b7\u53d6 2\u3001\u901a\u8fc7\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570 3\u3001@RequestParam 4\u3001@RequestHeader 5\u3001@CookieValue 6\u3001\u901a\u8fc7POJO\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570 7\u3001\u89e3\u51b3\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570\u7684\u4e71\u7801\u95ee\u9898 \u4e94\u3001\u57df\u5bf9\u8c61\u5171\u4eab\u6570\u636e 1\u3001\u4f7f\u7528ServletAPI\u5411request\u57df\u5bf9\u8c61\u5171\u4eab\u6570\u636e 2\u3001\u4f7f\u7528ModelAndView\u5411request\u57df\u5bf9\u8c61\u5171\u4eab\u6570\u636e 3\u3001\u4f7f\u7528Model\u5411request\u57df\u5bf9\u8c61\u5171\u4eab\u6570\u636e 4\u3001\u4f7f\u7528map\u5411request\u57df\u5bf9\u8c61\u5171\u4eab\u6570\u636e 5\u3001\u4f7f\u7528ModelMap\u5411request\u57df\u5bf9\u8c61\u5171\u4eab\u6570\u636e 6\u3001Model\u3001ModelMap\u3001Map\u7684\u5173\u7cfb 7\u3001\u5411session\u57df\u5171\u4eab\u6570\u636e 8\u3001\u5411application\u57df\u5171\u4eab\u6570\u636e \u516d\u3001SpringMVC\u7684\u89c6\u56fe 1\u3001ThymeleafView 2\u3001\u8f6c\u53d1\u89c6\u56fe 3\u3001\u91cd\u5b9a\u5411\u89c6\u56fe 4\u3001\u89c6\u56fe\u63a7\u5236\u5668view-controller \u4e03\u3001RESTful 1\u3001RESTful\u7b80\u4ecb a>\u8d44\u6e90 b>\u8d44\u6e90\u7684\u8868\u8ff0 c>\u72b6\u6001\u8f6c\u79fb 2\u3001RESTful\u7684\u5b9e\u73b0 3\u3001HiddenHttpMethodFilter \u516b\u3001RESTful\u6848\u4f8b 1\u3001\u51c6\u5907\u5de5\u4f5c 2\u3001\u529f\u80fd\u6e05\u5355 3\u3001\u5177\u4f53\u529f\u80fd\uff1a\u8bbf\u95ee\u9996\u9875 a>\u914d\u7f6eview-controller b>\u521b\u5efa\u9875\u9762 4\u3001\u5177\u4f53\u529f\u80fd\uff1a\u67e5\u8be2\u6240\u6709\u5458\u5de5\u6570\u636e a>\u63a7\u5236\u5668\u65b9\u6cd5 b>\u521b\u5efaemployee_list.html 5\u3001\u5177\u4f53\u529f\u80fd\uff1a\u5220\u9664 a>\u521b\u5efa\u5904\u7406delete\u8bf7\u6c42\u65b9\u5f0f\u7684\u8868\u5355 b>\u5220\u9664\u8d85\u94fe\u63a5\u7ed1\u5b9a\u70b9\u51fb\u4e8b\u4ef6 c>\u63a7\u5236\u5668\u65b9\u6cd5 6\u3001\u5177\u4f53\u529f\u80fd\uff1a\u8df3\u8f6c\u5230\u6dfb\u52a0\u6570\u636e\u9875\u9762 a>\u914d\u7f6eview-controller b>\u521b\u5efaemployee_add.html 7\u3001\u5177\u4f53\u529f\u80fd\uff1a\u6267\u884c\u4fdd\u5b58 a>\u63a7\u5236\u5668\u65b9\u6cd5 8\u3001\u5177\u4f53\u529f\u80fd\uff1a\u8df3\u8f6c\u5230\u66f4\u65b0\u6570\u636e\u9875\u9762 a>\u4fee\u6539\u8d85\u94fe\u63a5 b>\u63a7\u5236\u5668\u65b9\u6cd5 c>\u521b\u5efaemployee_update.html 9\u3001\u5177\u4f53\u529f\u80fd\uff1a\u6267\u884c\u66f4\u65b0 a>\u63a7\u5236\u5668\u65b9\u6cd5 \u516b\u3001HttpMessageConverter 1\u3001@RequestBody 2\u3001RequestEntity 3\u3001@ResponseBody 4\u3001SpringMVC\u5904\u7406json 5\u3001SpringMVC\u5904\u7406ajax 6\u3001@RestController\u6ce8\u89e3 7\u3001ResponseEntity \u4e5d\u3001\u6587\u4ef6\u4e0a\u4f20\u548c\u4e0b\u8f7d 1\u3001\u6587\u4ef6\u4e0b\u8f7d 2\u3001\u6587\u4ef6\u4e0a\u4f20 \u5341\u3001\u62e6\u622a\u5668 1\u3001\u62e6\u622a\u5668\u7684\u914d\u7f6e 2\u3001\u62e6\u622a\u5668\u7684\u4e09\u4e2a\u62bd\u8c61\u65b9\u6cd5 3\u3001\u591a\u4e2a\u62e6\u622a\u5668\u7684\u6267\u884c\u987a\u5e8f \u5341\u4e00\u3001\u5f02\u5e38\u5904\u7406\u5668 1\u3001\u57fa\u4e8e\u914d\u7f6e\u7684\u5f02\u5e38\u5904\u7406 2\u3001\u57fa\u4e8e\u6ce8\u89e3\u7684\u5f02\u5e38\u5904\u7406 \u5341\u4e8c\u3001\u6ce8\u89e3\u914d\u7f6eSpringMVC 1\u3001\u521b\u5efa\u521d\u59cb\u5316\u7c7b\uff0c\u4ee3\u66ffweb.xml 2\u3001\u521b\u5efaSpringConfig\u914d\u7f6e\u7c7b\uff0c\u4ee3\u66ffspring\u7684\u914d\u7f6e\u6587\u4ef6 3\u3001\u521b\u5efaWebConfig\u914d\u7f6e\u7c7b\uff0c\u4ee3\u66ffSpringMVC\u7684\u914d\u7f6e\u6587\u4ef6 4\u3001\u6d4b\u8bd5\u529f\u80fd \u5341\u4e09\u3001SpringMVC\u6267\u884c\u6d41\u7a0b 1\u3001SpringMVC\u5e38\u7528\u7ec4\u4ef6 2\u3001DispatcherServlet\u521d\u59cb\u5316\u8fc7\u7a0b a>\u521d\u59cb\u5316WebApplicationContext b>\u521b\u5efaWebApplicationContext c>DispatcherServlet\u521d\u59cb\u5316\u7b56\u7565 3\u3001DispatcherServlet\u8c03\u7528\u7ec4\u4ef6\u5904\u7406\u8bf7\u6c42 a>processRequest() b>doService() c>doDispatch() d>processDispatchResult() 4\u3001SpringMVC\u7684\u6267\u884c\u6d41\u7a0b \u4e00\u3001SpringMVC\u7b80\u4ecb \u00b6 1\u3001\u4ec0\u4e48\u662fMVC \u00b6 MVC\u662f\u4e00\u79cd\u8f6f\u4ef6\u67b6\u6784\u7684\u601d\u60f3\uff0c\u5c06\u8f6f\u4ef6\u6309\u7167\u6a21\u578b\u3001\u89c6\u56fe\u3001\u63a7\u5236\u5668\u6765\u5212\u5206 M\uff1aModel\uff0c\u6a21\u578b\u5c42\uff0c\u6307\u5de5\u7a0b\u4e2d\u7684JavaBean\uff0c\u4f5c\u7528\u662f\u5904\u7406\u6570\u636e JavaBean\u5206\u4e3a\u4e24\u7c7b\uff1a \u4e00\u7c7b\u79f0\u4e3a\u5b9e\u4f53\u7c7bBean\uff1a\u4e13\u95e8\u5b58\u50a8\u4e1a\u52a1\u6570\u636e\u7684\uff0c\u5982 Student\u3001User \u7b49 \u4e00\u7c7b\u79f0\u4e3a\u4e1a\u52a1\u5904\u7406 Bean\uff1a\u6307 Service \u6216 Dao \u5bf9\u8c61\uff0c\u4e13\u95e8\u7528\u4e8e\u5904\u7406\u4e1a\u52a1\u903b\u8f91\u548c\u6570\u636e\u8bbf\u95ee\u3002 V\uff1aView\uff0c\u89c6\u56fe\u5c42\uff0c\u6307\u5de5\u7a0b\u4e2d\u7684html\u6216jsp\u7b49\u9875\u9762\uff0c\u4f5c\u7528\u662f\u4e0e\u7528\u6237\u8fdb\u884c\u4ea4\u4e92\uff0c\u5c55\u793a\u6570\u636e C\uff1aController\uff0c\u63a7\u5236\u5c42\uff0c\u6307\u5de5\u7a0b\u4e2d\u7684servlet\uff0c\u4f5c\u7528\u662f\u63a5\u6536\u8bf7\u6c42\u548c\u54cd\u5e94\u6d4f\u89c8\u5668 MVC\u7684\u5de5\u4f5c\u6d41\u7a0b\uff1a \u7528\u6237\u901a\u8fc7\u89c6\u56fe\u5c42\u53d1\u9001\u8bf7\u6c42\u5230\u670d\u52a1\u5668\uff0c\u5728\u670d\u52a1\u5668\u4e2d\u8bf7\u6c42\u88abController\u63a5\u6536\uff0cController\u8c03\u7528\u76f8\u5e94\u7684Model\u5c42\u5904\u7406\u8bf7\u6c42\uff0c\u5904\u7406\u5b8c\u6bd5\u5c06\u7ed3\u679c\u8fd4\u56de\u5230Controller\uff0cController\u518d\u6839\u636e\u8bf7\u6c42\u5904\u7406\u7684\u7ed3\u679c\u627e\u5230\u76f8\u5e94\u7684View\u89c6\u56fe\uff0c\u6e32\u67d3\u6570\u636e\u540e\u6700\u7ec8\u54cd\u5e94\u7ed9\u6d4f\u89c8\u5668 2\u3001\u4ec0\u4e48\u662fSpringMVC \u00b6 SpringMVC\u662fSpring\u7684\u4e00\u4e2a\u540e\u7eed\u4ea7\u54c1\uff0c\u662fSpring\u7684\u4e00\u4e2a\u5b50\u9879\u76ee SpringMVC \u662f Spring \u4e3a\u8868\u8ff0\u5c42\u5f00\u53d1\u63d0\u4f9b\u7684\u4e00\u6574\u5957\u5b8c\u5907\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5728\u8868\u8ff0\u5c42\u6846\u67b6\u5386\u7ecf Strust\u3001WebWork\u3001Strust2 \u7b49\u8bf8\u591a\u4ea7\u54c1\u7684\u5386\u4ee3\u66f4\u8fed\u4e4b\u540e\uff0c\u76ee\u524d\u4e1a\u754c\u666e\u904d\u9009\u62e9\u4e86 SpringMVC \u4f5c\u4e3a Java EE \u9879\u76ee\u8868\u8ff0\u5c42\u5f00\u53d1\u7684 \u9996\u9009\u65b9\u6848 \u3002 \u6ce8\uff1a\u4e09\u5c42\u67b6\u6784\u5206\u4e3a\u8868\u8ff0\u5c42\uff08\u6216\u8868\u793a\u5c42\uff09\u3001\u4e1a\u52a1\u903b\u8f91\u5c42\u3001\u6570\u636e\u8bbf\u95ee\u5c42\uff0c\u8868\u8ff0\u5c42\u8868\u793a\u524d\u53f0\u9875\u9762\u548c\u540e\u53f0servlet 3\u3001SpringMVC\u7684\u7279\u70b9 \u00b6 Spring \u5bb6\u65cf\u539f\u751f\u4ea7\u54c1 \uff0c\u4e0e IOC \u5bb9\u5668\u7b49\u57fa\u7840\u8bbe\u65bd\u65e0\u7f1d\u5bf9\u63a5 \u57fa\u4e8e\u539f\u751f\u7684Servlet \uff0c\u901a\u8fc7\u4e86\u529f\u80fd\u5f3a\u5927\u7684 \u524d\u7aef\u63a7\u5236\u5668DispatcherServlet \uff0c\u5bf9\u8bf7\u6c42\u548c\u54cd\u5e94\u8fdb\u884c\u7edf\u4e00\u5904\u7406 \u8868\u8ff0\u5c42\u5404\u7ec6\u5206\u9886\u57df\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898 \u5168\u65b9\u4f4d\u8986\u76d6 \uff0c\u63d0\u4f9b \u5168\u9762\u89e3\u51b3\u65b9\u6848 \u4ee3\u7801\u6e05\u65b0\u7b80\u6d01 \uff0c\u5927\u5e45\u5ea6\u63d0\u5347\u5f00\u53d1\u6548\u7387 \u5185\u90e8\u7ec4\u4ef6\u5316\u7a0b\u5ea6\u9ad8\uff0c\u53ef\u63d2\u62d4\u5f0f\u7ec4\u4ef6 \u5373\u63d2\u5373\u7528 \uff0c\u60f3\u8981\u4ec0\u4e48\u529f\u80fd\u914d\u7f6e\u76f8\u5e94\u7ec4\u4ef6\u5373\u53ef \u6027\u80fd\u5353\u8457 \uff0c\u5c24\u5176\u9002\u5408\u73b0\u4ee3\u5927\u578b\u3001\u8d85\u5927\u578b\u4e92\u8054\u7f51\u9879\u76ee\u8981\u6c42 \u4e8c\u3001HelloWorld \u00b6 1\u3001\u5f00\u53d1\u73af\u5883 \u00b6 IDE\uff1aidea 2019.2 \u6784\u5efa\u5de5\u5177\uff1amaven3.5.4 \u670d\u52a1\u5668\uff1atomcat7 Spring\u7248\u672c\uff1a5.3.1 2\u3001\u521b\u5efamaven\u5de5\u7a0b \u00b6 a>\u6dfb\u52a0web\u6a21\u5757 \u00b6 b>\u6253\u5305\u65b9\u5f0f\uff1awar \u00b6 c>\u5f15\u5165\u4f9d\u8d56 \u00b6 <dependencies> <!-- SpringMVC --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-webmvc </artifactId> <version> 5.3.1 </version> </dependency> <!-- \u65e5\u5fd7 --> <dependency> <groupId> ch.qos.logback </groupId> <artifactId> logback-classic </artifactId> <version> 1.2.3 </version> </dependency> <!-- ServletAPI --> <dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 3.1.0 </version> <scope> provided </scope> </dependency> <!-- Spring5\u548cThymeleaf\u6574\u5408\u5305 --> <dependency> <groupId> org.thymeleaf </groupId> <artifactId> thymeleaf-spring5 </artifactId> <version> 3.0.12.RELEASE </version> </dependency> </dependencies> \u6ce8\uff1a\u7531\u4e8e Maven \u7684\u4f20\u9012\u6027\uff0c\u6211\u4eec\u4e0d\u5fc5\u5c06\u6240\u6709\u9700\u8981\u7684\u5305\u5168\u90e8\u914d\u7f6e\u4f9d\u8d56\uff0c\u800c\u662f\u914d\u7f6e\u6700\u9876\u7aef\u7684\u4f9d\u8d56\uff0c\u5176\u4ed6\u9760\u4f20\u9012\u6027\u5bfc\u5165\u3002 3\u3001\u914d\u7f6eweb.xml \u00b6 \u6ce8\u518cSpringMVC\u7684\u524d\u7aef\u63a7\u5236\u5668DispatcherServlet a>\u9ed8\u8ba4\u914d\u7f6e\u65b9\u5f0f \u00b6 \u6b64\u914d\u7f6e\u4f5c\u7528\u4e0b\uff0cSpringMVC\u7684\u914d\u7f6e\u6587\u4ef6\u9ed8\u8ba4\u4f4d\u4e8eWEB-INF\u4e0b\uff0c\u9ed8\u8ba4\u540d\u79f0\u4e3a\\ -servlet.xml\uff0c\u4f8b\u5982\uff0c\u4ee5\u4e0b\u914d\u7f6e\u6240\u5bf9\u5e94SpringMVC\u7684\u914d\u7f6e\u6587\u4ef6\u4f4d\u4e8eWEB-INF\u4e0b\uff0c\u6587\u4ef6\u540d\u4e3aspringMVC-servlet.xml <!-- \u914d\u7f6eSpringMVC\u7684\u524d\u7aef\u63a7\u5236\u5668\uff0c\u5bf9\u6d4f\u89c8\u5668\u53d1\u9001\u7684\u8bf7\u6c42\u7edf\u4e00\u8fdb\u884c\u5904\u7406 --> <servlet> <servlet-name> springMVC </servlet-name> <servlet-class> org.springframework.web.servlet.DispatcherServlet </servlet-class> </servlet> <servlet-mapping> <servlet-name> springMVC </servlet-name> <!-- \u8bbe\u7f6espringMVC\u7684\u6838\u5fc3\u63a7\u5236\u5668\u6240\u80fd\u5904\u7406\u7684\u8bf7\u6c42\u7684\u8bf7\u6c42\u8def\u5f84 /\u6240\u5339\u914d\u7684\u8bf7\u6c42\u53ef\u4ee5\u662f/login\u6216.html\u6216.js\u6216.css\u65b9\u5f0f\u7684\u8bf7\u6c42\u8def\u5f84 \u4f46\u662f/\u4e0d\u80fd\u5339\u914d.jsp\u8bf7\u6c42\u8def\u5f84\u7684\u8bf7\u6c42 --> <url-pattern> / </url-pattern> </servlet-mapping> b>\u6269\u5c55\u914d\u7f6e\u65b9\u5f0f \u00b6 \u53ef\u901a\u8fc7init-param\u6807\u7b7e\u8bbe\u7f6eSpringMVC\u914d\u7f6e\u6587\u4ef6\u7684\u4f4d\u7f6e\u548c\u540d\u79f0\uff0c\u901a\u8fc7load-on-startup\u6807\u7b7e\u8bbe\u7f6eSpringMVC\u524d\u7aef\u63a7\u5236\u5668DispatcherServlet\u7684\u521d\u59cb\u5316\u65f6\u95f4 <!-- \u914d\u7f6eSpringMVC\u7684\u524d\u7aef\u63a7\u5236\u5668\uff0c\u5bf9\u6d4f\u89c8\u5668\u53d1\u9001\u7684\u8bf7\u6c42\u7edf\u4e00\u8fdb\u884c\u5904\u7406 --> <servlet> <servlet-name> springMVC </servlet-name> <servlet-class> org.springframework.web.servlet.DispatcherServlet </servlet-class> <!-- \u901a\u8fc7\u521d\u59cb\u5316\u53c2\u6570\u6307\u5b9aSpringMVC\u914d\u7f6e\u6587\u4ef6\u7684\u4f4d\u7f6e\u548c\u540d\u79f0 --> <init-param> <!-- contextConfigLocation\u4e3a\u56fa\u5b9a\u503c --> <param-name> contextConfigLocation </param-name> <!-- \u4f7f\u7528classpath:\u8868\u793a\u4ece\u7c7b\u8def\u5f84\u67e5\u627e\u914d\u7f6e\u6587\u4ef6\uff0c\u4f8b\u5982maven\u5de5\u7a0b\u4e2d\u7684src/main/resources --> <param-value> classpath:springMVC.xml </param-value> </init-param> <!-- \u4f5c\u4e3a\u6846\u67b6\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u5728\u542f\u52a8\u8fc7\u7a0b\u4e2d\u6709\u5927\u91cf\u7684\u521d\u59cb\u5316\u64cd\u4f5c\u8981\u505a \u800c\u8fd9\u4e9b\u64cd\u4f5c\u653e\u5728\u7b2c\u4e00\u6b21\u8bf7\u6c42\u65f6\u624d\u6267\u884c\u4f1a\u4e25\u91cd\u5f71\u54cd\u8bbf\u95ee\u901f\u5ea6 \u56e0\u6b64\u9700\u8981\u901a\u8fc7\u6b64\u6807\u7b7e\u5c06\u542f\u52a8\u63a7\u5236DispatcherServlet\u7684\u521d\u59cb\u5316\u65f6\u95f4\u63d0\u524d\u5230\u670d\u52a1\u5668\u542f\u52a8\u65f6 --> <load-on-startup> 1 </load-on-startup> </servlet> <servlet-mapping> <servlet-name> springMVC </servlet-name> <!-- \u8bbe\u7f6espringMVC\u7684\u6838\u5fc3\u63a7\u5236\u5668\u6240\u80fd\u5904\u7406\u7684\u8bf7\u6c42\u7684\u8bf7\u6c42\u8def\u5f84 /\u6240\u5339\u914d\u7684\u8bf7\u6c42\u53ef\u4ee5\u662f/login\u6216.html\u6216.js\u6216.css\u65b9\u5f0f\u7684\u8bf7\u6c42\u8def\u5f84 \u4f46\u662f/\u4e0d\u80fd\u5339\u914d.jsp\u8bf7\u6c42\u8def\u5f84\u7684\u8bf7\u6c42 --> <url-pattern> / </url-pattern> </servlet-mapping> \u6ce8\uff1a \\ \u6807\u7b7e\u4e2d\u4f7f\u7528/\u548c/*\u7684\u533a\u522b\uff1a /\u6240\u5339\u914d\u7684\u8bf7\u6c42\u53ef\u4ee5\u662f/login\u6216.html\u6216.js\u6216.css\u65b9\u5f0f\u7684\u8bf7\u6c42\u8def\u5f84\uff0c\u4f46\u662f/\u4e0d\u80fd\u5339\u914d.jsp\u8bf7\u6c42\u8def\u5f84\u7684\u8bf7\u6c42 \u56e0\u6b64\u5c31\u53ef\u4ee5\u907f\u514d\u5728\u8bbf\u95eejsp\u9875\u9762\u65f6\uff0c\u8be5\u8bf7\u6c42\u88abDispatcherServlet\u5904\u7406\uff0c\u4ece\u800c\u627e\u4e0d\u5230\u76f8\u5e94\u7684\u9875\u9762 /*\u5219\u80fd\u591f\u5339\u914d\u6240\u6709\u8bf7\u6c42\uff0c\u4f8b\u5982\u5728\u4f7f\u7528\u8fc7\u6ee4\u5668\u65f6\uff0c\u82e5\u9700\u8981\u5bf9\u6240\u6709\u8bf7\u6c42\u8fdb\u884c\u8fc7\u6ee4\uff0c\u5c31\u9700\u8981\u4f7f\u7528/*\u7684\u5199\u6cd5 4\u3001\u521b\u5efa\u8bf7\u6c42\u63a7\u5236\u5668 \u00b6 \u7531\u4e8e\u524d\u7aef\u63a7\u5236\u5668\u5bf9\u6d4f\u89c8\u5668\u53d1\u9001\u7684\u8bf7\u6c42\u8fdb\u884c\u4e86\u7edf\u4e00\u7684\u5904\u7406\uff0c\u4f46\u662f\u5177\u4f53\u7684\u8bf7\u6c42\u6709\u4e0d\u540c\u7684\u5904\u7406\u8fc7\u7a0b\uff0c\u56e0\u6b64\u9700\u8981\u521b\u5efa\u5904\u7406\u5177\u4f53\u8bf7\u6c42\u7684\u7c7b\uff0c\u5373\u8bf7\u6c42\u63a7\u5236\u5668 \u8bf7\u6c42\u63a7\u5236\u5668\u4e2d\u6bcf\u4e00\u4e2a\u5904\u7406\u8bf7\u6c42\u7684\u65b9\u6cd5\u6210\u4e3a\u63a7\u5236\u5668\u65b9\u6cd5 \u56e0\u4e3aSpringMVC\u7684\u63a7\u5236\u5668\u7531\u4e00\u4e2aPOJO\uff08\u666e\u901a\u7684Java\u7c7b\uff09\u62c5\u4efb\uff0c\u56e0\u6b64\u9700\u8981\u901a\u8fc7@Controller\u6ce8\u89e3\u5c06\u5176\u6807\u8bc6\u4e3a\u4e00\u4e2a\u63a7\u5236\u5c42\u7ec4\u4ef6\uff0c\u4ea4\u7ed9Spring\u7684IoC\u5bb9\u5668\u7ba1\u7406\uff0c\u6b64\u65f6SpringMVC\u624d\u80fd\u591f\u8bc6\u522b\u63a7\u5236\u5668\u7684\u5b58\u5728 @Controller public class HelloController { } 5\u3001\u521b\u5efaspringMVC\u7684\u914d\u7f6e\u6587\u4ef6 \u00b6 <!-- \u81ea\u52a8\u626b\u63cf\u5305 --> <context:component-scan base-package= \"com.atguigu.mvc.controller\" /> <!-- \u914d\u7f6eThymeleaf\u89c6\u56fe\u89e3\u6790\u5668 --> <bean id= \"viewResolver\" class= \"org.thymeleaf.spring5.view.ThymeleafViewResolver\" > <property name= \"order\" value= \"1\" /> <property name= \"characterEncoding\" value= \"UTF-8\" /> <property name= \"templateEngine\" > <bean class= \"org.thymeleaf.spring5.SpringTemplateEngine\" > <property name= \"templateResolver\" > <bean class= \"org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver\" > <!-- \u89c6\u56fe\u524d\u7f00 --> <property name= \"prefix\" value= \"/WEB-INF/templates/\" /> <!-- \u89c6\u56fe\u540e\u7f00 --> <property name= \"suffix\" value= \".html\" /> <property name= \"templateMode\" value= \"HTML5\" /> <property name= \"characterEncoding\" value= \"UTF-8\" /> </bean> </property> </bean> </property> </bean> <!-- \u5904\u7406\u9759\u6001\u8d44\u6e90\uff0c\u4f8b\u5982html\u3001js\u3001css\u3001jpg \u82e5\u53ea\u8bbe\u7f6e\u8be5\u6807\u7b7e\uff0c\u5219\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u8d44\u6e90\uff0c\u5176\u4ed6\u8bf7\u6c42\u5219\u65e0\u6cd5\u8bbf\u95ee \u6b64\u65f6\u5fc5\u987b\u8bbe\u7f6e<mvc:annotation-driven/>\u89e3\u51b3\u95ee\u9898 --> <mvc:default-servlet-handler/> <!-- \u5f00\u542fmvc\u6ce8\u89e3\u9a71\u52a8 --> <mvc:annotation-driven> <mvc:message-converters> <!-- \u5904\u7406\u54cd\u5e94\u4e2d\u6587\u5185\u5bb9\u4e71\u7801 --> <bean class= \"org.springframework.http.converter.StringHttpMessageConverter\" > <property name= \"defaultCharset\" value= \"UTF-8\" /> <property name= \"supportedMediaTypes\" > <list> <value> text/html </value> <value> application/json </value> </list> </property> </bean> </mvc:message-converters> </mvc:annotation-driven> 6\u3001\u6d4b\u8bd5HelloWorld \u00b6 a>\u5b9e\u73b0\u5bf9\u9996\u9875\u7684\u8bbf\u95ee \u00b6 \u5728\u8bf7\u6c42\u63a7\u5236\u5668\u4e2d\u521b\u5efa\u5904\u7406\u8bf7\u6c42\u7684\u65b9\u6cd5 // @RequestMapping\u6ce8\u89e3\uff1a\u5904\u7406\u8bf7\u6c42\u548c\u63a7\u5236\u5668\u65b9\u6cd5\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb // @RequestMapping\u6ce8\u89e3\u7684value\u5c5e\u6027\u53ef\u4ee5\u901a\u8fc7\u8bf7\u6c42\u5730\u5740\u5339\u914d\u8bf7\u6c42\uff0c/\u8868\u793a\u7684\u5f53\u524d\u5de5\u7a0b\u7684\u4e0a\u4e0b\u6587\u8def\u5f84 // localhost:8080/springMVC/ @RequestMapping ( \"/\" ) public String index () { //\u8bbe\u7f6e\u89c6\u56fe\u540d\u79f0 return \"index\" ; } b>\u901a\u8fc7\u8d85\u94fe\u63a5\u8df3\u8f6c\u5230\u6307\u5b9a\u9875\u9762 \u00b6 \u5728\u4e3b\u9875index.html\u4e2d\u8bbe\u7f6e\u8d85\u94fe\u63a5 <!DOCTYPE html> < html lang = \"en\" xmlns:th = \"http://www.thymeleaf.org\" > < head > < meta charset = \"UTF-8\" > < title > \u9996\u9875 </ title > </ head > < body > < h1 > \u9996\u9875 </ h1 > < a th:href = \"@{/hello}\" > HelloWorld </ a >< br /> </ body > </ html > \u5728\u8bf7\u6c42\u63a7\u5236\u5668\u4e2d\u521b\u5efa\u5904\u7406\u8bf7\u6c42\u7684\u65b9\u6cd5 @RequestMapping ( \"/hello\" ) public String HelloWorld () { return \"target\" ; } 7\u3001\u603b\u7ed3 \u00b6 \u6d4f\u89c8\u5668\u53d1\u9001\u8bf7\u6c42\uff0c\u82e5\u8bf7\u6c42\u5730\u5740\u7b26\u5408\u524d\u7aef\u63a7\u5236\u5668\u7684url-pattern\uff0c\u8be5\u8bf7\u6c42\u5c31\u4f1a\u88ab\u524d\u7aef\u63a7\u5236\u5668DispatcherServlet\u5904\u7406\u3002\u524d\u7aef\u63a7\u5236\u5668\u4f1a\u8bfb\u53d6SpringMVC\u7684\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6\uff0c\u901a\u8fc7\u626b\u63cf\u7ec4\u4ef6\u627e\u5230\u63a7\u5236\u5668\uff0c\u5c06\u8bf7\u6c42\u5730\u5740\u548c\u63a7\u5236\u5668\u4e2d@RequestMapping\u6ce8\u89e3\u7684value\u5c5e\u6027\u503c\u8fdb\u884c\u5339\u914d\uff0c\u82e5\u5339\u914d\u6210\u529f\uff0c\u8be5\u6ce8\u89e3\u6240\u6807\u8bc6\u7684\u63a7\u5236\u5668\u65b9\u6cd5\u5c31\u662f\u5904\u7406\u8bf7\u6c42\u7684\u65b9\u6cd5\u3002\u5904\u7406\u8bf7\u6c42\u7684\u65b9\u6cd5\u9700\u8981\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u89c6\u56fe\u540d\u79f0\uff0c\u8be5\u89c6\u56fe\u540d\u79f0\u4f1a\u88ab\u89c6\u56fe\u89e3\u6790\u5668\u89e3\u6790\uff0c\u52a0\u4e0a\u524d\u7f00\u548c\u540e\u7f00\u7ec4\u6210\u89c6\u56fe\u7684\u8def\u5f84\uff0c\u901a\u8fc7Thymeleaf\u5bf9\u89c6\u56fe\u8fdb\u884c\u6e32\u67d3\uff0c\u6700\u7ec8\u8f6c\u53d1\u5230\u89c6\u56fe\u6240\u5bf9\u5e94\u9875\u9762 \u4e09\u3001@RequestMapping\u6ce8\u89e3 \u00b6 1\u3001@RequestMapping\u6ce8\u89e3\u7684\u529f\u80fd \u00b6 \u4ece\u6ce8\u89e3\u540d\u79f0\u4e0a\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c@RequestMapping\u6ce8\u89e3\u7684\u4f5c\u7528\u5c31\u662f\u5c06\u8bf7\u6c42\u548c\u5904\u7406\u8bf7\u6c42\u7684\u63a7\u5236\u5668\u65b9\u6cd5\u5173\u8054\u8d77\u6765\uff0c\u5efa\u7acb\u6620\u5c04\u5173\u7cfb\u3002 SpringMVC \u63a5\u6536\u5230\u6307\u5b9a\u7684\u8bf7\u6c42\uff0c\u5c31\u4f1a\u6765\u627e\u5230\u5728\u6620\u5c04\u5173\u7cfb\u4e2d\u5bf9\u5e94\u7684\u63a7\u5236\u5668\u65b9\u6cd5\u6765\u5904\u7406\u8fd9\u4e2a\u8bf7\u6c42\u3002 2\u3001@RequestMapping\u6ce8\u89e3\u7684\u4f4d\u7f6e \u00b6 @RequestMapping\u6807\u8bc6\u4e00\u4e2a\u7c7b\uff1a\u8bbe\u7f6e\u6620\u5c04\u8bf7\u6c42\u7684\u8bf7\u6c42\u8def\u5f84\u7684\u521d\u59cb\u4fe1\u606f @RequestMapping\u6807\u8bc6\u4e00\u4e2a\u65b9\u6cd5\uff1a\u8bbe\u7f6e\u6620\u5c04\u8bf7\u6c42\u8bf7\u6c42\u8def\u5f84\u7684\u5177\u4f53\u4fe1\u606f @Controller @RequestMapping ( \"/test\" ) public class RequestMappingController { //\u6b64\u65f6\u8bf7\u6c42\u6620\u5c04\u6240\u6620\u5c04\u7684\u8bf7\u6c42\u7684\u8bf7\u6c42\u8def\u5f84\u4e3a\uff1a/test/testRequestMapping @RequestMapping ( \"/testRequestMapping\" ) public String testRequestMapping (){ return \"success\" ; } } 3\u3001@RequestMapping\u6ce8\u89e3\u7684value\u5c5e\u6027 \u00b6 @RequestMapping\u6ce8\u89e3\u7684value\u5c5e\u6027\u901a\u8fc7\u8bf7\u6c42\u7684\u8bf7\u6c42\u5730\u5740\u5339\u914d\u8bf7\u6c42\u6620\u5c04 @RequestMapping\u6ce8\u89e3\u7684value\u5c5e\u6027\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u8868\u793a\u8be5\u8bf7\u6c42\u6620\u5c04\u80fd\u591f\u5339\u914d\u591a\u4e2a\u8bf7\u6c42\u5730\u5740\u6240\u5bf9\u5e94\u7684\u8bf7\u6c42 @RequestMapping\u6ce8\u89e3\u7684value\u5c5e\u6027\u5fc5\u987b\u8bbe\u7f6e\uff0c\u81f3\u5c11\u901a\u8fc7\u8bf7\u6c42\u5730\u5740\u5339\u914d\u8bf7\u6c42\u6620\u5c04 < a th:href = \"@{/testRequestMapping}\" > \u6d4b\u8bd5@RequestMapping\u7684value\u5c5e\u6027-->/testRequestMapping </ a >< br > < a th:href = \"@{/test}\" > \u6d4b\u8bd5@RequestMapping\u7684value\u5c5e\u6027-->/test </ a >< br > @RequestMapping ( value = { \"/testRequestMapping\" , \"/test\" } ) public String testRequestMapping (){ return \"success\" ; } 4\u3001@RequestMapping\u6ce8\u89e3\u7684method\u5c5e\u6027 \u00b6 @RequestMapping\u6ce8\u89e3\u7684method\u5c5e\u6027\u901a\u8fc7\u8bf7\u6c42\u7684\u8bf7\u6c42\u65b9\u5f0f\uff08get\u6216post\uff09\u5339\u914d\u8bf7\u6c42\u6620\u5c04 @RequestMapping\u6ce8\u89e3\u7684method\u5c5e\u6027\u662f\u4e00\u4e2aRequestMethod\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u8868\u793a\u8be5\u8bf7\u6c42\u6620\u5c04\u80fd\u591f\u5339\u914d\u591a\u79cd\u8bf7\u6c42\u65b9\u5f0f\u7684\u8bf7\u6c42 \u82e5\u5f53\u524d\u8bf7\u6c42\u7684\u8bf7\u6c42\u5730\u5740\u6ee1\u8db3\u8bf7\u6c42\u6620\u5c04\u7684value\u5c5e\u6027\uff0c\u4f46\u662f\u8bf7\u6c42\u65b9\u5f0f\u4e0d\u6ee1\u8db3method\u5c5e\u6027\uff0c\u5219\u6d4f\u89c8\u5668\u62a5\u9519405\uff1aRequest method 'POST' not supported < a th:href = \"@{/test}\" > \u6d4b\u8bd5@RequestMapping\u7684value\u5c5e\u6027-->/test </ a >< br > < form th:action = \"@{/test}\" method = \"post\" > < input type = \"submit\" > </ form > @RequestMapping ( value = { \"/testRequestMapping\" , \"/test\" }, method = { RequestMethod . GET , RequestMethod . POST } ) public String testRequestMapping (){ return \"success\" ; } \u6ce8\uff1a 1\u3001\u5bf9\u4e8e\u5904\u7406\u6307\u5b9a\u8bf7\u6c42\u65b9\u5f0f\u7684\u63a7\u5236\u5668\u65b9\u6cd5\uff0cSpringMVC\u4e2d\u63d0\u4f9b\u4e86@RequestMapping\u7684\u6d3e\u751f\u6ce8\u89e3 \u5904\u7406get\u8bf7\u6c42\u7684\u6620\u5c04-->@GetMapping \u5904\u7406post\u8bf7\u6c42\u7684\u6620\u5c04-->@PostMapping \u5904\u7406put\u8bf7\u6c42\u7684\u6620\u5c04-->@PutMapping \u5904\u7406delete\u8bf7\u6c42\u7684\u6620\u5c04-->@DeleteMapping 2\u3001\u5e38\u7528\u7684\u8bf7\u6c42\u65b9\u5f0f\u6709get\uff0cpost\uff0cput\uff0cdelete \u4f46\u662f\u76ee\u524d\u6d4f\u89c8\u5668\u53ea\u652f\u6301get\u548cpost\uff0c\u82e5\u5728form\u8868\u5355\u63d0\u4ea4\u65f6\uff0c\u4e3amethod\u8bbe\u7f6e\u4e86\u5176\u4ed6\u8bf7\u6c42\u65b9\u5f0f\u7684\u5b57\u7b26\u4e32\uff08put\u6216delete\uff09\uff0c\u5219\u6309\u7167\u9ed8\u8ba4\u7684\u8bf7\u6c42\u65b9\u5f0fget\u5904\u7406 \u82e5\u8981\u53d1\u9001put\u548cdelete\u8bf7\u6c42\uff0c\u5219\u9700\u8981\u901a\u8fc7spring\u63d0\u4f9b\u7684\u8fc7\u6ee4\u5668HiddenHttpMethodFilter\uff0c\u5728RESTful\u90e8\u5206\u4f1a\u8bb2\u5230 5\u3001@RequestMapping\u6ce8\u89e3\u7684params\u5c5e\u6027\uff08\u4e86\u89e3\uff09 \u00b6 @RequestMapping\u6ce8\u89e3\u7684params\u5c5e\u6027\u901a\u8fc7\u8bf7\u6c42\u7684\u8bf7\u6c42\u53c2\u6570\u5339\u914d\u8bf7\u6c42\u6620\u5c04 @RequestMapping\u6ce8\u89e3\u7684params\u5c5e\u6027\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u53ef\u4ee5\u901a\u8fc7\u56db\u79cd\u8868\u8fbe\u5f0f\u8bbe\u7f6e\u8bf7\u6c42\u53c2\u6570\u548c\u8bf7\u6c42\u6620\u5c04\u7684\u5339\u914d\u5173\u7cfb \"param\"\uff1a\u8981\u6c42\u8bf7\u6c42\u6620\u5c04\u6240\u5339\u914d\u7684\u8bf7\u6c42\u5fc5\u987b\u643a\u5e26param\u8bf7\u6c42\u53c2\u6570 \"!param\"\uff1a\u8981\u6c42\u8bf7\u6c42\u6620\u5c04\u6240\u5339\u914d\u7684\u8bf7\u6c42\u5fc5\u987b\u4e0d\u80fd\u643a\u5e26param\u8bf7\u6c42\u53c2\u6570 \"param=value\"\uff1a\u8981\u6c42\u8bf7\u6c42\u6620\u5c04\u6240\u5339\u914d\u7684\u8bf7\u6c42\u5fc5\u987b\u643a\u5e26param\u8bf7\u6c42\u53c2\u6570\u4e14param=value \"param!=value\"\uff1a\u8981\u6c42\u8bf7\u6c42\u6620\u5c04\u6240\u5339\u914d\u7684\u8bf7\u6c42\u5fc5\u987b\u643a\u5e26param\u8bf7\u6c42\u53c2\u6570\u4f46\u662fparam!=value < a th:href = \"@{/test(username='admin',password=123456)\" > \u6d4b\u8bd5@RequestMapping\u7684params\u5c5e\u6027-->/test </ a >< br > @RequestMapping ( value = { \"/testRequestMapping\" , \"/test\" } , method = { RequestMethod . GET , RequestMethod . POST } , params = { \"username\" , \"password!=123456\" } ) public String testRequestMapping (){ return \"success\" ; } \u6ce8\uff1a \u82e5\u5f53\u524d\u8bf7\u6c42\u6ee1\u8db3@RequestMapping\u6ce8\u89e3\u7684value\u548cmethod\u5c5e\u6027\uff0c\u4f46\u662f\u4e0d\u6ee1\u8db3params\u5c5e\u6027\uff0c\u6b64\u65f6\u9875\u9762\u56de\u62a5\u9519400\uff1aParameter conditions \"username, password!=123456\" not met for actual request parameters: username={admin}, password={123456} 6\u3001@RequestMapping\u6ce8\u89e3\u7684headers\u5c5e\u6027\uff08\u4e86\u89e3\uff09 \u00b6 @RequestMapping\u6ce8\u89e3\u7684headers\u5c5e\u6027\u901a\u8fc7\u8bf7\u6c42\u7684\u8bf7\u6c42\u5934\u4fe1\u606f\u5339\u914d\u8bf7\u6c42\u6620\u5c04 @RequestMapping\u6ce8\u89e3\u7684headers\u5c5e\u6027\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u53ef\u4ee5\u901a\u8fc7\u56db\u79cd\u8868\u8fbe\u5f0f\u8bbe\u7f6e\u8bf7\u6c42\u5934\u4fe1\u606f\u548c\u8bf7\u6c42\u6620\u5c04\u7684\u5339\u914d\u5173\u7cfb \"header\"\uff1a\u8981\u6c42\u8bf7\u6c42\u6620\u5c04\u6240\u5339\u914d\u7684\u8bf7\u6c42\u5fc5\u987b\u643a\u5e26header\u8bf7\u6c42\u5934\u4fe1\u606f \"!header\"\uff1a\u8981\u6c42\u8bf7\u6c42\u6620\u5c04\u6240\u5339\u914d\u7684\u8bf7\u6c42\u5fc5\u987b\u4e0d\u80fd\u643a\u5e26header\u8bf7\u6c42\u5934\u4fe1\u606f \"header=value\"\uff1a\u8981\u6c42\u8bf7\u6c42\u6620\u5c04\u6240\u5339\u914d\u7684\u8bf7\u6c42\u5fc5\u987b\u643a\u5e26header\u8bf7\u6c42\u5934\u4fe1\u606f\u4e14header=value \"header!=value\"\uff1a\u8981\u6c42\u8bf7\u6c42\u6620\u5c04\u6240\u5339\u914d\u7684\u8bf7\u6c42\u5fc5\u987b\u643a\u5e26header\u8bf7\u6c42\u5934\u4fe1\u606f\u4e14header!=value \u82e5\u5f53\u524d\u8bf7\u6c42\u6ee1\u8db3@RequestMapping\u6ce8\u89e3\u7684value\u548cmethod\u5c5e\u6027\uff0c\u4f46\u662f\u4e0d\u6ee1\u8db3headers\u5c5e\u6027\uff0c\u6b64\u65f6\u9875\u9762\u663e\u793a404\u9519\u8bef\uff0c\u5373\u8d44\u6e90\u672a\u627e\u5230 7\u3001SpringMVC\u652f\u6301ant\u98ce\u683c\u7684\u8def\u5f84 \u00b6 \uff1f\uff1a\u8868\u793a\u4efb\u610f\u7684\u5355\u4e2a\u5b57\u7b26 *\uff1a\u8868\u793a\u4efb\u610f\u76840\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26 **\uff1a\u8868\u793a\u4efb\u610f\u7684\u4e00\u5c42\u6216\u591a\u5c42\u76ee\u5f55 \u6ce8\u610f\uff1a\u5728\u4f7f\u7528* \u65f6\uff0c\u53ea\u80fd\u4f7f\u7528/ */xxx\u7684\u65b9\u5f0f 8\u3001SpringMVC\u652f\u6301\u8def\u5f84\u4e2d\u7684\u5360\u4f4d\u7b26\uff08\u91cd\u70b9\uff09 \u00b6 \u539f\u59cb\u65b9\u5f0f\uff1a/deleteUser?id=1 rest\u65b9\u5f0f\uff1a/deleteUser/1 SpringMVC\u8def\u5f84\u4e2d\u7684\u5360\u4f4d\u7b26\u5e38\u7528\u4e8eRESTful\u98ce\u683c\u4e2d\uff0c\u5f53\u8bf7\u6c42\u8def\u5f84\u4e2d\u5c06\u67d0\u4e9b\u6570\u636e\u901a\u8fc7\u8def\u5f84\u7684\u65b9\u5f0f\u4f20\u8f93\u5230\u670d\u52a1\u5668\u4e2d\uff0c\u5c31\u53ef\u4ee5\u5728\u76f8\u5e94\u7684@RequestMapping\u6ce8\u89e3\u7684value\u5c5e\u6027\u4e2d\u901a\u8fc7\u5360\u4f4d\u7b26{xxx}\u8868\u793a\u4f20\u8f93\u7684\u6570\u636e\uff0c\u5728\u901a\u8fc7@PathVariable\u6ce8\u89e3\uff0c\u5c06\u5360\u4f4d\u7b26\u6240\u8868\u793a\u7684\u6570\u636e\u8d4b\u503c\u7ed9\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2 < a th:href = \"@{/testRest/1/admin}\" > \u6d4b\u8bd5\u8def\u5f84\u4e2d\u7684\u5360\u4f4d\u7b26-->/testRest </ a >< br > @RequestMapping ( \"/testRest/{id}/{username}\" ) public String testRest ( @PathVariable ( \"id\" ) String id , @PathVariable ( \"username\" ) String username ){ System . out . println ( \"id:\" + id + \",username:\" + username ); return \"success\" ; } //\u6700\u7ec8\u8f93\u51fa\u7684\u5185\u5bb9\u4e3a-->id:1,username:admin \u56db\u3001SpringMVC\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570 \u00b6 1\u3001\u901a\u8fc7ServletAPI\u83b7\u53d6 \u00b6 \u5c06HttpServletRequest\u4f5c\u4e3a\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2\uff0c\u6b64\u65f6HttpServletRequest\u7c7b\u578b\u7684\u53c2\u6570\u8868\u793a\u5c01\u88c5\u4e86\u5f53\u524d\u8bf7\u6c42\u7684\u8bf7\u6c42\u62a5\u6587\u7684\u5bf9\u8c61 @RequestMapping ( \"/testParam\" ) public String testParam ( HttpServletRequest request ){ String username = request . getParameter ( \"username\" ); String password = request . getParameter ( \"password\" ); System . out . println ( \"username:\" + username + \",password:\" + password ); return \"success\" ; } 2\u3001\u901a\u8fc7\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570 \u00b6 \u5728\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2\u4f4d\u7f6e\uff0c\u8bbe\u7f6e\u548c\u8bf7\u6c42\u53c2\u6570\u540c\u540d\u7684\u5f62\u53c2\uff0c\u5f53\u6d4f\u89c8\u5668\u53d1\u9001\u8bf7\u6c42\uff0c\u5339\u914d\u5230\u8bf7\u6c42\u6620\u5c04\u65f6\uff0c\u5728DispatcherServlet\u4e2d\u5c31\u4f1a\u5c06\u8bf7\u6c42\u53c2\u6570\u8d4b\u503c\u7ed9\u76f8\u5e94\u7684\u5f62\u53c2 < a th:href = \"@{/testParam(username='admin',password=123456)}\" > \u6d4b\u8bd5\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570-->/testParam </ a >< br > @RequestMapping ( \"/testParam\" ) public String testParam ( String username , String password ){ System . out . println ( \"username:\" + username + \",password:\" + password ); return \"success\" ; } \u6ce8\uff1a \u82e5\u8bf7\u6c42\u6240\u4f20\u8f93\u7684\u8bf7\u6c42\u53c2\u6570\u4e2d\u6709\u591a\u4e2a\u540c\u540d\u7684\u8bf7\u6c42\u53c2\u6570\uff0c\u6b64\u65f6\u53ef\u4ee5\u5728\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2\u4e2d\u8bbe\u7f6e\u5b57\u7b26\u4e32\u6570\u7ec4\u6216\u8005\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u5f62\u53c2\u63a5\u6536\u6b64\u8bf7\u6c42\u53c2\u6570 \u82e5\u4f7f\u7528\u5b57\u7b26\u4e32\u6570\u7ec4\u7c7b\u578b\u7684\u5f62\u53c2\uff0c\u6b64\u53c2\u6570\u7684\u6570\u7ec4\u4e2d\u5305\u542b\u4e86\u6bcf\u4e00\u4e2a\u6570\u636e \u82e5\u4f7f\u7528\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u5f62\u53c2\uff0c\u6b64\u53c2\u6570\u7684\u503c\u4e3a\u6bcf\u4e2a\u6570\u636e\u4e2d\u95f4\u4f7f\u7528\u9017\u53f7\u62fc\u63a5\u7684\u7ed3\u679c 3\u3001@RequestParam \u00b6 @RequestParam\u662f\u5c06\u8bf7\u6c42\u53c2\u6570\u548c\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2\u521b\u5efa\u6620\u5c04\u5173\u7cfb @RequestParam\u6ce8\u89e3\u4e00\u5171\u6709\u4e09\u4e2a\u5c5e\u6027\uff1a value\uff1a\u6307\u5b9a\u4e3a\u5f62\u53c2\u8d4b\u503c\u7684\u8bf7\u6c42\u53c2\u6570\u7684\u53c2\u6570\u540d required\uff1a\u8bbe\u7f6e\u662f\u5426\u5fc5\u987b\u4f20\u8f93\u6b64\u8bf7\u6c42\u53c2\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3atrue \u82e5\u8bbe\u7f6e\u4e3atrue\u65f6\uff0c\u5219\u5f53\u524d\u8bf7\u6c42\u5fc5\u987b\u4f20\u8f93value\u6240\u6307\u5b9a\u7684\u8bf7\u6c42\u53c2\u6570\uff0c\u82e5\u6ca1\u6709\u4f20\u8f93\u8be5\u8bf7\u6c42\u53c2\u6570\uff0c\u4e14\u6ca1\u6709\u8bbe\u7f6edefaultValue\u5c5e\u6027\uff0c\u5219\u9875\u9762\u62a5\u9519400\uff1aRequired String parameter 'xxx' is not present\uff1b\u82e5\u8bbe\u7f6e\u4e3afalse\uff0c\u5219\u5f53\u524d\u8bf7\u6c42\u4e0d\u662f\u5fc5\u987b\u4f20\u8f93value\u6240\u6307\u5b9a\u7684\u8bf7\u6c42\u53c2\u6570\uff0c\u82e5\u6ca1\u6709\u4f20\u8f93\uff0c\u5219\u6ce8\u89e3\u6240\u6807\u8bc6\u7684\u5f62\u53c2\u7684\u503c\u4e3anull defaultValue\uff1a\u4e0d\u7ba1required\u5c5e\u6027\u503c\u4e3atrue\u6216false\uff0c\u5f53value\u6240\u6307\u5b9a\u7684\u8bf7\u6c42\u53c2\u6570\u6ca1\u6709\u4f20\u8f93\u6216\u4f20\u8f93\u7684\u503c\u4e3a\"\"\u65f6\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\u4e3a\u5f62\u53c2\u8d4b\u503c 4\u3001@RequestHeader \u00b6 @RequestHeader\u662f\u5c06\u8bf7\u6c42\u5934\u4fe1\u606f\u548c\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2\u521b\u5efa\u6620\u5c04\u5173\u7cfb @RequestHeader\u6ce8\u89e3\u4e00\u5171\u6709\u4e09\u4e2a\u5c5e\u6027\uff1avalue\u3001required\u3001defaultValue\uff0c\u7528\u6cd5\u540c@RequestParam 5\u3001@CookieValue \u00b6 @CookieValue\u662f\u5c06cookie\u6570\u636e\u548c\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2\u521b\u5efa\u6620\u5c04\u5173\u7cfb @CookieValue\u6ce8\u89e3\u4e00\u5171\u6709\u4e09\u4e2a\u5c5e\u6027\uff1avalue\u3001required\u3001defaultValue\uff0c\u7528\u6cd5\u540c@RequestParam 6\u3001\u901a\u8fc7POJO\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570 \u00b6 \u53ef\u4ee5\u5728\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2\u4f4d\u7f6e\u8bbe\u7f6e\u4e00\u4e2a\u5b9e\u4f53\u7c7b\u7c7b\u578b\u7684\u5f62\u53c2\uff0c\u6b64\u65f6\u82e5\u6d4f\u89c8\u5668\u4f20\u8f93\u7684\u8bf7\u6c42\u53c2\u6570\u7684\u53c2\u6570\u540d\u548c\u5b9e\u4f53\u7c7b\u4e2d\u7684\u5c5e\u6027\u540d\u4e00\u81f4\uff0c\u90a3\u4e48\u8bf7\u6c42\u53c2\u6570\u5c31\u4f1a\u4e3a\u6b64\u5c5e\u6027\u8d4b\u503c < form th:action = \"@{/testpojo}\" method = \"post\" > \u7528\u6237\u540d\uff1a < input type = \"text\" name = \"username\" >< br > \u5bc6\u7801\uff1a < input type = \"password\" name = \"password\" >< br > \u6027\u522b\uff1a < input type = \"radio\" name = \"sex\" value = \"\u7537\" > \u7537 < input type = \"radio\" name = \"sex\" value = \"\u5973\" > \u5973 < br > \u5e74\u9f84\uff1a < input type = \"text\" name = \"age\" >< br > \u90ae\u7bb1\uff1a < input type = \"text\" name = \"email\" >< br > < input type = \"submit\" > </ form > @RequestMapping ( \"/testpojo\" ) public String testPOJO ( User user ){ System . out . println ( user ); return \"success\" ; } //\u6700\u7ec8\u7ed3\u679c-->User{id=null, username='\u5f20\u4e09', password='123', age=23, sex='\u7537', email='123@qq.com'} 7\u3001\u89e3\u51b3\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570\u7684\u4e71\u7801\u95ee\u9898 \u00b6 \u89e3\u51b3\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570\u7684\u4e71\u7801\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528SpringMVC\u63d0\u4f9b\u7684\u7f16\u7801\u8fc7\u6ee4\u5668CharacterEncodingFilter\uff0c\u4f46\u662f\u5fc5\u987b\u5728web.xml\u4e2d\u8fdb\u884c\u6ce8\u518c <!--\u914d\u7f6espringMVC\u7684\u7f16\u7801\u8fc7\u6ee4\u5668--> <filter> <filter-name> CharacterEncodingFilter </filter-name> <filter-class> org.springframework.web.filter.CharacterEncodingFilter </filter-class> <init-param> <param-name> encoding </param-name> <param-value> UTF-8 </param-value> </init-param> <init-param> <param-name> forceResponseEncoding </param-name> <param-value> true </param-value> </init-param> </filter> <filter-mapping> <filter-name> CharacterEncodingFilter </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> \u6ce8\uff1a SpringMVC\u4e2d\u5904\u7406\u7f16\u7801\u7684\u8fc7\u6ee4\u5668\u4e00\u5b9a\u8981\u914d\u7f6e\u5230\u5176\u4ed6\u8fc7\u6ee4\u5668\u4e4b\u524d\uff0c\u5426\u5219\u65e0\u6548 \u4e94\u3001\u57df\u5bf9\u8c61\u5171\u4eab\u6570\u636e \u00b6 1\u3001\u4f7f\u7528ServletAPI\u5411request\u57df\u5bf9\u8c61\u5171\u4eab\u6570\u636e \u00b6 @RequestMapping ( \"/testServletAPI\" ) public String testServletAPI ( HttpServletRequest request ){ request . setAttribute ( \"testScope\" , \"hello,servletAPI\" ); return \"success\" ; } 2\u3001\u4f7f\u7528ModelAndView\u5411request\u57df\u5bf9\u8c61\u5171\u4eab\u6570\u636e \u00b6 @RequestMapping ( \"/testModelAndView\" ) public ModelAndView testModelAndView (){ /** * ModelAndView\u6709Model\u548cView\u7684\u529f\u80fd * Model\u4e3b\u8981\u7528\u4e8e\u5411\u8bf7\u6c42\u57df\u5171\u4eab\u6570\u636e * View\u4e3b\u8981\u7528\u4e8e\u8bbe\u7f6e\u89c6\u56fe\uff0c\u5b9e\u73b0\u9875\u9762\u8df3\u8f6c */ ModelAndView mav = new ModelAndView (); //\u5411\u8bf7\u6c42\u57df\u5171\u4eab\u6570\u636e mav . addObject ( \"testScope\" , \"hello,ModelAndView\" ); //\u8bbe\u7f6e\u89c6\u56fe\uff0c\u5b9e\u73b0\u9875\u9762\u8df3\u8f6c mav . setViewName ( \"success\" ); return mav ; } 3\u3001\u4f7f\u7528Model\u5411request\u57df\u5bf9\u8c61\u5171\u4eab\u6570\u636e \u00b6 @RequestMapping ( \"/testModel\" ) public String testModel ( Model model ){ model . addAttribute ( \"testScope\" , \"hello,Model\" ); return \"success\" ; } 4\u3001\u4f7f\u7528map\u5411request\u57df\u5bf9\u8c61\u5171\u4eab\u6570\u636e \u00b6 @RequestMapping ( \"/testMap\" ) public String testMap ( Map < String , Object > map ){ map . put ( \"testScope\" , \"hello,Map\" ); return \"success\" ; } 5\u3001\u4f7f\u7528ModelMap\u5411request\u57df\u5bf9\u8c61\u5171\u4eab\u6570\u636e \u00b6 @RequestMapping ( \"/testModelMap\" ) public String testModelMap ( ModelMap modelMap ){ modelMap . addAttribute ( \"testScope\" , \"hello,ModelMap\" ); return \"success\" ; } 6\u3001Model\u3001ModelMap\u3001Map\u7684\u5173\u7cfb \u00b6 Model\u3001ModelMap\u3001Map\u7c7b\u578b\u7684\u53c2\u6570\u5176\u5b9e\u672c\u8d28\u4e0a\u90fd\u662f BindingAwareModelMap \u7c7b\u578b\u7684 public interface Model{} public class ModelMap extends LinkedHashMap<String, Object> {} public class ExtendedModelMap extends ModelMap implements Model {} public class BindingAwareModelMap extends ExtendedModelMap {} 7\u3001\u5411session\u57df\u5171\u4eab\u6570\u636e \u00b6 @RequestMapping ( \"/testSession\" ) public String testSession ( HttpSession session ){ session . setAttribute ( \"testSessionScope\" , \"hello,session\" ); return \"success\" ; } 8\u3001\u5411application\u57df\u5171\u4eab\u6570\u636e \u00b6 @RequestMapping ( \"/testApplication\" ) public String testApplication ( HttpSession session ){ ServletContext application = session . getServletContext (); application . setAttribute ( \"testApplicationScope\" , \"hello,application\" ); return \"success\" ; } \u516d\u3001SpringMVC\u7684\u89c6\u56fe \u00b6 SpringMVC\u4e2d\u7684\u89c6\u56fe\u662fView\u63a5\u53e3\uff0c\u89c6\u56fe\u7684\u4f5c\u7528\u6e32\u67d3\u6570\u636e\uff0c\u5c06\u6a21\u578bModel\u4e2d\u7684\u6570\u636e\u5c55\u793a\u7ed9\u7528\u6237 SpringMVC\u89c6\u56fe\u7684\u79cd\u7c7b\u5f88\u591a\uff0c\u9ed8\u8ba4\u6709\u8f6c\u53d1\u89c6\u56fe\u548c\u91cd\u5b9a\u5411\u89c6\u56fe \u5f53\u5de5\u7a0b\u5f15\u5165jstl\u7684\u4f9d\u8d56\uff0c\u8f6c\u53d1\u89c6\u56fe\u4f1a\u81ea\u52a8\u8f6c\u6362\u4e3aJstlView \u82e5\u4f7f\u7528\u7684\u89c6\u56fe\u6280\u672f\u4e3aThymeleaf\uff0c\u5728SpringMVC\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\u4e86Thymeleaf\u7684\u89c6\u56fe\u89e3\u6790\u5668\uff0c\u7531\u6b64\u89c6\u56fe\u89e3\u6790\u5668\u89e3\u6790\u4e4b\u540e\u6240\u5f97\u5230\u7684\u662fThymeleafView 1\u3001ThymeleafView \u00b6 \u5f53\u63a7\u5236\u5668\u65b9\u6cd5\u4e2d\u6240\u8bbe\u7f6e\u7684\u89c6\u56fe\u540d\u79f0\u6ca1\u6709\u4efb\u4f55\u524d\u7f00\u65f6\uff0c\u6b64\u65f6\u7684\u89c6\u56fe\u540d\u79f0\u4f1a\u88abSpringMVC\u914d\u7f6e\u6587\u4ef6\u4e2d\u6240\u914d\u7f6e\u7684\u89c6\u56fe\u89e3\u6790\u5668\u89e3\u6790\uff0c\u89c6\u56fe\u540d\u79f0\u62fc\u63a5\u89c6\u56fe\u524d\u7f00\u548c\u89c6\u56fe\u540e\u7f00\u6240\u5f97\u5230\u7684\u6700\u7ec8\u8def\u5f84\uff0c\u4f1a\u901a\u8fc7\u8f6c\u53d1\u7684\u65b9\u5f0f\u5b9e\u73b0\u8df3\u8f6c @RequestMapping ( \"/testHello\" ) public String testHello (){ return \"hello\" ; } 2\u3001\u8f6c\u53d1\u89c6\u56fe \u00b6 SpringMVC\u4e2d\u9ed8\u8ba4\u7684\u8f6c\u53d1\u89c6\u56fe\u662fInternalResourceView SpringMVC\u4e2d\u521b\u5efa\u8f6c\u53d1\u89c6\u56fe\u7684\u60c5\u51b5\uff1a \u5f53\u63a7\u5236\u5668\u65b9\u6cd5\u4e2d\u6240\u8bbe\u7f6e\u7684\u89c6\u56fe\u540d\u79f0\u4ee5\"forward:\"\u4e3a\u524d\u7f00\u65f6\uff0c\u521b\u5efaInternalResourceView\u89c6\u56fe\uff0c\u6b64\u65f6\u7684\u89c6\u56fe\u540d\u79f0\u4e0d\u4f1a\u88abSpringMVC\u914d\u7f6e\u6587\u4ef6\u4e2d\u6240\u914d\u7f6e\u7684\u89c6\u56fe\u89e3\u6790\u5668\u89e3\u6790\uff0c\u800c\u662f\u4f1a\u5c06\u524d\u7f00\"forward:\"\u53bb\u6389\uff0c\u5269\u4f59\u90e8\u5206\u4f5c\u4e3a\u6700\u7ec8\u8def\u5f84\u901a\u8fc7\u8f6c\u53d1\u7684\u65b9\u5f0f\u5b9e\u73b0\u8df3\u8f6c \u4f8b\u5982\"forward:/\"\uff0c\"forward:/employee\" @RequestMapping ( \"/testForward\" ) public String testForward (){ return \"forward:/testHello\" ; } 3\u3001\u91cd\u5b9a\u5411\u89c6\u56fe \u00b6 SpringMVC\u4e2d\u9ed8\u8ba4\u7684\u91cd\u5b9a\u5411\u89c6\u56fe\u662fRedirectView \u5f53\u63a7\u5236\u5668\u65b9\u6cd5\u4e2d\u6240\u8bbe\u7f6e\u7684\u89c6\u56fe\u540d\u79f0\u4ee5\"redirect:\"\u4e3a\u524d\u7f00\u65f6\uff0c\u521b\u5efaRedirectView\u89c6\u56fe\uff0c\u6b64\u65f6\u7684\u89c6\u56fe\u540d\u79f0\u4e0d\u4f1a\u88abSpringMVC\u914d\u7f6e\u6587\u4ef6\u4e2d\u6240\u914d\u7f6e\u7684\u89c6\u56fe\u89e3\u6790\u5668\u89e3\u6790\uff0c\u800c\u662f\u4f1a\u5c06\u524d\u7f00\"redirect:\"\u53bb\u6389\uff0c\u5269\u4f59\u90e8\u5206\u4f5c\u4e3a\u6700\u7ec8\u8def\u5f84\u901a\u8fc7\u91cd\u5b9a\u5411\u7684\u65b9\u5f0f\u5b9e\u73b0\u8df3\u8f6c \u4f8b\u5982\"redirect:/\"\uff0c\"redirect:/employee\" @RequestMapping ( \"/testRedirect\" ) public String testRedirect (){ return \"redirect:/testHello\" ; } \u6ce8\uff1a \u91cd\u5b9a\u5411\u89c6\u56fe\u5728\u89e3\u6790\u65f6\uff0c\u4f1a\u5148\u5c06redirect:\u524d\u7f00\u53bb\u6389\uff0c\u7136\u540e\u4f1a\u5224\u65ad\u5269\u4f59\u90e8\u5206\u662f\u5426\u4ee5/\u5f00\u5934\uff0c\u82e5\u662f\u5219\u4f1a\u81ea\u52a8\u62fc\u63a5\u4e0a\u4e0b\u6587\u8def\u5f84 4\u3001\u89c6\u56fe\u63a7\u5236\u5668view-controller \u00b6 \u5f53\u63a7\u5236\u5668\u65b9\u6cd5\u4e2d\uff0c\u4ec5\u4ec5\u7528\u6765\u5b9e\u73b0\u9875\u9762\u8df3\u8f6c\uff0c\u5373\u53ea\u9700\u8981\u8bbe\u7f6e\u89c6\u56fe\u540d\u79f0\u65f6\uff0c\u53ef\u4ee5\u5c06\u5904\u7406\u5668\u65b9\u6cd5\u4f7f\u7528view-controller\u6807\u7b7e\u8fdb\u884c\u8868\u793a <!-- path\uff1a\u8bbe\u7f6e\u5904\u7406\u7684\u8bf7\u6c42\u5730\u5740 view-name\uff1a\u8bbe\u7f6e\u8bf7\u6c42\u5730\u5740\u6240\u5bf9\u5e94\u7684\u89c6\u56fe\u540d\u79f0 --> <mvc:view-controller path= \"/testView\" view-name= \"success\" ></mvc:view-controller> \u6ce8\uff1a \u5f53SpringMVC\u4e2d\u8bbe\u7f6e\u4efb\u4f55\u4e00\u4e2aview-controller\u65f6\uff0c\u5176\u4ed6\u63a7\u5236\u5668\u4e2d\u7684\u8bf7\u6c42\u6620\u5c04\u5c06\u5168\u90e8\u5931\u6548\uff0c\u6b64\u65f6\u9700\u8981\u5728SpringMVC\u7684\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u5f00\u542fmvc\u6ce8\u89e3\u9a71\u52a8\u7684\u6807\u7b7e\uff1a \u4e03\u3001RESTful \u00b6 1\u3001RESTful\u7b80\u4ecb \u00b6 REST\uff1a Re presentational S tate T ransfer\uff0c\u8868\u73b0\u5c42\u8d44\u6e90\u72b6\u6001\u8f6c\u79fb\u3002 a>\u8d44\u6e90 \u00b6 \u8d44\u6e90\u662f\u4e00\u79cd\u770b\u5f85\u670d\u52a1\u5668\u7684\u65b9\u5f0f\uff0c\u5373\uff0c\u5c06\u670d\u52a1\u5668\u770b\u4f5c\u662f\u7531\u5f88\u591a\u79bb\u6563\u7684\u8d44\u6e90\u7ec4\u6210\u3002\u6bcf\u4e2a\u8d44\u6e90\u662f\u670d\u52a1\u5668\u4e0a\u4e00\u4e2a\u53ef\u547d\u540d\u7684\u62bd\u8c61\u6982\u5ff5\u3002\u56e0\u4e3a\u8d44\u6e90\u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u6982\u5ff5\uff0c\u6240\u4ee5\u5b83\u4e0d\u4ec5\u4ec5\u80fd\u4ee3\u8868\u670d\u52a1\u5668\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u6587\u4ef6\u3001\u6570\u636e\u5e93\u4e2d\u7684\u4e00\u5f20\u8868\u7b49\u7b49\u5177\u4f53\u7684\u4e1c\u897f\uff0c\u53ef\u4ee5\u5c06\u8d44\u6e90\u8bbe\u8ba1\u7684\u8981\u591a\u62bd\u8c61\u6709\u591a\u62bd\u8c61\uff0c\u53ea\u8981\u60f3\u8c61\u529b\u5141\u8bb8\u800c\u4e14\u5ba2\u6237\u7aef\u5e94\u7528\u5f00\u53d1\u8005\u80fd\u591f\u7406\u89e3\u3002\u4e0e\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u7c7b\u4f3c\uff0c\u8d44\u6e90\u662f\u4ee5\u540d\u8bcd\u4e3a\u6838\u5fc3\u6765\u7ec4\u7ec7\u7684\uff0c\u9996\u5148\u5173\u6ce8\u7684\u662f\u540d\u8bcd\u3002\u4e00\u4e2a\u8d44\u6e90\u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u591a\u4e2aURI\u6765\u6807\u8bc6\u3002URI\u65e2\u662f\u8d44\u6e90\u7684\u540d\u79f0\uff0c\u4e5f\u662f\u8d44\u6e90\u5728Web\u4e0a\u7684\u5730\u5740\u3002\u5bf9\u67d0\u4e2a\u8d44\u6e90\u611f\u5174\u8da3\u7684\u5ba2\u6237\u7aef\u5e94\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7\u8d44\u6e90\u7684URI\u4e0e\u5176\u8fdb\u884c\u4ea4\u4e92\u3002 b>\u8d44\u6e90\u7684\u8868\u8ff0 \u00b6 \u8d44\u6e90\u7684\u8868\u8ff0\u662f\u4e00\u6bb5\u5bf9\u4e8e\u8d44\u6e90\u5728\u67d0\u4e2a\u7279\u5b9a\u65f6\u523b\u7684\u72b6\u6001\u7684\u63cf\u8ff0\u3002\u53ef\u4ee5\u5728\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u7aef\u4e4b\u95f4\u8f6c\u79fb\uff08\u4ea4\u6362\uff09\u3002\u8d44\u6e90\u7684\u8868\u8ff0\u53ef\u4ee5\u6709\u591a\u79cd\u683c\u5f0f\uff0c\u4f8b\u5982HTML/XML/JSON/\u7eaf\u6587\u672c/\u56fe\u7247/\u89c6\u9891/\u97f3\u9891\u7b49\u7b49\u3002\u8d44\u6e90\u7684\u8868\u8ff0\u683c\u5f0f\u53ef\u4ee5\u901a\u8fc7\u534f\u5546\u673a\u5236\u6765\u786e\u5b9a\u3002\u8bf7\u6c42-\u54cd\u5e94\u65b9\u5411\u7684\u8868\u8ff0\u901a\u5e38\u4f7f\u7528\u4e0d\u540c\u7684\u683c\u5f0f\u3002 c>\u72b6\u6001\u8f6c\u79fb \u00b6 \u72b6\u6001\u8f6c\u79fb\u8bf4\u7684\u662f\uff1a\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u4e4b\u95f4\u8f6c\u79fb\uff08transfer\uff09\u4ee3\u8868\u8d44\u6e90\u72b6\u6001\u7684\u8868\u8ff0\u3002\u901a\u8fc7\u8f6c\u79fb\u548c\u64cd\u4f5c\u8d44\u6e90\u7684\u8868\u8ff0\uff0c\u6765\u95f4\u63a5\u5b9e\u73b0\u64cd\u4f5c\u8d44\u6e90\u7684\u76ee\u7684\u3002 2\u3001RESTful\u7684\u5b9e\u73b0 \u00b6 \u5177\u4f53\u8bf4\uff0c\u5c31\u662f HTTP \u534f\u8bae\u91cc\u9762\uff0c\u56db\u4e2a\u8868\u793a\u64cd\u4f5c\u65b9\u5f0f\u7684\u52a8\u8bcd\uff1aGET\u3001POST\u3001PUT\u3001DELETE\u3002 \u5b83\u4eec\u5206\u522b\u5bf9\u5e94\u56db\u79cd\u57fa\u672c\u64cd\u4f5c\uff1aGET \u7528\u6765\u83b7\u53d6\u8d44\u6e90\uff0cPOST \u7528\u6765\u65b0\u5efa\u8d44\u6e90\uff0cPUT \u7528\u6765\u66f4\u65b0\u8d44\u6e90\uff0cDELETE \u7528\u6765\u5220\u9664\u8d44\u6e90\u3002 REST \u98ce\u683c\u63d0\u5021 URL \u5730\u5740\u4f7f\u7528\u7edf\u4e00\u7684\u98ce\u683c\u8bbe\u8ba1\uff0c\u4ece\u524d\u5230\u540e\u5404\u4e2a\u5355\u8bcd\u4f7f\u7528\u659c\u6760\u5206\u5f00\uff0c\u4e0d\u4f7f\u7528\u95ee\u53f7\u952e\u503c\u5bf9\u65b9\u5f0f\u643a\u5e26\u8bf7\u6c42\u53c2\u6570\uff0c\u800c\u662f\u5c06\u8981\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u7684\u6570\u636e\u4f5c\u4e3a URL \u5730\u5740\u7684\u4e00\u90e8\u5206\uff0c\u4ee5\u4fdd\u8bc1\u6574\u4f53\u98ce\u683c\u7684\u4e00\u81f4\u6027\u3002 \u64cd\u4f5c \u4f20\u7edf\u65b9\u5f0f REST\u98ce\u683c \u67e5\u8be2\u64cd\u4f5c getUserById?id=1 user/1-->get\u8bf7\u6c42\u65b9\u5f0f \u4fdd\u5b58\u64cd\u4f5c saveUser user-->post\u8bf7\u6c42\u65b9\u5f0f \u5220\u9664\u64cd\u4f5c deleteUser?id=1 user/1-->delete\u8bf7\u6c42\u65b9\u5f0f \u66f4\u65b0\u64cd\u4f5c updateUser user-->put\u8bf7\u6c42\u65b9\u5f0f 3\u3001HiddenHttpMethodFilter \u00b6 \u7531\u4e8e\u6d4f\u89c8\u5668\u53ea\u652f\u6301\u53d1\u9001get\u548cpost\u65b9\u5f0f\u7684\u8bf7\u6c42\uff0c\u90a3\u4e48\u8be5\u5982\u4f55\u53d1\u9001put\u548cdelete\u8bf7\u6c42\u5462\uff1f SpringMVC \u63d0\u4f9b\u4e86 HiddenHttpMethodFilter \u5e2e\u52a9\u6211\u4eec \u5c06 POST \u8bf7\u6c42\u8f6c\u6362\u4e3a DELETE \u6216 PUT \u8bf7\u6c42 HiddenHttpMethodFilter \u5904\u7406put\u548cdelete\u8bf7\u6c42\u7684\u6761\u4ef6\uff1a a>\u5f53\u524d\u8bf7\u6c42\u7684\u8bf7\u6c42\u65b9\u5f0f\u5fc5\u987b\u4e3apost b>\u5f53\u524d\u8bf7\u6c42\u5fc5\u987b\u4f20\u8f93\u8bf7\u6c42\u53c2\u6570_method \u6ee1\u8db3\u4ee5\u4e0a\u6761\u4ef6\uff0c HiddenHttpMethodFilter \u8fc7\u6ee4\u5668\u5c31\u4f1a\u5c06\u5f53\u524d\u8bf7\u6c42\u7684\u8bf7\u6c42\u65b9\u5f0f\u8f6c\u6362\u4e3a\u8bf7\u6c42\u53c2\u6570_method\u7684\u503c\uff0c\u56e0\u6b64\u8bf7\u6c42\u53c2\u6570_method\u7684\u503c\u624d\u662f\u6700\u7ec8\u7684\u8bf7\u6c42\u65b9\u5f0f \u5728web.xml\u4e2d\u6ce8\u518c HiddenHttpMethodFilter <filter> <filter-name> HiddenHttpMethodFilter </filter-name> <filter-class> org.springframework.web.filter.HiddenHttpMethodFilter </filter-class> </filter> <filter-mapping> <filter-name> HiddenHttpMethodFilter </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> \u6ce8\uff1a \u76ee\u524d\u4e3a\u6b62\uff0cSpringMVC\u4e2d\u63d0\u4f9b\u4e86\u4e24\u4e2a\u8fc7\u6ee4\u5668\uff1aCharacterEncodingFilter\u548cHiddenHttpMethodFilter \u5728web.xml\u4e2d\u6ce8\u518c\u65f6\uff0c\u5fc5\u987b\u5148\u6ce8\u518cCharacterEncodingFilter\uff0c\u518d\u6ce8\u518cHiddenHttpMethodFilter \u539f\u56e0\uff1a \u5728 CharacterEncodingFilter \u4e2d\u901a\u8fc7 request.setCharacterEncoding(encoding) \u65b9\u6cd5\u8bbe\u7f6e\u5b57\u7b26\u96c6\u7684 request.setCharacterEncoding(encoding) \u65b9\u6cd5\u8981\u6c42\u524d\u9762\u4e0d\u80fd\u6709\u4efb\u4f55\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570\u7684\u64cd\u4f5c \u800c HiddenHttpMethodFilter \u6070\u6070\u6709\u4e00\u4e2a\u83b7\u53d6\u8bf7\u6c42\u65b9\u5f0f\u7684\u64cd\u4f5c\uff1a String paramValue = request.getParameter(this.methodParam); \u516b\u3001RESTful\u6848\u4f8b \u00b6 1\u3001\u51c6\u5907\u5de5\u4f5c \u00b6 \u548c\u4f20\u7edf CRUD \u4e00\u6837\uff0c\u5b9e\u73b0\u5bf9\u5458\u5de5\u4fe1\u606f\u7684\u589e\u5220\u6539\u67e5\u3002 \u642d\u5efa\u73af\u5883 \u51c6\u5907\u5b9e\u4f53\u7c7b package com.atguigu.mvc.bean ; public class Employee { private Integer id ; private String lastName ; private String email ; //1 male, 0 female private Integer gender ; public Integer getId () { return id ; } public void setId ( Integer id ) { this . id = id ; } public String getLastName () { return lastName ; } public void setLastName ( String lastName ) { this . lastName = lastName ; } public String getEmail () { return email ; } public void setEmail ( String email ) { this . email = email ; } public Integer getGender () { return gender ; } public void setGender ( Integer gender ) { this . gender = gender ; } public Employee ( Integer id , String lastName , String email , Integer gender ) { super (); this . id = id ; this . lastName = lastName ; this . email = email ; this . gender = gender ; } public Employee () { } } \u51c6\u5907dao\u6a21\u62df\u6570\u636e package com.atguigu.mvc.dao ; import java.util.Collection ; import java.util.HashMap ; import java.util.Map ; import com.atguigu.mvc.bean.Employee ; import org.springframework.stereotype.Repository ; @Repository public class EmployeeDao { private static Map < Integer , Employee > employees = null ; static { employees = new HashMap < Integer , Employee > (); employees . put ( 1001 , new Employee ( 1001 , \"E-AA\" , \"aa@163.com\" , 1 )); employees . put ( 1002 , new Employee ( 1002 , \"E-BB\" , \"bb@163.com\" , 1 )); employees . put ( 1003 , new Employee ( 1003 , \"E-CC\" , \"cc@163.com\" , 0 )); employees . put ( 1004 , new Employee ( 1004 , \"E-DD\" , \"dd@163.com\" , 0 )); employees . put ( 1005 , new Employee ( 1005 , \"E-EE\" , \"ee@163.com\" , 1 )); } private static Integer initId = 1006 ; public void save ( Employee employee ){ if ( employee . getId () == null ){ employee . setId ( initId ++ ); } employees . put ( employee . getId (), employee ); } public Collection < Employee > getAll (){ return employees . values (); } public Employee get ( Integer id ){ return employees . get ( id ); } public void delete ( Integer id ){ employees . remove ( id ); } } 2\u3001\u529f\u80fd\u6e05\u5355 \u00b6 \u529f\u80fd URL \u5730\u5740 \u8bf7\u6c42\u65b9\u5f0f \u8bbf\u95ee\u9996\u9875\u221a / GET \u67e5\u8be2\u5168\u90e8\u6570\u636e\u221a /employee GET \u5220\u9664\u221a /employee/2 DELETE \u8df3\u8f6c\u5230\u6dfb\u52a0\u6570\u636e\u9875\u9762\u221a /toAdd GET \u6267\u884c\u4fdd\u5b58\u221a /employee POST \u8df3\u8f6c\u5230\u66f4\u65b0\u6570\u636e\u9875\u9762\u221a /employee/2 GET \u6267\u884c\u66f4\u65b0\u221a /employee PUT 3\u3001\u5177\u4f53\u529f\u80fd\uff1a\u8bbf\u95ee\u9996\u9875 \u00b6 a>\u914d\u7f6eview-controller \u00b6 <mvc:view-controller path= \"/\" view-name= \"index\" /> b>\u521b\u5efa\u9875\u9762 \u00b6 <!DOCTYPE html> < html lang = \"en\" xmlns:th = \"http://www.thymeleaf.org\" > < head > < meta charset = \"UTF-8\" > < title > Title </ title > </ head > < body > < h1 > \u9996\u9875 </ h1 > < a th:href = \"@{/employee}\" > \u8bbf\u95ee\u5458\u5de5\u4fe1\u606f </ a > </ body > </ html > 4\u3001\u5177\u4f53\u529f\u80fd\uff1a\u67e5\u8be2\u6240\u6709\u5458\u5de5\u6570\u636e \u00b6 a>\u63a7\u5236\u5668\u65b9\u6cd5 \u00b6 @RequestMapping ( value = \"/employee\" , method = RequestMethod . GET ) public String getEmployeeList ( Model model ){ Collection < Employee > employeeList = employeeDao . getAll (); model . addAttribute ( \"employeeList\" , employeeList ); return \"employee_list\" ; } b>\u521b\u5efaemployee_list.html \u00b6 <!DOCTYPE html> < html lang = \"en\" xmlns:th = \"http://www.thymeleaf.org\" > < head > < meta charset = \"UTF-8\" > < title > Employee Info </ title > < script type = \"text/javascript\" th:src = \"@{/static/js/vue.js}\" ></ script > </ head > < body > < table border = \"1\" cellpadding = \"0\" cellspacing = \"0\" style = \"text-align: center;\" id = \"dataTable\" > < tr > < th colspan = \"5\" > Employee Info </ th > </ tr > < tr > < th > id </ th > < th > lastName </ th > < th > email </ th > < th > gender </ th > < th > options( < a th:href = \"@{/toAdd}\" > add </ a > ) </ th > </ tr > < tr th:each = \"employee : ${employeeList}\" > < td th:text = \"${employee.id}\" ></ td > < td th:text = \"${employee.lastName}\" ></ td > < td th:text = \"${employee.email}\" ></ td > < td th:text = \"${employee.gender}\" ></ td > < td > < a class = \"deleteA\" @ click = \"deleteEmployee\" th:href = \"@{'/employee/'+${employee.id}}\" > delete </ a > < a th:href = \"@{'/employee/'+${employee.id}}\" > update </ a > </ td > </ tr > </ table > </ body > </ html > 5\u3001\u5177\u4f53\u529f\u80fd\uff1a\u5220\u9664 \u00b6 a>\u521b\u5efa\u5904\u7406delete\u8bf7\u6c42\u65b9\u5f0f\u7684\u8868\u5355 \u00b6 <!-- \u4f5c\u7528\uff1a\u901a\u8fc7\u8d85\u94fe\u63a5\u63a7\u5236\u8868\u5355\u7684\u63d0\u4ea4\uff0c\u5c06post\u8bf7\u6c42\u8f6c\u6362\u4e3adelete\u8bf7\u6c42 --> < form id = \"delete_form\" method = \"post\" > <!-- HiddenHttpMethodFilter\u8981\u6c42\uff1a\u5fc5\u987b\u4f20\u8f93_method\u8bf7\u6c42\u53c2\u6570\uff0c\u5e76\u4e14\u503c\u4e3a\u6700\u7ec8\u7684\u8bf7\u6c42\u65b9\u5f0f --> < input type = \"hidden\" name = \"_method\" value = \"delete\" /> </ form > b>\u5220\u9664\u8d85\u94fe\u63a5\u7ed1\u5b9a\u70b9\u51fb\u4e8b\u4ef6 \u00b6 \u5f15\u5165vue.js < script type = \"text/javascript\" th:src = \"@{/static/js/vue.js}\" ></ script > \u5220\u9664\u8d85\u94fe\u63a5 < a class = \"deleteA\" @ click = \"deleteEmployee\" th:href = \"@{'/employee/'+${employee.id}}\" > delete </ a > \u901a\u8fc7vue\u5904\u7406\u70b9\u51fb\u4e8b\u4ef6 < script type = \"text/javascript\" > var vue = new Vue ({ el : \"#dataTable\" , methods : { //event\u8868\u793a\u5f53\u524d\u4e8b\u4ef6 deleteEmployee : function ( event ) { //\u901a\u8fc7id\u83b7\u53d6\u8868\u5355\u6807\u7b7e var delete_form = document . getElementById ( \"delete_form\" ); //\u5c06\u89e6\u53d1\u4e8b\u4ef6\u7684\u8d85\u94fe\u63a5\u7684href\u5c5e\u6027\u4e3a\u8868\u5355\u7684action\u5c5e\u6027\u8d4b\u503c delete_form . action = event . target . href ; //\u63d0\u4ea4\u8868\u5355 delete_form . submit (); //\u963b\u6b62\u8d85\u94fe\u63a5\u7684\u9ed8\u8ba4\u8df3\u8f6c\u884c\u4e3a event . preventDefault (); } } }); </ script > c>\u63a7\u5236\u5668\u65b9\u6cd5 \u00b6 @RequestMapping ( value = \"/employee/{id}\" , method = RequestMethod . DELETE ) public String deleteEmployee ( @PathVariable ( \"id\" ) Integer id ){ employeeDao . delete ( id ); return \"redirect:/employee\" ; } 6\u3001\u5177\u4f53\u529f\u80fd\uff1a\u8df3\u8f6c\u5230\u6dfb\u52a0\u6570\u636e\u9875\u9762 \u00b6 a>\u914d\u7f6eview-controller \u00b6 <mvc:view-controller path= \"/toAdd\" view-name= \"employee_add\" ></mvc:view-controller> b>\u521b\u5efaemployee_add.html \u00b6 <!DOCTYPE html> < html lang = \"en\" xmlns:th = \"http://www.thymeleaf.org\" > < head > < meta charset = \"UTF-8\" > < title > Add Employee </ title > </ head > < body > < form th:action = \"@{/employee}\" method = \"post\" > lastName: < input type = \"text\" name = \"lastName\" >< br > email: < input type = \"text\" name = \"email\" >< br > gender: < input type = \"radio\" name = \"gender\" value = \"1\" > male < input type = \"radio\" name = \"gender\" value = \"0\" > female < br > < input type = \"submit\" value = \"add\" >< br > </ form > </ body > </ html > 7\u3001\u5177\u4f53\u529f\u80fd\uff1a\u6267\u884c\u4fdd\u5b58 \u00b6 a>\u63a7\u5236\u5668\u65b9\u6cd5 \u00b6 @RequestMapping ( value = \"/employee\" , method = RequestMethod . POST ) public String addEmployee ( Employee employee ){ employeeDao . save ( employee ); return \"redirect:/employee\" ; } 8\u3001\u5177\u4f53\u529f\u80fd\uff1a\u8df3\u8f6c\u5230\u66f4\u65b0\u6570\u636e\u9875\u9762 \u00b6 a>\u4fee\u6539\u8d85\u94fe\u63a5 \u00b6 < a th:href = \"@{'/employee/'+${employee.id}}\" > update </ a > b>\u63a7\u5236\u5668\u65b9\u6cd5 \u00b6 @RequestMapping ( value = \"/employee/{id}\" , method = RequestMethod . GET ) public String getEmployeeById ( @PathVariable ( \"id\" ) Integer id , Model model ){ Employee employee = employeeDao . get ( id ); model . addAttribute ( \"employee\" , employee ); return \"employee_update\" ; } c>\u521b\u5efaemployee_update.html \u00b6 <!DOCTYPE html> < html lang = \"en\" xmlns:th = \"http://www.thymeleaf.org\" > < head > < meta charset = \"UTF-8\" > < title > Update Employee </ title > </ head > < body > < form th:action = \"@{/employee}\" method = \"post\" > < input type = \"hidden\" name = \"_method\" value = \"put\" > < input type = \"hidden\" name = \"id\" th:value = \"${employee.id}\" > lastName: < input type = \"text\" name = \"lastName\" th:value = \"${employee.lastName}\" >< br > email: < input type = \"text\" name = \"email\" th:value = \"${employee.email}\" >< br > <!-- th:field=\"${employee.gender}\"\u53ef\u7528\u4e8e\u5355\u9009\u6846\u6216\u590d\u9009\u6846\u7684\u56de\u663e \u82e5\u5355\u9009\u6846\u7684value\u548cemployee.gender\u7684\u503c\u4e00\u81f4\uff0c\u5219\u6dfb\u52a0checked=\"checked\"\u5c5e\u6027 --> gender: < input type = \"radio\" name = \"gender\" value = \"1\" th:field = \"${employee.gender}\" > male < input type = \"radio\" name = \"gender\" value = \"0\" th:field = \"${employee.gender}\" > female < br > < input type = \"submit\" value = \"update\" >< br > </ form > </ body > </ html > 9\u3001\u5177\u4f53\u529f\u80fd\uff1a\u6267\u884c\u66f4\u65b0 \u00b6 a>\u63a7\u5236\u5668\u65b9\u6cd5 \u00b6 @RequestMapping ( value = \"/employee\" , method = RequestMethod . PUT ) public String updateEmployee ( Employee employee ){ employeeDao . save ( employee ); return \"redirect:/employee\" ; } \u516b\u3001HttpMessageConverter \u00b6 HttpMessageConverter\uff0c\u62a5\u6587\u4fe1\u606f\u8f6c\u6362\u5668\uff0c\u5c06\u8bf7\u6c42\u62a5\u6587\u8f6c\u6362\u4e3aJava\u5bf9\u8c61\uff0c\u6216\u5c06Java\u5bf9\u8c61\u8f6c\u6362\u4e3a\u54cd\u5e94\u62a5\u6587 HttpMessageConverter\u63d0\u4f9b\u4e86\u4e24\u4e2a\u6ce8\u89e3\u548c\u4e24\u4e2a\u7c7b\u578b\uff1a@RequestBody\uff0c@ResponseBody\uff0cRequestEntity\uff0c ResponseEntity 1\u3001@RequestBody \u00b6 @RequestBody\u53ef\u4ee5\u83b7\u53d6\u8bf7\u6c42\u4f53\uff0c\u9700\u8981\u5728\u63a7\u5236\u5668\u65b9\u6cd5\u8bbe\u7f6e\u4e00\u4e2a\u5f62\u53c2\uff0c\u4f7f\u7528@RequestBody\u8fdb\u884c\u6807\u8bc6\uff0c\u5f53\u524d\u8bf7\u6c42\u7684\u8bf7\u6c42\u4f53\u5c31\u4f1a\u4e3a\u5f53\u524d\u6ce8\u89e3\u6240\u6807\u8bc6\u7684\u5f62\u53c2\u8d4b\u503c < form th:action = \"@{/testRequestBody}\" method = \"post\" > \u7528\u6237\u540d\uff1a < input type = \"text\" name = \"username\" >< br > \u5bc6\u7801\uff1a < input type = \"password\" name = \"password\" >< br > < input type = \"submit\" > </ form > @RequestMapping ( \"/testRequestBody\" ) public String testRequestBody ( @RequestBody String requestBody ){ System . out . println ( \"requestBody:\" + requestBody ); return \"success\" ; } \u8f93\u51fa\u7ed3\u679c\uff1a requestBody:username=admin&password=123456 2\u3001RequestEntity \u00b6 RequestEntity\u5c01\u88c5\u8bf7\u6c42\u62a5\u6587\u7684\u4e00\u79cd\u7c7b\u578b\uff0c\u9700\u8981\u5728\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2\u4e2d\u8bbe\u7f6e\u8be5\u7c7b\u578b\u7684\u5f62\u53c2\uff0c\u5f53\u524d\u8bf7\u6c42\u7684\u8bf7\u6c42\u62a5\u6587\u5c31\u4f1a\u8d4b\u503c\u7ed9\u8be5\u5f62\u53c2\uff0c\u53ef\u4ee5\u901a\u8fc7getHeaders()\u83b7\u53d6\u8bf7\u6c42\u5934\u4fe1\u606f\uff0c\u901a\u8fc7getBody()\u83b7\u53d6\u8bf7\u6c42\u4f53\u4fe1\u606f @RequestMapping ( \"/testRequestEntity\" ) public String testRequestEntity ( RequestEntity < String > requestEntity ){ System . out . println ( \"requestHeader:\" + requestEntity . getHeaders ()); System . out . println ( \"requestBody:\" + requestEntity . getBody ()); return \"success\" ; } \u8f93\u51fa\u7ed3\u679c\uff1a requestHeader:[host:\"localhost:8080\", connection:\"keep-alive\", content-length:\"27\", cache-control:\"max-age=0\", sec-ch-ua:\"\" Not A;Brand\";v=\"99\", \"Chromium\";v=\"90\", \"Google Chrome\";v=\"90\"\", sec-ch-ua-mobile:\"?0\", upgrade-insecure-requests:\"1\", origin:\"http://localhost:8080\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36\"] requestBody:username=admin&password=123 3\u3001@ResponseBody \u00b6 @ResponseBody\u7528\u4e8e\u6807\u8bc6\u4e00\u4e2a\u63a7\u5236\u5668\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u8be5\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u76f4\u63a5\u4f5c\u4e3a\u54cd\u5e94\u62a5\u6587\u7684\u54cd\u5e94\u4f53\u54cd\u5e94\u5230\u6d4f\u89c8\u5668 @RequestMapping ( \"/testResponseBody\" ) @ResponseBody public String testResponseBody (){ return \"success\" ; } \u7ed3\u679c\uff1a\u6d4f\u89c8\u5668\u9875\u9762\u663e\u793asuccess 4\u3001SpringMVC\u5904\u7406json \u00b6 @ResponseBody\u5904\u7406json\u7684\u6b65\u9aa4\uff1a a>\u5bfc\u5165jackson\u7684\u4f9d\u8d56 <dependency> <groupId> com.fasterxml.jackson.core </groupId> <artifactId> jackson-databind </artifactId> <version> 2.12.1 </version> </dependency> b>\u5728SpringMVC\u7684\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6\u4e2d\u5f00\u542fmvc\u7684\u6ce8\u89e3\u9a71\u52a8\uff0c\u6b64\u65f6\u5728HandlerAdaptor\u4e2d\u4f1a\u81ea\u52a8\u88c5\u914d\u4e00\u4e2a\u6d88\u606f\u8f6c\u6362\u5668\uff1aMappingJackson2HttpMessageConverter\uff0c\u53ef\u4ee5\u5c06\u54cd\u5e94\u5230\u6d4f\u89c8\u5668\u7684Java\u5bf9\u8c61\u8f6c\u6362\u4e3aJson\u683c\u5f0f\u7684\u5b57\u7b26\u4e32 <mvc:annotation-driven /> c>\u5728\u5904\u7406\u5668\u65b9\u6cd5\u4e0a\u4f7f\u7528@ResponseBody\u6ce8\u89e3\u8fdb\u884c\u6807\u8bc6 d>\u5c06Java\u5bf9\u8c61\u76f4\u63a5\u4f5c\u4e3a\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u8fd4\u56de\uff0c\u5c31\u4f1a\u81ea\u52a8\u8f6c\u6362\u4e3aJson\u683c\u5f0f\u7684\u5b57\u7b26\u4e32 @RequestMapping ( \"/testResponseUser\" ) @ResponseBody public User testResponseUser (){ return new User ( 1001 , \"admin\" , \"123456\" , 23 , \"\u7537\" ); } \u6d4f\u89c8\u5668\u7684\u9875\u9762\u4e2d\u5c55\u793a\u7684\u7ed3\u679c\uff1a {\"id\":1001,\"username\":\"admin\",\"password\":\"123456\",\"age\":23,\"sex\":\"\u7537\"} 5\u3001SpringMVC\u5904\u7406ajax \u00b6 a>\u8bf7\u6c42\u8d85\u94fe\u63a5\uff1a < div id = \"app\" > < a th:href = \"@{/testAjax}\" @ click = \"testAjax\" > testAjax </ a >< br > </ div > b>\u901a\u8fc7vue\u548caxios\u5904\u7406\u70b9\u51fb\u4e8b\u4ef6\uff1a < script type = \"text/javascript\" th:src = \"@{/static/js/vue.js}\" ></ script > < script type = \"text/javascript\" th:src = \"@{/static/js/axios.min.js}\" ></ script > < script type = \"text/javascript\" > var vue = new Vue ({ el : \"#app\" , methods : { testAjax : function ( event ) { axios ({ method : \"post\" , url : event . target . href , params : { username : \"admin\" , password : \"123456\" } }). then ( function ( response ) { alert ( response . data ); }); event . preventDefault (); } } }); </ script > c>\u63a7\u5236\u5668\u65b9\u6cd5\uff1a @RequestMapping ( \"/testAjax\" ) @ResponseBody public String testAjax ( String username , String password ){ System . out . println ( \"username:\" + username + \",password:\" + password ); return \"hello,ajax\" ; } 6\u3001@RestController\u6ce8\u89e3 \u00b6 @RestController\u6ce8\u89e3\u662fspringMVC\u63d0\u4f9b\u7684\u4e00\u4e2a\u590d\u5408\u6ce8\u89e3\uff0c\u6807\u8bc6\u5728\u63a7\u5236\u5668\u7684\u7c7b\u4e0a\uff0c\u5c31\u76f8\u5f53\u4e8e\u4e3a\u7c7b\u6dfb\u52a0\u4e86@Controller\u6ce8\u89e3\uff0c\u5e76\u4e14\u4e3a\u5176\u4e2d\u7684\u6bcf\u4e2a\u65b9\u6cd5\u6dfb\u52a0\u4e86@ResponseBody\u6ce8\u89e3 7\u3001ResponseEntity \u00b6 ResponseEntity\u7528\u4e8e\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u8be5\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u5c31\u662f\u54cd\u5e94\u5230\u6d4f\u89c8\u5668\u7684\u54cd\u5e94\u62a5\u6587 \u4e5d\u3001\u6587\u4ef6\u4e0a\u4f20\u548c\u4e0b\u8f7d \u00b6 1\u3001\u6587\u4ef6\u4e0b\u8f7d \u00b6 \u4f7f\u7528ResponseEntity\u5b9e\u73b0\u4e0b\u8f7d\u6587\u4ef6\u7684\u529f\u80fd @RequestMapping ( \"/testDown\" ) public ResponseEntity < byte []> testResponseEntity ( HttpSession session ) throws IOException { //\u83b7\u53d6ServletContext\u5bf9\u8c61 ServletContext servletContext = session . getServletContext (); //\u83b7\u53d6\u670d\u52a1\u5668\u4e2d\u6587\u4ef6\u7684\u771f\u5b9e\u8def\u5f84 String realPath = servletContext . getRealPath ( \"/static/img/1.jpg\" ); //\u521b\u5efa\u8f93\u5165\u6d41 InputStream is = new FileInputStream ( realPath ); //\u521b\u5efa\u5b57\u8282\u6570\u7ec4 byte [] bytes = new byte [ is . available () ] ; //\u5c06\u6d41\u8bfb\u5230\u5b57\u8282\u6570\u7ec4\u4e2d is . read ( bytes ); //\u521b\u5efaHttpHeaders\u5bf9\u8c61\u8bbe\u7f6e\u54cd\u5e94\u5934\u4fe1\u606f MultiValueMap < String , String > headers = new HttpHeaders (); //\u8bbe\u7f6e\u8981\u4e0b\u8f7d\u65b9\u5f0f\u4ee5\u53ca\u4e0b\u8f7d\u6587\u4ef6\u7684\u540d\u5b57 headers . add ( \"Content-Disposition\" , \"attachment;filename=1.jpg\" ); //\u8bbe\u7f6e\u54cd\u5e94\u72b6\u6001\u7801 HttpStatus statusCode = HttpStatus . OK ; //\u521b\u5efaResponseEntity\u5bf9\u8c61 ResponseEntity < byte []> responseEntity = new ResponseEntity <> ( bytes , headers , statusCode ); //\u5173\u95ed\u8f93\u5165\u6d41 is . close (); return responseEntity ; } 2\u3001\u6587\u4ef6\u4e0a\u4f20 \u00b6 \u6587\u4ef6\u4e0a\u4f20\u8981\u6c42form\u8868\u5355\u7684\u8bf7\u6c42\u65b9\u5f0f\u5fc5\u987b\u4e3apost\uff0c\u5e76\u4e14\u6dfb\u52a0\u5c5e\u6027enctype=\"multipart/form-data\" SpringMVC\u4e2d\u5c06\u4e0a\u4f20\u7684\u6587\u4ef6\u5c01\u88c5\u5230MultipartFile\u5bf9\u8c61\u4e2d\uff0c\u901a\u8fc7\u6b64\u5bf9\u8c61\u53ef\u4ee5\u83b7\u53d6\u6587\u4ef6\u76f8\u5173\u4fe1\u606f \u4e0a\u4f20\u6b65\u9aa4\uff1a a>\u6dfb\u52a0\u4f9d\u8d56\uff1a <!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --> <dependency> <groupId> commons-fileupload </groupId> <artifactId> commons-fileupload </artifactId> <version> 1.3.1 </version> </dependency> b>\u5728SpringMVC\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u914d\u7f6e\uff1a <!--\u5fc5\u987b\u901a\u8fc7\u6587\u4ef6\u89e3\u6790\u5668\u7684\u89e3\u6790\u624d\u80fd\u5c06\u6587\u4ef6\u8f6c\u6362\u4e3aMultipartFile\u5bf9\u8c61--> <bean id= \"multipartResolver\" class= \"org.springframework.web.multipart.commons.CommonsMultipartResolver\" ></bean> c>\u63a7\u5236\u5668\u65b9\u6cd5\uff1a @RequestMapping ( \"/testUp\" ) public String testUp ( MultipartFile photo , HttpSession session ) throws IOException { //\u83b7\u53d6\u4e0a\u4f20\u7684\u6587\u4ef6\u7684\u6587\u4ef6\u540d String fileName = photo . getOriginalFilename (); //\u5904\u7406\u6587\u4ef6\u91cd\u540d\u95ee\u9898 String hzName = fileName . substring ( fileName . lastIndexOf ( \".\" )); fileName = UUID . randomUUID (). toString () + hzName ; //\u83b7\u53d6\u670d\u52a1\u5668\u4e2dphoto\u76ee\u5f55\u7684\u8def\u5f84 ServletContext servletContext = session . getServletContext (); String photoPath = servletContext . getRealPath ( \"photo\" ); File file = new File ( photoPath ); if ( ! file . exists ()){ file . mkdir (); } String finalPath = photoPath + File . separator + fileName ; //\u5b9e\u73b0\u4e0a\u4f20\u529f\u80fd photo . transferTo ( new File ( finalPath )); return \"success\" ; } \u5341\u3001\u62e6\u622a\u5668 \u00b6 1\u3001\u62e6\u622a\u5668\u7684\u914d\u7f6e \u00b6 SpringMVC\u4e2d\u7684\u62e6\u622a\u5668\u7528\u4e8e\u62e6\u622a\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u6267\u884c SpringMVC\u4e2d\u7684\u62e6\u622a\u5668\u9700\u8981\u5b9e\u73b0HandlerInterceptor SpringMVC\u7684\u62e6\u622a\u5668\u5fc5\u987b\u5728SpringMVC\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u8fdb\u884c\u914d\u7f6e\uff1a <bean class= \"com.atguigu.interceptor.FirstInterceptor\" ></bean> <ref bean= \"firstInterceptor\" ></ref> <!-- \u4ee5\u4e0a\u4e24\u79cd\u914d\u7f6e\u65b9\u5f0f\u90fd\u662f\u5bf9DispatcherServlet\u6240\u5904\u7406\u7684\u6240\u6709\u7684\u8bf7\u6c42\u8fdb\u884c\u62e6\u622a --> <mvc:interceptor> <mvc:mapping path= \"/**\" /> <mvc:exclude-mapping path= \"/testRequestEntity\" /> <ref bean= \"firstInterceptor\" ></ref> </mvc:interceptor> <!-- \u4ee5\u4e0a\u914d\u7f6e\u65b9\u5f0f\u53ef\u4ee5\u901a\u8fc7ref\u6216bean\u6807\u7b7e\u8bbe\u7f6e\u62e6\u622a\u5668\uff0c\u901a\u8fc7mvc:mapping\u8bbe\u7f6e\u9700\u8981\u62e6\u622a\u7684\u8bf7\u6c42\uff0c\u901a\u8fc7mvc:exclude-mapping\u8bbe\u7f6e\u9700\u8981\u6392\u9664\u7684\u8bf7\u6c42\uff0c\u5373\u4e0d\u9700\u8981\u62e6\u622a\u7684\u8bf7\u6c42 --> 2\u3001\u62e6\u622a\u5668\u7684\u4e09\u4e2a\u62bd\u8c61\u65b9\u6cd5 \u00b6 SpringMVC\u4e2d\u7684\u62e6\u622a\u5668\u6709\u4e09\u4e2a\u62bd\u8c61\u65b9\u6cd5\uff1a preHandle\uff1a\u63a7\u5236\u5668\u65b9\u6cd5\u6267\u884c\u4e4b\u524d\u6267\u884cpreHandle()\uff0c\u5176boolean\u7c7b\u578b\u7684\u8fd4\u56de\u503c\u8868\u793a\u662f\u5426\u62e6\u622a\u6216\u653e\u884c\uff0c\u8fd4\u56detrue\u4e3a\u653e\u884c\uff0c\u5373\u8c03\u7528\u63a7\u5236\u5668\u65b9\u6cd5\uff1b\u8fd4\u56defalse\u8868\u793a\u62e6\u622a\uff0c\u5373\u4e0d\u8c03\u7528\u63a7\u5236\u5668\u65b9\u6cd5 postHandle\uff1a\u63a7\u5236\u5668\u65b9\u6cd5\u6267\u884c\u4e4b\u540e\u6267\u884cpostHandle() afterComplation\uff1a\u5904\u7406\u5b8c\u89c6\u56fe\u548c\u6a21\u578b\u6570\u636e\uff0c\u6e32\u67d3\u89c6\u56fe\u5b8c\u6bd5\u4e4b\u540e\u6267\u884cafterComplation() 3\u3001\u591a\u4e2a\u62e6\u622a\u5668\u7684\u6267\u884c\u987a\u5e8f \u00b6 a>\u82e5\u6bcf\u4e2a\u62e6\u622a\u5668\u7684preHandle()\u90fd\u8fd4\u56detrue \u6b64\u65f6\u591a\u4e2a\u62e6\u622a\u5668\u7684\u6267\u884c\u987a\u5e8f\u548c\u62e6\u622a\u5668\u5728SpringMVC\u7684\u914d\u7f6e\u6587\u4ef6\u7684\u914d\u7f6e\u987a\u5e8f\u6709\u5173\uff1a preHandle()\u4f1a\u6309\u7167\u914d\u7f6e\u7684\u987a\u5e8f\u6267\u884c\uff0c\u800cpostHandle()\u548cafterComplation()\u4f1a\u6309\u7167\u914d\u7f6e\u7684\u53cd\u5e8f\u6267\u884c b>\u82e5\u67d0\u4e2a\u62e6\u622a\u5668\u7684preHandle()\u8fd4\u56de\u4e86false preHandle()\u8fd4\u56defalse\u548c\u5b83\u4e4b\u524d\u7684\u62e6\u622a\u5668\u7684preHandle()\u90fd\u4f1a\u6267\u884c\uff0cpostHandle()\u90fd\u4e0d\u6267\u884c\uff0c\u8fd4\u56defalse\u7684\u62e6\u622a\u5668\u4e4b\u524d\u7684\u62e6\u622a\u5668\u7684afterComplation()\u4f1a\u6267\u884c \u5341\u4e00\u3001\u5f02\u5e38\u5904\u7406\u5668 \u00b6 1\u3001\u57fa\u4e8e\u914d\u7f6e\u7684\u5f02\u5e38\u5904\u7406 \u00b6 SpringMVC\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5904\u7406\u63a7\u5236\u5668\u65b9\u6cd5\u6267\u884c\u8fc7\u7a0b\u4e2d\u6240\u51fa\u73b0\u7684\u5f02\u5e38\u7684\u63a5\u53e3\uff1aHandlerExceptionResolver HandlerExceptionResolver\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u6709\uff1aDefaultHandlerExceptionResolver\u548cSimpleMappingExceptionResolver SpringMVC\u63d0\u4f9b\u4e86\u81ea\u5b9a\u4e49\u7684\u5f02\u5e38\u5904\u7406\u5668SimpleMappingExceptionResolver\uff0c\u4f7f\u7528\u65b9\u5f0f\uff1a <bean class= \"org.springframework.web.servlet.handler.SimpleMappingExceptionResolver\" > <property name= \"exceptionMappings\" > <props> <!-- properties\u7684\u952e\u8868\u793a\u5904\u7406\u5668\u65b9\u6cd5\u6267\u884c\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\u5f02\u5e38 properties\u7684\u503c\u8868\u793a\u82e5\u51fa\u73b0\u6307\u5b9a\u5f02\u5e38\u65f6\uff0c\u8bbe\u7f6e\u4e00\u4e2a\u65b0\u7684\u89c6\u56fe\u540d\u79f0\uff0c\u8df3\u8f6c\u5230\u6307\u5b9a\u9875\u9762 --> <prop key= \"java.lang.ArithmeticException\" > error </prop> </props> </property> <!-- exceptionAttribute\u5c5e\u6027\u8bbe\u7f6e\u4e00\u4e2a\u5c5e\u6027\u540d\uff0c\u5c06\u51fa\u73b0\u7684\u5f02\u5e38\u4fe1\u606f\u5728\u8bf7\u6c42\u57df\u4e2d\u8fdb\u884c\u5171\u4eab --> <property name= \"exceptionAttribute\" value= \"ex\" ></property> </bean> 2\u3001\u57fa\u4e8e\u6ce8\u89e3\u7684\u5f02\u5e38\u5904\u7406 \u00b6 //@ControllerAdvice\u5c06\u5f53\u524d\u7c7b\u6807\u8bc6\u4e3a\u5f02\u5e38\u5904\u7406\u7684\u7ec4\u4ef6 @ControllerAdvice public class ExceptionController { //@ExceptionHandler\u7528\u4e8e\u8bbe\u7f6e\u6240\u6807\u8bc6\u65b9\u6cd5\u5904\u7406\u7684\u5f02\u5e38 @ExceptionHandler ( ArithmeticException . class ) //ex\u8868\u793a\u5f53\u524d\u8bf7\u6c42\u5904\u7406\u4e2d\u51fa\u73b0\u7684\u5f02\u5e38\u5bf9\u8c61 public String handleArithmeticException ( Exception ex , Model model ){ model . addAttribute ( \"ex\" , ex ); return \"error\" ; } } \u5341\u4e8c\u3001\u6ce8\u89e3\u914d\u7f6eSpringMVC \u00b6 \u4f7f\u7528\u914d\u7f6e\u7c7b\u548c\u6ce8\u89e3\u4ee3\u66ffweb.xml\u548cSpringMVC\u914d\u7f6e\u6587\u4ef6\u7684\u529f\u80fd 1\u3001\u521b\u5efa\u521d\u59cb\u5316\u7c7b\uff0c\u4ee3\u66ffweb.xml \u00b6 \u5728Servlet3.0\u73af\u5883\u4e2d\uff0c\u5bb9\u5668\u4f1a\u5728\u7c7b\u8def\u5f84\u4e2d\u67e5\u627e\u5b9e\u73b0javax.servlet.ServletContainerInitializer\u63a5\u53e3\u7684\u7c7b\uff0c\u5982\u679c\u627e\u5230\u7684\u8bdd\u5c31\u7528\u5b83\u6765\u914d\u7f6eServlet\u5bb9\u5668\u3002 Spring\u63d0\u4f9b\u4e86\u8fd9\u4e2a\u63a5\u53e3\u7684\u5b9e\u73b0\uff0c\u540d\u4e3aSpringServletContainerInitializer\uff0c\u8fd9\u4e2a\u7c7b\u53cd\u8fc7\u6765\u53c8\u4f1a\u67e5\u627e\u5b9e\u73b0WebApplicationInitializer\u7684\u7c7b\u5e76\u5c06\u914d\u7f6e\u7684\u4efb\u52a1\u4ea4\u7ed9\u5b83\u4eec\u6765\u5b8c\u6210\u3002Spring3.2\u5f15\u5165\u4e86\u4e00\u4e2a\u4fbf\u5229\u7684WebApplicationInitializer\u57fa\u7840\u5b9e\u73b0\uff0c\u540d\u4e3aAbstractAnnotationConfigDispatcherServletInitializer\uff0c\u5f53\u6211\u4eec\u7684\u7c7b\u6269\u5c55\u4e86AbstractAnnotationConfigDispatcherServletInitializer\u5e76\u5c06\u5176\u90e8\u7f72\u5230Servlet3.0\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u5bb9\u5668\u4f1a\u81ea\u52a8\u53d1\u73b0\u5b83\uff0c\u5e76\u7528\u5b83\u6765\u914d\u7f6eServlet\u4e0a\u4e0b\u6587\u3002 public class WebInit extends AbstractAnnotationConfigDispatcherServletInitializer { /** * \u6307\u5b9aspring\u7684\u914d\u7f6e\u7c7b * @return */ @Override protected Class <?>[] getRootConfigClasses () { return new Class [] { SpringConfig . class }; } /** * \u6307\u5b9aSpringMVC\u7684\u914d\u7f6e\u7c7b * @return */ @Override protected Class <?>[] getServletConfigClasses () { return new Class [] { WebConfig . class }; } /** * \u6307\u5b9aDispatcherServlet\u7684\u6620\u5c04\u89c4\u5219\uff0c\u5373url-pattern * @return */ @Override protected String [] getServletMappings () { return new String [] { \"/\" }; } /** * \u6dfb\u52a0\u8fc7\u6ee4\u5668 * @return */ @Override protected Filter [] getServletFilters () { CharacterEncodingFilter encodingFilter = new CharacterEncodingFilter (); encodingFilter . setEncoding ( \"UTF-8\" ); encodingFilter . setForceRequestEncoding ( true ); HiddenHttpMethodFilter hiddenHttpMethodFilter = new HiddenHttpMethodFilter (); return new Filter [] { encodingFilter , hiddenHttpMethodFilter }; } } 2\u3001\u521b\u5efaSpringConfig\u914d\u7f6e\u7c7b\uff0c\u4ee3\u66ffspring\u7684\u914d\u7f6e\u6587\u4ef6 \u00b6 @Configuration public class SpringConfig { //ssm\u6574\u5408\u4e4b\u540e\uff0cspring\u7684\u914d\u7f6e\u4fe1\u606f\u5199\u5728\u6b64\u7c7b\u4e2d } 3\u3001\u521b\u5efaWebConfig\u914d\u7f6e\u7c7b\uff0c\u4ee3\u66ffSpringMVC\u7684\u914d\u7f6e\u6587\u4ef6 \u00b6 @Configuration //\u626b\u63cf\u7ec4\u4ef6 @ComponentScan ( \"com.atguigu.mvc.controller\" ) //\u5f00\u542fMVC\u6ce8\u89e3\u9a71\u52a8 @EnableWebMvc public class WebConfig implements WebMvcConfigurer { //\u4f7f\u7528\u9ed8\u8ba4\u7684servlet\u5904\u7406\u9759\u6001\u8d44\u6e90 @Override public void configureDefaultServletHandling ( DefaultServletHandlerConfigurer configurer ) { configurer . enable (); } //\u914d\u7f6e\u6587\u4ef6\u4e0a\u4f20\u89e3\u6790\u5668 @Bean public CommonsMultipartResolver multipartResolver (){ return new CommonsMultipartResolver (); } //\u914d\u7f6e\u62e6\u622a\u5668 @Override public void addInterceptors ( InterceptorRegistry registry ) { FirstInterceptor firstInterceptor = new FirstInterceptor (); registry . addInterceptor ( firstInterceptor ). addPathPatterns ( \"/**\" ); } //\u914d\u7f6e\u89c6\u56fe\u63a7\u5236 /*@Override public void addViewControllers(ViewControllerRegistry registry) { registry.addViewController(\"/\").setViewName(\"index\"); }*/ //\u914d\u7f6e\u5f02\u5e38\u6620\u5c04 /*@Override public void configureHandlerExceptionResolvers(List<HandlerExceptionResolver> resolvers) { SimpleMappingExceptionResolver exceptionResolver = new SimpleMappingExceptionResolver(); Properties prop = new Properties(); prop.setProperty(\"java.lang.ArithmeticException\", \"error\"); //\u8bbe\u7f6e\u5f02\u5e38\u6620\u5c04 exceptionResolver.setExceptionMappings(prop); //\u8bbe\u7f6e\u5171\u4eab\u5f02\u5e38\u4fe1\u606f\u7684\u952e exceptionResolver.setExceptionAttribute(\"ex\"); resolvers.add(exceptionResolver); }*/ //\u914d\u7f6e\u751f\u6210\u6a21\u677f\u89e3\u6790\u5668 @Bean public ITemplateResolver templateResolver () { WebApplicationContext webApplicationContext = ContextLoader . getCurrentWebApplicationContext (); // ServletContextTemplateResolver\u9700\u8981\u4e00\u4e2aServletContext\u4f5c\u4e3a\u6784\u9020\u53c2\u6570\uff0c\u53ef\u901a\u8fc7WebApplicationContext \u7684\u65b9\u6cd5\u83b7\u5f97 ServletContextTemplateResolver templateResolver = new ServletContextTemplateResolver ( webApplicationContext . getServletContext ()); templateResolver . setPrefix ( \"/WEB-INF/templates/\" ); templateResolver . setSuffix ( \".html\" ); templateResolver . setCharacterEncoding ( \"UTF-8\" ); templateResolver . setTemplateMode ( TemplateMode . HTML ); return templateResolver ; } //\u751f\u6210\u6a21\u677f\u5f15\u64ce\u5e76\u4e3a\u6a21\u677f\u5f15\u64ce\u6ce8\u5165\u6a21\u677f\u89e3\u6790\u5668 @Bean public SpringTemplateEngine templateEngine ( ITemplateResolver templateResolver ) { SpringTemplateEngine templateEngine = new SpringTemplateEngine (); templateEngine . setTemplateResolver ( templateResolver ); return templateEngine ; } //\u751f\u6210\u89c6\u56fe\u89e3\u6790\u5668\u5e76\u672a\u89e3\u6790\u5668\u6ce8\u5165\u6a21\u677f\u5f15\u64ce @Bean public ViewResolver viewResolver ( SpringTemplateEngine templateEngine ) { ThymeleafViewResolver viewResolver = new ThymeleafViewResolver (); viewResolver . setCharacterEncoding ( \"UTF-8\" ); viewResolver . setTemplateEngine ( templateEngine ); return viewResolver ; } } 4\u3001\u6d4b\u8bd5\u529f\u80fd \u00b6 @RequestMapping ( \"/\" ) public String index (){ return \"index\" ; } \u5341\u4e09\u3001SpringMVC\u6267\u884c\u6d41\u7a0b \u00b6 1\u3001SpringMVC\u5e38\u7528\u7ec4\u4ef6 \u00b6 DispatcherServlet\uff1a \u524d\u7aef\u63a7\u5236\u5668 \uff0c\u4e0d\u9700\u8981\u5de5\u7a0b\u5e08\u5f00\u53d1\uff0c\u7531\u6846\u67b6\u63d0\u4f9b \u4f5c\u7528\uff1a\u7edf\u4e00\u5904\u7406\u8bf7\u6c42\u548c\u54cd\u5e94\uff0c\u6574\u4e2a\u6d41\u7a0b\u63a7\u5236\u7684\u4e2d\u5fc3\uff0c\u7531\u5b83\u8c03\u7528\u5176\u5b83\u7ec4\u4ef6\u5904\u7406\u7528\u6237\u7684\u8bf7\u6c42 HandlerMapping\uff1a \u5904\u7406\u5668\u6620\u5c04\u5668 \uff0c\u4e0d\u9700\u8981\u5de5\u7a0b\u5e08\u5f00\u53d1\uff0c\u7531\u6846\u67b6\u63d0\u4f9b \u4f5c\u7528\uff1a\u6839\u636e\u8bf7\u6c42\u7684url\u3001method\u7b49\u4fe1\u606f\u67e5\u627eHandler\uff0c\u5373\u63a7\u5236\u5668\u65b9\u6cd5 Handler\uff1a \u5904\u7406\u5668 \uff0c\u9700\u8981\u5de5\u7a0b\u5e08\u5f00\u53d1 \u4f5c\u7528\uff1a\u5728DispatcherServlet\u7684\u63a7\u5236\u4e0bHandler\u5bf9\u5177\u4f53\u7684\u7528\u6237\u8bf7\u6c42\u8fdb\u884c\u5904\u7406 HandlerAdapter\uff1a \u5904\u7406\u5668\u9002\u914d\u5668 \uff0c\u4e0d\u9700\u8981\u5de5\u7a0b\u5e08\u5f00\u53d1\uff0c\u7531\u6846\u67b6\u63d0\u4f9b \u4f5c\u7528\uff1a\u901a\u8fc7HandlerAdapter\u5bf9\u5904\u7406\u5668\uff08\u63a7\u5236\u5668\u65b9\u6cd5\uff09\u8fdb\u884c\u6267\u884c ViewResolver\uff1a \u89c6\u56fe\u89e3\u6790\u5668 \uff0c\u4e0d\u9700\u8981\u5de5\u7a0b\u5e08\u5f00\u53d1\uff0c\u7531\u6846\u67b6\u63d0\u4f9b \u4f5c\u7528\uff1a\u8fdb\u884c\u89c6\u56fe\u89e3\u6790\uff0c\u5f97\u5230\u76f8\u5e94\u7684\u89c6\u56fe\uff0c\u4f8b\u5982\uff1aThymeleafView\u3001InternalResourceView\u3001RedirectView View\uff1a \u89c6\u56fe \u4f5c\u7528\uff1a\u5c06\u6a21\u578b\u6570\u636e\u901a\u8fc7\u9875\u9762\u5c55\u793a\u7ed9\u7528\u6237 2\u3001DispatcherServlet\u521d\u59cb\u5316\u8fc7\u7a0b \u00b6 DispatcherServlet \u672c\u8d28\u4e0a\u662f\u4e00\u4e2a Servlet\uff0c\u6240\u4ee5\u5929\u7136\u7684\u9075\u5faa Servlet \u7684\u751f\u547d\u5468\u671f\u3002\u6240\u4ee5\u5b8f\u89c2\u4e0a\u662f Servlet \u751f\u547d\u5468\u671f\u6765\u8fdb\u884c\u8c03\u5ea6\u3002 a>\u521d\u59cb\u5316WebApplicationContext \u00b6 \u6240\u5728\u7c7b\uff1aorg.springframework.web.servlet.FrameworkServlet protected WebApplicationContext initWebApplicationContext () { WebApplicationContext rootContext = WebApplicationContextUtils . getWebApplicationContext ( getServletContext ()); WebApplicationContext wac = null ; if ( this . webApplicationContext != null ) { // A context instance was injected at construction time -> use it wac = this . webApplicationContext ; if ( wac instanceof ConfigurableWebApplicationContext ) { ConfigurableWebApplicationContext cwac = ( ConfigurableWebApplicationContext ) wac ; if ( ! cwac . isActive ()) { // The context has not yet been refreshed -> provide services such as // setting the parent context, setting the application context id, etc if ( cwac . getParent () == null ) { // The context instance was injected without an explicit parent -> set // the root application context (if any; may be null) as the parent cwac . setParent ( rootContext ); } configureAndRefreshWebApplicationContext ( cwac ); } } } if ( wac == null ) { // No context instance was injected at construction time -> see if one // has been registered in the servlet context. If one exists, it is assumed // that the parent context (if any) has already been set and that the // user has performed any initialization such as setting the context id wac = findWebApplicationContext (); } if ( wac == null ) { // No context instance is defined for this servlet -> create a local one // \u521b\u5efaWebApplicationContext wac = createWebApplicationContext ( rootContext ); } if ( ! this . refreshEventReceived ) { // Either the context is not a ConfigurableApplicationContext with refresh // support or the context injected at construction time had already been // refreshed -> trigger initial onRefresh manually here. synchronized ( this . onRefreshMonitor ) { // \u5237\u65b0WebApplicationContext onRefresh ( wac ); } } if ( this . publishContext ) { // Publish the context as a servlet context attribute. // \u5c06IOC\u5bb9\u5668\u5728\u5e94\u7528\u57df\u5171\u4eab String attrName = getServletContextAttributeName (); getServletContext (). setAttribute ( attrName , wac ); } return wac ; } b>\u521b\u5efaWebApplicationContext \u00b6 \u6240\u5728\u7c7b\uff1aorg.springframework.web.servlet.FrameworkServlet protected WebApplicationContext createWebApplicationContext ( @Nullable ApplicationContext parent ) { Class <?> contextClass = getContextClass (); if ( ! ConfigurableWebApplicationContext . class . isAssignableFrom ( contextClass )) { throw new ApplicationContextException ( \"Fatal initialization error in servlet with name '\" + getServletName () + \"': custom WebApplicationContext class [\" + contextClass . getName () + \"] is not of type ConfigurableWebApplicationContext\" ); } // \u901a\u8fc7\u53cd\u5c04\u521b\u5efa IOC \u5bb9\u5668\u5bf9\u8c61 ConfigurableWebApplicationContext wac = ( ConfigurableWebApplicationContext ) BeanUtils . instantiateClass ( contextClass ); wac . setEnvironment ( getEnvironment ()); // \u8bbe\u7f6e\u7236\u5bb9\u5668 wac . setParent ( parent ); String configLocation = getContextConfigLocation (); if ( configLocation != null ) { wac . setConfigLocation ( configLocation ); } configureAndRefreshWebApplicationContext ( wac ); return wac ; } c>DispatcherServlet\u521d\u59cb\u5316\u7b56\u7565 \u00b6 FrameworkServlet\u521b\u5efaWebApplicationContext\u540e\uff0c\u5237\u65b0\u5bb9\u5668\uff0c\u8c03\u7528onRefresh(wac)\uff0c\u6b64\u65b9\u6cd5\u5728DispatcherServlet\u4e2d\u8fdb\u884c\u4e86\u91cd\u5199\uff0c\u8c03\u7528\u4e86initStrategies(context)\u65b9\u6cd5\uff0c\u521d\u59cb\u5316\u7b56\u7565\uff0c\u5373\u521d\u59cb\u5316DispatcherServlet\u7684\u5404\u4e2a\u7ec4\u4ef6 \u6240\u5728\u7c7b\uff1aorg.springframework.web.servlet.DispatcherServlet protected void initStrategies ( ApplicationContext context ) { initMultipartResolver ( context ); initLocaleResolver ( context ); initThemeResolver ( context ); initHandlerMappings ( context ); initHandlerAdapters ( context ); initHandlerExceptionResolvers ( context ); initRequestToViewNameTranslator ( context ); initViewResolvers ( context ); initFlashMapManager ( context ); } 3\u3001DispatcherServlet\u8c03\u7528\u7ec4\u4ef6\u5904\u7406\u8bf7\u6c42 \u00b6 a>processRequest() \u00b6 FrameworkServlet\u91cd\u5199HttpServlet\u4e2d\u7684service()\u548cdoXxx()\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u4e2d\u8c03\u7528\u4e86processRequest(request, response) \u6240\u5728\u7c7b\uff1aorg.springframework.web.servlet.FrameworkServlet protected final void processRequest ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { long startTime = System . currentTimeMillis (); Throwable failureCause = null ; LocaleContext previousLocaleContext = LocaleContextHolder . getLocaleContext (); LocaleContext localeContext = buildLocaleContext ( request ); RequestAttributes previousAttributes = RequestContextHolder . getRequestAttributes (); ServletRequestAttributes requestAttributes = buildRequestAttributes ( request , response , previousAttributes ); WebAsyncManager asyncManager = WebAsyncUtils . getAsyncManager ( request ); asyncManager . registerCallableInterceptor ( FrameworkServlet . class . getName (), new RequestBindingInterceptor ()); initContextHolders ( request , localeContext , requestAttributes ); try { // \u6267\u884c\u670d\u52a1\uff0cdoService()\u662f\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\uff0c\u5728DispatcherServlet\u4e2d\u8fdb\u884c\u4e86\u91cd\u5199 doService ( request , response ); } catch ( ServletException | IOException ex ) { failureCause = ex ; throw ex ; } catch ( Throwable ex ) { failureCause = ex ; throw new NestedServletException ( \"Request processing failed\" , ex ); } finally { resetContextHolders ( request , previousLocaleContext , previousAttributes ); if ( requestAttributes != null ) { requestAttributes . requestCompleted (); } logResult ( request , response , failureCause , asyncManager ); publishRequestHandledEvent ( request , response , startTime , failureCause ); } } b>doService() \u00b6 \u6240\u5728\u7c7b\uff1aorg.springframework.web.servlet.DispatcherServlet @Override protected void doService ( HttpServletRequest request , HttpServletResponse response ) throws Exception { logRequest ( request ); // Keep a snapshot of the request attributes in case of an include, // to be able to restore the original attributes after the include. Map < String , Object > attributesSnapshot = null ; if ( WebUtils . isIncludeRequest ( request )) { attributesSnapshot = new HashMap <> (); Enumeration <?> attrNames = request . getAttributeNames (); while ( attrNames . hasMoreElements ()) { String attrName = ( String ) attrNames . nextElement (); if ( this . cleanupAfterInclude || attrName . startsWith ( DEFAULT_STRATEGIES_PREFIX )) { attributesSnapshot . put ( attrName , request . getAttribute ( attrName )); } } } // Make framework objects available to handlers and view objects. request . setAttribute ( WEB_APPLICATION_CONTEXT_ATTRIBUTE , getWebApplicationContext ()); request . setAttribute ( LOCALE_RESOLVER_ATTRIBUTE , this . localeResolver ); request . setAttribute ( THEME_RESOLVER_ATTRIBUTE , this . themeResolver ); request . setAttribute ( THEME_SOURCE_ATTRIBUTE , getThemeSource ()); if ( this . flashMapManager != null ) { FlashMap inputFlashMap = this . flashMapManager . retrieveAndUpdate ( request , response ); if ( inputFlashMap != null ) { request . setAttribute ( INPUT_FLASH_MAP_ATTRIBUTE , Collections . unmodifiableMap ( inputFlashMap )); } request . setAttribute ( OUTPUT_FLASH_MAP_ATTRIBUTE , new FlashMap ()); request . setAttribute ( FLASH_MAP_MANAGER_ATTRIBUTE , this . flashMapManager ); } RequestPath requestPath = null ; if ( this . parseRequestPath && ! ServletRequestPathUtils . hasParsedRequestPath ( request )) { requestPath = ServletRequestPathUtils . parseAndCache ( request ); } try { // \u5904\u7406\u8bf7\u6c42\u548c\u54cd\u5e94 doDispatch ( request , response ); } finally { if ( ! WebAsyncUtils . getAsyncManager ( request ). isConcurrentHandlingStarted ()) { // Restore the original attribute snapshot, in case of an include. if ( attributesSnapshot != null ) { restoreAttributesAfterInclude ( request , attributesSnapshot ); } } if ( requestPath != null ) { ServletRequestPathUtils . clearParsedRequestPath ( request ); } } } c>doDispatch() \u00b6 \u6240\u5728\u7c7b\uff1aorg.springframework.web.servlet.DispatcherServlet protected void doDispatch ( HttpServletRequest request , HttpServletResponse response ) throws Exception { HttpServletRequest processedRequest = request ; HandlerExecutionChain mappedHandler = null ; boolean multipartRequestParsed = false ; WebAsyncManager asyncManager = WebAsyncUtils . getAsyncManager ( request ); try { ModelAndView mv = null ; Exception dispatchException = null ; try { processedRequest = checkMultipart ( request ); multipartRequestParsed = ( processedRequest != request ); // Determine handler for the current request. /* mappedHandler\uff1a\u8c03\u7528\u94fe \u5305\u542bhandler\u3001interceptorList\u3001interceptorIndex handler\uff1a\u6d4f\u89c8\u5668\u53d1\u9001\u7684\u8bf7\u6c42\u6240\u5339\u914d\u7684\u63a7\u5236\u5668\u65b9\u6cd5 interceptorList\uff1a\u5904\u7406\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u6240\u6709\u62e6\u622a\u5668\u96c6\u5408 interceptorIndex\uff1a\u62e6\u622a\u5668\u7d22\u5f15\uff0c\u63a7\u5236\u62e6\u622a\u5668afterCompletion()\u7684\u6267\u884c */ mappedHandler = getHandler ( processedRequest ); if ( mappedHandler == null ) { noHandlerFound ( processedRequest , response ); return ; } // Determine handler adapter for the current request. // \u901a\u8fc7\u63a7\u5236\u5668\u65b9\u6cd5\u521b\u5efa\u76f8\u5e94\u7684\u5904\u7406\u5668\u9002\u914d\u5668\uff0c\u8c03\u7528\u6240\u5bf9\u5e94\u7684\u63a7\u5236\u5668\u65b9\u6cd5 HandlerAdapter ha = getHandlerAdapter ( mappedHandler . getHandler ()); // Process last-modified header, if supported by the handler. String method = request . getMethod (); boolean isGet = \"GET\" . equals ( method ); if ( isGet || \"HEAD\" . equals ( method )) { long lastModified = ha . getLastModified ( request , mappedHandler . getHandler ()); if ( new ServletWebRequest ( request , response ). checkNotModified ( lastModified ) && isGet ) { return ; } } // \u8c03\u7528\u62e6\u622a\u5668\u7684preHandle() if ( ! mappedHandler . applyPreHandle ( processedRequest , response )) { return ; } // Actually invoke the handler. // \u7531\u5904\u7406\u5668\u9002\u914d\u5668\u8c03\u7528\u5177\u4f53\u7684\u63a7\u5236\u5668\u65b9\u6cd5\uff0c\u6700\u7ec8\u83b7\u5f97ModelAndView\u5bf9\u8c61 mv = ha . handle ( processedRequest , response , mappedHandler . getHandler ()); if ( asyncManager . isConcurrentHandlingStarted ()) { return ; } applyDefaultViewName ( processedRequest , mv ); // \u8c03\u7528\u62e6\u622a\u5668\u7684postHandle() mappedHandler . applyPostHandle ( processedRequest , response , mv ); } catch ( Exception ex ) { dispatchException = ex ; } catch ( Throwable err ) { // As of 4.3, we're processing Errors thrown from handler methods as well, // making them available for @ExceptionHandler methods and other scenarios. dispatchException = new NestedServletException ( \"Handler dispatch failed\" , err ); } // \u540e\u7eed\u5904\u7406\uff1a\u5904\u7406\u6a21\u578b\u6570\u636e\u548c\u6e32\u67d3\u89c6\u56fe processDispatchResult ( processedRequest , response , mappedHandler , mv , dispatchException ); } catch ( Exception ex ) { triggerAfterCompletion ( processedRequest , response , mappedHandler , ex ); } catch ( Throwable err ) { triggerAfterCompletion ( processedRequest , response , mappedHandler , new NestedServletException ( \"Handler processing failed\" , err )); } finally { if ( asyncManager . isConcurrentHandlingStarted ()) { // Instead of postHandle and afterCompletion if ( mappedHandler != null ) { mappedHandler . applyAfterConcurrentHandlingStarted ( processedRequest , response ); } } else { // Clean up any resources used by a multipart request. if ( multipartRequestParsed ) { cleanupMultipart ( processedRequest ); } } } } d>processDispatchResult() \u00b6 private void processDispatchResult ( HttpServletRequest request , HttpServletResponse response , @Nullable HandlerExecutionChain mappedHandler , @Nullable ModelAndView mv , @Nullable Exception exception ) throws Exception { boolean errorView = false ; if ( exception != null ) { if ( exception instanceof ModelAndViewDefiningException ) { logger . debug ( \"ModelAndViewDefiningException encountered\" , exception ); mv = (( ModelAndViewDefiningException ) exception ). getModelAndView (); } else { Object handler = ( mappedHandler != null ? mappedHandler . getHandler () : null ); mv = processHandlerException ( request , response , handler , exception ); errorView = ( mv != null ); } } // Did the handler return a view to render? if ( mv != null && ! mv . wasCleared ()) { // \u5904\u7406\u6a21\u578b\u6570\u636e\u548c\u6e32\u67d3\u89c6\u56fe render ( mv , request , response ); if ( errorView ) { WebUtils . clearErrorRequestAttributes ( request ); } } else { if ( logger . isTraceEnabled ()) { logger . trace ( \"No view rendering, null ModelAndView returned.\" ); } } if ( WebAsyncUtils . getAsyncManager ( request ). isConcurrentHandlingStarted ()) { // Concurrent handling started during a forward return ; } if ( mappedHandler != null ) { // Exception (if any) is already handled.. // \u8c03\u7528\u62e6\u622a\u5668\u7684afterCompletion() mappedHandler . triggerAfterCompletion ( request , response , null ); } } 4\u3001SpringMVC\u7684\u6267\u884c\u6d41\u7a0b \u00b6 1) \u7528\u6237\u5411\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\uff0c\u8bf7\u6c42\u88abSpringMVC \u524d\u7aef\u63a7\u5236\u5668 DispatcherServlet\u6355\u83b7\u3002 2) DispatcherServlet\u5bf9\u8bf7\u6c42URL\u8fdb\u884c\u89e3\u6790\uff0c\u5f97\u5230\u8bf7\u6c42\u8d44\u6e90\u6807\u8bc6\u7b26\uff08URI\uff09\uff0c\u5224\u65ad\u8bf7\u6c42URI\u5bf9\u5e94\u7684\u6620\u5c04\uff1a a) \u4e0d\u5b58\u5728 i. \u518d\u5224\u65ad\u662f\u5426\u914d\u7f6e\u4e86mvc:default-servlet-handler ii. \u5982\u679c\u6ca1\u914d\u7f6e\uff0c\u5219\u63a7\u5236\u53f0\u62a5\u6620\u5c04\u67e5\u627e\u4e0d\u5230\uff0c\u5ba2\u6237\u7aef\u5c55\u793a404\u9519\u8bef iii. \u5982\u679c\u6709\u914d\u7f6e\uff0c\u5219\u8bbf\u95ee\u76ee\u6807\u8d44\u6e90\uff08\u4e00\u822c\u4e3a\u9759\u6001\u8d44\u6e90\uff0c\u5982\uff1aJS,CSS,HTML\uff09\uff0c\u627e\u4e0d\u5230\u5ba2\u6237\u7aef\u4e5f\u4f1a\u5c55\u793a404\u9519\u8bef b) \u5b58\u5728\u5219\u6267\u884c\u4e0b\u9762\u7684\u6d41\u7a0b 3) \u6839\u636e\u8be5URI\uff0c\u8c03\u7528HandlerMapping\u83b7\u5f97\u8be5Handler\u914d\u7f6e\u7684\u6240\u6709\u76f8\u5173\u7684\u5bf9\u8c61\uff08\u5305\u62ecHandler\u5bf9\u8c61\u4ee5\u53caHandler\u5bf9\u8c61\u5bf9\u5e94\u7684\u62e6\u622a\u5668\uff09\uff0c\u6700\u540e\u4ee5HandlerExecutionChain\u6267\u884c\u94fe\u5bf9\u8c61\u7684\u5f62\u5f0f\u8fd4\u56de\u3002 4) DispatcherServlet \u6839\u636e\u83b7\u5f97\u7684Handler\uff0c\u9009\u62e9\u4e00\u4e2a\u5408\u9002\u7684HandlerAdapter\u3002 5) \u5982\u679c\u6210\u529f\u83b7\u5f97HandlerAdapter\uff0c\u6b64\u65f6\u5c06\u5f00\u59cb\u6267\u884c\u62e6\u622a\u5668\u7684preHandler(\u2026)\u65b9\u6cd5\u3010\u6b63\u5411\u3011 6) \u63d0\u53d6Request\u4e2d\u7684\u6a21\u578b\u6570\u636e\uff0c\u586b\u5145Handler\u5165\u53c2\uff0c\u5f00\u59cb\u6267\u884cHandler\uff08Controller)\u65b9\u6cd5\uff0c\u5904\u7406\u8bf7\u6c42\u3002\u5728\u586b\u5145Handler\u7684\u5165\u53c2\u8fc7\u7a0b\u4e2d\uff0c\u6839\u636e\u4f60\u7684\u914d\u7f6e\uff0cSpring\u5c06\u5e2e\u4f60\u505a\u4e00\u4e9b\u989d\u5916\u7684\u5de5\u4f5c\uff1a a) HttpMessageConveter\uff1a \u5c06\u8bf7\u6c42\u6d88\u606f\uff08\u5982Json\u3001xml\u7b49\u6570\u636e\uff09\u8f6c\u6362\u6210\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u6307\u5b9a\u7684\u54cd\u5e94\u4fe1\u606f b) \u6570\u636e\u8f6c\u6362\uff1a\u5bf9\u8bf7\u6c42\u6d88\u606f\u8fdb\u884c\u6570\u636e\u8f6c\u6362\u3002\u5982String\u8f6c\u6362\u6210Integer\u3001Double\u7b49 c) \u6570\u636e\u683c\u5f0f\u5316\uff1a\u5bf9\u8bf7\u6c42\u6d88\u606f\u8fdb\u884c\u6570\u636e\u683c\u5f0f\u5316\u3002 \u5982\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u683c\u5f0f\u5316\u6570\u5b57\u6216\u683c\u5f0f\u5316\u65e5\u671f\u7b49 d) \u6570\u636e\u9a8c\u8bc1\uff1a \u9a8c\u8bc1\u6570\u636e\u7684\u6709\u6548\u6027\uff08\u957f\u5ea6\u3001\u683c\u5f0f\u7b49\uff09\uff0c\u9a8c\u8bc1\u7ed3\u679c\u5b58\u50a8\u5230BindingResult\u6216Error\u4e2d 7) Handler\u6267\u884c\u5b8c\u6210\u540e\uff0c\u5411DispatcherServlet \u8fd4\u56de\u4e00\u4e2aModelAndView\u5bf9\u8c61\u3002 8) \u6b64\u65f6\u5c06\u5f00\u59cb\u6267\u884c\u62e6\u622a\u5668\u7684postHandle(...)\u65b9\u6cd5\u3010\u9006\u5411\u3011\u3002 9) \u6839\u636e\u8fd4\u56de\u7684ModelAndView\uff08\u6b64\u65f6\u4f1a\u5224\u65ad\u662f\u5426\u5b58\u5728\u5f02\u5e38\uff1a\u5982\u679c\u5b58\u5728\u5f02\u5e38\uff0c\u5219\u6267\u884cHandlerExceptionResolver\u8fdb\u884c\u5f02\u5e38\u5904\u7406\uff09\u9009\u62e9\u4e00\u4e2a\u9002\u5408\u7684ViewResolver\u8fdb\u884c\u89c6\u56fe\u89e3\u6790\uff0c\u6839\u636eModel\u548cView\uff0c\u6765\u6e32\u67d3\u89c6\u56fe\u3002 10) \u6e32\u67d3\u89c6\u56fe\u5b8c\u6bd5\u6267\u884c\u62e6\u622a\u5668\u7684afterCompletion(\u2026)\u65b9\u6cd5\u3010\u9006\u5411\u3011\u3002 11) \u5c06\u6e32\u67d3\u7ed3\u679c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002","title":"SpringMVC"},{"location":"Java/SpringMVC/SpringMVCNotes/#springmvc","text":"","title":"\u4e00\u3001SpringMVC\u7b80\u4ecb"},{"location":"Java/SpringMVC/SpringMVCNotes/#1mvc","text":"MVC\u662f\u4e00\u79cd\u8f6f\u4ef6\u67b6\u6784\u7684\u601d\u60f3\uff0c\u5c06\u8f6f\u4ef6\u6309\u7167\u6a21\u578b\u3001\u89c6\u56fe\u3001\u63a7\u5236\u5668\u6765\u5212\u5206 M\uff1aModel\uff0c\u6a21\u578b\u5c42\uff0c\u6307\u5de5\u7a0b\u4e2d\u7684JavaBean\uff0c\u4f5c\u7528\u662f\u5904\u7406\u6570\u636e JavaBean\u5206\u4e3a\u4e24\u7c7b\uff1a \u4e00\u7c7b\u79f0\u4e3a\u5b9e\u4f53\u7c7bBean\uff1a\u4e13\u95e8\u5b58\u50a8\u4e1a\u52a1\u6570\u636e\u7684\uff0c\u5982 Student\u3001User \u7b49 \u4e00\u7c7b\u79f0\u4e3a\u4e1a\u52a1\u5904\u7406 Bean\uff1a\u6307 Service \u6216 Dao \u5bf9\u8c61\uff0c\u4e13\u95e8\u7528\u4e8e\u5904\u7406\u4e1a\u52a1\u903b\u8f91\u548c\u6570\u636e\u8bbf\u95ee\u3002 V\uff1aView\uff0c\u89c6\u56fe\u5c42\uff0c\u6307\u5de5\u7a0b\u4e2d\u7684html\u6216jsp\u7b49\u9875\u9762\uff0c\u4f5c\u7528\u662f\u4e0e\u7528\u6237\u8fdb\u884c\u4ea4\u4e92\uff0c\u5c55\u793a\u6570\u636e C\uff1aController\uff0c\u63a7\u5236\u5c42\uff0c\u6307\u5de5\u7a0b\u4e2d\u7684servlet\uff0c\u4f5c\u7528\u662f\u63a5\u6536\u8bf7\u6c42\u548c\u54cd\u5e94\u6d4f\u89c8\u5668 MVC\u7684\u5de5\u4f5c\u6d41\u7a0b\uff1a \u7528\u6237\u901a\u8fc7\u89c6\u56fe\u5c42\u53d1\u9001\u8bf7\u6c42\u5230\u670d\u52a1\u5668\uff0c\u5728\u670d\u52a1\u5668\u4e2d\u8bf7\u6c42\u88abController\u63a5\u6536\uff0cController\u8c03\u7528\u76f8\u5e94\u7684Model\u5c42\u5904\u7406\u8bf7\u6c42\uff0c\u5904\u7406\u5b8c\u6bd5\u5c06\u7ed3\u679c\u8fd4\u56de\u5230Controller\uff0cController\u518d\u6839\u636e\u8bf7\u6c42\u5904\u7406\u7684\u7ed3\u679c\u627e\u5230\u76f8\u5e94\u7684View\u89c6\u56fe\uff0c\u6e32\u67d3\u6570\u636e\u540e\u6700\u7ec8\u54cd\u5e94\u7ed9\u6d4f\u89c8\u5668","title":"1\u3001\u4ec0\u4e48\u662fMVC"},{"location":"Java/SpringMVC/SpringMVCNotes/#2springmvc","text":"SpringMVC\u662fSpring\u7684\u4e00\u4e2a\u540e\u7eed\u4ea7\u54c1\uff0c\u662fSpring\u7684\u4e00\u4e2a\u5b50\u9879\u76ee SpringMVC \u662f Spring \u4e3a\u8868\u8ff0\u5c42\u5f00\u53d1\u63d0\u4f9b\u7684\u4e00\u6574\u5957\u5b8c\u5907\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5728\u8868\u8ff0\u5c42\u6846\u67b6\u5386\u7ecf Strust\u3001WebWork\u3001Strust2 \u7b49\u8bf8\u591a\u4ea7\u54c1\u7684\u5386\u4ee3\u66f4\u8fed\u4e4b\u540e\uff0c\u76ee\u524d\u4e1a\u754c\u666e\u904d\u9009\u62e9\u4e86 SpringMVC \u4f5c\u4e3a Java EE \u9879\u76ee\u8868\u8ff0\u5c42\u5f00\u53d1\u7684 \u9996\u9009\u65b9\u6848 \u3002 \u6ce8\uff1a\u4e09\u5c42\u67b6\u6784\u5206\u4e3a\u8868\u8ff0\u5c42\uff08\u6216\u8868\u793a\u5c42\uff09\u3001\u4e1a\u52a1\u903b\u8f91\u5c42\u3001\u6570\u636e\u8bbf\u95ee\u5c42\uff0c\u8868\u8ff0\u5c42\u8868\u793a\u524d\u53f0\u9875\u9762\u548c\u540e\u53f0servlet","title":"2\u3001\u4ec0\u4e48\u662fSpringMVC"},{"location":"Java/SpringMVC/SpringMVCNotes/#3springmvc","text":"Spring \u5bb6\u65cf\u539f\u751f\u4ea7\u54c1 \uff0c\u4e0e IOC \u5bb9\u5668\u7b49\u57fa\u7840\u8bbe\u65bd\u65e0\u7f1d\u5bf9\u63a5 \u57fa\u4e8e\u539f\u751f\u7684Servlet \uff0c\u901a\u8fc7\u4e86\u529f\u80fd\u5f3a\u5927\u7684 \u524d\u7aef\u63a7\u5236\u5668DispatcherServlet \uff0c\u5bf9\u8bf7\u6c42\u548c\u54cd\u5e94\u8fdb\u884c\u7edf\u4e00\u5904\u7406 \u8868\u8ff0\u5c42\u5404\u7ec6\u5206\u9886\u57df\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898 \u5168\u65b9\u4f4d\u8986\u76d6 \uff0c\u63d0\u4f9b \u5168\u9762\u89e3\u51b3\u65b9\u6848 \u4ee3\u7801\u6e05\u65b0\u7b80\u6d01 \uff0c\u5927\u5e45\u5ea6\u63d0\u5347\u5f00\u53d1\u6548\u7387 \u5185\u90e8\u7ec4\u4ef6\u5316\u7a0b\u5ea6\u9ad8\uff0c\u53ef\u63d2\u62d4\u5f0f\u7ec4\u4ef6 \u5373\u63d2\u5373\u7528 \uff0c\u60f3\u8981\u4ec0\u4e48\u529f\u80fd\u914d\u7f6e\u76f8\u5e94\u7ec4\u4ef6\u5373\u53ef \u6027\u80fd\u5353\u8457 \uff0c\u5c24\u5176\u9002\u5408\u73b0\u4ee3\u5927\u578b\u3001\u8d85\u5927\u578b\u4e92\u8054\u7f51\u9879\u76ee\u8981\u6c42","title":"3\u3001SpringMVC\u7684\u7279\u70b9"},{"location":"Java/SpringMVC/SpringMVCNotes/#helloworld","text":"","title":"\u4e8c\u3001HelloWorld"},{"location":"Java/SpringMVC/SpringMVCNotes/#1","text":"IDE\uff1aidea 2019.2 \u6784\u5efa\u5de5\u5177\uff1amaven3.5.4 \u670d\u52a1\u5668\uff1atomcat7 Spring\u7248\u672c\uff1a5.3.1","title":"1\u3001\u5f00\u53d1\u73af\u5883"},{"location":"Java/SpringMVC/SpringMVCNotes/#2maven","text":"","title":"2\u3001\u521b\u5efamaven\u5de5\u7a0b"},{"location":"Java/SpringMVC/SpringMVCNotes/#aweb","text":"","title":"a&gt;\u6dfb\u52a0web\u6a21\u5757"},{"location":"Java/SpringMVC/SpringMVCNotes/#bwar","text":"","title":"b&gt;\u6253\u5305\u65b9\u5f0f\uff1awar"},{"location":"Java/SpringMVC/SpringMVCNotes/#c","text":"<dependencies> <!-- SpringMVC --> <dependency> <groupId> org.springframework </groupId> <artifactId> spring-webmvc </artifactId> <version> 5.3.1 </version> </dependency> <!-- \u65e5\u5fd7 --> <dependency> <groupId> ch.qos.logback </groupId> <artifactId> logback-classic </artifactId> <version> 1.2.3 </version> </dependency> <!-- ServletAPI --> <dependency> <groupId> javax.servlet </groupId> <artifactId> javax.servlet-api </artifactId> <version> 3.1.0 </version> <scope> provided </scope> </dependency> <!-- Spring5\u548cThymeleaf\u6574\u5408\u5305 --> <dependency> <groupId> org.thymeleaf </groupId> <artifactId> thymeleaf-spring5 </artifactId> <version> 3.0.12.RELEASE </version> </dependency> </dependencies> \u6ce8\uff1a\u7531\u4e8e Maven \u7684\u4f20\u9012\u6027\uff0c\u6211\u4eec\u4e0d\u5fc5\u5c06\u6240\u6709\u9700\u8981\u7684\u5305\u5168\u90e8\u914d\u7f6e\u4f9d\u8d56\uff0c\u800c\u662f\u914d\u7f6e\u6700\u9876\u7aef\u7684\u4f9d\u8d56\uff0c\u5176\u4ed6\u9760\u4f20\u9012\u6027\u5bfc\u5165\u3002","title":"c&gt;\u5f15\u5165\u4f9d\u8d56"},{"location":"Java/SpringMVC/SpringMVCNotes/#3webxml","text":"\u6ce8\u518cSpringMVC\u7684\u524d\u7aef\u63a7\u5236\u5668DispatcherServlet","title":"3\u3001\u914d\u7f6eweb.xml"},{"location":"Java/SpringMVC/SpringMVCNotes/#a","text":"\u6b64\u914d\u7f6e\u4f5c\u7528\u4e0b\uff0cSpringMVC\u7684\u914d\u7f6e\u6587\u4ef6\u9ed8\u8ba4\u4f4d\u4e8eWEB-INF\u4e0b\uff0c\u9ed8\u8ba4\u540d\u79f0\u4e3a\\ -servlet.xml\uff0c\u4f8b\u5982\uff0c\u4ee5\u4e0b\u914d\u7f6e\u6240\u5bf9\u5e94SpringMVC\u7684\u914d\u7f6e\u6587\u4ef6\u4f4d\u4e8eWEB-INF\u4e0b\uff0c\u6587\u4ef6\u540d\u4e3aspringMVC-servlet.xml <!-- \u914d\u7f6eSpringMVC\u7684\u524d\u7aef\u63a7\u5236\u5668\uff0c\u5bf9\u6d4f\u89c8\u5668\u53d1\u9001\u7684\u8bf7\u6c42\u7edf\u4e00\u8fdb\u884c\u5904\u7406 --> <servlet> <servlet-name> springMVC </servlet-name> <servlet-class> org.springframework.web.servlet.DispatcherServlet </servlet-class> </servlet> <servlet-mapping> <servlet-name> springMVC </servlet-name> <!-- \u8bbe\u7f6espringMVC\u7684\u6838\u5fc3\u63a7\u5236\u5668\u6240\u80fd\u5904\u7406\u7684\u8bf7\u6c42\u7684\u8bf7\u6c42\u8def\u5f84 /\u6240\u5339\u914d\u7684\u8bf7\u6c42\u53ef\u4ee5\u662f/login\u6216.html\u6216.js\u6216.css\u65b9\u5f0f\u7684\u8bf7\u6c42\u8def\u5f84 \u4f46\u662f/\u4e0d\u80fd\u5339\u914d.jsp\u8bf7\u6c42\u8def\u5f84\u7684\u8bf7\u6c42 --> <url-pattern> / </url-pattern> </servlet-mapping>","title":"a&gt;\u9ed8\u8ba4\u914d\u7f6e\u65b9\u5f0f"},{"location":"Java/SpringMVC/SpringMVCNotes/#b","text":"\u53ef\u901a\u8fc7init-param\u6807\u7b7e\u8bbe\u7f6eSpringMVC\u914d\u7f6e\u6587\u4ef6\u7684\u4f4d\u7f6e\u548c\u540d\u79f0\uff0c\u901a\u8fc7load-on-startup\u6807\u7b7e\u8bbe\u7f6eSpringMVC\u524d\u7aef\u63a7\u5236\u5668DispatcherServlet\u7684\u521d\u59cb\u5316\u65f6\u95f4 <!-- \u914d\u7f6eSpringMVC\u7684\u524d\u7aef\u63a7\u5236\u5668\uff0c\u5bf9\u6d4f\u89c8\u5668\u53d1\u9001\u7684\u8bf7\u6c42\u7edf\u4e00\u8fdb\u884c\u5904\u7406 --> <servlet> <servlet-name> springMVC </servlet-name> <servlet-class> org.springframework.web.servlet.DispatcherServlet </servlet-class> <!-- \u901a\u8fc7\u521d\u59cb\u5316\u53c2\u6570\u6307\u5b9aSpringMVC\u914d\u7f6e\u6587\u4ef6\u7684\u4f4d\u7f6e\u548c\u540d\u79f0 --> <init-param> <!-- contextConfigLocation\u4e3a\u56fa\u5b9a\u503c --> <param-name> contextConfigLocation </param-name> <!-- \u4f7f\u7528classpath:\u8868\u793a\u4ece\u7c7b\u8def\u5f84\u67e5\u627e\u914d\u7f6e\u6587\u4ef6\uff0c\u4f8b\u5982maven\u5de5\u7a0b\u4e2d\u7684src/main/resources --> <param-value> classpath:springMVC.xml </param-value> </init-param> <!-- \u4f5c\u4e3a\u6846\u67b6\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u5728\u542f\u52a8\u8fc7\u7a0b\u4e2d\u6709\u5927\u91cf\u7684\u521d\u59cb\u5316\u64cd\u4f5c\u8981\u505a \u800c\u8fd9\u4e9b\u64cd\u4f5c\u653e\u5728\u7b2c\u4e00\u6b21\u8bf7\u6c42\u65f6\u624d\u6267\u884c\u4f1a\u4e25\u91cd\u5f71\u54cd\u8bbf\u95ee\u901f\u5ea6 \u56e0\u6b64\u9700\u8981\u901a\u8fc7\u6b64\u6807\u7b7e\u5c06\u542f\u52a8\u63a7\u5236DispatcherServlet\u7684\u521d\u59cb\u5316\u65f6\u95f4\u63d0\u524d\u5230\u670d\u52a1\u5668\u542f\u52a8\u65f6 --> <load-on-startup> 1 </load-on-startup> </servlet> <servlet-mapping> <servlet-name> springMVC </servlet-name> <!-- \u8bbe\u7f6espringMVC\u7684\u6838\u5fc3\u63a7\u5236\u5668\u6240\u80fd\u5904\u7406\u7684\u8bf7\u6c42\u7684\u8bf7\u6c42\u8def\u5f84 /\u6240\u5339\u914d\u7684\u8bf7\u6c42\u53ef\u4ee5\u662f/login\u6216.html\u6216.js\u6216.css\u65b9\u5f0f\u7684\u8bf7\u6c42\u8def\u5f84 \u4f46\u662f/\u4e0d\u80fd\u5339\u914d.jsp\u8bf7\u6c42\u8def\u5f84\u7684\u8bf7\u6c42 --> <url-pattern> / </url-pattern> </servlet-mapping> \u6ce8\uff1a \\ \u6807\u7b7e\u4e2d\u4f7f\u7528/\u548c/*\u7684\u533a\u522b\uff1a /\u6240\u5339\u914d\u7684\u8bf7\u6c42\u53ef\u4ee5\u662f/login\u6216.html\u6216.js\u6216.css\u65b9\u5f0f\u7684\u8bf7\u6c42\u8def\u5f84\uff0c\u4f46\u662f/\u4e0d\u80fd\u5339\u914d.jsp\u8bf7\u6c42\u8def\u5f84\u7684\u8bf7\u6c42 \u56e0\u6b64\u5c31\u53ef\u4ee5\u907f\u514d\u5728\u8bbf\u95eejsp\u9875\u9762\u65f6\uff0c\u8be5\u8bf7\u6c42\u88abDispatcherServlet\u5904\u7406\uff0c\u4ece\u800c\u627e\u4e0d\u5230\u76f8\u5e94\u7684\u9875\u9762 /*\u5219\u80fd\u591f\u5339\u914d\u6240\u6709\u8bf7\u6c42\uff0c\u4f8b\u5982\u5728\u4f7f\u7528\u8fc7\u6ee4\u5668\u65f6\uff0c\u82e5\u9700\u8981\u5bf9\u6240\u6709\u8bf7\u6c42\u8fdb\u884c\u8fc7\u6ee4\uff0c\u5c31\u9700\u8981\u4f7f\u7528/*\u7684\u5199\u6cd5","title":"b&gt;\u6269\u5c55\u914d\u7f6e\u65b9\u5f0f"},{"location":"Java/SpringMVC/SpringMVCNotes/#4","text":"\u7531\u4e8e\u524d\u7aef\u63a7\u5236\u5668\u5bf9\u6d4f\u89c8\u5668\u53d1\u9001\u7684\u8bf7\u6c42\u8fdb\u884c\u4e86\u7edf\u4e00\u7684\u5904\u7406\uff0c\u4f46\u662f\u5177\u4f53\u7684\u8bf7\u6c42\u6709\u4e0d\u540c\u7684\u5904\u7406\u8fc7\u7a0b\uff0c\u56e0\u6b64\u9700\u8981\u521b\u5efa\u5904\u7406\u5177\u4f53\u8bf7\u6c42\u7684\u7c7b\uff0c\u5373\u8bf7\u6c42\u63a7\u5236\u5668 \u8bf7\u6c42\u63a7\u5236\u5668\u4e2d\u6bcf\u4e00\u4e2a\u5904\u7406\u8bf7\u6c42\u7684\u65b9\u6cd5\u6210\u4e3a\u63a7\u5236\u5668\u65b9\u6cd5 \u56e0\u4e3aSpringMVC\u7684\u63a7\u5236\u5668\u7531\u4e00\u4e2aPOJO\uff08\u666e\u901a\u7684Java\u7c7b\uff09\u62c5\u4efb\uff0c\u56e0\u6b64\u9700\u8981\u901a\u8fc7@Controller\u6ce8\u89e3\u5c06\u5176\u6807\u8bc6\u4e3a\u4e00\u4e2a\u63a7\u5236\u5c42\u7ec4\u4ef6\uff0c\u4ea4\u7ed9Spring\u7684IoC\u5bb9\u5668\u7ba1\u7406\uff0c\u6b64\u65f6SpringMVC\u624d\u80fd\u591f\u8bc6\u522b\u63a7\u5236\u5668\u7684\u5b58\u5728 @Controller public class HelloController { }","title":"4\u3001\u521b\u5efa\u8bf7\u6c42\u63a7\u5236\u5668"},{"location":"Java/SpringMVC/SpringMVCNotes/#5springmvc","text":"<!-- \u81ea\u52a8\u626b\u63cf\u5305 --> <context:component-scan base-package= \"com.atguigu.mvc.controller\" /> <!-- \u914d\u7f6eThymeleaf\u89c6\u56fe\u89e3\u6790\u5668 --> <bean id= \"viewResolver\" class= \"org.thymeleaf.spring5.view.ThymeleafViewResolver\" > <property name= \"order\" value= \"1\" /> <property name= \"characterEncoding\" value= \"UTF-8\" /> <property name= \"templateEngine\" > <bean class= \"org.thymeleaf.spring5.SpringTemplateEngine\" > <property name= \"templateResolver\" > <bean class= \"org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver\" > <!-- \u89c6\u56fe\u524d\u7f00 --> <property name= \"prefix\" value= \"/WEB-INF/templates/\" /> <!-- \u89c6\u56fe\u540e\u7f00 --> <property name= \"suffix\" value= \".html\" /> <property name= \"templateMode\" value= \"HTML5\" /> <property name= \"characterEncoding\" value= \"UTF-8\" /> </bean> </property> </bean> </property> </bean> <!-- \u5904\u7406\u9759\u6001\u8d44\u6e90\uff0c\u4f8b\u5982html\u3001js\u3001css\u3001jpg \u82e5\u53ea\u8bbe\u7f6e\u8be5\u6807\u7b7e\uff0c\u5219\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u8d44\u6e90\uff0c\u5176\u4ed6\u8bf7\u6c42\u5219\u65e0\u6cd5\u8bbf\u95ee \u6b64\u65f6\u5fc5\u987b\u8bbe\u7f6e<mvc:annotation-driven/>\u89e3\u51b3\u95ee\u9898 --> <mvc:default-servlet-handler/> <!-- \u5f00\u542fmvc\u6ce8\u89e3\u9a71\u52a8 --> <mvc:annotation-driven> <mvc:message-converters> <!-- \u5904\u7406\u54cd\u5e94\u4e2d\u6587\u5185\u5bb9\u4e71\u7801 --> <bean class= \"org.springframework.http.converter.StringHttpMessageConverter\" > <property name= \"defaultCharset\" value= \"UTF-8\" /> <property name= \"supportedMediaTypes\" > <list> <value> text/html </value> <value> application/json </value> </list> </property> </bean> </mvc:message-converters> </mvc:annotation-driven>","title":"5\u3001\u521b\u5efaspringMVC\u7684\u914d\u7f6e\u6587\u4ef6"},{"location":"Java/SpringMVC/SpringMVCNotes/#6helloworld","text":"","title":"6\u3001\u6d4b\u8bd5HelloWorld"},{"location":"Java/SpringMVC/SpringMVCNotes/#a_1","text":"\u5728\u8bf7\u6c42\u63a7\u5236\u5668\u4e2d\u521b\u5efa\u5904\u7406\u8bf7\u6c42\u7684\u65b9\u6cd5 // @RequestMapping\u6ce8\u89e3\uff1a\u5904\u7406\u8bf7\u6c42\u548c\u63a7\u5236\u5668\u65b9\u6cd5\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb // @RequestMapping\u6ce8\u89e3\u7684value\u5c5e\u6027\u53ef\u4ee5\u901a\u8fc7\u8bf7\u6c42\u5730\u5740\u5339\u914d\u8bf7\u6c42\uff0c/\u8868\u793a\u7684\u5f53\u524d\u5de5\u7a0b\u7684\u4e0a\u4e0b\u6587\u8def\u5f84 // localhost:8080/springMVC/ @RequestMapping ( \"/\" ) public String index () { //\u8bbe\u7f6e\u89c6\u56fe\u540d\u79f0 return \"index\" ; }","title":"a&gt;\u5b9e\u73b0\u5bf9\u9996\u9875\u7684\u8bbf\u95ee"},{"location":"Java/SpringMVC/SpringMVCNotes/#b_1","text":"\u5728\u4e3b\u9875index.html\u4e2d\u8bbe\u7f6e\u8d85\u94fe\u63a5 <!DOCTYPE html> < html lang = \"en\" xmlns:th = \"http://www.thymeleaf.org\" > < head > < meta charset = \"UTF-8\" > < title > \u9996\u9875 </ title > </ head > < body > < h1 > \u9996\u9875 </ h1 > < a th:href = \"@{/hello}\" > HelloWorld </ a >< br /> </ body > </ html > \u5728\u8bf7\u6c42\u63a7\u5236\u5668\u4e2d\u521b\u5efa\u5904\u7406\u8bf7\u6c42\u7684\u65b9\u6cd5 @RequestMapping ( \"/hello\" ) public String HelloWorld () { return \"target\" ; }","title":"b&gt;\u901a\u8fc7\u8d85\u94fe\u63a5\u8df3\u8f6c\u5230\u6307\u5b9a\u9875\u9762"},{"location":"Java/SpringMVC/SpringMVCNotes/#7","text":"\u6d4f\u89c8\u5668\u53d1\u9001\u8bf7\u6c42\uff0c\u82e5\u8bf7\u6c42\u5730\u5740\u7b26\u5408\u524d\u7aef\u63a7\u5236\u5668\u7684url-pattern\uff0c\u8be5\u8bf7\u6c42\u5c31\u4f1a\u88ab\u524d\u7aef\u63a7\u5236\u5668DispatcherServlet\u5904\u7406\u3002\u524d\u7aef\u63a7\u5236\u5668\u4f1a\u8bfb\u53d6SpringMVC\u7684\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6\uff0c\u901a\u8fc7\u626b\u63cf\u7ec4\u4ef6\u627e\u5230\u63a7\u5236\u5668\uff0c\u5c06\u8bf7\u6c42\u5730\u5740\u548c\u63a7\u5236\u5668\u4e2d@RequestMapping\u6ce8\u89e3\u7684value\u5c5e\u6027\u503c\u8fdb\u884c\u5339\u914d\uff0c\u82e5\u5339\u914d\u6210\u529f\uff0c\u8be5\u6ce8\u89e3\u6240\u6807\u8bc6\u7684\u63a7\u5236\u5668\u65b9\u6cd5\u5c31\u662f\u5904\u7406\u8bf7\u6c42\u7684\u65b9\u6cd5\u3002\u5904\u7406\u8bf7\u6c42\u7684\u65b9\u6cd5\u9700\u8981\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u89c6\u56fe\u540d\u79f0\uff0c\u8be5\u89c6\u56fe\u540d\u79f0\u4f1a\u88ab\u89c6\u56fe\u89e3\u6790\u5668\u89e3\u6790\uff0c\u52a0\u4e0a\u524d\u7f00\u548c\u540e\u7f00\u7ec4\u6210\u89c6\u56fe\u7684\u8def\u5f84\uff0c\u901a\u8fc7Thymeleaf\u5bf9\u89c6\u56fe\u8fdb\u884c\u6e32\u67d3\uff0c\u6700\u7ec8\u8f6c\u53d1\u5230\u89c6\u56fe\u6240\u5bf9\u5e94\u9875\u9762","title":"7\u3001\u603b\u7ed3"},{"location":"Java/SpringMVC/SpringMVCNotes/#requestmapping","text":"","title":"\u4e09\u3001@RequestMapping\u6ce8\u89e3"},{"location":"Java/SpringMVC/SpringMVCNotes/#1requestmapping","text":"\u4ece\u6ce8\u89e3\u540d\u79f0\u4e0a\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c@RequestMapping\u6ce8\u89e3\u7684\u4f5c\u7528\u5c31\u662f\u5c06\u8bf7\u6c42\u548c\u5904\u7406\u8bf7\u6c42\u7684\u63a7\u5236\u5668\u65b9\u6cd5\u5173\u8054\u8d77\u6765\uff0c\u5efa\u7acb\u6620\u5c04\u5173\u7cfb\u3002 SpringMVC \u63a5\u6536\u5230\u6307\u5b9a\u7684\u8bf7\u6c42\uff0c\u5c31\u4f1a\u6765\u627e\u5230\u5728\u6620\u5c04\u5173\u7cfb\u4e2d\u5bf9\u5e94\u7684\u63a7\u5236\u5668\u65b9\u6cd5\u6765\u5904\u7406\u8fd9\u4e2a\u8bf7\u6c42\u3002","title":"1\u3001@RequestMapping\u6ce8\u89e3\u7684\u529f\u80fd"},{"location":"Java/SpringMVC/SpringMVCNotes/#2requestmapping","text":"@RequestMapping\u6807\u8bc6\u4e00\u4e2a\u7c7b\uff1a\u8bbe\u7f6e\u6620\u5c04\u8bf7\u6c42\u7684\u8bf7\u6c42\u8def\u5f84\u7684\u521d\u59cb\u4fe1\u606f @RequestMapping\u6807\u8bc6\u4e00\u4e2a\u65b9\u6cd5\uff1a\u8bbe\u7f6e\u6620\u5c04\u8bf7\u6c42\u8bf7\u6c42\u8def\u5f84\u7684\u5177\u4f53\u4fe1\u606f @Controller @RequestMapping ( \"/test\" ) public class RequestMappingController { //\u6b64\u65f6\u8bf7\u6c42\u6620\u5c04\u6240\u6620\u5c04\u7684\u8bf7\u6c42\u7684\u8bf7\u6c42\u8def\u5f84\u4e3a\uff1a/test/testRequestMapping @RequestMapping ( \"/testRequestMapping\" ) public String testRequestMapping (){ return \"success\" ; } }","title":"2\u3001@RequestMapping\u6ce8\u89e3\u7684\u4f4d\u7f6e"},{"location":"Java/SpringMVC/SpringMVCNotes/#3requestmappingvalue","text":"@RequestMapping\u6ce8\u89e3\u7684value\u5c5e\u6027\u901a\u8fc7\u8bf7\u6c42\u7684\u8bf7\u6c42\u5730\u5740\u5339\u914d\u8bf7\u6c42\u6620\u5c04 @RequestMapping\u6ce8\u89e3\u7684value\u5c5e\u6027\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u8868\u793a\u8be5\u8bf7\u6c42\u6620\u5c04\u80fd\u591f\u5339\u914d\u591a\u4e2a\u8bf7\u6c42\u5730\u5740\u6240\u5bf9\u5e94\u7684\u8bf7\u6c42 @RequestMapping\u6ce8\u89e3\u7684value\u5c5e\u6027\u5fc5\u987b\u8bbe\u7f6e\uff0c\u81f3\u5c11\u901a\u8fc7\u8bf7\u6c42\u5730\u5740\u5339\u914d\u8bf7\u6c42\u6620\u5c04 < a th:href = \"@{/testRequestMapping}\" > \u6d4b\u8bd5@RequestMapping\u7684value\u5c5e\u6027-->/testRequestMapping </ a >< br > < a th:href = \"@{/test}\" > \u6d4b\u8bd5@RequestMapping\u7684value\u5c5e\u6027-->/test </ a >< br > @RequestMapping ( value = { \"/testRequestMapping\" , \"/test\" } ) public String testRequestMapping (){ return \"success\" ; }","title":"3\u3001@RequestMapping\u6ce8\u89e3\u7684value\u5c5e\u6027"},{"location":"Java/SpringMVC/SpringMVCNotes/#4requestmappingmethod","text":"@RequestMapping\u6ce8\u89e3\u7684method\u5c5e\u6027\u901a\u8fc7\u8bf7\u6c42\u7684\u8bf7\u6c42\u65b9\u5f0f\uff08get\u6216post\uff09\u5339\u914d\u8bf7\u6c42\u6620\u5c04 @RequestMapping\u6ce8\u89e3\u7684method\u5c5e\u6027\u662f\u4e00\u4e2aRequestMethod\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u8868\u793a\u8be5\u8bf7\u6c42\u6620\u5c04\u80fd\u591f\u5339\u914d\u591a\u79cd\u8bf7\u6c42\u65b9\u5f0f\u7684\u8bf7\u6c42 \u82e5\u5f53\u524d\u8bf7\u6c42\u7684\u8bf7\u6c42\u5730\u5740\u6ee1\u8db3\u8bf7\u6c42\u6620\u5c04\u7684value\u5c5e\u6027\uff0c\u4f46\u662f\u8bf7\u6c42\u65b9\u5f0f\u4e0d\u6ee1\u8db3method\u5c5e\u6027\uff0c\u5219\u6d4f\u89c8\u5668\u62a5\u9519405\uff1aRequest method 'POST' not supported < a th:href = \"@{/test}\" > \u6d4b\u8bd5@RequestMapping\u7684value\u5c5e\u6027-->/test </ a >< br > < form th:action = \"@{/test}\" method = \"post\" > < input type = \"submit\" > </ form > @RequestMapping ( value = { \"/testRequestMapping\" , \"/test\" }, method = { RequestMethod . GET , RequestMethod . POST } ) public String testRequestMapping (){ return \"success\" ; } \u6ce8\uff1a 1\u3001\u5bf9\u4e8e\u5904\u7406\u6307\u5b9a\u8bf7\u6c42\u65b9\u5f0f\u7684\u63a7\u5236\u5668\u65b9\u6cd5\uff0cSpringMVC\u4e2d\u63d0\u4f9b\u4e86@RequestMapping\u7684\u6d3e\u751f\u6ce8\u89e3 \u5904\u7406get\u8bf7\u6c42\u7684\u6620\u5c04-->@GetMapping \u5904\u7406post\u8bf7\u6c42\u7684\u6620\u5c04-->@PostMapping \u5904\u7406put\u8bf7\u6c42\u7684\u6620\u5c04-->@PutMapping \u5904\u7406delete\u8bf7\u6c42\u7684\u6620\u5c04-->@DeleteMapping 2\u3001\u5e38\u7528\u7684\u8bf7\u6c42\u65b9\u5f0f\u6709get\uff0cpost\uff0cput\uff0cdelete \u4f46\u662f\u76ee\u524d\u6d4f\u89c8\u5668\u53ea\u652f\u6301get\u548cpost\uff0c\u82e5\u5728form\u8868\u5355\u63d0\u4ea4\u65f6\uff0c\u4e3amethod\u8bbe\u7f6e\u4e86\u5176\u4ed6\u8bf7\u6c42\u65b9\u5f0f\u7684\u5b57\u7b26\u4e32\uff08put\u6216delete\uff09\uff0c\u5219\u6309\u7167\u9ed8\u8ba4\u7684\u8bf7\u6c42\u65b9\u5f0fget\u5904\u7406 \u82e5\u8981\u53d1\u9001put\u548cdelete\u8bf7\u6c42\uff0c\u5219\u9700\u8981\u901a\u8fc7spring\u63d0\u4f9b\u7684\u8fc7\u6ee4\u5668HiddenHttpMethodFilter\uff0c\u5728RESTful\u90e8\u5206\u4f1a\u8bb2\u5230","title":"4\u3001@RequestMapping\u6ce8\u89e3\u7684method\u5c5e\u6027"},{"location":"Java/SpringMVC/SpringMVCNotes/#5requestmappingparams","text":"@RequestMapping\u6ce8\u89e3\u7684params\u5c5e\u6027\u901a\u8fc7\u8bf7\u6c42\u7684\u8bf7\u6c42\u53c2\u6570\u5339\u914d\u8bf7\u6c42\u6620\u5c04 @RequestMapping\u6ce8\u89e3\u7684params\u5c5e\u6027\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u53ef\u4ee5\u901a\u8fc7\u56db\u79cd\u8868\u8fbe\u5f0f\u8bbe\u7f6e\u8bf7\u6c42\u53c2\u6570\u548c\u8bf7\u6c42\u6620\u5c04\u7684\u5339\u914d\u5173\u7cfb \"param\"\uff1a\u8981\u6c42\u8bf7\u6c42\u6620\u5c04\u6240\u5339\u914d\u7684\u8bf7\u6c42\u5fc5\u987b\u643a\u5e26param\u8bf7\u6c42\u53c2\u6570 \"!param\"\uff1a\u8981\u6c42\u8bf7\u6c42\u6620\u5c04\u6240\u5339\u914d\u7684\u8bf7\u6c42\u5fc5\u987b\u4e0d\u80fd\u643a\u5e26param\u8bf7\u6c42\u53c2\u6570 \"param=value\"\uff1a\u8981\u6c42\u8bf7\u6c42\u6620\u5c04\u6240\u5339\u914d\u7684\u8bf7\u6c42\u5fc5\u987b\u643a\u5e26param\u8bf7\u6c42\u53c2\u6570\u4e14param=value \"param!=value\"\uff1a\u8981\u6c42\u8bf7\u6c42\u6620\u5c04\u6240\u5339\u914d\u7684\u8bf7\u6c42\u5fc5\u987b\u643a\u5e26param\u8bf7\u6c42\u53c2\u6570\u4f46\u662fparam!=value < a th:href = \"@{/test(username='admin',password=123456)\" > \u6d4b\u8bd5@RequestMapping\u7684params\u5c5e\u6027-->/test </ a >< br > @RequestMapping ( value = { \"/testRequestMapping\" , \"/test\" } , method = { RequestMethod . GET , RequestMethod . POST } , params = { \"username\" , \"password!=123456\" } ) public String testRequestMapping (){ return \"success\" ; } \u6ce8\uff1a \u82e5\u5f53\u524d\u8bf7\u6c42\u6ee1\u8db3@RequestMapping\u6ce8\u89e3\u7684value\u548cmethod\u5c5e\u6027\uff0c\u4f46\u662f\u4e0d\u6ee1\u8db3params\u5c5e\u6027\uff0c\u6b64\u65f6\u9875\u9762\u56de\u62a5\u9519400\uff1aParameter conditions \"username, password!=123456\" not met for actual request parameters: username={admin}, password={123456}","title":"5\u3001@RequestMapping\u6ce8\u89e3\u7684params\u5c5e\u6027\uff08\u4e86\u89e3\uff09"},{"location":"Java/SpringMVC/SpringMVCNotes/#6requestmappingheaders","text":"@RequestMapping\u6ce8\u89e3\u7684headers\u5c5e\u6027\u901a\u8fc7\u8bf7\u6c42\u7684\u8bf7\u6c42\u5934\u4fe1\u606f\u5339\u914d\u8bf7\u6c42\u6620\u5c04 @RequestMapping\u6ce8\u89e3\u7684headers\u5c5e\u6027\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u53ef\u4ee5\u901a\u8fc7\u56db\u79cd\u8868\u8fbe\u5f0f\u8bbe\u7f6e\u8bf7\u6c42\u5934\u4fe1\u606f\u548c\u8bf7\u6c42\u6620\u5c04\u7684\u5339\u914d\u5173\u7cfb \"header\"\uff1a\u8981\u6c42\u8bf7\u6c42\u6620\u5c04\u6240\u5339\u914d\u7684\u8bf7\u6c42\u5fc5\u987b\u643a\u5e26header\u8bf7\u6c42\u5934\u4fe1\u606f \"!header\"\uff1a\u8981\u6c42\u8bf7\u6c42\u6620\u5c04\u6240\u5339\u914d\u7684\u8bf7\u6c42\u5fc5\u987b\u4e0d\u80fd\u643a\u5e26header\u8bf7\u6c42\u5934\u4fe1\u606f \"header=value\"\uff1a\u8981\u6c42\u8bf7\u6c42\u6620\u5c04\u6240\u5339\u914d\u7684\u8bf7\u6c42\u5fc5\u987b\u643a\u5e26header\u8bf7\u6c42\u5934\u4fe1\u606f\u4e14header=value \"header!=value\"\uff1a\u8981\u6c42\u8bf7\u6c42\u6620\u5c04\u6240\u5339\u914d\u7684\u8bf7\u6c42\u5fc5\u987b\u643a\u5e26header\u8bf7\u6c42\u5934\u4fe1\u606f\u4e14header!=value \u82e5\u5f53\u524d\u8bf7\u6c42\u6ee1\u8db3@RequestMapping\u6ce8\u89e3\u7684value\u548cmethod\u5c5e\u6027\uff0c\u4f46\u662f\u4e0d\u6ee1\u8db3headers\u5c5e\u6027\uff0c\u6b64\u65f6\u9875\u9762\u663e\u793a404\u9519\u8bef\uff0c\u5373\u8d44\u6e90\u672a\u627e\u5230","title":"6\u3001@RequestMapping\u6ce8\u89e3\u7684headers\u5c5e\u6027\uff08\u4e86\u89e3\uff09"},{"location":"Java/SpringMVC/SpringMVCNotes/#7springmvcant","text":"\uff1f\uff1a\u8868\u793a\u4efb\u610f\u7684\u5355\u4e2a\u5b57\u7b26 *\uff1a\u8868\u793a\u4efb\u610f\u76840\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26 **\uff1a\u8868\u793a\u4efb\u610f\u7684\u4e00\u5c42\u6216\u591a\u5c42\u76ee\u5f55 \u6ce8\u610f\uff1a\u5728\u4f7f\u7528* \u65f6\uff0c\u53ea\u80fd\u4f7f\u7528/ */xxx\u7684\u65b9\u5f0f","title":"7\u3001SpringMVC\u652f\u6301ant\u98ce\u683c\u7684\u8def\u5f84"},{"location":"Java/SpringMVC/SpringMVCNotes/#8springmvc","text":"\u539f\u59cb\u65b9\u5f0f\uff1a/deleteUser?id=1 rest\u65b9\u5f0f\uff1a/deleteUser/1 SpringMVC\u8def\u5f84\u4e2d\u7684\u5360\u4f4d\u7b26\u5e38\u7528\u4e8eRESTful\u98ce\u683c\u4e2d\uff0c\u5f53\u8bf7\u6c42\u8def\u5f84\u4e2d\u5c06\u67d0\u4e9b\u6570\u636e\u901a\u8fc7\u8def\u5f84\u7684\u65b9\u5f0f\u4f20\u8f93\u5230\u670d\u52a1\u5668\u4e2d\uff0c\u5c31\u53ef\u4ee5\u5728\u76f8\u5e94\u7684@RequestMapping\u6ce8\u89e3\u7684value\u5c5e\u6027\u4e2d\u901a\u8fc7\u5360\u4f4d\u7b26{xxx}\u8868\u793a\u4f20\u8f93\u7684\u6570\u636e\uff0c\u5728\u901a\u8fc7@PathVariable\u6ce8\u89e3\uff0c\u5c06\u5360\u4f4d\u7b26\u6240\u8868\u793a\u7684\u6570\u636e\u8d4b\u503c\u7ed9\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2 < a th:href = \"@{/testRest/1/admin}\" > \u6d4b\u8bd5\u8def\u5f84\u4e2d\u7684\u5360\u4f4d\u7b26-->/testRest </ a >< br > @RequestMapping ( \"/testRest/{id}/{username}\" ) public String testRest ( @PathVariable ( \"id\" ) String id , @PathVariable ( \"username\" ) String username ){ System . out . println ( \"id:\" + id + \",username:\" + username ); return \"success\" ; } //\u6700\u7ec8\u8f93\u51fa\u7684\u5185\u5bb9\u4e3a-->id:1,username:admin","title":"8\u3001SpringMVC\u652f\u6301\u8def\u5f84\u4e2d\u7684\u5360\u4f4d\u7b26\uff08\u91cd\u70b9\uff09"},{"location":"Java/SpringMVC/SpringMVCNotes/#springmvc_1","text":"","title":"\u56db\u3001SpringMVC\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570"},{"location":"Java/SpringMVC/SpringMVCNotes/#1servletapi","text":"\u5c06HttpServletRequest\u4f5c\u4e3a\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2\uff0c\u6b64\u65f6HttpServletRequest\u7c7b\u578b\u7684\u53c2\u6570\u8868\u793a\u5c01\u88c5\u4e86\u5f53\u524d\u8bf7\u6c42\u7684\u8bf7\u6c42\u62a5\u6587\u7684\u5bf9\u8c61 @RequestMapping ( \"/testParam\" ) public String testParam ( HttpServletRequest request ){ String username = request . getParameter ( \"username\" ); String password = request . getParameter ( \"password\" ); System . out . println ( \"username:\" + username + \",password:\" + password ); return \"success\" ; }","title":"1\u3001\u901a\u8fc7ServletAPI\u83b7\u53d6"},{"location":"Java/SpringMVC/SpringMVCNotes/#2","text":"\u5728\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2\u4f4d\u7f6e\uff0c\u8bbe\u7f6e\u548c\u8bf7\u6c42\u53c2\u6570\u540c\u540d\u7684\u5f62\u53c2\uff0c\u5f53\u6d4f\u89c8\u5668\u53d1\u9001\u8bf7\u6c42\uff0c\u5339\u914d\u5230\u8bf7\u6c42\u6620\u5c04\u65f6\uff0c\u5728DispatcherServlet\u4e2d\u5c31\u4f1a\u5c06\u8bf7\u6c42\u53c2\u6570\u8d4b\u503c\u7ed9\u76f8\u5e94\u7684\u5f62\u53c2 < a th:href = \"@{/testParam(username='admin',password=123456)}\" > \u6d4b\u8bd5\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570-->/testParam </ a >< br > @RequestMapping ( \"/testParam\" ) public String testParam ( String username , String password ){ System . out . println ( \"username:\" + username + \",password:\" + password ); return \"success\" ; } \u6ce8\uff1a \u82e5\u8bf7\u6c42\u6240\u4f20\u8f93\u7684\u8bf7\u6c42\u53c2\u6570\u4e2d\u6709\u591a\u4e2a\u540c\u540d\u7684\u8bf7\u6c42\u53c2\u6570\uff0c\u6b64\u65f6\u53ef\u4ee5\u5728\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2\u4e2d\u8bbe\u7f6e\u5b57\u7b26\u4e32\u6570\u7ec4\u6216\u8005\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u5f62\u53c2\u63a5\u6536\u6b64\u8bf7\u6c42\u53c2\u6570 \u82e5\u4f7f\u7528\u5b57\u7b26\u4e32\u6570\u7ec4\u7c7b\u578b\u7684\u5f62\u53c2\uff0c\u6b64\u53c2\u6570\u7684\u6570\u7ec4\u4e2d\u5305\u542b\u4e86\u6bcf\u4e00\u4e2a\u6570\u636e \u82e5\u4f7f\u7528\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u5f62\u53c2\uff0c\u6b64\u53c2\u6570\u7684\u503c\u4e3a\u6bcf\u4e2a\u6570\u636e\u4e2d\u95f4\u4f7f\u7528\u9017\u53f7\u62fc\u63a5\u7684\u7ed3\u679c","title":"2\u3001\u901a\u8fc7\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570"},{"location":"Java/SpringMVC/SpringMVCNotes/#3requestparam","text":"@RequestParam\u662f\u5c06\u8bf7\u6c42\u53c2\u6570\u548c\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2\u521b\u5efa\u6620\u5c04\u5173\u7cfb @RequestParam\u6ce8\u89e3\u4e00\u5171\u6709\u4e09\u4e2a\u5c5e\u6027\uff1a value\uff1a\u6307\u5b9a\u4e3a\u5f62\u53c2\u8d4b\u503c\u7684\u8bf7\u6c42\u53c2\u6570\u7684\u53c2\u6570\u540d required\uff1a\u8bbe\u7f6e\u662f\u5426\u5fc5\u987b\u4f20\u8f93\u6b64\u8bf7\u6c42\u53c2\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3atrue \u82e5\u8bbe\u7f6e\u4e3atrue\u65f6\uff0c\u5219\u5f53\u524d\u8bf7\u6c42\u5fc5\u987b\u4f20\u8f93value\u6240\u6307\u5b9a\u7684\u8bf7\u6c42\u53c2\u6570\uff0c\u82e5\u6ca1\u6709\u4f20\u8f93\u8be5\u8bf7\u6c42\u53c2\u6570\uff0c\u4e14\u6ca1\u6709\u8bbe\u7f6edefaultValue\u5c5e\u6027\uff0c\u5219\u9875\u9762\u62a5\u9519400\uff1aRequired String parameter 'xxx' is not present\uff1b\u82e5\u8bbe\u7f6e\u4e3afalse\uff0c\u5219\u5f53\u524d\u8bf7\u6c42\u4e0d\u662f\u5fc5\u987b\u4f20\u8f93value\u6240\u6307\u5b9a\u7684\u8bf7\u6c42\u53c2\u6570\uff0c\u82e5\u6ca1\u6709\u4f20\u8f93\uff0c\u5219\u6ce8\u89e3\u6240\u6807\u8bc6\u7684\u5f62\u53c2\u7684\u503c\u4e3anull defaultValue\uff1a\u4e0d\u7ba1required\u5c5e\u6027\u503c\u4e3atrue\u6216false\uff0c\u5f53value\u6240\u6307\u5b9a\u7684\u8bf7\u6c42\u53c2\u6570\u6ca1\u6709\u4f20\u8f93\u6216\u4f20\u8f93\u7684\u503c\u4e3a\"\"\u65f6\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\u4e3a\u5f62\u53c2\u8d4b\u503c","title":"3\u3001@RequestParam"},{"location":"Java/SpringMVC/SpringMVCNotes/#4requestheader","text":"@RequestHeader\u662f\u5c06\u8bf7\u6c42\u5934\u4fe1\u606f\u548c\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2\u521b\u5efa\u6620\u5c04\u5173\u7cfb @RequestHeader\u6ce8\u89e3\u4e00\u5171\u6709\u4e09\u4e2a\u5c5e\u6027\uff1avalue\u3001required\u3001defaultValue\uff0c\u7528\u6cd5\u540c@RequestParam","title":"4\u3001@RequestHeader"},{"location":"Java/SpringMVC/SpringMVCNotes/#5cookievalue","text":"@CookieValue\u662f\u5c06cookie\u6570\u636e\u548c\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2\u521b\u5efa\u6620\u5c04\u5173\u7cfb @CookieValue\u6ce8\u89e3\u4e00\u5171\u6709\u4e09\u4e2a\u5c5e\u6027\uff1avalue\u3001required\u3001defaultValue\uff0c\u7528\u6cd5\u540c@RequestParam","title":"5\u3001@CookieValue"},{"location":"Java/SpringMVC/SpringMVCNotes/#6pojo","text":"\u53ef\u4ee5\u5728\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2\u4f4d\u7f6e\u8bbe\u7f6e\u4e00\u4e2a\u5b9e\u4f53\u7c7b\u7c7b\u578b\u7684\u5f62\u53c2\uff0c\u6b64\u65f6\u82e5\u6d4f\u89c8\u5668\u4f20\u8f93\u7684\u8bf7\u6c42\u53c2\u6570\u7684\u53c2\u6570\u540d\u548c\u5b9e\u4f53\u7c7b\u4e2d\u7684\u5c5e\u6027\u540d\u4e00\u81f4\uff0c\u90a3\u4e48\u8bf7\u6c42\u53c2\u6570\u5c31\u4f1a\u4e3a\u6b64\u5c5e\u6027\u8d4b\u503c < form th:action = \"@{/testpojo}\" method = \"post\" > \u7528\u6237\u540d\uff1a < input type = \"text\" name = \"username\" >< br > \u5bc6\u7801\uff1a < input type = \"password\" name = \"password\" >< br > \u6027\u522b\uff1a < input type = \"radio\" name = \"sex\" value = \"\u7537\" > \u7537 < input type = \"radio\" name = \"sex\" value = \"\u5973\" > \u5973 < br > \u5e74\u9f84\uff1a < input type = \"text\" name = \"age\" >< br > \u90ae\u7bb1\uff1a < input type = \"text\" name = \"email\" >< br > < input type = \"submit\" > </ form > @RequestMapping ( \"/testpojo\" ) public String testPOJO ( User user ){ System . out . println ( user ); return \"success\" ; } //\u6700\u7ec8\u7ed3\u679c-->User{id=null, username='\u5f20\u4e09', password='123', age=23, sex='\u7537', email='123@qq.com'}","title":"6\u3001\u901a\u8fc7POJO\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570"},{"location":"Java/SpringMVC/SpringMVCNotes/#7_1","text":"\u89e3\u51b3\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570\u7684\u4e71\u7801\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528SpringMVC\u63d0\u4f9b\u7684\u7f16\u7801\u8fc7\u6ee4\u5668CharacterEncodingFilter\uff0c\u4f46\u662f\u5fc5\u987b\u5728web.xml\u4e2d\u8fdb\u884c\u6ce8\u518c <!--\u914d\u7f6espringMVC\u7684\u7f16\u7801\u8fc7\u6ee4\u5668--> <filter> <filter-name> CharacterEncodingFilter </filter-name> <filter-class> org.springframework.web.filter.CharacterEncodingFilter </filter-class> <init-param> <param-name> encoding </param-name> <param-value> UTF-8 </param-value> </init-param> <init-param> <param-name> forceResponseEncoding </param-name> <param-value> true </param-value> </init-param> </filter> <filter-mapping> <filter-name> CharacterEncodingFilter </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> \u6ce8\uff1a SpringMVC\u4e2d\u5904\u7406\u7f16\u7801\u7684\u8fc7\u6ee4\u5668\u4e00\u5b9a\u8981\u914d\u7f6e\u5230\u5176\u4ed6\u8fc7\u6ee4\u5668\u4e4b\u524d\uff0c\u5426\u5219\u65e0\u6548","title":"7\u3001\u89e3\u51b3\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570\u7684\u4e71\u7801\u95ee\u9898"},{"location":"Java/SpringMVC/SpringMVCNotes/#_1","text":"","title":"\u4e94\u3001\u57df\u5bf9\u8c61\u5171\u4eab\u6570\u636e"},{"location":"Java/SpringMVC/SpringMVCNotes/#1servletapirequest","text":"@RequestMapping ( \"/testServletAPI\" ) public String testServletAPI ( HttpServletRequest request ){ request . setAttribute ( \"testScope\" , \"hello,servletAPI\" ); return \"success\" ; }","title":"1\u3001\u4f7f\u7528ServletAPI\u5411request\u57df\u5bf9\u8c61\u5171\u4eab\u6570\u636e"},{"location":"Java/SpringMVC/SpringMVCNotes/#2modelandviewrequest","text":"@RequestMapping ( \"/testModelAndView\" ) public ModelAndView testModelAndView (){ /** * ModelAndView\u6709Model\u548cView\u7684\u529f\u80fd * Model\u4e3b\u8981\u7528\u4e8e\u5411\u8bf7\u6c42\u57df\u5171\u4eab\u6570\u636e * View\u4e3b\u8981\u7528\u4e8e\u8bbe\u7f6e\u89c6\u56fe\uff0c\u5b9e\u73b0\u9875\u9762\u8df3\u8f6c */ ModelAndView mav = new ModelAndView (); //\u5411\u8bf7\u6c42\u57df\u5171\u4eab\u6570\u636e mav . addObject ( \"testScope\" , \"hello,ModelAndView\" ); //\u8bbe\u7f6e\u89c6\u56fe\uff0c\u5b9e\u73b0\u9875\u9762\u8df3\u8f6c mav . setViewName ( \"success\" ); return mav ; }","title":"2\u3001\u4f7f\u7528ModelAndView\u5411request\u57df\u5bf9\u8c61\u5171\u4eab\u6570\u636e"},{"location":"Java/SpringMVC/SpringMVCNotes/#3modelrequest","text":"@RequestMapping ( \"/testModel\" ) public String testModel ( Model model ){ model . addAttribute ( \"testScope\" , \"hello,Model\" ); return \"success\" ; }","title":"3\u3001\u4f7f\u7528Model\u5411request\u57df\u5bf9\u8c61\u5171\u4eab\u6570\u636e"},{"location":"Java/SpringMVC/SpringMVCNotes/#4maprequest","text":"@RequestMapping ( \"/testMap\" ) public String testMap ( Map < String , Object > map ){ map . put ( \"testScope\" , \"hello,Map\" ); return \"success\" ; }","title":"4\u3001\u4f7f\u7528map\u5411request\u57df\u5bf9\u8c61\u5171\u4eab\u6570\u636e"},{"location":"Java/SpringMVC/SpringMVCNotes/#5modelmaprequest","text":"@RequestMapping ( \"/testModelMap\" ) public String testModelMap ( ModelMap modelMap ){ modelMap . addAttribute ( \"testScope\" , \"hello,ModelMap\" ); return \"success\" ; }","title":"5\u3001\u4f7f\u7528ModelMap\u5411request\u57df\u5bf9\u8c61\u5171\u4eab\u6570\u636e"},{"location":"Java/SpringMVC/SpringMVCNotes/#6modelmodelmapmap","text":"Model\u3001ModelMap\u3001Map\u7c7b\u578b\u7684\u53c2\u6570\u5176\u5b9e\u672c\u8d28\u4e0a\u90fd\u662f BindingAwareModelMap \u7c7b\u578b\u7684 public interface Model{} public class ModelMap extends LinkedHashMap<String, Object> {} public class ExtendedModelMap extends ModelMap implements Model {} public class BindingAwareModelMap extends ExtendedModelMap {}","title":"6\u3001Model\u3001ModelMap\u3001Map\u7684\u5173\u7cfb"},{"location":"Java/SpringMVC/SpringMVCNotes/#7session","text":"@RequestMapping ( \"/testSession\" ) public String testSession ( HttpSession session ){ session . setAttribute ( \"testSessionScope\" , \"hello,session\" ); return \"success\" ; }","title":"7\u3001\u5411session\u57df\u5171\u4eab\u6570\u636e"},{"location":"Java/SpringMVC/SpringMVCNotes/#8application","text":"@RequestMapping ( \"/testApplication\" ) public String testApplication ( HttpSession session ){ ServletContext application = session . getServletContext (); application . setAttribute ( \"testApplicationScope\" , \"hello,application\" ); return \"success\" ; }","title":"8\u3001\u5411application\u57df\u5171\u4eab\u6570\u636e"},{"location":"Java/SpringMVC/SpringMVCNotes/#springmvc_2","text":"SpringMVC\u4e2d\u7684\u89c6\u56fe\u662fView\u63a5\u53e3\uff0c\u89c6\u56fe\u7684\u4f5c\u7528\u6e32\u67d3\u6570\u636e\uff0c\u5c06\u6a21\u578bModel\u4e2d\u7684\u6570\u636e\u5c55\u793a\u7ed9\u7528\u6237 SpringMVC\u89c6\u56fe\u7684\u79cd\u7c7b\u5f88\u591a\uff0c\u9ed8\u8ba4\u6709\u8f6c\u53d1\u89c6\u56fe\u548c\u91cd\u5b9a\u5411\u89c6\u56fe \u5f53\u5de5\u7a0b\u5f15\u5165jstl\u7684\u4f9d\u8d56\uff0c\u8f6c\u53d1\u89c6\u56fe\u4f1a\u81ea\u52a8\u8f6c\u6362\u4e3aJstlView \u82e5\u4f7f\u7528\u7684\u89c6\u56fe\u6280\u672f\u4e3aThymeleaf\uff0c\u5728SpringMVC\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\u4e86Thymeleaf\u7684\u89c6\u56fe\u89e3\u6790\u5668\uff0c\u7531\u6b64\u89c6\u56fe\u89e3\u6790\u5668\u89e3\u6790\u4e4b\u540e\u6240\u5f97\u5230\u7684\u662fThymeleafView","title":"\u516d\u3001SpringMVC\u7684\u89c6\u56fe"},{"location":"Java/SpringMVC/SpringMVCNotes/#1thymeleafview","text":"\u5f53\u63a7\u5236\u5668\u65b9\u6cd5\u4e2d\u6240\u8bbe\u7f6e\u7684\u89c6\u56fe\u540d\u79f0\u6ca1\u6709\u4efb\u4f55\u524d\u7f00\u65f6\uff0c\u6b64\u65f6\u7684\u89c6\u56fe\u540d\u79f0\u4f1a\u88abSpringMVC\u914d\u7f6e\u6587\u4ef6\u4e2d\u6240\u914d\u7f6e\u7684\u89c6\u56fe\u89e3\u6790\u5668\u89e3\u6790\uff0c\u89c6\u56fe\u540d\u79f0\u62fc\u63a5\u89c6\u56fe\u524d\u7f00\u548c\u89c6\u56fe\u540e\u7f00\u6240\u5f97\u5230\u7684\u6700\u7ec8\u8def\u5f84\uff0c\u4f1a\u901a\u8fc7\u8f6c\u53d1\u7684\u65b9\u5f0f\u5b9e\u73b0\u8df3\u8f6c @RequestMapping ( \"/testHello\" ) public String testHello (){ return \"hello\" ; }","title":"1\u3001ThymeleafView"},{"location":"Java/SpringMVC/SpringMVCNotes/#2_1","text":"SpringMVC\u4e2d\u9ed8\u8ba4\u7684\u8f6c\u53d1\u89c6\u56fe\u662fInternalResourceView SpringMVC\u4e2d\u521b\u5efa\u8f6c\u53d1\u89c6\u56fe\u7684\u60c5\u51b5\uff1a \u5f53\u63a7\u5236\u5668\u65b9\u6cd5\u4e2d\u6240\u8bbe\u7f6e\u7684\u89c6\u56fe\u540d\u79f0\u4ee5\"forward:\"\u4e3a\u524d\u7f00\u65f6\uff0c\u521b\u5efaInternalResourceView\u89c6\u56fe\uff0c\u6b64\u65f6\u7684\u89c6\u56fe\u540d\u79f0\u4e0d\u4f1a\u88abSpringMVC\u914d\u7f6e\u6587\u4ef6\u4e2d\u6240\u914d\u7f6e\u7684\u89c6\u56fe\u89e3\u6790\u5668\u89e3\u6790\uff0c\u800c\u662f\u4f1a\u5c06\u524d\u7f00\"forward:\"\u53bb\u6389\uff0c\u5269\u4f59\u90e8\u5206\u4f5c\u4e3a\u6700\u7ec8\u8def\u5f84\u901a\u8fc7\u8f6c\u53d1\u7684\u65b9\u5f0f\u5b9e\u73b0\u8df3\u8f6c \u4f8b\u5982\"forward:/\"\uff0c\"forward:/employee\" @RequestMapping ( \"/testForward\" ) public String testForward (){ return \"forward:/testHello\" ; }","title":"2\u3001\u8f6c\u53d1\u89c6\u56fe"},{"location":"Java/SpringMVC/SpringMVCNotes/#3","text":"SpringMVC\u4e2d\u9ed8\u8ba4\u7684\u91cd\u5b9a\u5411\u89c6\u56fe\u662fRedirectView \u5f53\u63a7\u5236\u5668\u65b9\u6cd5\u4e2d\u6240\u8bbe\u7f6e\u7684\u89c6\u56fe\u540d\u79f0\u4ee5\"redirect:\"\u4e3a\u524d\u7f00\u65f6\uff0c\u521b\u5efaRedirectView\u89c6\u56fe\uff0c\u6b64\u65f6\u7684\u89c6\u56fe\u540d\u79f0\u4e0d\u4f1a\u88abSpringMVC\u914d\u7f6e\u6587\u4ef6\u4e2d\u6240\u914d\u7f6e\u7684\u89c6\u56fe\u89e3\u6790\u5668\u89e3\u6790\uff0c\u800c\u662f\u4f1a\u5c06\u524d\u7f00\"redirect:\"\u53bb\u6389\uff0c\u5269\u4f59\u90e8\u5206\u4f5c\u4e3a\u6700\u7ec8\u8def\u5f84\u901a\u8fc7\u91cd\u5b9a\u5411\u7684\u65b9\u5f0f\u5b9e\u73b0\u8df3\u8f6c \u4f8b\u5982\"redirect:/\"\uff0c\"redirect:/employee\" @RequestMapping ( \"/testRedirect\" ) public String testRedirect (){ return \"redirect:/testHello\" ; } \u6ce8\uff1a \u91cd\u5b9a\u5411\u89c6\u56fe\u5728\u89e3\u6790\u65f6\uff0c\u4f1a\u5148\u5c06redirect:\u524d\u7f00\u53bb\u6389\uff0c\u7136\u540e\u4f1a\u5224\u65ad\u5269\u4f59\u90e8\u5206\u662f\u5426\u4ee5/\u5f00\u5934\uff0c\u82e5\u662f\u5219\u4f1a\u81ea\u52a8\u62fc\u63a5\u4e0a\u4e0b\u6587\u8def\u5f84","title":"3\u3001\u91cd\u5b9a\u5411\u89c6\u56fe"},{"location":"Java/SpringMVC/SpringMVCNotes/#4view-controller","text":"\u5f53\u63a7\u5236\u5668\u65b9\u6cd5\u4e2d\uff0c\u4ec5\u4ec5\u7528\u6765\u5b9e\u73b0\u9875\u9762\u8df3\u8f6c\uff0c\u5373\u53ea\u9700\u8981\u8bbe\u7f6e\u89c6\u56fe\u540d\u79f0\u65f6\uff0c\u53ef\u4ee5\u5c06\u5904\u7406\u5668\u65b9\u6cd5\u4f7f\u7528view-controller\u6807\u7b7e\u8fdb\u884c\u8868\u793a <!-- path\uff1a\u8bbe\u7f6e\u5904\u7406\u7684\u8bf7\u6c42\u5730\u5740 view-name\uff1a\u8bbe\u7f6e\u8bf7\u6c42\u5730\u5740\u6240\u5bf9\u5e94\u7684\u89c6\u56fe\u540d\u79f0 --> <mvc:view-controller path= \"/testView\" view-name= \"success\" ></mvc:view-controller> \u6ce8\uff1a \u5f53SpringMVC\u4e2d\u8bbe\u7f6e\u4efb\u4f55\u4e00\u4e2aview-controller\u65f6\uff0c\u5176\u4ed6\u63a7\u5236\u5668\u4e2d\u7684\u8bf7\u6c42\u6620\u5c04\u5c06\u5168\u90e8\u5931\u6548\uff0c\u6b64\u65f6\u9700\u8981\u5728SpringMVC\u7684\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u5f00\u542fmvc\u6ce8\u89e3\u9a71\u52a8\u7684\u6807\u7b7e\uff1a","title":"4\u3001\u89c6\u56fe\u63a7\u5236\u5668view-controller"},{"location":"Java/SpringMVC/SpringMVCNotes/#restful","text":"","title":"\u4e03\u3001RESTful"},{"location":"Java/SpringMVC/SpringMVCNotes/#1restful","text":"REST\uff1a Re presentational S tate T ransfer\uff0c\u8868\u73b0\u5c42\u8d44\u6e90\u72b6\u6001\u8f6c\u79fb\u3002","title":"1\u3001RESTful\u7b80\u4ecb"},{"location":"Java/SpringMVC/SpringMVCNotes/#a_2","text":"\u8d44\u6e90\u662f\u4e00\u79cd\u770b\u5f85\u670d\u52a1\u5668\u7684\u65b9\u5f0f\uff0c\u5373\uff0c\u5c06\u670d\u52a1\u5668\u770b\u4f5c\u662f\u7531\u5f88\u591a\u79bb\u6563\u7684\u8d44\u6e90\u7ec4\u6210\u3002\u6bcf\u4e2a\u8d44\u6e90\u662f\u670d\u52a1\u5668\u4e0a\u4e00\u4e2a\u53ef\u547d\u540d\u7684\u62bd\u8c61\u6982\u5ff5\u3002\u56e0\u4e3a\u8d44\u6e90\u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u6982\u5ff5\uff0c\u6240\u4ee5\u5b83\u4e0d\u4ec5\u4ec5\u80fd\u4ee3\u8868\u670d\u52a1\u5668\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u6587\u4ef6\u3001\u6570\u636e\u5e93\u4e2d\u7684\u4e00\u5f20\u8868\u7b49\u7b49\u5177\u4f53\u7684\u4e1c\u897f\uff0c\u53ef\u4ee5\u5c06\u8d44\u6e90\u8bbe\u8ba1\u7684\u8981\u591a\u62bd\u8c61\u6709\u591a\u62bd\u8c61\uff0c\u53ea\u8981\u60f3\u8c61\u529b\u5141\u8bb8\u800c\u4e14\u5ba2\u6237\u7aef\u5e94\u7528\u5f00\u53d1\u8005\u80fd\u591f\u7406\u89e3\u3002\u4e0e\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u7c7b\u4f3c\uff0c\u8d44\u6e90\u662f\u4ee5\u540d\u8bcd\u4e3a\u6838\u5fc3\u6765\u7ec4\u7ec7\u7684\uff0c\u9996\u5148\u5173\u6ce8\u7684\u662f\u540d\u8bcd\u3002\u4e00\u4e2a\u8d44\u6e90\u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u591a\u4e2aURI\u6765\u6807\u8bc6\u3002URI\u65e2\u662f\u8d44\u6e90\u7684\u540d\u79f0\uff0c\u4e5f\u662f\u8d44\u6e90\u5728Web\u4e0a\u7684\u5730\u5740\u3002\u5bf9\u67d0\u4e2a\u8d44\u6e90\u611f\u5174\u8da3\u7684\u5ba2\u6237\u7aef\u5e94\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7\u8d44\u6e90\u7684URI\u4e0e\u5176\u8fdb\u884c\u4ea4\u4e92\u3002","title":"a&gt;\u8d44\u6e90"},{"location":"Java/SpringMVC/SpringMVCNotes/#b_2","text":"\u8d44\u6e90\u7684\u8868\u8ff0\u662f\u4e00\u6bb5\u5bf9\u4e8e\u8d44\u6e90\u5728\u67d0\u4e2a\u7279\u5b9a\u65f6\u523b\u7684\u72b6\u6001\u7684\u63cf\u8ff0\u3002\u53ef\u4ee5\u5728\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u7aef\u4e4b\u95f4\u8f6c\u79fb\uff08\u4ea4\u6362\uff09\u3002\u8d44\u6e90\u7684\u8868\u8ff0\u53ef\u4ee5\u6709\u591a\u79cd\u683c\u5f0f\uff0c\u4f8b\u5982HTML/XML/JSON/\u7eaf\u6587\u672c/\u56fe\u7247/\u89c6\u9891/\u97f3\u9891\u7b49\u7b49\u3002\u8d44\u6e90\u7684\u8868\u8ff0\u683c\u5f0f\u53ef\u4ee5\u901a\u8fc7\u534f\u5546\u673a\u5236\u6765\u786e\u5b9a\u3002\u8bf7\u6c42-\u54cd\u5e94\u65b9\u5411\u7684\u8868\u8ff0\u901a\u5e38\u4f7f\u7528\u4e0d\u540c\u7684\u683c\u5f0f\u3002","title":"b&gt;\u8d44\u6e90\u7684\u8868\u8ff0"},{"location":"Java/SpringMVC/SpringMVCNotes/#c_1","text":"\u72b6\u6001\u8f6c\u79fb\u8bf4\u7684\u662f\uff1a\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u4e4b\u95f4\u8f6c\u79fb\uff08transfer\uff09\u4ee3\u8868\u8d44\u6e90\u72b6\u6001\u7684\u8868\u8ff0\u3002\u901a\u8fc7\u8f6c\u79fb\u548c\u64cd\u4f5c\u8d44\u6e90\u7684\u8868\u8ff0\uff0c\u6765\u95f4\u63a5\u5b9e\u73b0\u64cd\u4f5c\u8d44\u6e90\u7684\u76ee\u7684\u3002","title":"c&gt;\u72b6\u6001\u8f6c\u79fb"},{"location":"Java/SpringMVC/SpringMVCNotes/#2restful","text":"\u5177\u4f53\u8bf4\uff0c\u5c31\u662f HTTP \u534f\u8bae\u91cc\u9762\uff0c\u56db\u4e2a\u8868\u793a\u64cd\u4f5c\u65b9\u5f0f\u7684\u52a8\u8bcd\uff1aGET\u3001POST\u3001PUT\u3001DELETE\u3002 \u5b83\u4eec\u5206\u522b\u5bf9\u5e94\u56db\u79cd\u57fa\u672c\u64cd\u4f5c\uff1aGET \u7528\u6765\u83b7\u53d6\u8d44\u6e90\uff0cPOST \u7528\u6765\u65b0\u5efa\u8d44\u6e90\uff0cPUT \u7528\u6765\u66f4\u65b0\u8d44\u6e90\uff0cDELETE \u7528\u6765\u5220\u9664\u8d44\u6e90\u3002 REST \u98ce\u683c\u63d0\u5021 URL \u5730\u5740\u4f7f\u7528\u7edf\u4e00\u7684\u98ce\u683c\u8bbe\u8ba1\uff0c\u4ece\u524d\u5230\u540e\u5404\u4e2a\u5355\u8bcd\u4f7f\u7528\u659c\u6760\u5206\u5f00\uff0c\u4e0d\u4f7f\u7528\u95ee\u53f7\u952e\u503c\u5bf9\u65b9\u5f0f\u643a\u5e26\u8bf7\u6c42\u53c2\u6570\uff0c\u800c\u662f\u5c06\u8981\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u7684\u6570\u636e\u4f5c\u4e3a URL \u5730\u5740\u7684\u4e00\u90e8\u5206\uff0c\u4ee5\u4fdd\u8bc1\u6574\u4f53\u98ce\u683c\u7684\u4e00\u81f4\u6027\u3002 \u64cd\u4f5c \u4f20\u7edf\u65b9\u5f0f REST\u98ce\u683c \u67e5\u8be2\u64cd\u4f5c getUserById?id=1 user/1-->get\u8bf7\u6c42\u65b9\u5f0f \u4fdd\u5b58\u64cd\u4f5c saveUser user-->post\u8bf7\u6c42\u65b9\u5f0f \u5220\u9664\u64cd\u4f5c deleteUser?id=1 user/1-->delete\u8bf7\u6c42\u65b9\u5f0f \u66f4\u65b0\u64cd\u4f5c updateUser user-->put\u8bf7\u6c42\u65b9\u5f0f","title":"2\u3001RESTful\u7684\u5b9e\u73b0"},{"location":"Java/SpringMVC/SpringMVCNotes/#3hiddenhttpmethodfilter","text":"\u7531\u4e8e\u6d4f\u89c8\u5668\u53ea\u652f\u6301\u53d1\u9001get\u548cpost\u65b9\u5f0f\u7684\u8bf7\u6c42\uff0c\u90a3\u4e48\u8be5\u5982\u4f55\u53d1\u9001put\u548cdelete\u8bf7\u6c42\u5462\uff1f SpringMVC \u63d0\u4f9b\u4e86 HiddenHttpMethodFilter \u5e2e\u52a9\u6211\u4eec \u5c06 POST \u8bf7\u6c42\u8f6c\u6362\u4e3a DELETE \u6216 PUT \u8bf7\u6c42 HiddenHttpMethodFilter \u5904\u7406put\u548cdelete\u8bf7\u6c42\u7684\u6761\u4ef6\uff1a a>\u5f53\u524d\u8bf7\u6c42\u7684\u8bf7\u6c42\u65b9\u5f0f\u5fc5\u987b\u4e3apost b>\u5f53\u524d\u8bf7\u6c42\u5fc5\u987b\u4f20\u8f93\u8bf7\u6c42\u53c2\u6570_method \u6ee1\u8db3\u4ee5\u4e0a\u6761\u4ef6\uff0c HiddenHttpMethodFilter \u8fc7\u6ee4\u5668\u5c31\u4f1a\u5c06\u5f53\u524d\u8bf7\u6c42\u7684\u8bf7\u6c42\u65b9\u5f0f\u8f6c\u6362\u4e3a\u8bf7\u6c42\u53c2\u6570_method\u7684\u503c\uff0c\u56e0\u6b64\u8bf7\u6c42\u53c2\u6570_method\u7684\u503c\u624d\u662f\u6700\u7ec8\u7684\u8bf7\u6c42\u65b9\u5f0f \u5728web.xml\u4e2d\u6ce8\u518c HiddenHttpMethodFilter <filter> <filter-name> HiddenHttpMethodFilter </filter-name> <filter-class> org.springframework.web.filter.HiddenHttpMethodFilter </filter-class> </filter> <filter-mapping> <filter-name> HiddenHttpMethodFilter </filter-name> <url-pattern> /* </url-pattern> </filter-mapping> \u6ce8\uff1a \u76ee\u524d\u4e3a\u6b62\uff0cSpringMVC\u4e2d\u63d0\u4f9b\u4e86\u4e24\u4e2a\u8fc7\u6ee4\u5668\uff1aCharacterEncodingFilter\u548cHiddenHttpMethodFilter \u5728web.xml\u4e2d\u6ce8\u518c\u65f6\uff0c\u5fc5\u987b\u5148\u6ce8\u518cCharacterEncodingFilter\uff0c\u518d\u6ce8\u518cHiddenHttpMethodFilter \u539f\u56e0\uff1a \u5728 CharacterEncodingFilter \u4e2d\u901a\u8fc7 request.setCharacterEncoding(encoding) \u65b9\u6cd5\u8bbe\u7f6e\u5b57\u7b26\u96c6\u7684 request.setCharacterEncoding(encoding) \u65b9\u6cd5\u8981\u6c42\u524d\u9762\u4e0d\u80fd\u6709\u4efb\u4f55\u83b7\u53d6\u8bf7\u6c42\u53c2\u6570\u7684\u64cd\u4f5c \u800c HiddenHttpMethodFilter \u6070\u6070\u6709\u4e00\u4e2a\u83b7\u53d6\u8bf7\u6c42\u65b9\u5f0f\u7684\u64cd\u4f5c\uff1a String paramValue = request.getParameter(this.methodParam);","title":"3\u3001HiddenHttpMethodFilter"},{"location":"Java/SpringMVC/SpringMVCNotes/#restful_1","text":"","title":"\u516b\u3001RESTful\u6848\u4f8b"},{"location":"Java/SpringMVC/SpringMVCNotes/#1_1","text":"\u548c\u4f20\u7edf CRUD \u4e00\u6837\uff0c\u5b9e\u73b0\u5bf9\u5458\u5de5\u4fe1\u606f\u7684\u589e\u5220\u6539\u67e5\u3002 \u642d\u5efa\u73af\u5883 \u51c6\u5907\u5b9e\u4f53\u7c7b package com.atguigu.mvc.bean ; public class Employee { private Integer id ; private String lastName ; private String email ; //1 male, 0 female private Integer gender ; public Integer getId () { return id ; } public void setId ( Integer id ) { this . id = id ; } public String getLastName () { return lastName ; } public void setLastName ( String lastName ) { this . lastName = lastName ; } public String getEmail () { return email ; } public void setEmail ( String email ) { this . email = email ; } public Integer getGender () { return gender ; } public void setGender ( Integer gender ) { this . gender = gender ; } public Employee ( Integer id , String lastName , String email , Integer gender ) { super (); this . id = id ; this . lastName = lastName ; this . email = email ; this . gender = gender ; } public Employee () { } } \u51c6\u5907dao\u6a21\u62df\u6570\u636e package com.atguigu.mvc.dao ; import java.util.Collection ; import java.util.HashMap ; import java.util.Map ; import com.atguigu.mvc.bean.Employee ; import org.springframework.stereotype.Repository ; @Repository public class EmployeeDao { private static Map < Integer , Employee > employees = null ; static { employees = new HashMap < Integer , Employee > (); employees . put ( 1001 , new Employee ( 1001 , \"E-AA\" , \"aa@163.com\" , 1 )); employees . put ( 1002 , new Employee ( 1002 , \"E-BB\" , \"bb@163.com\" , 1 )); employees . put ( 1003 , new Employee ( 1003 , \"E-CC\" , \"cc@163.com\" , 0 )); employees . put ( 1004 , new Employee ( 1004 , \"E-DD\" , \"dd@163.com\" , 0 )); employees . put ( 1005 , new Employee ( 1005 , \"E-EE\" , \"ee@163.com\" , 1 )); } private static Integer initId = 1006 ; public void save ( Employee employee ){ if ( employee . getId () == null ){ employee . setId ( initId ++ ); } employees . put ( employee . getId (), employee ); } public Collection < Employee > getAll (){ return employees . values (); } public Employee get ( Integer id ){ return employees . get ( id ); } public void delete ( Integer id ){ employees . remove ( id ); } }","title":"1\u3001\u51c6\u5907\u5de5\u4f5c"},{"location":"Java/SpringMVC/SpringMVCNotes/#2_2","text":"\u529f\u80fd URL \u5730\u5740 \u8bf7\u6c42\u65b9\u5f0f \u8bbf\u95ee\u9996\u9875\u221a / GET \u67e5\u8be2\u5168\u90e8\u6570\u636e\u221a /employee GET \u5220\u9664\u221a /employee/2 DELETE \u8df3\u8f6c\u5230\u6dfb\u52a0\u6570\u636e\u9875\u9762\u221a /toAdd GET \u6267\u884c\u4fdd\u5b58\u221a /employee POST \u8df3\u8f6c\u5230\u66f4\u65b0\u6570\u636e\u9875\u9762\u221a /employee/2 GET \u6267\u884c\u66f4\u65b0\u221a /employee PUT","title":"2\u3001\u529f\u80fd\u6e05\u5355"},{"location":"Java/SpringMVC/SpringMVCNotes/#3_1","text":"","title":"3\u3001\u5177\u4f53\u529f\u80fd\uff1a\u8bbf\u95ee\u9996\u9875"},{"location":"Java/SpringMVC/SpringMVCNotes/#aview-controller","text":"<mvc:view-controller path= \"/\" view-name= \"index\" />","title":"a&gt;\u914d\u7f6eview-controller"},{"location":"Java/SpringMVC/SpringMVCNotes/#b_3","text":"<!DOCTYPE html> < html lang = \"en\" xmlns:th = \"http://www.thymeleaf.org\" > < head > < meta charset = \"UTF-8\" > < title > Title </ title > </ head > < body > < h1 > \u9996\u9875 </ h1 > < a th:href = \"@{/employee}\" > \u8bbf\u95ee\u5458\u5de5\u4fe1\u606f </ a > </ body > </ html >","title":"b&gt;\u521b\u5efa\u9875\u9762"},{"location":"Java/SpringMVC/SpringMVCNotes/#4_1","text":"","title":"4\u3001\u5177\u4f53\u529f\u80fd\uff1a\u67e5\u8be2\u6240\u6709\u5458\u5de5\u6570\u636e"},{"location":"Java/SpringMVC/SpringMVCNotes/#a_3","text":"@RequestMapping ( value = \"/employee\" , method = RequestMethod . GET ) public String getEmployeeList ( Model model ){ Collection < Employee > employeeList = employeeDao . getAll (); model . addAttribute ( \"employeeList\" , employeeList ); return \"employee_list\" ; }","title":"a&gt;\u63a7\u5236\u5668\u65b9\u6cd5"},{"location":"Java/SpringMVC/SpringMVCNotes/#bemployee_listhtml","text":"<!DOCTYPE html> < html lang = \"en\" xmlns:th = \"http://www.thymeleaf.org\" > < head > < meta charset = \"UTF-8\" > < title > Employee Info </ title > < script type = \"text/javascript\" th:src = \"@{/static/js/vue.js}\" ></ script > </ head > < body > < table border = \"1\" cellpadding = \"0\" cellspacing = \"0\" style = \"text-align: center;\" id = \"dataTable\" > < tr > < th colspan = \"5\" > Employee Info </ th > </ tr > < tr > < th > id </ th > < th > lastName </ th > < th > email </ th > < th > gender </ th > < th > options( < a th:href = \"@{/toAdd}\" > add </ a > ) </ th > </ tr > < tr th:each = \"employee : ${employeeList}\" > < td th:text = \"${employee.id}\" ></ td > < td th:text = \"${employee.lastName}\" ></ td > < td th:text = \"${employee.email}\" ></ td > < td th:text = \"${employee.gender}\" ></ td > < td > < a class = \"deleteA\" @ click = \"deleteEmployee\" th:href = \"@{'/employee/'+${employee.id}}\" > delete </ a > < a th:href = \"@{'/employee/'+${employee.id}}\" > update </ a > </ td > </ tr > </ table > </ body > </ html >","title":"b&gt;\u521b\u5efaemployee_list.html"},{"location":"Java/SpringMVC/SpringMVCNotes/#5","text":"","title":"5\u3001\u5177\u4f53\u529f\u80fd\uff1a\u5220\u9664"},{"location":"Java/SpringMVC/SpringMVCNotes/#adelete","text":"<!-- \u4f5c\u7528\uff1a\u901a\u8fc7\u8d85\u94fe\u63a5\u63a7\u5236\u8868\u5355\u7684\u63d0\u4ea4\uff0c\u5c06post\u8bf7\u6c42\u8f6c\u6362\u4e3adelete\u8bf7\u6c42 --> < form id = \"delete_form\" method = \"post\" > <!-- HiddenHttpMethodFilter\u8981\u6c42\uff1a\u5fc5\u987b\u4f20\u8f93_method\u8bf7\u6c42\u53c2\u6570\uff0c\u5e76\u4e14\u503c\u4e3a\u6700\u7ec8\u7684\u8bf7\u6c42\u65b9\u5f0f --> < input type = \"hidden\" name = \"_method\" value = \"delete\" /> </ form >","title":"a&gt;\u521b\u5efa\u5904\u7406delete\u8bf7\u6c42\u65b9\u5f0f\u7684\u8868\u5355"},{"location":"Java/SpringMVC/SpringMVCNotes/#b_4","text":"\u5f15\u5165vue.js < script type = \"text/javascript\" th:src = \"@{/static/js/vue.js}\" ></ script > \u5220\u9664\u8d85\u94fe\u63a5 < a class = \"deleteA\" @ click = \"deleteEmployee\" th:href = \"@{'/employee/'+${employee.id}}\" > delete </ a > \u901a\u8fc7vue\u5904\u7406\u70b9\u51fb\u4e8b\u4ef6 < script type = \"text/javascript\" > var vue = new Vue ({ el : \"#dataTable\" , methods : { //event\u8868\u793a\u5f53\u524d\u4e8b\u4ef6 deleteEmployee : function ( event ) { //\u901a\u8fc7id\u83b7\u53d6\u8868\u5355\u6807\u7b7e var delete_form = document . getElementById ( \"delete_form\" ); //\u5c06\u89e6\u53d1\u4e8b\u4ef6\u7684\u8d85\u94fe\u63a5\u7684href\u5c5e\u6027\u4e3a\u8868\u5355\u7684action\u5c5e\u6027\u8d4b\u503c delete_form . action = event . target . href ; //\u63d0\u4ea4\u8868\u5355 delete_form . submit (); //\u963b\u6b62\u8d85\u94fe\u63a5\u7684\u9ed8\u8ba4\u8df3\u8f6c\u884c\u4e3a event . preventDefault (); } } }); </ script >","title":"b&gt;\u5220\u9664\u8d85\u94fe\u63a5\u7ed1\u5b9a\u70b9\u51fb\u4e8b\u4ef6"},{"location":"Java/SpringMVC/SpringMVCNotes/#c_2","text":"@RequestMapping ( value = \"/employee/{id}\" , method = RequestMethod . DELETE ) public String deleteEmployee ( @PathVariable ( \"id\" ) Integer id ){ employeeDao . delete ( id ); return \"redirect:/employee\" ; }","title":"c&gt;\u63a7\u5236\u5668\u65b9\u6cd5"},{"location":"Java/SpringMVC/SpringMVCNotes/#6","text":"","title":"6\u3001\u5177\u4f53\u529f\u80fd\uff1a\u8df3\u8f6c\u5230\u6dfb\u52a0\u6570\u636e\u9875\u9762"},{"location":"Java/SpringMVC/SpringMVCNotes/#aview-controller_1","text":"<mvc:view-controller path= \"/toAdd\" view-name= \"employee_add\" ></mvc:view-controller>","title":"a&gt;\u914d\u7f6eview-controller"},{"location":"Java/SpringMVC/SpringMVCNotes/#bemployee_addhtml","text":"<!DOCTYPE html> < html lang = \"en\" xmlns:th = \"http://www.thymeleaf.org\" > < head > < meta charset = \"UTF-8\" > < title > Add Employee </ title > </ head > < body > < form th:action = \"@{/employee}\" method = \"post\" > lastName: < input type = \"text\" name = \"lastName\" >< br > email: < input type = \"text\" name = \"email\" >< br > gender: < input type = \"radio\" name = \"gender\" value = \"1\" > male < input type = \"radio\" name = \"gender\" value = \"0\" > female < br > < input type = \"submit\" value = \"add\" >< br > </ form > </ body > </ html >","title":"b&gt;\u521b\u5efaemployee_add.html"},{"location":"Java/SpringMVC/SpringMVCNotes/#7_2","text":"","title":"7\u3001\u5177\u4f53\u529f\u80fd\uff1a\u6267\u884c\u4fdd\u5b58"},{"location":"Java/SpringMVC/SpringMVCNotes/#a_4","text":"@RequestMapping ( value = \"/employee\" , method = RequestMethod . POST ) public String addEmployee ( Employee employee ){ employeeDao . save ( employee ); return \"redirect:/employee\" ; }","title":"a&gt;\u63a7\u5236\u5668\u65b9\u6cd5"},{"location":"Java/SpringMVC/SpringMVCNotes/#8","text":"","title":"8\u3001\u5177\u4f53\u529f\u80fd\uff1a\u8df3\u8f6c\u5230\u66f4\u65b0\u6570\u636e\u9875\u9762"},{"location":"Java/SpringMVC/SpringMVCNotes/#a_5","text":"< a th:href = \"@{'/employee/'+${employee.id}}\" > update </ a >","title":"a&gt;\u4fee\u6539\u8d85\u94fe\u63a5"},{"location":"Java/SpringMVC/SpringMVCNotes/#b_5","text":"@RequestMapping ( value = \"/employee/{id}\" , method = RequestMethod . GET ) public String getEmployeeById ( @PathVariable ( \"id\" ) Integer id , Model model ){ Employee employee = employeeDao . get ( id ); model . addAttribute ( \"employee\" , employee ); return \"employee_update\" ; }","title":"b&gt;\u63a7\u5236\u5668\u65b9\u6cd5"},{"location":"Java/SpringMVC/SpringMVCNotes/#cemployee_updatehtml","text":"<!DOCTYPE html> < html lang = \"en\" xmlns:th = \"http://www.thymeleaf.org\" > < head > < meta charset = \"UTF-8\" > < title > Update Employee </ title > </ head > < body > < form th:action = \"@{/employee}\" method = \"post\" > < input type = \"hidden\" name = \"_method\" value = \"put\" > < input type = \"hidden\" name = \"id\" th:value = \"${employee.id}\" > lastName: < input type = \"text\" name = \"lastName\" th:value = \"${employee.lastName}\" >< br > email: < input type = \"text\" name = \"email\" th:value = \"${employee.email}\" >< br > <!-- th:field=\"${employee.gender}\"\u53ef\u7528\u4e8e\u5355\u9009\u6846\u6216\u590d\u9009\u6846\u7684\u56de\u663e \u82e5\u5355\u9009\u6846\u7684value\u548cemployee.gender\u7684\u503c\u4e00\u81f4\uff0c\u5219\u6dfb\u52a0checked=\"checked\"\u5c5e\u6027 --> gender: < input type = \"radio\" name = \"gender\" value = \"1\" th:field = \"${employee.gender}\" > male < input type = \"radio\" name = \"gender\" value = \"0\" th:field = \"${employee.gender}\" > female < br > < input type = \"submit\" value = \"update\" >< br > </ form > </ body > </ html >","title":"c&gt;\u521b\u5efaemployee_update.html"},{"location":"Java/SpringMVC/SpringMVCNotes/#9","text":"","title":"9\u3001\u5177\u4f53\u529f\u80fd\uff1a\u6267\u884c\u66f4\u65b0"},{"location":"Java/SpringMVC/SpringMVCNotes/#a_6","text":"@RequestMapping ( value = \"/employee\" , method = RequestMethod . PUT ) public String updateEmployee ( Employee employee ){ employeeDao . save ( employee ); return \"redirect:/employee\" ; }","title":"a&gt;\u63a7\u5236\u5668\u65b9\u6cd5"},{"location":"Java/SpringMVC/SpringMVCNotes/#httpmessageconverter","text":"HttpMessageConverter\uff0c\u62a5\u6587\u4fe1\u606f\u8f6c\u6362\u5668\uff0c\u5c06\u8bf7\u6c42\u62a5\u6587\u8f6c\u6362\u4e3aJava\u5bf9\u8c61\uff0c\u6216\u5c06Java\u5bf9\u8c61\u8f6c\u6362\u4e3a\u54cd\u5e94\u62a5\u6587 HttpMessageConverter\u63d0\u4f9b\u4e86\u4e24\u4e2a\u6ce8\u89e3\u548c\u4e24\u4e2a\u7c7b\u578b\uff1a@RequestBody\uff0c@ResponseBody\uff0cRequestEntity\uff0c ResponseEntity","title":"\u516b\u3001HttpMessageConverter"},{"location":"Java/SpringMVC/SpringMVCNotes/#1requestbody","text":"@RequestBody\u53ef\u4ee5\u83b7\u53d6\u8bf7\u6c42\u4f53\uff0c\u9700\u8981\u5728\u63a7\u5236\u5668\u65b9\u6cd5\u8bbe\u7f6e\u4e00\u4e2a\u5f62\u53c2\uff0c\u4f7f\u7528@RequestBody\u8fdb\u884c\u6807\u8bc6\uff0c\u5f53\u524d\u8bf7\u6c42\u7684\u8bf7\u6c42\u4f53\u5c31\u4f1a\u4e3a\u5f53\u524d\u6ce8\u89e3\u6240\u6807\u8bc6\u7684\u5f62\u53c2\u8d4b\u503c < form th:action = \"@{/testRequestBody}\" method = \"post\" > \u7528\u6237\u540d\uff1a < input type = \"text\" name = \"username\" >< br > \u5bc6\u7801\uff1a < input type = \"password\" name = \"password\" >< br > < input type = \"submit\" > </ form > @RequestMapping ( \"/testRequestBody\" ) public String testRequestBody ( @RequestBody String requestBody ){ System . out . println ( \"requestBody:\" + requestBody ); return \"success\" ; } \u8f93\u51fa\u7ed3\u679c\uff1a requestBody:username=admin&password=123456","title":"1\u3001@RequestBody"},{"location":"Java/SpringMVC/SpringMVCNotes/#2requestentity","text":"RequestEntity\u5c01\u88c5\u8bf7\u6c42\u62a5\u6587\u7684\u4e00\u79cd\u7c7b\u578b\uff0c\u9700\u8981\u5728\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u5f62\u53c2\u4e2d\u8bbe\u7f6e\u8be5\u7c7b\u578b\u7684\u5f62\u53c2\uff0c\u5f53\u524d\u8bf7\u6c42\u7684\u8bf7\u6c42\u62a5\u6587\u5c31\u4f1a\u8d4b\u503c\u7ed9\u8be5\u5f62\u53c2\uff0c\u53ef\u4ee5\u901a\u8fc7getHeaders()\u83b7\u53d6\u8bf7\u6c42\u5934\u4fe1\u606f\uff0c\u901a\u8fc7getBody()\u83b7\u53d6\u8bf7\u6c42\u4f53\u4fe1\u606f @RequestMapping ( \"/testRequestEntity\" ) public String testRequestEntity ( RequestEntity < String > requestEntity ){ System . out . println ( \"requestHeader:\" + requestEntity . getHeaders ()); System . out . println ( \"requestBody:\" + requestEntity . getBody ()); return \"success\" ; } \u8f93\u51fa\u7ed3\u679c\uff1a requestHeader:[host:\"localhost:8080\", connection:\"keep-alive\", content-length:\"27\", cache-control:\"max-age=0\", sec-ch-ua:\"\" Not A;Brand\";v=\"99\", \"Chromium\";v=\"90\", \"Google Chrome\";v=\"90\"\", sec-ch-ua-mobile:\"?0\", upgrade-insecure-requests:\"1\", origin:\"http://localhost:8080\", user-agent:\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36\"] requestBody:username=admin&password=123","title":"2\u3001RequestEntity"},{"location":"Java/SpringMVC/SpringMVCNotes/#3responsebody","text":"@ResponseBody\u7528\u4e8e\u6807\u8bc6\u4e00\u4e2a\u63a7\u5236\u5668\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u8be5\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u76f4\u63a5\u4f5c\u4e3a\u54cd\u5e94\u62a5\u6587\u7684\u54cd\u5e94\u4f53\u54cd\u5e94\u5230\u6d4f\u89c8\u5668 @RequestMapping ( \"/testResponseBody\" ) @ResponseBody public String testResponseBody (){ return \"success\" ; } \u7ed3\u679c\uff1a\u6d4f\u89c8\u5668\u9875\u9762\u663e\u793asuccess","title":"3\u3001@ResponseBody"},{"location":"Java/SpringMVC/SpringMVCNotes/#4springmvcjson","text":"@ResponseBody\u5904\u7406json\u7684\u6b65\u9aa4\uff1a a>\u5bfc\u5165jackson\u7684\u4f9d\u8d56 <dependency> <groupId> com.fasterxml.jackson.core </groupId> <artifactId> jackson-databind </artifactId> <version> 2.12.1 </version> </dependency> b>\u5728SpringMVC\u7684\u6838\u5fc3\u914d\u7f6e\u6587\u4ef6\u4e2d\u5f00\u542fmvc\u7684\u6ce8\u89e3\u9a71\u52a8\uff0c\u6b64\u65f6\u5728HandlerAdaptor\u4e2d\u4f1a\u81ea\u52a8\u88c5\u914d\u4e00\u4e2a\u6d88\u606f\u8f6c\u6362\u5668\uff1aMappingJackson2HttpMessageConverter\uff0c\u53ef\u4ee5\u5c06\u54cd\u5e94\u5230\u6d4f\u89c8\u5668\u7684Java\u5bf9\u8c61\u8f6c\u6362\u4e3aJson\u683c\u5f0f\u7684\u5b57\u7b26\u4e32 <mvc:annotation-driven /> c>\u5728\u5904\u7406\u5668\u65b9\u6cd5\u4e0a\u4f7f\u7528@ResponseBody\u6ce8\u89e3\u8fdb\u884c\u6807\u8bc6 d>\u5c06Java\u5bf9\u8c61\u76f4\u63a5\u4f5c\u4e3a\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u8fd4\u56de\uff0c\u5c31\u4f1a\u81ea\u52a8\u8f6c\u6362\u4e3aJson\u683c\u5f0f\u7684\u5b57\u7b26\u4e32 @RequestMapping ( \"/testResponseUser\" ) @ResponseBody public User testResponseUser (){ return new User ( 1001 , \"admin\" , \"123456\" , 23 , \"\u7537\" ); } \u6d4f\u89c8\u5668\u7684\u9875\u9762\u4e2d\u5c55\u793a\u7684\u7ed3\u679c\uff1a {\"id\":1001,\"username\":\"admin\",\"password\":\"123456\",\"age\":23,\"sex\":\"\u7537\"}","title":"4\u3001SpringMVC\u5904\u7406json"},{"location":"Java/SpringMVC/SpringMVCNotes/#5springmvcajax","text":"a>\u8bf7\u6c42\u8d85\u94fe\u63a5\uff1a < div id = \"app\" > < a th:href = \"@{/testAjax}\" @ click = \"testAjax\" > testAjax </ a >< br > </ div > b>\u901a\u8fc7vue\u548caxios\u5904\u7406\u70b9\u51fb\u4e8b\u4ef6\uff1a < script type = \"text/javascript\" th:src = \"@{/static/js/vue.js}\" ></ script > < script type = \"text/javascript\" th:src = \"@{/static/js/axios.min.js}\" ></ script > < script type = \"text/javascript\" > var vue = new Vue ({ el : \"#app\" , methods : { testAjax : function ( event ) { axios ({ method : \"post\" , url : event . target . href , params : { username : \"admin\" , password : \"123456\" } }). then ( function ( response ) { alert ( response . data ); }); event . preventDefault (); } } }); </ script > c>\u63a7\u5236\u5668\u65b9\u6cd5\uff1a @RequestMapping ( \"/testAjax\" ) @ResponseBody public String testAjax ( String username , String password ){ System . out . println ( \"username:\" + username + \",password:\" + password ); return \"hello,ajax\" ; }","title":"5\u3001SpringMVC\u5904\u7406ajax"},{"location":"Java/SpringMVC/SpringMVCNotes/#6restcontroller","text":"@RestController\u6ce8\u89e3\u662fspringMVC\u63d0\u4f9b\u7684\u4e00\u4e2a\u590d\u5408\u6ce8\u89e3\uff0c\u6807\u8bc6\u5728\u63a7\u5236\u5668\u7684\u7c7b\u4e0a\uff0c\u5c31\u76f8\u5f53\u4e8e\u4e3a\u7c7b\u6dfb\u52a0\u4e86@Controller\u6ce8\u89e3\uff0c\u5e76\u4e14\u4e3a\u5176\u4e2d\u7684\u6bcf\u4e2a\u65b9\u6cd5\u6dfb\u52a0\u4e86@ResponseBody\u6ce8\u89e3","title":"6\u3001@RestController\u6ce8\u89e3"},{"location":"Java/SpringMVC/SpringMVCNotes/#7responseentity","text":"ResponseEntity\u7528\u4e8e\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u8be5\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u5c31\u662f\u54cd\u5e94\u5230\u6d4f\u89c8\u5668\u7684\u54cd\u5e94\u62a5\u6587","title":"7\u3001ResponseEntity"},{"location":"Java/SpringMVC/SpringMVCNotes/#_2","text":"","title":"\u4e5d\u3001\u6587\u4ef6\u4e0a\u4f20\u548c\u4e0b\u8f7d"},{"location":"Java/SpringMVC/SpringMVCNotes/#1_2","text":"\u4f7f\u7528ResponseEntity\u5b9e\u73b0\u4e0b\u8f7d\u6587\u4ef6\u7684\u529f\u80fd @RequestMapping ( \"/testDown\" ) public ResponseEntity < byte []> testResponseEntity ( HttpSession session ) throws IOException { //\u83b7\u53d6ServletContext\u5bf9\u8c61 ServletContext servletContext = session . getServletContext (); //\u83b7\u53d6\u670d\u52a1\u5668\u4e2d\u6587\u4ef6\u7684\u771f\u5b9e\u8def\u5f84 String realPath = servletContext . getRealPath ( \"/static/img/1.jpg\" ); //\u521b\u5efa\u8f93\u5165\u6d41 InputStream is = new FileInputStream ( realPath ); //\u521b\u5efa\u5b57\u8282\u6570\u7ec4 byte [] bytes = new byte [ is . available () ] ; //\u5c06\u6d41\u8bfb\u5230\u5b57\u8282\u6570\u7ec4\u4e2d is . read ( bytes ); //\u521b\u5efaHttpHeaders\u5bf9\u8c61\u8bbe\u7f6e\u54cd\u5e94\u5934\u4fe1\u606f MultiValueMap < String , String > headers = new HttpHeaders (); //\u8bbe\u7f6e\u8981\u4e0b\u8f7d\u65b9\u5f0f\u4ee5\u53ca\u4e0b\u8f7d\u6587\u4ef6\u7684\u540d\u5b57 headers . add ( \"Content-Disposition\" , \"attachment;filename=1.jpg\" ); //\u8bbe\u7f6e\u54cd\u5e94\u72b6\u6001\u7801 HttpStatus statusCode = HttpStatus . OK ; //\u521b\u5efaResponseEntity\u5bf9\u8c61 ResponseEntity < byte []> responseEntity = new ResponseEntity <> ( bytes , headers , statusCode ); //\u5173\u95ed\u8f93\u5165\u6d41 is . close (); return responseEntity ; }","title":"1\u3001\u6587\u4ef6\u4e0b\u8f7d"},{"location":"Java/SpringMVC/SpringMVCNotes/#2_3","text":"\u6587\u4ef6\u4e0a\u4f20\u8981\u6c42form\u8868\u5355\u7684\u8bf7\u6c42\u65b9\u5f0f\u5fc5\u987b\u4e3apost\uff0c\u5e76\u4e14\u6dfb\u52a0\u5c5e\u6027enctype=\"multipart/form-data\" SpringMVC\u4e2d\u5c06\u4e0a\u4f20\u7684\u6587\u4ef6\u5c01\u88c5\u5230MultipartFile\u5bf9\u8c61\u4e2d\uff0c\u901a\u8fc7\u6b64\u5bf9\u8c61\u53ef\u4ee5\u83b7\u53d6\u6587\u4ef6\u76f8\u5173\u4fe1\u606f \u4e0a\u4f20\u6b65\u9aa4\uff1a a>\u6dfb\u52a0\u4f9d\u8d56\uff1a <!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --> <dependency> <groupId> commons-fileupload </groupId> <artifactId> commons-fileupload </artifactId> <version> 1.3.1 </version> </dependency> b>\u5728SpringMVC\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u914d\u7f6e\uff1a <!--\u5fc5\u987b\u901a\u8fc7\u6587\u4ef6\u89e3\u6790\u5668\u7684\u89e3\u6790\u624d\u80fd\u5c06\u6587\u4ef6\u8f6c\u6362\u4e3aMultipartFile\u5bf9\u8c61--> <bean id= \"multipartResolver\" class= \"org.springframework.web.multipart.commons.CommonsMultipartResolver\" ></bean> c>\u63a7\u5236\u5668\u65b9\u6cd5\uff1a @RequestMapping ( \"/testUp\" ) public String testUp ( MultipartFile photo , HttpSession session ) throws IOException { //\u83b7\u53d6\u4e0a\u4f20\u7684\u6587\u4ef6\u7684\u6587\u4ef6\u540d String fileName = photo . getOriginalFilename (); //\u5904\u7406\u6587\u4ef6\u91cd\u540d\u95ee\u9898 String hzName = fileName . substring ( fileName . lastIndexOf ( \".\" )); fileName = UUID . randomUUID (). toString () + hzName ; //\u83b7\u53d6\u670d\u52a1\u5668\u4e2dphoto\u76ee\u5f55\u7684\u8def\u5f84 ServletContext servletContext = session . getServletContext (); String photoPath = servletContext . getRealPath ( \"photo\" ); File file = new File ( photoPath ); if ( ! file . exists ()){ file . mkdir (); } String finalPath = photoPath + File . separator + fileName ; //\u5b9e\u73b0\u4e0a\u4f20\u529f\u80fd photo . transferTo ( new File ( finalPath )); return \"success\" ; }","title":"2\u3001\u6587\u4ef6\u4e0a\u4f20"},{"location":"Java/SpringMVC/SpringMVCNotes/#_3","text":"","title":"\u5341\u3001\u62e6\u622a\u5668"},{"location":"Java/SpringMVC/SpringMVCNotes/#1_3","text":"SpringMVC\u4e2d\u7684\u62e6\u622a\u5668\u7528\u4e8e\u62e6\u622a\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u6267\u884c SpringMVC\u4e2d\u7684\u62e6\u622a\u5668\u9700\u8981\u5b9e\u73b0HandlerInterceptor SpringMVC\u7684\u62e6\u622a\u5668\u5fc5\u987b\u5728SpringMVC\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u8fdb\u884c\u914d\u7f6e\uff1a <bean class= \"com.atguigu.interceptor.FirstInterceptor\" ></bean> <ref bean= \"firstInterceptor\" ></ref> <!-- \u4ee5\u4e0a\u4e24\u79cd\u914d\u7f6e\u65b9\u5f0f\u90fd\u662f\u5bf9DispatcherServlet\u6240\u5904\u7406\u7684\u6240\u6709\u7684\u8bf7\u6c42\u8fdb\u884c\u62e6\u622a --> <mvc:interceptor> <mvc:mapping path= \"/**\" /> <mvc:exclude-mapping path= \"/testRequestEntity\" /> <ref bean= \"firstInterceptor\" ></ref> </mvc:interceptor> <!-- \u4ee5\u4e0a\u914d\u7f6e\u65b9\u5f0f\u53ef\u4ee5\u901a\u8fc7ref\u6216bean\u6807\u7b7e\u8bbe\u7f6e\u62e6\u622a\u5668\uff0c\u901a\u8fc7mvc:mapping\u8bbe\u7f6e\u9700\u8981\u62e6\u622a\u7684\u8bf7\u6c42\uff0c\u901a\u8fc7mvc:exclude-mapping\u8bbe\u7f6e\u9700\u8981\u6392\u9664\u7684\u8bf7\u6c42\uff0c\u5373\u4e0d\u9700\u8981\u62e6\u622a\u7684\u8bf7\u6c42 -->","title":"1\u3001\u62e6\u622a\u5668\u7684\u914d\u7f6e"},{"location":"Java/SpringMVC/SpringMVCNotes/#2_4","text":"SpringMVC\u4e2d\u7684\u62e6\u622a\u5668\u6709\u4e09\u4e2a\u62bd\u8c61\u65b9\u6cd5\uff1a preHandle\uff1a\u63a7\u5236\u5668\u65b9\u6cd5\u6267\u884c\u4e4b\u524d\u6267\u884cpreHandle()\uff0c\u5176boolean\u7c7b\u578b\u7684\u8fd4\u56de\u503c\u8868\u793a\u662f\u5426\u62e6\u622a\u6216\u653e\u884c\uff0c\u8fd4\u56detrue\u4e3a\u653e\u884c\uff0c\u5373\u8c03\u7528\u63a7\u5236\u5668\u65b9\u6cd5\uff1b\u8fd4\u56defalse\u8868\u793a\u62e6\u622a\uff0c\u5373\u4e0d\u8c03\u7528\u63a7\u5236\u5668\u65b9\u6cd5 postHandle\uff1a\u63a7\u5236\u5668\u65b9\u6cd5\u6267\u884c\u4e4b\u540e\u6267\u884cpostHandle() afterComplation\uff1a\u5904\u7406\u5b8c\u89c6\u56fe\u548c\u6a21\u578b\u6570\u636e\uff0c\u6e32\u67d3\u89c6\u56fe\u5b8c\u6bd5\u4e4b\u540e\u6267\u884cafterComplation()","title":"2\u3001\u62e6\u622a\u5668\u7684\u4e09\u4e2a\u62bd\u8c61\u65b9\u6cd5"},{"location":"Java/SpringMVC/SpringMVCNotes/#3_2","text":"a>\u82e5\u6bcf\u4e2a\u62e6\u622a\u5668\u7684preHandle()\u90fd\u8fd4\u56detrue \u6b64\u65f6\u591a\u4e2a\u62e6\u622a\u5668\u7684\u6267\u884c\u987a\u5e8f\u548c\u62e6\u622a\u5668\u5728SpringMVC\u7684\u914d\u7f6e\u6587\u4ef6\u7684\u914d\u7f6e\u987a\u5e8f\u6709\u5173\uff1a preHandle()\u4f1a\u6309\u7167\u914d\u7f6e\u7684\u987a\u5e8f\u6267\u884c\uff0c\u800cpostHandle()\u548cafterComplation()\u4f1a\u6309\u7167\u914d\u7f6e\u7684\u53cd\u5e8f\u6267\u884c b>\u82e5\u67d0\u4e2a\u62e6\u622a\u5668\u7684preHandle()\u8fd4\u56de\u4e86false preHandle()\u8fd4\u56defalse\u548c\u5b83\u4e4b\u524d\u7684\u62e6\u622a\u5668\u7684preHandle()\u90fd\u4f1a\u6267\u884c\uff0cpostHandle()\u90fd\u4e0d\u6267\u884c\uff0c\u8fd4\u56defalse\u7684\u62e6\u622a\u5668\u4e4b\u524d\u7684\u62e6\u622a\u5668\u7684afterComplation()\u4f1a\u6267\u884c","title":"3\u3001\u591a\u4e2a\u62e6\u622a\u5668\u7684\u6267\u884c\u987a\u5e8f"},{"location":"Java/SpringMVC/SpringMVCNotes/#_4","text":"","title":"\u5341\u4e00\u3001\u5f02\u5e38\u5904\u7406\u5668"},{"location":"Java/SpringMVC/SpringMVCNotes/#1_4","text":"SpringMVC\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5904\u7406\u63a7\u5236\u5668\u65b9\u6cd5\u6267\u884c\u8fc7\u7a0b\u4e2d\u6240\u51fa\u73b0\u7684\u5f02\u5e38\u7684\u63a5\u53e3\uff1aHandlerExceptionResolver HandlerExceptionResolver\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u6709\uff1aDefaultHandlerExceptionResolver\u548cSimpleMappingExceptionResolver SpringMVC\u63d0\u4f9b\u4e86\u81ea\u5b9a\u4e49\u7684\u5f02\u5e38\u5904\u7406\u5668SimpleMappingExceptionResolver\uff0c\u4f7f\u7528\u65b9\u5f0f\uff1a <bean class= \"org.springframework.web.servlet.handler.SimpleMappingExceptionResolver\" > <property name= \"exceptionMappings\" > <props> <!-- properties\u7684\u952e\u8868\u793a\u5904\u7406\u5668\u65b9\u6cd5\u6267\u884c\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u7684\u5f02\u5e38 properties\u7684\u503c\u8868\u793a\u82e5\u51fa\u73b0\u6307\u5b9a\u5f02\u5e38\u65f6\uff0c\u8bbe\u7f6e\u4e00\u4e2a\u65b0\u7684\u89c6\u56fe\u540d\u79f0\uff0c\u8df3\u8f6c\u5230\u6307\u5b9a\u9875\u9762 --> <prop key= \"java.lang.ArithmeticException\" > error </prop> </props> </property> <!-- exceptionAttribute\u5c5e\u6027\u8bbe\u7f6e\u4e00\u4e2a\u5c5e\u6027\u540d\uff0c\u5c06\u51fa\u73b0\u7684\u5f02\u5e38\u4fe1\u606f\u5728\u8bf7\u6c42\u57df\u4e2d\u8fdb\u884c\u5171\u4eab --> <property name= \"exceptionAttribute\" value= \"ex\" ></property> </bean>","title":"1\u3001\u57fa\u4e8e\u914d\u7f6e\u7684\u5f02\u5e38\u5904\u7406"},{"location":"Java/SpringMVC/SpringMVCNotes/#2_5","text":"//@ControllerAdvice\u5c06\u5f53\u524d\u7c7b\u6807\u8bc6\u4e3a\u5f02\u5e38\u5904\u7406\u7684\u7ec4\u4ef6 @ControllerAdvice public class ExceptionController { //@ExceptionHandler\u7528\u4e8e\u8bbe\u7f6e\u6240\u6807\u8bc6\u65b9\u6cd5\u5904\u7406\u7684\u5f02\u5e38 @ExceptionHandler ( ArithmeticException . class ) //ex\u8868\u793a\u5f53\u524d\u8bf7\u6c42\u5904\u7406\u4e2d\u51fa\u73b0\u7684\u5f02\u5e38\u5bf9\u8c61 public String handleArithmeticException ( Exception ex , Model model ){ model . addAttribute ( \"ex\" , ex ); return \"error\" ; } }","title":"2\u3001\u57fa\u4e8e\u6ce8\u89e3\u7684\u5f02\u5e38\u5904\u7406"},{"location":"Java/SpringMVC/SpringMVCNotes/#springmvc_3","text":"\u4f7f\u7528\u914d\u7f6e\u7c7b\u548c\u6ce8\u89e3\u4ee3\u66ffweb.xml\u548cSpringMVC\u914d\u7f6e\u6587\u4ef6\u7684\u529f\u80fd","title":"\u5341\u4e8c\u3001\u6ce8\u89e3\u914d\u7f6eSpringMVC"},{"location":"Java/SpringMVC/SpringMVCNotes/#1webxml","text":"\u5728Servlet3.0\u73af\u5883\u4e2d\uff0c\u5bb9\u5668\u4f1a\u5728\u7c7b\u8def\u5f84\u4e2d\u67e5\u627e\u5b9e\u73b0javax.servlet.ServletContainerInitializer\u63a5\u53e3\u7684\u7c7b\uff0c\u5982\u679c\u627e\u5230\u7684\u8bdd\u5c31\u7528\u5b83\u6765\u914d\u7f6eServlet\u5bb9\u5668\u3002 Spring\u63d0\u4f9b\u4e86\u8fd9\u4e2a\u63a5\u53e3\u7684\u5b9e\u73b0\uff0c\u540d\u4e3aSpringServletContainerInitializer\uff0c\u8fd9\u4e2a\u7c7b\u53cd\u8fc7\u6765\u53c8\u4f1a\u67e5\u627e\u5b9e\u73b0WebApplicationInitializer\u7684\u7c7b\u5e76\u5c06\u914d\u7f6e\u7684\u4efb\u52a1\u4ea4\u7ed9\u5b83\u4eec\u6765\u5b8c\u6210\u3002Spring3.2\u5f15\u5165\u4e86\u4e00\u4e2a\u4fbf\u5229\u7684WebApplicationInitializer\u57fa\u7840\u5b9e\u73b0\uff0c\u540d\u4e3aAbstractAnnotationConfigDispatcherServletInitializer\uff0c\u5f53\u6211\u4eec\u7684\u7c7b\u6269\u5c55\u4e86AbstractAnnotationConfigDispatcherServletInitializer\u5e76\u5c06\u5176\u90e8\u7f72\u5230Servlet3.0\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u5bb9\u5668\u4f1a\u81ea\u52a8\u53d1\u73b0\u5b83\uff0c\u5e76\u7528\u5b83\u6765\u914d\u7f6eServlet\u4e0a\u4e0b\u6587\u3002 public class WebInit extends AbstractAnnotationConfigDispatcherServletInitializer { /** * \u6307\u5b9aspring\u7684\u914d\u7f6e\u7c7b * @return */ @Override protected Class <?>[] getRootConfigClasses () { return new Class [] { SpringConfig . class }; } /** * \u6307\u5b9aSpringMVC\u7684\u914d\u7f6e\u7c7b * @return */ @Override protected Class <?>[] getServletConfigClasses () { return new Class [] { WebConfig . class }; } /** * \u6307\u5b9aDispatcherServlet\u7684\u6620\u5c04\u89c4\u5219\uff0c\u5373url-pattern * @return */ @Override protected String [] getServletMappings () { return new String [] { \"/\" }; } /** * \u6dfb\u52a0\u8fc7\u6ee4\u5668 * @return */ @Override protected Filter [] getServletFilters () { CharacterEncodingFilter encodingFilter = new CharacterEncodingFilter (); encodingFilter . setEncoding ( \"UTF-8\" ); encodingFilter . setForceRequestEncoding ( true ); HiddenHttpMethodFilter hiddenHttpMethodFilter = new HiddenHttpMethodFilter (); return new Filter [] { encodingFilter , hiddenHttpMethodFilter }; } }","title":"1\u3001\u521b\u5efa\u521d\u59cb\u5316\u7c7b\uff0c\u4ee3\u66ffweb.xml"},{"location":"Java/SpringMVC/SpringMVCNotes/#2springconfigspring","text":"@Configuration public class SpringConfig { //ssm\u6574\u5408\u4e4b\u540e\uff0cspring\u7684\u914d\u7f6e\u4fe1\u606f\u5199\u5728\u6b64\u7c7b\u4e2d }","title":"2\u3001\u521b\u5efaSpringConfig\u914d\u7f6e\u7c7b\uff0c\u4ee3\u66ffspring\u7684\u914d\u7f6e\u6587\u4ef6"},{"location":"Java/SpringMVC/SpringMVCNotes/#3webconfigspringmvc","text":"@Configuration //\u626b\u63cf\u7ec4\u4ef6 @ComponentScan ( \"com.atguigu.mvc.controller\" ) //\u5f00\u542fMVC\u6ce8\u89e3\u9a71\u52a8 @EnableWebMvc public class WebConfig implements WebMvcConfigurer { //\u4f7f\u7528\u9ed8\u8ba4\u7684servlet\u5904\u7406\u9759\u6001\u8d44\u6e90 @Override public void configureDefaultServletHandling ( DefaultServletHandlerConfigurer configurer ) { configurer . enable (); } //\u914d\u7f6e\u6587\u4ef6\u4e0a\u4f20\u89e3\u6790\u5668 @Bean public CommonsMultipartResolver multipartResolver (){ return new CommonsMultipartResolver (); } //\u914d\u7f6e\u62e6\u622a\u5668 @Override public void addInterceptors ( InterceptorRegistry registry ) { FirstInterceptor firstInterceptor = new FirstInterceptor (); registry . addInterceptor ( firstInterceptor ). addPathPatterns ( \"/**\" ); } //\u914d\u7f6e\u89c6\u56fe\u63a7\u5236 /*@Override public void addViewControllers(ViewControllerRegistry registry) { registry.addViewController(\"/\").setViewName(\"index\"); }*/ //\u914d\u7f6e\u5f02\u5e38\u6620\u5c04 /*@Override public void configureHandlerExceptionResolvers(List<HandlerExceptionResolver> resolvers) { SimpleMappingExceptionResolver exceptionResolver = new SimpleMappingExceptionResolver(); Properties prop = new Properties(); prop.setProperty(\"java.lang.ArithmeticException\", \"error\"); //\u8bbe\u7f6e\u5f02\u5e38\u6620\u5c04 exceptionResolver.setExceptionMappings(prop); //\u8bbe\u7f6e\u5171\u4eab\u5f02\u5e38\u4fe1\u606f\u7684\u952e exceptionResolver.setExceptionAttribute(\"ex\"); resolvers.add(exceptionResolver); }*/ //\u914d\u7f6e\u751f\u6210\u6a21\u677f\u89e3\u6790\u5668 @Bean public ITemplateResolver templateResolver () { WebApplicationContext webApplicationContext = ContextLoader . getCurrentWebApplicationContext (); // ServletContextTemplateResolver\u9700\u8981\u4e00\u4e2aServletContext\u4f5c\u4e3a\u6784\u9020\u53c2\u6570\uff0c\u53ef\u901a\u8fc7WebApplicationContext \u7684\u65b9\u6cd5\u83b7\u5f97 ServletContextTemplateResolver templateResolver = new ServletContextTemplateResolver ( webApplicationContext . getServletContext ()); templateResolver . setPrefix ( \"/WEB-INF/templates/\" ); templateResolver . setSuffix ( \".html\" ); templateResolver . setCharacterEncoding ( \"UTF-8\" ); templateResolver . setTemplateMode ( TemplateMode . HTML ); return templateResolver ; } //\u751f\u6210\u6a21\u677f\u5f15\u64ce\u5e76\u4e3a\u6a21\u677f\u5f15\u64ce\u6ce8\u5165\u6a21\u677f\u89e3\u6790\u5668 @Bean public SpringTemplateEngine templateEngine ( ITemplateResolver templateResolver ) { SpringTemplateEngine templateEngine = new SpringTemplateEngine (); templateEngine . setTemplateResolver ( templateResolver ); return templateEngine ; } //\u751f\u6210\u89c6\u56fe\u89e3\u6790\u5668\u5e76\u672a\u89e3\u6790\u5668\u6ce8\u5165\u6a21\u677f\u5f15\u64ce @Bean public ViewResolver viewResolver ( SpringTemplateEngine templateEngine ) { ThymeleafViewResolver viewResolver = new ThymeleafViewResolver (); viewResolver . setCharacterEncoding ( \"UTF-8\" ); viewResolver . setTemplateEngine ( templateEngine ); return viewResolver ; } }","title":"3\u3001\u521b\u5efaWebConfig\u914d\u7f6e\u7c7b\uff0c\u4ee3\u66ffSpringMVC\u7684\u914d\u7f6e\u6587\u4ef6"},{"location":"Java/SpringMVC/SpringMVCNotes/#4_2","text":"@RequestMapping ( \"/\" ) public String index (){ return \"index\" ; }","title":"4\u3001\u6d4b\u8bd5\u529f\u80fd"},{"location":"Java/SpringMVC/SpringMVCNotes/#springmvc_4","text":"","title":"\u5341\u4e09\u3001SpringMVC\u6267\u884c\u6d41\u7a0b"},{"location":"Java/SpringMVC/SpringMVCNotes/#1springmvc","text":"DispatcherServlet\uff1a \u524d\u7aef\u63a7\u5236\u5668 \uff0c\u4e0d\u9700\u8981\u5de5\u7a0b\u5e08\u5f00\u53d1\uff0c\u7531\u6846\u67b6\u63d0\u4f9b \u4f5c\u7528\uff1a\u7edf\u4e00\u5904\u7406\u8bf7\u6c42\u548c\u54cd\u5e94\uff0c\u6574\u4e2a\u6d41\u7a0b\u63a7\u5236\u7684\u4e2d\u5fc3\uff0c\u7531\u5b83\u8c03\u7528\u5176\u5b83\u7ec4\u4ef6\u5904\u7406\u7528\u6237\u7684\u8bf7\u6c42 HandlerMapping\uff1a \u5904\u7406\u5668\u6620\u5c04\u5668 \uff0c\u4e0d\u9700\u8981\u5de5\u7a0b\u5e08\u5f00\u53d1\uff0c\u7531\u6846\u67b6\u63d0\u4f9b \u4f5c\u7528\uff1a\u6839\u636e\u8bf7\u6c42\u7684url\u3001method\u7b49\u4fe1\u606f\u67e5\u627eHandler\uff0c\u5373\u63a7\u5236\u5668\u65b9\u6cd5 Handler\uff1a \u5904\u7406\u5668 \uff0c\u9700\u8981\u5de5\u7a0b\u5e08\u5f00\u53d1 \u4f5c\u7528\uff1a\u5728DispatcherServlet\u7684\u63a7\u5236\u4e0bHandler\u5bf9\u5177\u4f53\u7684\u7528\u6237\u8bf7\u6c42\u8fdb\u884c\u5904\u7406 HandlerAdapter\uff1a \u5904\u7406\u5668\u9002\u914d\u5668 \uff0c\u4e0d\u9700\u8981\u5de5\u7a0b\u5e08\u5f00\u53d1\uff0c\u7531\u6846\u67b6\u63d0\u4f9b \u4f5c\u7528\uff1a\u901a\u8fc7HandlerAdapter\u5bf9\u5904\u7406\u5668\uff08\u63a7\u5236\u5668\u65b9\u6cd5\uff09\u8fdb\u884c\u6267\u884c ViewResolver\uff1a \u89c6\u56fe\u89e3\u6790\u5668 \uff0c\u4e0d\u9700\u8981\u5de5\u7a0b\u5e08\u5f00\u53d1\uff0c\u7531\u6846\u67b6\u63d0\u4f9b \u4f5c\u7528\uff1a\u8fdb\u884c\u89c6\u56fe\u89e3\u6790\uff0c\u5f97\u5230\u76f8\u5e94\u7684\u89c6\u56fe\uff0c\u4f8b\u5982\uff1aThymeleafView\u3001InternalResourceView\u3001RedirectView View\uff1a \u89c6\u56fe \u4f5c\u7528\uff1a\u5c06\u6a21\u578b\u6570\u636e\u901a\u8fc7\u9875\u9762\u5c55\u793a\u7ed9\u7528\u6237","title":"1\u3001SpringMVC\u5e38\u7528\u7ec4\u4ef6"},{"location":"Java/SpringMVC/SpringMVCNotes/#2dispatcherservlet","text":"DispatcherServlet \u672c\u8d28\u4e0a\u662f\u4e00\u4e2a Servlet\uff0c\u6240\u4ee5\u5929\u7136\u7684\u9075\u5faa Servlet \u7684\u751f\u547d\u5468\u671f\u3002\u6240\u4ee5\u5b8f\u89c2\u4e0a\u662f Servlet \u751f\u547d\u5468\u671f\u6765\u8fdb\u884c\u8c03\u5ea6\u3002","title":"2\u3001DispatcherServlet\u521d\u59cb\u5316\u8fc7\u7a0b"},{"location":"Java/SpringMVC/SpringMVCNotes/#awebapplicationcontext","text":"\u6240\u5728\u7c7b\uff1aorg.springframework.web.servlet.FrameworkServlet protected WebApplicationContext initWebApplicationContext () { WebApplicationContext rootContext = WebApplicationContextUtils . getWebApplicationContext ( getServletContext ()); WebApplicationContext wac = null ; if ( this . webApplicationContext != null ) { // A context instance was injected at construction time -> use it wac = this . webApplicationContext ; if ( wac instanceof ConfigurableWebApplicationContext ) { ConfigurableWebApplicationContext cwac = ( ConfigurableWebApplicationContext ) wac ; if ( ! cwac . isActive ()) { // The context has not yet been refreshed -> provide services such as // setting the parent context, setting the application context id, etc if ( cwac . getParent () == null ) { // The context instance was injected without an explicit parent -> set // the root application context (if any; may be null) as the parent cwac . setParent ( rootContext ); } configureAndRefreshWebApplicationContext ( cwac ); } } } if ( wac == null ) { // No context instance was injected at construction time -> see if one // has been registered in the servlet context. If one exists, it is assumed // that the parent context (if any) has already been set and that the // user has performed any initialization such as setting the context id wac = findWebApplicationContext (); } if ( wac == null ) { // No context instance is defined for this servlet -> create a local one // \u521b\u5efaWebApplicationContext wac = createWebApplicationContext ( rootContext ); } if ( ! this . refreshEventReceived ) { // Either the context is not a ConfigurableApplicationContext with refresh // support or the context injected at construction time had already been // refreshed -> trigger initial onRefresh manually here. synchronized ( this . onRefreshMonitor ) { // \u5237\u65b0WebApplicationContext onRefresh ( wac ); } } if ( this . publishContext ) { // Publish the context as a servlet context attribute. // \u5c06IOC\u5bb9\u5668\u5728\u5e94\u7528\u57df\u5171\u4eab String attrName = getServletContextAttributeName (); getServletContext (). setAttribute ( attrName , wac ); } return wac ; }","title":"a&gt;\u521d\u59cb\u5316WebApplicationContext"},{"location":"Java/SpringMVC/SpringMVCNotes/#bwebapplicationcontext","text":"\u6240\u5728\u7c7b\uff1aorg.springframework.web.servlet.FrameworkServlet protected WebApplicationContext createWebApplicationContext ( @Nullable ApplicationContext parent ) { Class <?> contextClass = getContextClass (); if ( ! ConfigurableWebApplicationContext . class . isAssignableFrom ( contextClass )) { throw new ApplicationContextException ( \"Fatal initialization error in servlet with name '\" + getServletName () + \"': custom WebApplicationContext class [\" + contextClass . getName () + \"] is not of type ConfigurableWebApplicationContext\" ); } // \u901a\u8fc7\u53cd\u5c04\u521b\u5efa IOC \u5bb9\u5668\u5bf9\u8c61 ConfigurableWebApplicationContext wac = ( ConfigurableWebApplicationContext ) BeanUtils . instantiateClass ( contextClass ); wac . setEnvironment ( getEnvironment ()); // \u8bbe\u7f6e\u7236\u5bb9\u5668 wac . setParent ( parent ); String configLocation = getContextConfigLocation (); if ( configLocation != null ) { wac . setConfigLocation ( configLocation ); } configureAndRefreshWebApplicationContext ( wac ); return wac ; }","title":"b&gt;\u521b\u5efaWebApplicationContext"},{"location":"Java/SpringMVC/SpringMVCNotes/#cdispatcherservlet","text":"FrameworkServlet\u521b\u5efaWebApplicationContext\u540e\uff0c\u5237\u65b0\u5bb9\u5668\uff0c\u8c03\u7528onRefresh(wac)\uff0c\u6b64\u65b9\u6cd5\u5728DispatcherServlet\u4e2d\u8fdb\u884c\u4e86\u91cd\u5199\uff0c\u8c03\u7528\u4e86initStrategies(context)\u65b9\u6cd5\uff0c\u521d\u59cb\u5316\u7b56\u7565\uff0c\u5373\u521d\u59cb\u5316DispatcherServlet\u7684\u5404\u4e2a\u7ec4\u4ef6 \u6240\u5728\u7c7b\uff1aorg.springframework.web.servlet.DispatcherServlet protected void initStrategies ( ApplicationContext context ) { initMultipartResolver ( context ); initLocaleResolver ( context ); initThemeResolver ( context ); initHandlerMappings ( context ); initHandlerAdapters ( context ); initHandlerExceptionResolvers ( context ); initRequestToViewNameTranslator ( context ); initViewResolvers ( context ); initFlashMapManager ( context ); }","title":"c&gt;DispatcherServlet\u521d\u59cb\u5316\u7b56\u7565"},{"location":"Java/SpringMVC/SpringMVCNotes/#3dispatcherservlet","text":"","title":"3\u3001DispatcherServlet\u8c03\u7528\u7ec4\u4ef6\u5904\u7406\u8bf7\u6c42"},{"location":"Java/SpringMVC/SpringMVCNotes/#aprocessrequest","text":"FrameworkServlet\u91cd\u5199HttpServlet\u4e2d\u7684service()\u548cdoXxx()\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u4e2d\u8c03\u7528\u4e86processRequest(request, response) \u6240\u5728\u7c7b\uff1aorg.springframework.web.servlet.FrameworkServlet protected final void processRequest ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException { long startTime = System . currentTimeMillis (); Throwable failureCause = null ; LocaleContext previousLocaleContext = LocaleContextHolder . getLocaleContext (); LocaleContext localeContext = buildLocaleContext ( request ); RequestAttributes previousAttributes = RequestContextHolder . getRequestAttributes (); ServletRequestAttributes requestAttributes = buildRequestAttributes ( request , response , previousAttributes ); WebAsyncManager asyncManager = WebAsyncUtils . getAsyncManager ( request ); asyncManager . registerCallableInterceptor ( FrameworkServlet . class . getName (), new RequestBindingInterceptor ()); initContextHolders ( request , localeContext , requestAttributes ); try { // \u6267\u884c\u670d\u52a1\uff0cdoService()\u662f\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\uff0c\u5728DispatcherServlet\u4e2d\u8fdb\u884c\u4e86\u91cd\u5199 doService ( request , response ); } catch ( ServletException | IOException ex ) { failureCause = ex ; throw ex ; } catch ( Throwable ex ) { failureCause = ex ; throw new NestedServletException ( \"Request processing failed\" , ex ); } finally { resetContextHolders ( request , previousLocaleContext , previousAttributes ); if ( requestAttributes != null ) { requestAttributes . requestCompleted (); } logResult ( request , response , failureCause , asyncManager ); publishRequestHandledEvent ( request , response , startTime , failureCause ); } }","title":"a&gt;processRequest()"},{"location":"Java/SpringMVC/SpringMVCNotes/#bdoservice","text":"\u6240\u5728\u7c7b\uff1aorg.springframework.web.servlet.DispatcherServlet @Override protected void doService ( HttpServletRequest request , HttpServletResponse response ) throws Exception { logRequest ( request ); // Keep a snapshot of the request attributes in case of an include, // to be able to restore the original attributes after the include. Map < String , Object > attributesSnapshot = null ; if ( WebUtils . isIncludeRequest ( request )) { attributesSnapshot = new HashMap <> (); Enumeration <?> attrNames = request . getAttributeNames (); while ( attrNames . hasMoreElements ()) { String attrName = ( String ) attrNames . nextElement (); if ( this . cleanupAfterInclude || attrName . startsWith ( DEFAULT_STRATEGIES_PREFIX )) { attributesSnapshot . put ( attrName , request . getAttribute ( attrName )); } } } // Make framework objects available to handlers and view objects. request . setAttribute ( WEB_APPLICATION_CONTEXT_ATTRIBUTE , getWebApplicationContext ()); request . setAttribute ( LOCALE_RESOLVER_ATTRIBUTE , this . localeResolver ); request . setAttribute ( THEME_RESOLVER_ATTRIBUTE , this . themeResolver ); request . setAttribute ( THEME_SOURCE_ATTRIBUTE , getThemeSource ()); if ( this . flashMapManager != null ) { FlashMap inputFlashMap = this . flashMapManager . retrieveAndUpdate ( request , response ); if ( inputFlashMap != null ) { request . setAttribute ( INPUT_FLASH_MAP_ATTRIBUTE , Collections . unmodifiableMap ( inputFlashMap )); } request . setAttribute ( OUTPUT_FLASH_MAP_ATTRIBUTE , new FlashMap ()); request . setAttribute ( FLASH_MAP_MANAGER_ATTRIBUTE , this . flashMapManager ); } RequestPath requestPath = null ; if ( this . parseRequestPath && ! ServletRequestPathUtils . hasParsedRequestPath ( request )) { requestPath = ServletRequestPathUtils . parseAndCache ( request ); } try { // \u5904\u7406\u8bf7\u6c42\u548c\u54cd\u5e94 doDispatch ( request , response ); } finally { if ( ! WebAsyncUtils . getAsyncManager ( request ). isConcurrentHandlingStarted ()) { // Restore the original attribute snapshot, in case of an include. if ( attributesSnapshot != null ) { restoreAttributesAfterInclude ( request , attributesSnapshot ); } } if ( requestPath != null ) { ServletRequestPathUtils . clearParsedRequestPath ( request ); } } }","title":"b&gt;doService()"},{"location":"Java/SpringMVC/SpringMVCNotes/#cdodispatch","text":"\u6240\u5728\u7c7b\uff1aorg.springframework.web.servlet.DispatcherServlet protected void doDispatch ( HttpServletRequest request , HttpServletResponse response ) throws Exception { HttpServletRequest processedRequest = request ; HandlerExecutionChain mappedHandler = null ; boolean multipartRequestParsed = false ; WebAsyncManager asyncManager = WebAsyncUtils . getAsyncManager ( request ); try { ModelAndView mv = null ; Exception dispatchException = null ; try { processedRequest = checkMultipart ( request ); multipartRequestParsed = ( processedRequest != request ); // Determine handler for the current request. /* mappedHandler\uff1a\u8c03\u7528\u94fe \u5305\u542bhandler\u3001interceptorList\u3001interceptorIndex handler\uff1a\u6d4f\u89c8\u5668\u53d1\u9001\u7684\u8bf7\u6c42\u6240\u5339\u914d\u7684\u63a7\u5236\u5668\u65b9\u6cd5 interceptorList\uff1a\u5904\u7406\u63a7\u5236\u5668\u65b9\u6cd5\u7684\u6240\u6709\u62e6\u622a\u5668\u96c6\u5408 interceptorIndex\uff1a\u62e6\u622a\u5668\u7d22\u5f15\uff0c\u63a7\u5236\u62e6\u622a\u5668afterCompletion()\u7684\u6267\u884c */ mappedHandler = getHandler ( processedRequest ); if ( mappedHandler == null ) { noHandlerFound ( processedRequest , response ); return ; } // Determine handler adapter for the current request. // \u901a\u8fc7\u63a7\u5236\u5668\u65b9\u6cd5\u521b\u5efa\u76f8\u5e94\u7684\u5904\u7406\u5668\u9002\u914d\u5668\uff0c\u8c03\u7528\u6240\u5bf9\u5e94\u7684\u63a7\u5236\u5668\u65b9\u6cd5 HandlerAdapter ha = getHandlerAdapter ( mappedHandler . getHandler ()); // Process last-modified header, if supported by the handler. String method = request . getMethod (); boolean isGet = \"GET\" . equals ( method ); if ( isGet || \"HEAD\" . equals ( method )) { long lastModified = ha . getLastModified ( request , mappedHandler . getHandler ()); if ( new ServletWebRequest ( request , response ). checkNotModified ( lastModified ) && isGet ) { return ; } } // \u8c03\u7528\u62e6\u622a\u5668\u7684preHandle() if ( ! mappedHandler . applyPreHandle ( processedRequest , response )) { return ; } // Actually invoke the handler. // \u7531\u5904\u7406\u5668\u9002\u914d\u5668\u8c03\u7528\u5177\u4f53\u7684\u63a7\u5236\u5668\u65b9\u6cd5\uff0c\u6700\u7ec8\u83b7\u5f97ModelAndView\u5bf9\u8c61 mv = ha . handle ( processedRequest , response , mappedHandler . getHandler ()); if ( asyncManager . isConcurrentHandlingStarted ()) { return ; } applyDefaultViewName ( processedRequest , mv ); // \u8c03\u7528\u62e6\u622a\u5668\u7684postHandle() mappedHandler . applyPostHandle ( processedRequest , response , mv ); } catch ( Exception ex ) { dispatchException = ex ; } catch ( Throwable err ) { // As of 4.3, we're processing Errors thrown from handler methods as well, // making them available for @ExceptionHandler methods and other scenarios. dispatchException = new NestedServletException ( \"Handler dispatch failed\" , err ); } // \u540e\u7eed\u5904\u7406\uff1a\u5904\u7406\u6a21\u578b\u6570\u636e\u548c\u6e32\u67d3\u89c6\u56fe processDispatchResult ( processedRequest , response , mappedHandler , mv , dispatchException ); } catch ( Exception ex ) { triggerAfterCompletion ( processedRequest , response , mappedHandler , ex ); } catch ( Throwable err ) { triggerAfterCompletion ( processedRequest , response , mappedHandler , new NestedServletException ( \"Handler processing failed\" , err )); } finally { if ( asyncManager . isConcurrentHandlingStarted ()) { // Instead of postHandle and afterCompletion if ( mappedHandler != null ) { mappedHandler . applyAfterConcurrentHandlingStarted ( processedRequest , response ); } } else { // Clean up any resources used by a multipart request. if ( multipartRequestParsed ) { cleanupMultipart ( processedRequest ); } } } }","title":"c&gt;doDispatch()"},{"location":"Java/SpringMVC/SpringMVCNotes/#dprocessdispatchresult","text":"private void processDispatchResult ( HttpServletRequest request , HttpServletResponse response , @Nullable HandlerExecutionChain mappedHandler , @Nullable ModelAndView mv , @Nullable Exception exception ) throws Exception { boolean errorView = false ; if ( exception != null ) { if ( exception instanceof ModelAndViewDefiningException ) { logger . debug ( \"ModelAndViewDefiningException encountered\" , exception ); mv = (( ModelAndViewDefiningException ) exception ). getModelAndView (); } else { Object handler = ( mappedHandler != null ? mappedHandler . getHandler () : null ); mv = processHandlerException ( request , response , handler , exception ); errorView = ( mv != null ); } } // Did the handler return a view to render? if ( mv != null && ! mv . wasCleared ()) { // \u5904\u7406\u6a21\u578b\u6570\u636e\u548c\u6e32\u67d3\u89c6\u56fe render ( mv , request , response ); if ( errorView ) { WebUtils . clearErrorRequestAttributes ( request ); } } else { if ( logger . isTraceEnabled ()) { logger . trace ( \"No view rendering, null ModelAndView returned.\" ); } } if ( WebAsyncUtils . getAsyncManager ( request ). isConcurrentHandlingStarted ()) { // Concurrent handling started during a forward return ; } if ( mappedHandler != null ) { // Exception (if any) is already handled.. // \u8c03\u7528\u62e6\u622a\u5668\u7684afterCompletion() mappedHandler . triggerAfterCompletion ( request , response , null ); } }","title":"d&gt;processDispatchResult()"},{"location":"Java/SpringMVC/SpringMVCNotes/#4springmvc","text":"1) \u7528\u6237\u5411\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\uff0c\u8bf7\u6c42\u88abSpringMVC \u524d\u7aef\u63a7\u5236\u5668 DispatcherServlet\u6355\u83b7\u3002 2) DispatcherServlet\u5bf9\u8bf7\u6c42URL\u8fdb\u884c\u89e3\u6790\uff0c\u5f97\u5230\u8bf7\u6c42\u8d44\u6e90\u6807\u8bc6\u7b26\uff08URI\uff09\uff0c\u5224\u65ad\u8bf7\u6c42URI\u5bf9\u5e94\u7684\u6620\u5c04\uff1a a) \u4e0d\u5b58\u5728 i. \u518d\u5224\u65ad\u662f\u5426\u914d\u7f6e\u4e86mvc:default-servlet-handler ii. \u5982\u679c\u6ca1\u914d\u7f6e\uff0c\u5219\u63a7\u5236\u53f0\u62a5\u6620\u5c04\u67e5\u627e\u4e0d\u5230\uff0c\u5ba2\u6237\u7aef\u5c55\u793a404\u9519\u8bef iii. \u5982\u679c\u6709\u914d\u7f6e\uff0c\u5219\u8bbf\u95ee\u76ee\u6807\u8d44\u6e90\uff08\u4e00\u822c\u4e3a\u9759\u6001\u8d44\u6e90\uff0c\u5982\uff1aJS,CSS,HTML\uff09\uff0c\u627e\u4e0d\u5230\u5ba2\u6237\u7aef\u4e5f\u4f1a\u5c55\u793a404\u9519\u8bef b) \u5b58\u5728\u5219\u6267\u884c\u4e0b\u9762\u7684\u6d41\u7a0b 3) \u6839\u636e\u8be5URI\uff0c\u8c03\u7528HandlerMapping\u83b7\u5f97\u8be5Handler\u914d\u7f6e\u7684\u6240\u6709\u76f8\u5173\u7684\u5bf9\u8c61\uff08\u5305\u62ecHandler\u5bf9\u8c61\u4ee5\u53caHandler\u5bf9\u8c61\u5bf9\u5e94\u7684\u62e6\u622a\u5668\uff09\uff0c\u6700\u540e\u4ee5HandlerExecutionChain\u6267\u884c\u94fe\u5bf9\u8c61\u7684\u5f62\u5f0f\u8fd4\u56de\u3002 4) DispatcherServlet \u6839\u636e\u83b7\u5f97\u7684Handler\uff0c\u9009\u62e9\u4e00\u4e2a\u5408\u9002\u7684HandlerAdapter\u3002 5) \u5982\u679c\u6210\u529f\u83b7\u5f97HandlerAdapter\uff0c\u6b64\u65f6\u5c06\u5f00\u59cb\u6267\u884c\u62e6\u622a\u5668\u7684preHandler(\u2026)\u65b9\u6cd5\u3010\u6b63\u5411\u3011 6) \u63d0\u53d6Request\u4e2d\u7684\u6a21\u578b\u6570\u636e\uff0c\u586b\u5145Handler\u5165\u53c2\uff0c\u5f00\u59cb\u6267\u884cHandler\uff08Controller)\u65b9\u6cd5\uff0c\u5904\u7406\u8bf7\u6c42\u3002\u5728\u586b\u5145Handler\u7684\u5165\u53c2\u8fc7\u7a0b\u4e2d\uff0c\u6839\u636e\u4f60\u7684\u914d\u7f6e\uff0cSpring\u5c06\u5e2e\u4f60\u505a\u4e00\u4e9b\u989d\u5916\u7684\u5de5\u4f5c\uff1a a) HttpMessageConveter\uff1a \u5c06\u8bf7\u6c42\u6d88\u606f\uff08\u5982Json\u3001xml\u7b49\u6570\u636e\uff09\u8f6c\u6362\u6210\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u6307\u5b9a\u7684\u54cd\u5e94\u4fe1\u606f b) \u6570\u636e\u8f6c\u6362\uff1a\u5bf9\u8bf7\u6c42\u6d88\u606f\u8fdb\u884c\u6570\u636e\u8f6c\u6362\u3002\u5982String\u8f6c\u6362\u6210Integer\u3001Double\u7b49 c) \u6570\u636e\u683c\u5f0f\u5316\uff1a\u5bf9\u8bf7\u6c42\u6d88\u606f\u8fdb\u884c\u6570\u636e\u683c\u5f0f\u5316\u3002 \u5982\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u683c\u5f0f\u5316\u6570\u5b57\u6216\u683c\u5f0f\u5316\u65e5\u671f\u7b49 d) \u6570\u636e\u9a8c\u8bc1\uff1a \u9a8c\u8bc1\u6570\u636e\u7684\u6709\u6548\u6027\uff08\u957f\u5ea6\u3001\u683c\u5f0f\u7b49\uff09\uff0c\u9a8c\u8bc1\u7ed3\u679c\u5b58\u50a8\u5230BindingResult\u6216Error\u4e2d 7) Handler\u6267\u884c\u5b8c\u6210\u540e\uff0c\u5411DispatcherServlet \u8fd4\u56de\u4e00\u4e2aModelAndView\u5bf9\u8c61\u3002 8) \u6b64\u65f6\u5c06\u5f00\u59cb\u6267\u884c\u62e6\u622a\u5668\u7684postHandle(...)\u65b9\u6cd5\u3010\u9006\u5411\u3011\u3002 9) \u6839\u636e\u8fd4\u56de\u7684ModelAndView\uff08\u6b64\u65f6\u4f1a\u5224\u65ad\u662f\u5426\u5b58\u5728\u5f02\u5e38\uff1a\u5982\u679c\u5b58\u5728\u5f02\u5e38\uff0c\u5219\u6267\u884cHandlerExceptionResolver\u8fdb\u884c\u5f02\u5e38\u5904\u7406\uff09\u9009\u62e9\u4e00\u4e2a\u9002\u5408\u7684ViewResolver\u8fdb\u884c\u89c6\u56fe\u89e3\u6790\uff0c\u6839\u636eModel\u548cView\uff0c\u6765\u6e32\u67d3\u89c6\u56fe\u3002 10) \u6e32\u67d3\u89c6\u56fe\u5b8c\u6bd5\u6267\u884c\u62e6\u622a\u5668\u7684afterCompletion(\u2026)\u65b9\u6cd5\u3010\u9006\u5411\u3011\u3002 11) \u5c06\u6e32\u67d3\u7ed3\u679c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002","title":"4\u3001SpringMVC\u7684\u6267\u884c\u6d41\u7a0b"},{"location":"Java/designpattern/designpattern/","text":"\u8bbe\u8ba1\u6a21\u5f0f(Java) \u00b6 \u4e00\u3001\u4ec0\u4e48\u662f\u8bbe\u8ba1\u6a21\u5f0f \u00b6 \u8f6f\u4ef6\u5de5\u7a0b\u4e2d\uff0c \u8bbe\u8ba1\u6a21\u5f0f \u662f\u5bf9\u8f6f\u4ef6\u8bbe\u8ba1\u8fc7\u7a0b\u4e2d\u666e\u904d\u5b58\u5728\uff08\u53cd\u590d\u51fa\u73b0\uff09\u7684\u5404\u79cd\u95ee\u9898\uff0c\u6240\u63d0\u51fa\u7684\u89e3\u51b3\u65b9\u6848\u3002\u8fd9\u4e9b\u89e3\u51b3\u65b9\u6848\u662f\u4f17\u591a\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u7ecf\u8fc7\u76f8\u5f53\u957f\u7684\u4e00\u6bb5\u65f6\u95f4\u7684\u8bd5\u9a8c\u548c\u9519\u8bef\u603b\u7ed3\u51fa\u6765\u7684\u3002\u8bbe\u8ba1\u6a21\u5f0f\u4ee3\u8868\u4e86\u6700\u4f73\u7684\u5b9e\u8df5\uff0c\u8fd9\u4e2a\u672f\u8bed\u662f\u7531\u57c3\u91cc\u5e0c\u00b7\u4f3d\u739b\uff08Erich Gamma\uff09\u7b49\u4eba\u57281990\u5e74\u4ee3\u4ece\u5efa\u7b51\u8bbe\u8ba1\u9886\u57df\u5f15\u5165\u5230\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u3002 \u4e8c\u3001\u8bbe\u8ba1\u6a21\u5f0f\u7684\u76ee\u7684\u548c\u539f\u5219 \u00b6 1\u3001\u76ee\u7684 \u00b6 \u5728\u7f16\u5199\u8f6f\u4ef6\u8fc7\u7a0b\u4e2d\uff0c\u7a0b\u5e8f\u5458\u9762\u4e34\u7740\u6765\u81ea \u8026\u5408\u6027\uff0c\u5185\u805a\u6027\u4ee5\u53ca\u53ef\u7ef4\u62a4\u6027\uff0c\u53ef\u6269\u5c55\u6027\uff0c\u91cd\u7528\u6027\uff0c\u7075\u6d3b\u6027 \u7b49\u591a\u65b9\u9762\u7684\u6311\u6218\uff0c\u8bbe\u8ba1\u6a21\u5f0f\u662f\u4e3a\u4e86\u8ba9\u7a0b\u5e8f(\u8f6f\u4ef6)\u5177\u6709\u66f4\u597d\u7684\uff1a \u4ee3\u7801\u91cd\u7528\u6027\uff08\u76f8\u540c\u529f\u80fd\u7684\u4ee3\u7801\uff0c\u4e0d\u7528\u591a\u6b21\u7f16\u5199\uff09 \u53ef\u8bfb\u6027\uff08\u7f16\u7a0b\u89c4\u8303\u6027\uff0c\u4fbf\u4e8e\u5176\u5b83\u7a0b\u5e8f\u5458\u7684\u9605\u8bfb\u548c\u7406\u89e3\uff09 \u53ef\u6269\u5c55\u6027\uff08\u5f53\u9700\u8981\u65b0\u589e\u529f\u80fd\u65f6\uff0c\u975e\u5e38\u7684\u65b9\u4fbf\uff09 \u53ef\u9760\u6027\uff08\u5f53\u6211\u4eec\u65b0\u589e\u65b0\u7684\u529f\u80fd\u540e\uff0c\u5bf9\u539f\u6765\u7684\u529f\u80fd\u6ca1\u6709\u5f71\u54cd\uff09 \u4f7f\u7a0b\u5e8f\u5448\u73b0\u9ad8\u5185\u805a\uff0c\u4f4e\u8026\u5408\u7684\u7279\u6027 2\u3001\u539f\u5219 \u00b6 \u8bbe\u8ba1\u6a21\u5f0f\u7684\u539f\u5219\uff0c\u5176\u5b9e\u5c31\u662f\u7a0b\u5e8f\u5458\u5728\u7f16\u7a0b\u65f6\uff0c\u5e94\u5f53\u9075\u5b88\u7684\u89c4\u5219\uff0c\u4e5f\u5c31\u662f\u5404\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u7684\u57fa\u7840\uff0c\u4e0b\u9762\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u5e38\u7528\u7684\u4e03\u5927\u539f\u5219\uff1a \u5355\u4e00\u804c\u8d23\u539f\u5219\u3001\u63a5\u53e3\u9694\u79bb\u539f\u5219\u3001\u4f9d\u8d56\u5012\u8f6c\uff08\u5012\u7f6e\uff09\u539f\u5219\u3001\u91cc\u6c0f\u66ff\u6362\u539f\u5219\u3001\u5f00\u95ed\u539f\u5219\u3001\u8fea\u7c73\u7279\u6cd5\u5219\u3001\u5408\u6210\u590d\u7528\u539f\u5219 \u3002 1\u3001\u5355\u4e00\u804c\u8d23\u539f\u5219 \u00b6 \u5bf9\u7c7b\u6765\u8bf4\uff0c \u4e00\u4e2a\u7c7b\u5e94\u8be5\u53ea\u8d1f\u8d23\u4e00\u9879\u539f\u5219 \uff0c\u5982\u679c\u7c7bA\u8d1f\u8d23\u4e24\u4e2a\u4e0d\u540c\u804c\u8d23\uff1a\u804c\u8d231\u3001\u804c\u8d232\u3002\u5f53\u804c\u8d231\u9700\u6c42\u53d8\u66f4\u800c\u6539\u53d8A\u65f6\uff0c\u53ef\u80fd\u9020\u6210\u804c\u8d232\u6267\u884c\u9519\u8bef\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u7c7bA\u7684\u7c92\u5ea6\u5206\u89e3\u4e3aA1\u3001A2\u3002\u4e0b\u9762\u4ee5\u4ee5\u4ea4\u901a\u5de5\u5177\u4e3a\u6848\u4f8b\u8bb2\u89e3\u3002 \uff081\uff09\u6848\u4f8b1 package com.principle.singleresponsibility ; public class SingleResponsibility1 { public static void main ( String [] args ) { Vehicle vehicle = new Vehicle (); vehicle . run ( \"\u6c7d\u8f66\" ); vehicle . run ( \"\u6469\u6258\u8f66\" ); vehicle . run ( \"\u98de\u673a\" ); } } // \u4ea4\u901a\u5de5\u5177\u7c7b class Vehicle { public void run ( String vehicle ){ System . out . println ( vehicle + \"\u5728\u516c\u8def\u4e0a\u8fd0\u884c\u3002\u3002\u3002\" ); } } \u5728\u8fd9\u79cd\u65b9\u5f0f\u7684run\u65b9\u6cd5\u4e2d\uff0c\u8fdd\u80cc\u4e86 \u5355\u4e00\u804c\u8d23\u539f\u5219 \uff0c\u4e0b\u9762\u662f\u89e3\u51b3\u65b9\u6cd5\uff0c\u6839\u636e\u4ea4\u901a\u5de5\u5177\u8fd0\u884c\u7684\u65b9\u6cd5\u4e0d\u540c\uff0c\u5206\u89e3\u6210\u4e0d\u540c\u7684\u7c7b\u3002 \uff082\uff09\u6848\u4f8b2 package com.principle.singleresponsibility ; public class SingleResponsibility2 { public static void main ( String [] args ) { RoadVehicle roadVehicle = new RoadVehicle (); roadVehicle . run ( \"\u6c7d\u8f66\" ); roadVehicle . run ( \"\u6469\u6258\u8f66\" ); AirVehicle airVehicle = new AirVehicle (); airVehicle . run ( \"\u98de\u673a\" ); } } // \u5355\u4e00\u804c\u8d23\u539f\u5219\uff0c\u4f46\u662f\u6539\u52a8\u5f88\u5927 class RoadVehicle { public void run ( String vehicle ){ System . out . println ( vehicle + \"\u5728\u516c\u8def\u8fd0\u884c\" ); } } class AirVehicle { public void run ( String vehicle ){ System . out . println ( vehicle + \"\u5728\u5929\u7a7a\u8fd0\u884c\" ); } } class WaterVehicle { public void run ( String vehicle ){ System . out . println ( vehicle + \"\u5728\u6c34\u4e0a\u8fd0\u884c\" ); } } \u8fd9\u79cd\u65b9\u5f0f\u9075\u5faa\u4e86\u5355\u4e00\u804c\u8d23\u539f\u5219\uff0c\u4f46\u662f\u8fd9\u6837\u505a\u7684\u6539\u52a8\u5f88\u5927\uff0c\u5373 \u5c06\u7c7b\u5206\u89e3 \uff0c\u540c\u65f6\u4fee\u6539\u4e86\u5ba2\u6237\u7aef\uff0c\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539Vehicle\u7c7b\uff0c\u6539\u52a8\u7684\u4ee3\u7801\u4f1a\u6bd4\u8f83\u5c11\u3002 \uff083\uff09\u6848\u4f8b3 package com.principle.singleresponsibility ; public class SingleResponsibility3 { public static void main ( String [] args ) { Vehicle2 vehicle2 = new Vehicle2 (); vehicle2 . run ( \"\u6c7d\u8f66\" ); vehicle2 . runWater ( \"\u8f6e\u8239\" ); vehicle2 . runAir ( \"\u98de\u673a\" ); } } class Vehicle2 { public void run ( String vehicle ){ System . out . println ( vehicle + \"\u5728\u516c\u8def\u4e0a\u8fd0\u884c\u3002\u3002\u3002\" ); } public void runAir ( String vehicle ){ System . out . println ( vehicle + \"\u5728\u5929\u7a7a\u8fd0\u884c\u3002\u3002\u3002\" ); } public void runWater ( String vehicle ){ System . out . println ( vehicle + \"\u5728\u6c34\u4e2d\u8fd0\u884c\u3002\u3002\u3002\" ); } } \u8fd9\u79cd\u4fee\u6539\u65b9\u6cd5\u6ca1\u6709\u5bf9\u539f\u6765\u7684\u7c7b\u505a\u5f88\u5927\u7684\u4fee\u6539\uff0c\u53ea\u662f\u589e\u52a0\u4e86\u65b9\u6cd5\uff0c\u8fd9\u91cc\u867d\u7136 \u6ca1\u6709\u5728\u7c7b\u7ea7\u522b\u4e0a\u9075\u5b88\u5355\u4e00\u804c\u8d23\u539f\u5219 \uff0c\u4f46\u662f \u5728\u65b9\u6cd5\u7ea7\u522b\u4e0a\uff0c\u4ecd\u7136\u662f\u9075\u5b88\u5355\u4e00\u804c\u8d23\u7684 \u3002 \uff084\uff09\u6ce8\u610f\u7684\u4e8b\u9879\u548c\u7ec6\u8282 \u964d\u4f4e\u7c7b\u7684 \u590d\u6742\u5ea6 \uff0c\u4e00\u4e2a\u7c7b\u53ea\u8d1f\u8d23\u4e00\u9879\u804c\u8d23\u3002 \u63d0\u9ad8\u7c7b\u7684 \u53ef\u8bfb\u6027\uff0c\u53ef\u7ef4\u62a4\u6027 \u3002 \u964d\u4f4e\u53d8\u66f4\u5f15\u8d77\u7684\u98ce\u9669\u3002 \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e94\u5f53\u9075\u5b88\u5355\u4e00\u804c\u8d23\u539f\u5219\uff0c\u53ea\u8981\u903b\u8f91\u8db3\u591f\u7b80\u5355\uff0c\u624d\u53ef\u4ee5\u5728\u4ee3\u7801\u7ea7\u8fdd\u53cd\u5355\u4e00\u804c\u8d23\u539f\u5219\uff1b\u53ea\u6709\u7c7b\u4e2d\u65b9\u6cd5\u8db3\u591f\u5c11\uff0c\u53ef\u4ee5\u5728\u65b9\u6cd5\u7ea7\u522b\u4fdd\u6301\u5355\u4e00\u804c\u8d23\u539f\u5219\u3002 2\u3001\u63a5\u53e3\u9694\u79bb\u539f\u5219 \u00b6 \u5ba2\u6237\u7aef\u4e0d\u5e94\u8be5\u4f9d\u8d56\u5b83\u4e0d\u9700\u8981\u7684\u63a5\u53e3\uff0c\u5373 \u4e00\u4e2a\u7c7b\u5bf9\u53e6\u4e00\u4e2a\u7c7b\u7684\u4f9d\u8d56\u5e94\u8be5\u5efa\u7acb\u5728\u6700\u5c0f\u7684\u63a5\u53e3 \u4e0a\u3002\u4ee5\u4e0b\u56fe\u4e3a\u4f8b\u3002 \u56fe\u4e2d\u6848\u4f8b\uff0c\u7c7bA\u901a\u8fc7\u63a5\u53e3Interface1\u4f9d\u8d56\u7c7bB\uff0c\u7c7bC\u901a\u8fc7\u63a5\u53e3Interface1\u4f9d\u8d56\u7c7bD\uff0c\u5982\u679c\u63a5\u53e3Interface1\u5bf9\u4e8e\u7c7bA\u548c\u7c7bC\u6765\u8bf4\u4e0d\u662f\u6700\u5c0f\u63a5\u53e3\uff0c\u90a3\u4e48\u7c7bB\u548c\u7c7bD\u5fc5\u987b\u8981\u53bb\u5b9e\u73b0\u5b83\u4eec\u4e0d\u9700\u8981\u7684\u65b9\u6cd5\u3002\u6839\u636e\u63a5\u53e3\u9694\u79bb\u539f\u5219\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06Interface1 \u62c6\u5206\u4e3a\u72ec\u7acb\u7684\u51e0\u4e2a\u63a5\u53e3 \uff0c\u7c7bA\u548c\u7c7bC \u5206\u522b\u4e0e\u5b83\u4eec\u9700\u8981\u7684\u63a5\u53e3\u5efa\u7acb\u4f9d\u8d56\u5173\u7cfb \u3002\u4e0b\u9762\u901a\u8fc7\u6848\u4f8b\u6765\u5bf9\u63a5\u53e3\u9694\u79bb\u539f\u5219\u8fdb\u884c\u89e3\u91ca\u3002 \uff081\uff09\u6848\u4f8b1 \u8fd9\u4e2a\u6848\u4f8b\u662f\u6700\u539f\u59cb\u7684\u6848\u4f8b\uff0c\u4e5f\u5c31\u662f\u4e0a\u56fe\u4e2d\u6ca1\u6709\u4f7f\u7528\u63a5\u53e3\u9694\u79bb\u539f\u5219\u7684\u4ee3\u7801\u3002 package com.principle.segregation ; public class Segregation1 { } interface Interface1 { void operation1 (); void operation2 (); void operation3 (); void operation4 (); void operation5 (); } class B implements Interface1 { @Override public void operation1 () { System . out . println ( \"B\u5b9e\u73b0\u4e86operation1\" ); } @Override public void operation2 () { System . out . println ( \"B\u5b9e\u73b0\u4e86operation2\" ); } @Override public void operation3 () { System . out . println ( \"B\u5b9e\u73b0\u4e86operation3\" ); } @Override public void operation4 () { System . out . println ( \"B\u5b9e\u73b0\u4e86operation4\" ); } @Override public void operation5 () { System . out . println ( \"B\u5b9e\u73b0\u4e86operation5\" ); } } class D implements Interface1 { @Override public void operation1 () { System . out . println ( \"D\u5b9e\u73b0\u4e86operation1\" ); } @Override public void operation2 () { System . out . println ( \"D\u5b9e\u73b0\u4e86operation2\" ); } @Override public void operation3 () { System . out . println ( \"D\u5b9e\u73b0\u4e86operation3\" ); } @Override public void operation4 () { System . out . println ( \"D\u5b9e\u73b0\u4e86operation4\" ); } @Override public void operation5 () { System . out . println ( \"D\u5b9e\u73b0\u4e86operation5\" ); } } class A { // A\u7c7b\u901a\u8fc7\u63a5\u53e3Interface1 \u4f9d\u8d56B\u7c7b\uff0c\u4f46\u662f\u53ea\u4f1a\u4f7f\u7528\u5230123\u65b9\u6cd5 public void depend1 ( Interface1 i ){ i . operation1 (); } public void depend2 ( Interface1 i ){ i . operation2 (); } public void depend3 ( Interface1 i ){ i . operation3 (); } } class C { // C\u7c7b\u901a\u8fc7\u63a5\u53e3Interface1 \u4f9d\u8d56D\u7c7b\uff0c\u4f46\u662f\u53ea\u4f1a\u4f7f\u7528\u5230145\u65b9\u6cd5 public void depend1 ( Interface1 i ){ i . operation1 (); } public void depend4 ( Interface1 i ){ i . operation4 (); } public void depend5 ( Interface1 i ){ i . operation5 (); } } \u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0c\u6ca1\u6709\u5c06Interface1\u62c6\u5206\uff0c\u4ece\u800c\u7834\u574f\u4e86\u63a5\u53e3\u9694\u79bb\u539f\u5219\uff0c\u53ef\u4ee5\u5c06Interface1\u8fdb\u884c\u62c6\u5206\u4e3a\u51e0\u4e2a\u72ec\u7acb\u7684\u63a5\u53e3\uff0c\u7c7bA\u548c\u7c7bC\u5206\u522b\u4e0e\u5b83\u4eec\u9700\u8981\u7684\u63a5\u53e3\u5efa\u7acb\u4f9d\u8d56\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u91c7\u7528\u63a5\u53e3\u9694\u79bb\u539f\u5219\uff0c\u770b\u4e0b\u4e00\u4e2a\u6848\u4f8b\u3002 \uff082\uff09\u6848\u4f8b2 \u5c06Interface1\u62c6\u5206\u4e3a\u4e09\u4e2a\u63a5\u53e3\uff0c\u5982\u4e0b\u56fe\u3002 \u7c7bA\u6839\u636e\u9700\u8981\u4f9d\u8d56Interface1\u548c2\uff0c\u7c7bC\u6839\u636e\u9700\u8981\u4f9d\u8d56Interface2\u548c3\uff0c\u6848\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a package com.principle.segregation.improve ; public class Segregation1 { public static void main ( String [] args ) { A a = new A (); a . depend1 ( new B ()); //A\u7c7b\u901a\u8fc7\u63a5\u53e3\u53bb\u4f9d\u8d56 a . depend2 ( new B ()); a . depend3 ( new B ()); C c = new C (); c . depend1 ( new D ()); c . depend4 ( new D ()); c . depend5 ( new D ()); } } interface Interface1 { void operation1 (); } interface Interface2 { void operation2 (); void operation3 (); } interface Interface3 { void operation4 (); void operation5 (); } class B implements Interface1 , Interface2 { @Override public void operation1 () { System . out . println ( \"B\u5b9e\u73b0\u4e86operation1\" ); } @Override public void operation2 () { System . out . println ( \"B\u5b9e\u73b0\u4e86operation2\" ); } @Override public void operation3 () { System . out . println ( \"B\u5b9e\u73b0\u4e86operation3\" ); } } class D implements Interface1 , Interface3 { @Override public void operation1 () { System . out . println ( \"D\u5b9e\u73b0\u4e86operation1\" ); } @Override public void operation4 () { System . out . println ( \"D\u5b9e\u73b0\u4e86operation4\" ); } @Override public void operation5 () { System . out . println ( \"D\u5b9e\u73b0\u4e86operation5\" ); } } class A { // A\u7c7b\u901a\u8fc7\u63a5\u53e3Interface1,Interface2 \u4f9d\u8d56B\u7c7b\uff0c\u4f46\u662f\u53ea\u4f1a\u4f7f\u7528\u5230123\u65b9\u6cd5 public void depend1 ( Interface1 i ){ i . operation1 (); } public void depend2 ( Interface2 i ){ i . operation2 (); } public void depend3 ( Interface2 i ){ i . operation3 (); } } class C { // C\u7c7b\u901a\u8fc7\u63a5\u53e3Interface1,interface3 \u4f9d\u8d56D\u7c7b\uff0c\u4f46\u662f\u53ea\u4f1a\u4f7f\u7528\u5230145\u65b9\u6cd5 public void depend1 ( Interface1 i ){ i . operation1 (); } public void depend4 ( Interface3 i ){ i . operation4 (); } public void depend5 ( Interface3 i ){ i . operation5 (); } } \u6848\u4f8b\u4e2d\u7c7bB\u548c\u7c7bD\u5206\u522b\u5b9e\u73b0\u4e86\u7c7bA\u548c\u7c7bC\u9700\u8981\u7684\u63a5\u53e3\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u63a5\u53e3\u9694\u79bb\u539f\u5219\u3002 3\u3001\u4f9d\u8d56\u5012\u8f6c\u539f\u5219 \u00b6 \u4f9d\u8d56\u5012\u8f6c\u539f\u5219\u662f\u6307\uff1a\u9ad8\u5c42\u6a21\u5757\u4e0d\u5e94\u8be5\u4f9d\u8d56\u5e95\u5c42\u6a21\u5757\uff0c\u4e8c\u8005\u90fd\u5e94\u8be5\u4f9d\u8d56\u5176\u62bd\u8c61\uff1b \u62bd\u8c61\u4e0d\u5e94\u8be5\u4f9d\u8d56\u7ec6\u8282\uff0c\u7ec6\u8282\u5e94\u8be5\u4f9d\u8d56\u62bd\u8c61 \uff1b\u4e2d\u5fc3\u601d\u60f3\u662f \u9762\u5411\u63a5\u53e3\u7f16\u7a0b \uff1b\u8bbe\u8ba1\u7406\u5ff5\uff1a\u76f8\u5bf9\u4e8e\u7ec6\u8282\u7684\u591a\u53d8\u6027\uff0c\u62bd\u8c61\u7684\u4e1c\u897f\u8981\u7a33\u5b9a\u7684\u591a\uff0c\u4ee5\u62bd\u8c61\u4e3a\u57fa\u7840\u642d\u5efa\u7684\u67b6\u6784\u6bd4\u4ee5\u7ec6\u8282\u4e3a\u57fa\u7840\u7684\u67b6\u6784\u8981\u7a33\u5b9a\u7684\u591a\uff08\u5728Java\u4e2d\uff0c\u62bd\u8c61\u6307\u7684\u662f\u63a5\u53e3\u6216\u62bd\u8c61\u7c7b\uff0c\u7ec6\u8282\u5c31\u662f\u5177\u4f53\u7684\u5b9e\u73b0\u7c7b\uff09\u3002\u4f7f\u7528\u63a5\u53e3\u6216\u62bd\u8c61\u7c7b\u7684\u76ee\u7684\u662f\u5236\u5b9a\u597d\u89c4\u8303\uff0c\u800c\u4e0d\u6d89\u53ca\u4efb\u4f55\u5177\u4f53\u7684\u64cd\u4f5c\uff0c\u628a\u5c55\u73b0\u7ec6\u8282\u7684\u4efb\u52a1\u4ea4\u7ed9\u4ed6\u4eec\u7684\u5b9e\u73b0\u7c7b\u53bb\u5b8c\u6210\u3002 (1)\u6848\u4f8b1 \u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0c\u5b9e\u73b0\u4e86Person\u63a5\u6536\u6d88\u606f\u7684\u529f\u80fd\u3002 package com.principle.inversion ; public class DependencyInversion { public static void main ( String [] args ) { Person person = new Person (); person . receive ( new Email ()); } } class Email { public String getInfo (){ return \"\u7535\u5b50\u90ae\u4ef6\u4fe1\u606f:hello world!\" ; } } // \u5b8c\u6210Person\u63a5\u6536\u6d88\u606f\u7684\u529f\u80fd // \u65b9\u5f0f1 class Person { public void receive ( Email email ){ System . out . println ( email . getInfo ()); } } \u4f46\u662f\u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0cPerson\u901a\u8fc7Email\u53d1\u9001\u6d88\u606f\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u901a\u8fc7\u5fae\u4fe1\u3001\u77ed\u4fe1\u7b49\u53d1\u9001\u6d88\u606f\uff0c\u6211\u4eec\u9700\u8981\u65b0\u589e\u7c7b\uff0c\u540c\u65f6\u4e5f\u8981\u5728Person\u4e2d\u65b0\u589e\u76f8\u5e94\u7684\u63a5\u6536\u65b9\u6cd5\u3002 \uff082\uff09\u6848\u4f8b2 \u5bf9\u4e0a\u4e00\u4e2a\u6848\u4f8b\u7684\u6539\u8fdb\uff0c\u5f15\u5165\u4e00\u4e2a\u62bd\u8c61\u63a5\u53e3IReceiver\uff0c\u8868\u793a\u63a5\u6536\u8005\uff0c\u8fd9\u6837Person\u7c7b\u4e0e\u63a5\u53e3IReceiver\u53d1\u751f\u4f9d\u8d56\uff0c\u56e0\u4e3aEmail,WeiXin\u7b49\u7b49\u5c5e\u4e8e\u63a5\u6536\u8303\u56f4\uff0c\u5b83\u4eec\u5404\u81ea\u5b9e\u73b0IReceiver\u63a5\u53e3\u5c31\u884c\u4e86\uff0c\u8fd9\u6837\u5c31\u662f\u4f9d\u8d56\u5012\u8f6c\u539f\u5219\u3002 package com.principle.inversion.improve ; public class DependencyInversion { public static void main ( String [] args ) { Person person = new Person (); person . receive ( new Email ()); person . receive ( new WeiXin ()); } } // \u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3 interface IReceiver { public String getInfo (); } class Email implements IReceiver { public String getInfo (){ return \"\u7535\u5b50\u90ae\u4ef6\u4fe1\u606f:hello world!\" ; } } // \u589e\u52a0\u5fae\u4fe1 class WeiXin implements IReceiver { @Override public String getInfo () { return \"\u5fae\u4fe1\u6d88\u606f:hello wechat\" ; } } // \u5b8c\u6210Person\u63a5\u6536\u6d88\u606f\u7684\u529f\u80fd // \u65b9\u5f0f2 class Person { public void receive ( IReceiver receiver ){ System . out . println ( receiver . getInfo ()); } } \u4ee5\u4e0a\u6848\u4f8b\u901a\u8fc7\u63a5\u53e3\u6765\u5b9e\u73b0\u4f9d\u8d56\u5012\u8f6c\u539f\u5219\u3002 \uff083\uff09\u4e09\u79cd\u5b9e\u73b0\u4f9d\u8d56\u5012\u8f6c\u7684\u65b9\u5f0f \u5b9e\u73b0\u4f9d\u8d56\u5012\u8f6c\u9664\u4e86\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684\u63a5\u53e3\u4f20\u9012\u7684\u65b9\u5f0f\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u4f20\u9012\u548csetter\u65b9\u5f0f\u4f20\u9012\u3002 package com.principle.inversion ; public class DependencyPass { public static void main ( String [] args ) { ChangHong changHong1 = new ChangHong (); OpenAndClose openAndClose = new OpenAndClose (); openAndClose . open ( changHong1 ); // \u901a\u8fc7\u6784\u9020\u5668\u8fdb\u884c\u4f9d\u8d56\u4f20\u9012 OpenAndClose1 openAndClose1 = new OpenAndClose1 ( changHong1 ); openAndClose1 . open (); // \u901a\u8fc7 setter \u65b9\u6cd5\u8fdb\u884c\u4f9d\u8d56\u4f20\u9012 ChangHong2 changHong2 = new ChangHong2 (); OpenAndClose2 openAndClose2 = new OpenAndClose2 (); openAndClose2 . setTv ( changHong2 ); openAndClose2 . open (); } } // \u65b9\u5f0f 1\uff1a \u901a\u8fc7\u63a5\u53e3\u4f20\u9012\u5b9e\u73b0\u4f9d\u8d56 // \u5f00\u5173\u7684\u63a5\u53e3 interface IOpenAndClose { public void open ( ITV tv ); // \u62bd\u8c61\u65b9\u6cd5,\u63a5\u6536\u63a5\u53e3 } interface ITV { // ITV \u63a5\u53e3 public void play (); } class ChangHong implements ITV { @Override public void play () { System . out . println ( \"\u957f\u8679\u7535\u89c6\u673a\uff0c\u6253\u5f00\" ); } } // \u5b9e\u73b0\u63a5\u53e3 class OpenAndClose implements IOpenAndClose { public void open ( ITV tv ) { tv . play (); } } // \u65b9\u5f0f 2: \u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u4f9d\u8d56\u4f20\u9012 interface IOpenAndClose1 { public void open (); // \u62bd\u8c61\u65b9\u6cd5 } class OpenAndClose1 implements IOpenAndClose1 { public ITV tv ; // \u6210\u5458 public OpenAndClose1 ( ITV tv ) { // \u6784\u9020\u5668 this . tv = tv ; } public void open () { this . tv . play (); } } // \u65b9\u5f0f 3 , \u901a\u8fc7 setter \u65b9\u6cd5\u4f20\u9012 interface IOpenAndClose2 { public void open (); // \u62bd\u8c61\u65b9\u6cd5 public void setTv ( ITV2 tv ); } interface ITV2 { // ITV \u63a5\u53e3 public void play (); } class OpenAndClose2 implements IOpenAndClose2 { private ITV2 tv ; public void setTv ( ITV2 tv ) { this . tv = tv ; } public void open () { this . tv . play (); } } class ChangHong2 implements ITV2 { @Override public void play () { System . out . println ( \"\u957f\u8679\u7535\u89c6\u673a\uff0c\u6253\u5f00\" ); } } \u4f9d\u8d56\u5012\u8f6c\u539f\u5219\u4e2d\u9700\u8981\u6ce8\u610f\uff1a\u5e95\u5c42\u6a21\u5757\u5c3d\u91cf\u90fd\u8981\u7531\u62bd\u8c61\u7c7b\u6216\u63a5\u53e3\uff0c\u6216\u8005\u4e24\u8005\u90fd\u6709\uff0c\u7a0b\u5e8f\u7a33\u5b9a\u6027\u66f4\u597d\uff0c\u53d8\u91cf\u7684\u58f0\u660e\u7c7b\u578b \u5c3d\u91cf\u662f\u62bd\u8c61\u7c7b\u6216\u63a5\u53e3 \uff0c\u8fd9\u6837\u6211\u4eec\u7684\u53d8\u91cf\u5f15\u7528\u548c\u5b9e\u9645\u5bf9\u8c61\u95f4\uff0c\u5c31\u5b58\u5728\u4e00\u4e2a\u7f13\u51b2\u5c42\uff0c\u5229\u4e8e\u7a0b\u5e8f\u6269\u5c55\u548c\u4f18\u5316\uff0c\u7ee7\u627f\u9075\u5faa\u91cc\u6c0f\u66ff\u6362\u539f\u5219\u3002 4\u3001\u91cc\u6c0f\u66ff\u6362\u539f\u5219 \u00b6 \u7ee7\u627f\u5b58\u5728\u7684\u95ee\u9898 \uff1a\u7ee7\u627f\u5305\u542b\u8fd9\u6837\u4e00\u5c42\u542b\u4e49\uff1a\u7236\u7c7b\u4e2d\u51e1\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684\u65b9\u6cd5\uff0c\u5b9e\u9645\u4e0a\u662f\u5728\u8bbe\u5b9a\u89c4\u8303\u548c\u5951\u7ea6\uff0c\u867d\u7136\u5b83\u4e0d\u5f3a\u5236\u8981\u6c42\u6240\u6709\u7684\u5b50\u7c7b\u5fc5\u987b\u9075\u5faa\u8fd9\u4e9b\u5951\u7ea6\uff0c\u4f46\u662f\u5982\u679c\u5b50\u7c7b\u5bf9\u8fd9\u4e9b\u5df2\u7ecf\u5b9e\u73b0\u7684\u65b9\u6cd5\u4efb\u610f\u4fee\u6539\uff0c\u5c31\u4f1a\u5bf9\u6574\u4e2a\u7ee7\u627f\u4f53\u7cfb\u9020\u6210\u7834\u574f\u3002 \u7ee7\u627f\u5728\u7ed9\u7a0b\u5e8f\u8bbe\u8ba1\u5e26\u6765\u4fbf\u5229\u7684\u540c\u65f6\uff0c\u4e5f\u5e26\u6765\u4e86\u5f0a\u7aef\u3002\u6bd4\u5982\u4f7f\u7528\u7ee7\u627f\u4f1a\u7ed9\u7a0b\u5e8f\u5e26\u6765\u4fb5\u5165\u6027\uff0c\u7a0b\u5e8f\u7684\u53ef\u79fb\u690d\u6027\u964d\u4f4e\uff0c\u589e\u52a0\u5bf9\u8c61\u95f4\u7684\u8026\u5408\u6027\uff0c\u5982\u679c\u4e00\u4e2a\u7c7b\u88ab\u5176\u4ed6\u7684\u7c7b\u6240\u7ee7\u627f\uff0c\u5219\u5f53\u8fd9\u4e2a\u7c7b\u9700\u8981\u4fee\u6539\u65f6\uff0c\u5fc5\u987b\u8003\u8651\u5230\u6240\u6709\u7684\u5b50\u7c7b\uff0c\u5e76\u4e14\u7236\u7c7b\u4fee\u6539\u540e\uff0c\u6240\u6709\u6d89\u53ca\u5230\u5b50\u7c7b\u7684\u529f\u80fd\u90fd\u6709\u53ef\u80fd\u4ea7\u751f\u6545\u969c\u3002 \u91cc\u6c0f\u66ff\u6362\u539f\u5219\u7684\u4ecb\u7ecd\uff1a \u5982\u679c\u5bf9\u6bcf\u4e2a\u7c7b\u578b\u4e3a T1 \u7684\u5bf9\u8c61 o1\uff0c\u90fd\u6709\u7c7b\u578b\u4e3a T2 \u7684\u5bf9\u8c61 o2\uff0c\u4f7f\u5f97\u4ee5 T1 \u5b9a\u4e49\u7684\u6240\u6709\u7a0b\u5e8f P \u5728\u6240\u6709\u7684\u5bf9\u8c61 o1 \u90fd\u4ee3\u6362\u6210 o2 \u65f6\uff0c\u7a0b\u5e8f P \u7684\u884c\u4e3a\u6ca1\u6709\u53d1\u751f\u53d8\u5316\uff0c\u90a3\u4e48\u7c7b\u578b T2 \u662f\u7c7b\u578b T1 \u7684\u5b50\u7c7b\u578b\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c \u6240\u6709\u5f15\u7528\u57fa\u7c7b\u7684\u5730\u65b9\u5fc5\u987b\u80fd\u900f\u660e\u5730\u4f7f\u7528\u5176\u5b50\u7c7b\u7684\u5bf9\u8c61\u3002 \u5728\u7ee7\u627f\u65f6\uff0c\u5b50\u7c7b\u4e2d\u5c3d\u91cf\u4e0d\u8981\u91cd\u5199\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u5b9e\u9645\u4e0a\uff0c\u7ee7\u627f\u4f7f\u4e24\u4e2a\u7c7b\u7684\u8026\u5408\u6027\u589e\u5f3a\u4e86\uff0c\u5728\u9002\u5f53\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7\u805a\u5408\u3001\u7ec4\u5408\u3001\u4f9d\u8d56\u6765\u89e3\u51b3\u95ee\u9898\u3002 \uff081\uff09\u6848\u4f8b1 package com.principle.liskov ; public class Liskov { public static void main ( String [] args ) { A a = new A (); System . out . println ( \"11-3=\" + a . func1 ( 11 , 3 )); System . out . println ( \"1-8=\" + a . func1 ( 1 , 8 )); System . out . println ( \"--------------------------\" ); B b = new B (); System . out . println ( \"11-3=\" + b . func1 ( 11 , 3 )); System . out . println ( \"1-8=\" + b . func1 ( 1 , 8 )); System . out . println ( \"11+3+9=\" + b . func2 ( 11 , 3 )); } } // A\u7c7b\uff0c\u8fd4\u56de\u4e24\u4e2a\u6570\u5b57\u7684\u5dee class A { public int func1 ( int num1 , int num2 ){ return num1 - num2 ; } } // B\u7c7b\uff0c\u7ee7\u627f\u4e86A\u7c7b class B extends A { public int func1 ( int a , int b ) { return a + b ; } public int func2 ( int a , int b ){ return func1 ( a , b ) + 9 ; } } \u6211\u4eec\u53d1\u73b0\u539f\u6765\u8fd0\u884c\u6b63\u5e38\u7684\u76f8\u51cf\u529f\u80fd\u53d1\u751f\u4e86\u9519\u8bef\u3002\u539f\u56e0\u5c31\u662f\u7c7b B \u65e0\u610f\u4e2d\u91cd\u5199\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u9020\u6210\u539f\u6709\u529f\u80fd\u51fa\u73b0\u9519\u8bef\u3002\u5728\u5b9e\u9645\u7f16\u7a0b\u4e2d\uff0c\u6211\u4eec\u5e38\u5e38\u4f1a\u901a\u8fc7\u91cd\u5199\u7236\u7c7b\u7684\u65b9\u6cd5\u5b8c\u6210\u65b0\u7684\u529f\u80fd\uff0c\u8fd9\u6837\u5199\u8d77\u6765\u867d\u7136\u7b80\u5355\uff0c\u4f46\u6574\u4e2a\u7ee7\u627f\u4f53\u7cfb\u7684\u590d\u7528\u6027\u4f1a\u6bd4\u8f83\u5dee\u3002\u7279\u522b\u662f\u8fd0\u884c\u591a\u6001\u6bd4\u8f83\u9891\u7e41\u7684\u65f6\u5019\u3002 \u901a\u7528\u7684\u505a\u6cd5\u662f\uff1a \u539f\u6765\u7684\u7236\u7c7b\u548c\u5b50\u7c7b\u90fd\u7ee7\u627f\u4e00\u4e2a\u66f4\u901a\u4fd7\u7684\u57fa\u7c7b \uff0c\u539f\u6709\u7684\u7ee7\u627f\u5173\u7cfb\u53bb\u6389\uff0c\u91c7\u7528\u4f9d\u8d56\uff0c\u805a\u5408\uff0c\u7ec4\u5408\u7b49\u5173\u7cfb\u4ee3\u66ff\u3002 \uff082\uff09\u6848\u4f8b\u4e8c package com.principle.liskov.improve ; public class Liskov { public static void main ( String [] args ) { A a = new A (); System . out . println ( \"11-3=\" + a . func1 ( 11 , 3 )); System . out . println ( \"1-8=\" + a . func1 ( 1 , 8 )); System . out . println ( \"--------------------------\" ); B b = new B (); System . out . println ( \"11+3=\" + b . func1 ( 11 , 3 )); System . out . println ( \"1+8=\" + b . func1 ( 1 , 8 )); System . out . println ( \"11+3+9=\" + b . func2 ( 11 , 3 )); System . out . println ( \"11-3=\" + b . func3 ( 11 , 3 )); } } //\u521b\u5efa\u4e00\u4e2a\u66f4\u52a0\u57fa\u7840\u7684\u57fa\u7c7b class Base { // \u628a\u66f4\u52a0\u57fa\u7840\u7684\u65b9\u6cd5\u548c\u6210\u5458\u5199\u5230\u79ef\u7d2f\u91cc\u9762 } // A\u7c7b\uff0c\u8fd4\u56de\u4e24\u4e2a\u6570\u5b57\u7684\u5dee class A extends Base { public int func1 ( int num1 , int num2 ){ return num1 - num2 ; } } // B\u7c7b\uff0c\u7ee7\u627f\u4e86Base\u7c7b class B extends Base { // \u5982\u679cB\u9700\u8981\u4f7f\u7528A\u7c7b\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528\u7ec4\u5408\u5173\u7cfb private A a = new A (); public int func1 ( int a , int b ) { return a + b ; } public int func2 ( int a , int b ){ return func1 ( a , b ) + 9 ; } //\u6211\u4eec\u4ecd\u7136\u8981\u4f7f\u7528A\u7684\u65b9\u6cd5 public int func3 ( int a , int b ){ return this . a . func1 ( a , b ); } } \u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u66f4\u52a0\u57fa\u7840\u7684\u57fa\u7c7b\uff0c\u628a\u66f4\u52a0\u57fa\u7840\u7684\u65b9\u6cd5\u548c\u6210\u5458\u5199\u5230Base\u7c7b\u4e2d\uff0c\u4f7fA\u548cB\u7c7b\u540c\u65f6\u7ee7\u627f\u57fa\u7c7bBase\uff0c\u5982\u679cB\u8981\u4f7f\u7528A\u7c7b\u4e2d\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528\u7ec4\u5408\u5173\u7cfb\u3002 5\u3001\u5f00\u95ed\u539f\u5219 \u00b6 \u5f00\u95ed\u539f\u5219\uff08Open Closed Principle\uff09\u662f\u7f16\u7a0b\u4e2d \u6700\u57fa\u7840\u3001\u6700\u91cd\u8981 \u7684\u8bbe\u8ba1\u539f\u5219\u3002\u4e00\u4e2a\u8f6f\u4ef6\u5b9e\u4f53\u5982\u7c7b\uff0c\u6a21\u5757\u548c\u51fd\u6570\u5e94\u8be5\u5bf9\u6269\u5c55\u5f00\u653e\uff08\u5bf9\u63d0\u4f9b\u65b9\uff09\uff0c\u5bf9\u4fee\u6539\u5173\u95ed\uff08\u5bf9\u4f7f\u7528\u65b9\uff09\u3002\u7528\u62bd\u8c61\u6784\u5efa\u6846\u67b6\uff0c\u7528\u5b9e\u73b0\u6269\u5c55\u7ec6\u8282\u3002\u5f53\u8f6f\u4ef6\u9700\u8981\u53d8\u5316\u65f6\uff0c\u5c3d\u91cf\u901a\u8fc7 \u6269\u5c55\u8f6f\u4ef6\u5b9e\u4f53\u7684\u884c\u4e3a \u6765\u5b9e\u73b0\u53d8\u5316\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u4fee\u6539\u5df2\u6709\u4ee3\u7801\u6765\u5b9e\u73b0\u53d8\u5316\u3002 \uff081\uff09\u6848\u4f8b1 package com.principle.ocp ; public class Ocp { public static void main ( String [] args ) { GraphicEditor graphicEditor = new GraphicEditor (); graphicEditor . drawRectangle ( new Rectangle ()); graphicEditor . drawCircle ( new Circle ()); } } // \u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u7ed8\u56fe\u7684\u7c7b class GraphicEditor { public void drawShape ( Shape s ){ if ( s . m_type == 1 ){ drawRectangle ( s ); } else if ( s . m_type == 2 ){ drawCircle ( s ); } } public void drawRectangle ( Shape r ){ System . out . println ( \"\u7ed8\u5236\u77e9\u5f62\" ); } public void drawCircle ( Shape r ){ System . out . println ( \"\u7ed8\u5236\u5706\u5f62\" ); } } class Shape { int m_type ; } class Rectangle extends Shape { Rectangle (){ super . m_type = 1 ; } } class Circle extends Shape { Circle (){ super . m_type = 2 ; } } \u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0c\u5e76\u6ca1\u6709\u9075\u5b88 \u5f00\u95ed\u539f\u5219 \uff0c\u5373\u5f53\u6211\u4eec\u7ed9\u7c7b\u589e\u52a0\u65b0\u529f\u80fd\u7684\u65f6\u5019\uff0c\u5c3d\u91cf\u4e0d\u4fee\u6539\u4ee3\u7801\uff0c\u6216\u8005\u5c3d\u53ef\u80fd\u5c11\u4fee\u6539\u4ee3\u7801\uff0c\u4f46\u662f\u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u65b0\u589e\u4e00\u4e2a\u56fe\u5f62\u79cd\u7c7b\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539\u8f83\u591a\u7684\u5730\u65b9\u3002 \uff082\uff09\u6848\u4f8b2 \u628a\u521b\u5efa Shape \u7c7b\u505a\u6210\u62bd\u8c61\u7c7b\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u62bd\u8c61\u7684 draw \u65b9\u6cd5\uff0c\u8ba9\u5b50\u7c7b\u53bb\u5b9e\u73b0\u5373\u53ef\uff0c\u8fd9\u6837\u6211\u4eec\u6709\u65b0\u7684\u56fe\u5f62\u79cd\u7c7b\u65f6\uff0c\u53ea\u9700\u8981\u8ba9\u65b0\u7684\u56fe\u5f62\u7c7b\u7ee7\u627f Shape\uff0c\u5e76\u5b9e\u73b0 draw \u65b9\u6cd5\u5373\u53ef\uff0c\u4f7f\u7528\u65b9\u7684\u4ee3\u7801\u5c31\u4e0d\u9700\u8981\u4fee\u6539\uff0c\u6ee1\u8db3\u4e86\u5f00\u95ed\u539f\u5219\u3002 package com.principle.ocp.improve ; public class Ocp { public static void main ( String [] args ) { GraphicEditor graphicEditor = new GraphicEditor (); graphicEditor . drawShape ( new Rectangle ()); graphicEditor . drawShape ( new Circle ()); } } // \u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u7ed8\u56fe\u7684\u7c7b class GraphicEditor { public void drawShape ( Shape s ){ s . draw (); } } abstract class Shape { int m_type ; public abstract void draw (); //\u62bd\u8c61\u65b9\u6cd5 } class Rectangle extends Shape { Rectangle (){ super . m_type = 1 ; } @Override public void draw () { System . out . println ( \"\u7ed8\u5236\u77e9\u5f62\" ); } } class Circle extends Shape { Circle (){ super . m_type = 2 ; } @Override public void draw () { System . out . println ( \"\u7ed8\u5236\u5706\u5f62\" ); } } \u8fd9\u4e2a\u6848\u4f8b\u6ee1\u8db3\u4e86\u5f00\u95ed\u539f\u5219\uff0c\u5728\u65b0\u589e\u529f\u80fd\u7684\u65f6\u5019\uff0c\u4fee\u6539\u5c11\u91cf\u7684\u4ee3\u7801\u5c31\u53ef\u4ee5\u5b8c\u6210\u3002 6\u3001\u8fea\u7c73\u7279\u6cd5\u5219 \u00b6 \u8fea\u7c73\u7279\u6cd5\u5219\u53c8\u53eb \u6700\u5c11\u77e5\u9053\u539f\u5219 \uff0c\u5373\u4e00\u4e2a\u7c7b\u5bf9\u81ea\u5df1\u4f9d\u8d56\u7684\u7c7b\u77e5\u9053\u7684\u8d8a\u5c11\u8d8a\u597d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u88ab\u4f9d\u8d56\u7684\u7c7b\u4e0d\u7ba1\u591a\u4e48\u590d\u6742\uff0c\u90fd\u5c3d\u91cf\u5c06\u903b\u8f91\u5c01\u88c5\u5728\u7c7b\u7684\u5185\u90e8\uff0c\u5bf9\u5916\u9664\u4e86\u63d0\u4f9b\u7684public\u65b9\u6cd5\uff0c\u4e0d\u5bf9\u5916\u6cc4\u9732\u4efb\u4f55\u4fe1\u606f\u3002\u6216\u8005\u66f4\u7b80\u5355\u7684\u5b9a\u4e49\uff1a\u53ea\u4e0e\u76f4\u63a5\u670b\u53cb\u901a\u4fe1\u3002 \u76f4\u63a5\u7684\u670b\u53cb \uff1a\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u4f1a\u4e0e\u5176\u4ed6\u5bf9\u8c61\u6709\u8026\u5408\u5173\u7cfb\uff0c\u53ea\u8981\u4e24\u4e2a\u5bf9\u8c61\u4e4b\u95f4\u6709\u8026\u5408\u5173\u7cfb\uff0c\u6211\u4eec\u5c31\u8bf4\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u4e4b\u95f4\u662f\u670b\u53cb\u5173\u7cfb\u3002\u8026\u5408\u7684\u65b9\u5f0f\u5f88\u591a\uff0c\u4f9d\u8d56\uff0c\u5173\u8054\uff0c\u7ec4\u5408\uff0c\u805a\u5408\u7b49\u3002\u5176\u4e2d\uff0c\u6211\u4eec\u79f0\u51fa\u73b0\u7684 \u6210\u5458\u53d8\u91cf\uff0c\u65b9\u6cd5\u53c2\u6570\uff0c\u65b9\u6cd5\u8fd4\u56de\u503c \u4e2d\u7684\u7c7b\u4e3a\u76f4\u63a5\u7684\u670b\u53cb\uff0c\u800c\u51fa\u73b0\u5728\u5c40\u90e8\u53d8\u91cf\u4e2d\u7684\u7c7b\u4e0d\u662f\u76f4\u63a5\u7684\u670b\u53cb\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u964c\u751f\u7684\u7c7b\u6700\u597d\u4e0d\u8981\u4ee5\u5c40\u90e8\u53d8\u91cf\u7684\u5f62\u5f0f\u51fa\u73b0\u5728\u7c7b\u7684\u5185\u90e8\u3002 \uff081\uff09\u6848\u4f8b1 \u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff1a\u6709\u4e00\u4e2a\u5b66\u6821\uff0c\u4e0b\u5c5e\u6709\u5404\u4e2a\u5b66\u9662\u548c\u603b\u90e8\uff0c\u6253\u5370\u51fa\u5b66\u6821\u603b\u90e8\u5458\u5de5 ID \u548c\u5b66\u9662\u5458\u5de5\u7684 id\u3002 package com.principle.demeter ; import java.util.ArrayList ; import java.util.List ; public class Demeter1 { public static void main ( String [] args ) { // \u521b\u5efa\u4e00\u4e2aSchoolManager\u5bf9\u8c61 SchoolManager schoolManager = new SchoolManager (); schoolManager . printAllEmployee ( new CollegeManager ()); } } class Employee { private String id ; public void setId ( String id ) { this . id = id ; } public String getId () { return id ; } } class CollegeEmployee { private String id ; public void setId ( String id ) { this . id = id ; } public String getId () { return id ; } } class CollegeManager { public List < CollegeEmployee > getAllEmployee () { List < CollegeEmployee > list = new ArrayList < CollegeEmployee > (); for ( int i = 0 ; i < 10 ; i ++ ) { CollegeEmployee emp = new CollegeEmployee (); emp . setId ( \"\u5b66\u9662\u5458\u5de5id= \" + i ); list . add ( emp ); } return list ; } } // SchoolManager\u7c7b\u7684\u76f4\u63a5\u670b\u53cb\u6709Employee\u548cCollegeManager // CollegeEmployee\u4e0d\u662f\u76f4\u63a5\u670b\u53cb\uff0c\u8fd9\u6837\u505a\u8fdd\u53cd\u4e86\u8fea\u7c73\u7279\u6cd5\u5219 class SchoolManager { public List < Employee > getAllEmployee () { List < Employee > list = new ArrayList < Employee > (); for ( int i = 0 ; i < 5 ; i ++ ) { Employee emp = new Employee (); emp . setId ( \"\u5b66\u6821\u603b\u90e8\u5458\u5de5id= \" + i ); list . add ( emp ); } return list ; } void printAllEmployee ( CollegeManager sub ) { List < CollegeEmployee > list1 = sub . getAllEmployee (); System . out . println ( \"------------\u5206\u516c\u53f8\u5458\u5de5------------\" ); // CollegeEmployee\u4e0d\u662fSchoolManager\u7684\u76f4\u63a5\u670b\u53cb // \u56e0\u4e3a\u5b83\u662f\u4ee5\u5c40\u90e8\u53d8\u91cf\u7684\u5f62\u5f0f\u5b58\u5728 for ( CollegeEmployee e : list1 ) { System . out . println ( e . getId ()); } List < Employee > list2 = this . getAllEmployee (); System . out . println ( \"------------\u5b66\u6821\u603b\u90e8\u5458\u5de5------------\" ); for ( Employee e : list2 ) { System . out . println ( e . getId ()); } } } \u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2dSchoolManager\u7c7b\u7684\u76f4\u63a5\u670b\u53cb\u6709Employee\u548cCollegeManager\uff0cCollegeEmployee\u4e0d\u662f\u76f4\u63a5\u670b\u53cb\uff08\u56e0\u4e3a\u5b83\u662f\u4ee5\u5c40\u90e8\u53d8\u91cf\u7684\u5f62\u5f0f\u5b58\u5728\u7684\uff09\uff0c\u8fd9\u6837\u505a\u8fdd\u53cd\u4e86\u8fea\u7c73\u7279\u6cd5\u5219\u3002 \uff082)\u6848\u4f8b2 \u524d\u9762\u8bbe\u8ba1\u7684\u95ee\u9898\u5728\u4e8e SchoolManager \u4e2d\uff0cCollegeEmployee \u7c7b\u5e76\u4e0d\u662f SchoolManager \u7c7b\u7684\u76f4\u63a5\u670b\u53cb\u3002 \u6309\u7167\u8fea\u7c73\u7279\u6cd5\u5219\uff0c\u5e94\u8be5\u907f\u514d\u7c7b\u4e2d\u51fa\u73b0\u8fd9\u6837\u975e\u76f4\u63a5\u670b\u53cb\u5173\u7cfb\u7684\u8026\u5408\u3002 package com.principle.demeter.improve ; import java.util.ArrayList ; import java.util.List ; public class Demeter1 { public static void main ( String [] args ) { // \u521b\u5efa\u4e00\u4e2aSchoolManager\u5bf9\u8c61 SchoolManager schoolManager = new SchoolManager (); schoolManager . printAllEmployee ( new CollegeManager ()); } } class Employee { private String id ; public void setId ( String id ) { this . id = id ; } public String getId () { return id ; } } class CollegeEmployee { private String id ; public void setId ( String id ) { this . id = id ; } public String getId () { return id ; } } class CollegeManager { public List < CollegeEmployee > getAllEmployee () { List < CollegeEmployee > list = new ArrayList < CollegeEmployee > (); for ( int i = 0 ; i < 10 ; i ++ ) { CollegeEmployee emp = new CollegeEmployee (); emp . setId ( \"\u5b66\u9662\u5458\u5de5id= \" + i ); list . add ( emp ); } return list ; } // \u8f93\u51fa\u5b66\u9662\u5458\u5de5\u7684\u4fe1\u606f public void printEmployee (){ List < CollegeEmployee > list1 = this . getAllEmployee (); System . out . println ( \"------------\u5b66\u9662\u5458\u5de5------------\" ); for ( CollegeEmployee e : list1 ) { System . out . println ( e . getId ()); } } } class SchoolManager { public List < Employee > getAllEmployee () { List < Employee > list = new ArrayList < Employee > (); for ( int i = 0 ; i < 5 ; i ++ ) { Employee emp = new Employee (); emp . setId ( \"\u5b66\u6821\u603b\u90e8\u5458\u5de5id= \" + i ); list . add ( emp ); } return list ; } void printAllEmployee ( CollegeManager sub ) { sub . printEmployee (); List < Employee > list2 = this . getAllEmployee (); System . out . println ( \"------------\u5b66\u6821\u603b\u90e8\u5458\u5de5------------\" ); for ( Employee e : list2 ) { System . out . println ( e . getId ()); } } } \u8fea\u7c73\u7279\u6cd5\u5219\u7684\u6838\u5fc3\u662f\u964d\u4f4e\u7c7b\u4e4b\u95f4\u7684\u8026\u5408 , \u4f46\u662f\u6ce8\u610f\uff1a\u7531\u4e8e\u6bcf\u4e2a\u7c7b\u90fd\u51cf\u5c11\u4e86\u4e0d\u5fc5\u8981\u7684\u4f9d\u8d56\uff0c\u56e0\u6b64\u8fea\u7c73\u7279\u6cd5\u5219\u53ea\u662f\u8981\u6c42\u964d\u4f4e\u7c7b\u95f4(\u5bf9\u8c61\u95f4)\u8026\u5408\u5173\u7cfb\uff0c\u5e76\u4e0d\u662f\u8981\u6c42\u5b8c\u5168\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\u3002 7\u3001\u5408\u6210\u590d\u7528\u539f\u5219 \u00b6 \u5408\u6210\u590d\u7528\u539f\u5219\u662f \u5c3d\u91cf\u4f7f\u7528\u5408\u6210/\u805a\u5408\u7684\u65b9\u5f0f\uff0c\u800c\u4e0d\u662f\u7ee7\u627f \u3002\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u627e\u51fa\u5e94\u7528\u4e2d\u53ef\u80fd\u9700\u8981\u53d8\u5316\u4e4b\u5904\uff0c\u628a\u5b83\u4eec\u72ec\u7acb\u51fa\u6765\uff0c\u4e0d\u8981\u548c\u90a3\u4e9b\u4e0d\u9700\u8981\u53d8\u5316\u7684\u4ee3\u7801\u6df7\u5728\u4e00\u8d77\u3002\u9488\u5bf9\u63a5\u53e3\u7f16\u7a0b\uff0c\u800c\u4e0d\u662f\u9488\u5bf9\u5b9e\u73b0\u7f16\u7a0b\uff0c\u4e3a\u4e86\u4ea4\u4e92\u5bf9\u8c61\u4e4b\u95f4\u7684\u677e\u8026\u5408\u8bbe\u8ba1\u800c\u52aa\u529b\u3002 \u4e09\u3001\u8bbe\u8ba1\u6a21\u5f0f\u6982\u8ff0 \u00b6 \u8bbe\u8ba1\u6a21\u5f0f\u662f\u7a0b\u5e8f\u5458\u5728\u9762\u5bf9\u540c\u7c7b\u8f6f\u4ef6\u5de5\u7a0b\u8bbe\u8ba1\u95ee\u9898\u6240\u603b\u7ed3\u51fa\u6765\u7684\u6709\u7528\u7684\u7ecf\u9a8c\uff0c\u6a21\u5f0f\u4e0d\u662f\u4ee3\u7801\uff0c\u800c\u662f\u67d0\u7c7b\u95ee\u9898\u7684\u901a\u7528\u89e3\u51b3\u65b9\u6848\uff0c\u8bbe\u8ba1\u6a21\u5f0f\uff08Design pattern\uff09\u4ee3\u8868\u4e86\u6700\u4f73\u7684\u5b9e\u8df5\u3002\u8fd9\u4e9b\u89e3\u51b3\u65b9\u6848\u662f\u4f17\u591a\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u7ecf\u8fc7\u76f8\u5f53\u957f\u7684\u4e00\u6bb5\u65f6\u95f4\u7684\u8bd5\u9a8c\u548c\u9519\u8bef\u603b\u7ed3\u51fa\u6765\u7684\u3002\u8bbe\u8ba1\u6a21\u5f0f\u7684\u672c\u8d28 \u63d0\u9ad8\u8f6f\u4ef6\u7684\u7ef4\u62a4\u6027\u3001\u901a\u7528\u6027\u548c\u6269\u5c55\u6027\uff0c\u5e76\u964d\u4f4e\u8f6f\u4ef6\u7684\u590d\u6742\u5ea6 \u3002\u8bbe\u8ba1\u6a21\u5f0f\u5e76\u4e0d\u5c40\u9650\u4e8e\u67d0\u79cd\u8bed\u8a00\uff0cjava\uff0cphp\uff0cc++ \u90fd\u6709\u8bbe\u8ba1\u6a21\u5f0f\u3002\u8bbe\u8ba1\u6a21\u5f0f\u5206\u4e3a\u4e09\u79cd\u7c7b\u578b\uff0c\u517123\u79cd\u3002 \u521b\u5efa\u578b\u6a21\u5f0f\uff1a\u5355\u4f8b\u6a21\u5f0f\u3001\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u3001\u539f\u578b\u6a21\u5f0f\u3001\u5efa\u9020\u8005\u6a21\u5f0f\u3001\u5de5\u5382\u6a21\u5f0f\u3002 \u7ed3\u6784\u578b\u6a21\u5f0f\uff1a\u9002\u914d\u5668\u6a21\u5f0f\u3001\u6865\u63a5\u6a21\u5f0f\u3001\u88c5\u9970\u6a21\u5f0f\u3001\u7ec4\u5408\u6a21\u5f0f\u3001\u5916\u89c2\u6a21\u5f0f\u3001\u4eab\u5143\u6a21\u5f0f\u3001\u4ee3\u7406\u6a21\u5f0f\u3002 \u884c\u4e3a\u578b\u6a21\u5f0f\uff1a \u6a21\u7248\u65b9\u6cd5\u6a21\u5f0f\u3001\u547d\u4ee4\u6a21\u5f0f\u3001\u8bbf\u95ee\u8005\u6a21\u5f0f\u3001\u8fed\u4ee3\u5668\u6a21\u5f0f\u3001\u89c2\u5bdf\u8005\u6a21\u5f0f\u3001\u4e2d\u4ecb\u8005\u6a21\u5f0f\u3001\u5907\u5fd8\u5f55\u6a21\u5f0f\u3001\u89e3\u91ca\u5668\u6a21\u5f0f\uff08Interpreter \u6a21\u5f0f\uff09\u3001\u72b6\u6001\u6a21\u5f0f\u3001\u7b56\u7565\u6a21\u5f0f\u3001\u804c\u8d23\u94fe\u6a21\u5f0f(\u8d23\u4efb\u94fe\u6a21\u5f0f) \u4e0d\u540c\u7684\u4e66\u7c4d\u4e0a\u5bf9\u5206\u7c7b\u548c\u540d\u79f0\u7565\u6709\u5dee\u5f02 \u56db\u3001\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f \u00b6 1\u3001\u7b80\u4ecb \u00b6 \u6240\u8c13\u7c7b\u7684\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5c31\u662f \u91c7\u53d6\u4e00\u5b9a\u7684\u65b9\u6cd5\u4fdd\u8bc1\u5728\u6574\u4e2a\u7684\u8f6f\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u5bf9\u67d0\u4e2a\u7c7b\u53ea\u80fd\u5b58\u5728\u4e00\u4e2a\u5bf9\u8c61\u5b9e\u4f8b \uff0c\u5e76\u4e14\u8be5\u7c7b\u53ea\u63d0\u4f9b\u4e00\u4e2a\u53d6\u5f97\u5176\u5bf9\u8c61\u5b9e\u4f8b\u7684\u65b9\u6cd5(\u9759\u6001\u65b9\u6cd5)\u3002 \u6bd4\u5982 Hibernate \u7684 SessionFactory\uff0c\u5b83\u5145\u5f53\u6570\u636e\u5b58\u50a8\u6e90\u7684\u4ee3\u7406\uff0c\u5e76\u8d1f\u8d23\u521b\u5efa Session \u5bf9\u8c61\u3002SessionFactory \u5e76\u4e0d\u662f\u8f7b\u91cf\u7ea7\u7684\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u9879\u76ee\u901a\u5e38\u53ea\u9700\u8981\u4e00\u4e2a SessionFactory \u5c31\u591f\uff0c\u8fd9\u662f\u5c31\u4f1a\u4f7f\u7528\u5230\u5355\u4f8b\u6a21\u5f0f\u3002 2\u3001\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\u7684\u516b\u79cd\u65b9\u5f0f \u00b6 \uff081\uff09\u997f\u6c49\u5f0f\uff08\u9759\u6001\u5e38\u91cf\uff09 \u00b6 \u521b\u5efa\u4e00\u4e2a\u997f\u6c49\u5f0f\uff08\u9759\u6001\u5e38\u91cf\uff09\u5e94\u7528\u5b9e\u4f8b\u7684\u6b65\u9aa4\u53ef\u4ee5\u5206\u4e3a\u4e00\u4e0b\u51e0\u6b65\uff1a \u6784\u9020\u5668\u79c1\u6709\u5316\uff08\u9632\u6b62\u5916\u90e8new\uff09 \u7c7b\u7684\u5185\u90e8\u521b\u5efa\u5bf9\u8c61 \u5411\u5916\u66b4\u9732\u4e00\u4e2a\u9759\u6001\u7684\u516c\u5171\u65b9\u6cd5\u3002getInstance \u5b9e\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a package com.singleton.type1 ; public class Singleton1 { public static void main ( String [] args ) { Singleton instance1 = Singleton . getInstance (); Singleton instance2 = Singleton . getInstance (); System . out . println ( instance1 == instance2 ); System . out . println ( \"instance2.hashCode1=\" + instance1 . hashCode ()); System . out . println ( \"instance2.hashCode1=\" + instance2 . hashCode ()); } } // \u997f\u6c49\u5f0f\uff08\u4f7f\u7528\u9759\u6001\u53d8\u91cf\u6765\u5199\uff09 class Singleton { // 1\u3001\u5148\u5c06\u6784\u9020\u5668\u79c1\u6709\u5316\uff0c\u5916\u90e8\u4e0d\u80fdnew private Singleton (){ } // 2\u3001\u672c\u7c7b\u5185\u90e8\u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b private final static Singleton instance = new Singleton (); // 3\u3001\u5bf9\u5916\u63d0\u4f9b\u4e00\u4e2a\u516c\u6709\u7684\u65b9\u6cd5\u8fd4\u56de\u5b9e\u4f8b\u5bf9\u8c61 public static Singleton getInstance (){ return instance ; } } \u6700\u540e\u7a0b\u5e8f\u4ee3\u7801\u8f93\u51fa\u7684\u7ed3\u679c\u662f\uff1a\u4e24\u4e2a\u5bf9\u8c61\u76f8\u7b49\uff0c\u5e76\u4e14\u8fd4\u56de\u7684hash\u503c\u4e5f\u662f\u4e00\u6837\u7684\u3002 \u4f18\u7f3a\u70b9\u8bf4\u660e\uff1a \u4f18\u70b9\uff1a\u8fd9\u79cd\u5199\u6cd5\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u5728\u7c7b\u88c5\u8f7d\u7684\u65f6\u5019\u5c31\u5b8c\u6210\u5b9e\u4f8b\u5316\u3002\u907f\u514d\u4e86\u7ebf\u7a0b\u540c\u6b65\u95ee\u9898\u3002 \u5728\u7c7b\u88c5\u8f7d\u7684\u65f6\u5019\u5c31\u5b8c\u6210\u5b9e\u4f8b\u5316\uff0c\u6ca1\u6709\u8fbe\u5230 Lazy Loading\u7684\u6548\u679c\u3002\u5982\u679c\u4ece\u59cb\u81f3\u7ec8\u4ece\u672a\u4f7f\u7528\u8fc7\u8fd9\u4e2a\u5b9e\u4f8b\uff0c\u5219\u4f1a\u9020\u6210\u5185\u5b58\u7684\u6d6a\u8d39\u3002 \u7ed3\u8bba\uff1a\u8fd9\u79cd\u5355\u4f8b\u6a21\u5f0f\u53ef\u7528\uff0c\u53ef\u80fd\u9020\u6210\u5185\u5b58\u6d6a\u8d39 \u8fd9\u79cd\u65b9\u5f0f\u57fa\u4e8e classloder \u673a\u5236\u907f\u514d\u4e86\u591a\u7ebf\u7a0b\u7684\u540c\u6b65\u95ee\u9898\uff0c\u4e0d\u8fc7\uff0cinstance \u5728\u7c7b\u88c5\u8f7d\u65f6\u5c31\u5b9e\u4f8b\u5316\uff0c\u5728\u5355\u4f8b\u6a21\u5f0f\u4e2d\u5927\u591a\u6570\u90fd\u662f\u8c03\u7528 getInstance \u65b9\u6cd5\uff0c\u4f46\u662f\u5bfc\u81f4\u7c7b\u88c5\u8f7d\u7684\u539f\u56e0\u6709\u5f88\u591a\u79cd\uff0c\u56e0\u6b64\u4e0d\u80fd\u786e\u5b9a\u6709\u5176\u4ed6\u7684\u65b9\u5f0f\uff08\u6216\u8005\u5176\u4ed6\u7684\u9759\u6001\u65b9\u6cd5\uff09\u5bfc\u81f4\u7c7b\u88c5\u8f7d\uff0c\u8fd9\u65f6\u5019\u521d\u59cb\u5316 instance \u5c31\u6ca1\u6709\u8fbe\u5230 lazy loading \u7684\u6548\u679c\u3002 \uff082\uff09\u997f\u6c49\u5f0f\uff08\u9759\u6001\u4ee3\u7801\u5757\uff09 \u00b6 \u8fd9\u79cd\u65b9\u6cd5\u662f\u6839\u636e\u4e0a\u4e00\u79cd\u65b9\u6cd5\u8fdb\u884c\u6539\u8fdb\u7684\uff0c\u5c06\u4e0a\u4e00\u79cd\u7684\u9759\u6001\u53d8\u91cf\u6539\u4e3a\u9759\u6001\u4ee3\u7801\u5757\u3002 // \u997f\u6c49\u5f0f\uff08\u4f7f\u7528\u9759\u6001\u53d8\u91cf\u6765\u5199\uff09 class Singleton { // 1\u3001\u5148\u5c06\u6784\u9020\u5668\u79c1\u6709\u5316\uff0c\u5916\u90e8\u4e0d\u80fdnew private Singleton (){ } // 2\u3001\u672c\u7c7b\u5185\u90e8\u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b private final static Singleton instance ; static { //\u5728\u9759\u6001\u4ee3\u7801\u5757\u4e2d\u521b\u5efa\u5355\u4f8b\u5bf9\u8c61 instance = new Singleton (); } // 3\u3001\u5bf9\u5916\u63d0\u4f9b\u4e00\u4e2a\u516c\u6709\u7684\u65b9\u6cd5\u8fd4\u56de\u5b9e\u4f8b\u5bf9\u8c61 public static Singleton getInstance (){ return instance ; } } \u6700\u7ec8\u7684\u8f93\u51fa\u7ed3\u679c\u548c\u4e0a\u4e00\u4e2a\u76f8\u540c \u4f18\u7f3a\u70b9\u8bf4\u660e \u8fd9\u79cd\u65b9\u5f0f\u548c\u4e0a\u9762\u7684\u65b9\u5f0f\u5176\u5b9e\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u5c06\u7c7b\u5b9e\u4f8b\u5316\u7684\u8fc7\u7a0b\u653e\u5728\u4e86\u9759\u6001\u4ee3\u7801\u5757\u4e2d\uff0c\u4e5f\u662f\u5728\u7c7b\u88c5\u8f7d\u7684\u65f6\u5019\uff0c\u5c31\u6267\u884c\u9759\u6001\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\uff0c\u521d\u59cb\u5316\u7c7b\u7684\u5b9e\u4f8b\u3002\u4f18\u7f3a\u70b9\u548c\u4e0a\u9762\u662f\u4e00\u6837\u7684\u3002 \u7ed3\u8bba\uff1a\u8fd9\u79cd\u5355\u4f8b\u6a21\u5f0f\u53ef\u7528\uff0c\u4f46\u662f\u53ef\u80fd\u9020\u6210\u5185\u5b58\u6d6a\u8d39 \uff083\uff09\u61d2\u6c49\u5f0f\uff08\u7ebf\u7a0b\u4e0d\u5b89\u5168\uff09 \u00b6 \u4e0a\u8ff0\u4e24\u79cd\u65b9\u6cd5\u90fd\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u90fd\u4f1a\u9020\u6210\u7ebf\u7a0b\u7684\u6d6a\u8d39\u3002\u4e0b\u9762\u662f\u4e00\u79cd\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\u65b9\u6cd5\u3002 package com.singleton.type3 ; public class Singleton3 { public static void main ( String [] args ) { Singleton instance1 = Singleton . getInstance (); Singleton instance2 = Singleton . getInstance (); System . out . println ( instance1 == instance2 ); System . out . println ( \"instance2.hashCode1=\" + instance1 . hashCode ()); System . out . println ( \"instance2.hashCode1=\" + instance2 . hashCode ()); } } class Singleton { private static Singleton instance ; private Singleton (){} // \u63d0\u4f9b\u4e00\u4e2a\u9759\u6001\u7684\u516c\u6709\u65b9\u6cd5\uff0c\u5f53\u4f7f\u7528\u8be5\u65b9\u6cd5\u65f6\uff0c\u624d\u53bb\u521b\u5efainstance // \u61d2\u6c49\u5f0f // \u7528\u5230\u65f6\u5019\u624d\u521b\u5efa public static Singleton getInstance (){ if ( instance == null ){ instance = new Singleton (); } return instance ; } } \u4f18\u7f3a\u70b9\u8bf4\u660e \u8d77\u5230\u4e86Lazy Loading\u7684\u6548\u679c\uff0c\u4f46\u662f\u53ea\u80fd\u5728\u5355\u7ebf\u7a0b\u4e0b\u4f7f\u7528\u3002 \u5982\u679c\u5728\u591a\u7ebf\u7a0b\u4e0b\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u5165\u4e86 if (singleton == null)\u5224\u65ad\u8bed\u53e5\u5757\uff0c\u8fd8\u672a\u6765\u5f97\u53ca\u5f80\u4e0b\u6267\u884c\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u4e5f\u901a\u8fc7\u4e86\u8fd9\u4e2a\u5224\u65ad\u8bed\u53e5\uff0c\u8fd9\u65f6\u4fbf\u4f1a\u4ea7\u751f\u591a\u4e2a\u5b9e\u4f8b\u3002\u6240\u4ee5\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u4e0d\u53ef\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u3002 \u7ed3\u8bba\uff1a\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u4e0d\u8981\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u3002 \uff084\uff09\u61d2\u6c49\u5f0f\uff08\u7ebf\u7a0b\u5b89\u5168\uff0c\u540c\u6b65\u65b9\u6cd5\uff09 \u00b6 \u9488\u5bf9\u4e0a\u4e00\u79cd\u65b9\u6cd5\u7684\u7f3a\u9677\uff0c\u4f7f\u7528 synchronized \u5173\u952e\u5b57\u53ef\u4ee5\u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\u3002 package com.singleton.type4 ; public class Singleton4 { public static void main ( String [] args ) { Singleton instance1 = Singleton . getInstance (); Singleton instance2 = Singleton . getInstance (); System . out . println ( instance1 == instance2 ); System . out . println ( \"instance2.hashCode1=\" + instance1 . hashCode ()); System . out . println ( \"instance2.hashCode1=\" + instance2 . hashCode ()); } } //\u61d2\u6c49\u5f0f\u7b2c\u4e8c\u79cd\uff08\u7ebf\u7a0b\u5b89\u5168\uff0c\u540c\u6b65\u65b9\u6cd5\uff09 class Singleton { private static Singleton instance ; private Singleton (){} // \u63d0\u4f9b\u4e00\u4e2a\u9759\u6001\u7684\u516c\u6709\u65b9\u6cd5\uff0c\u52a0\u5165\u4e86\u4e00\u4e2a\u540c\u6b65\u5904\u7406\u7684\u4ee3\u7801\uff0c\u5f53\u4f7f\u7528\u8be5\u65b9\u6cd5\u65f6\uff0c\u624d\u53bb\u521b\u5efainstance // \u61d2\u6c49\u5f0f // \u7528\u5230\u65f6\u5019\u624d\u521b\u5efa public static synchronized Singleton getInstance (){ if ( instance == null ){ instance = new Singleton (); } return instance ; } } \u4f18\u7f3a\u70b9\u8bf4\u660e\uff1a \u89e3\u51b3\u4e86\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898 \u6548\u7387\u592a\u4f4e\u4e86\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u5728\u60f3\u83b7\u5f97\u7c7b\u7684\u5b9e\u4f8b\u65f6\u5019\uff0c\u6267\u884cgetInstance()\u65b9\u6cd5\u90fd\u8981\u8fdb\u884c\u540c\u6b65\u3002\u800c\u5176\u5b9e\u8fd9\u4e2a\u65b9\u6cd5\u53ea\u6267\u884c\u4e00\u6b21\u5b9e\u4f8b\u5316\u4ee3\u7801\u5c31\u591f\u4e86\uff0c\u540e\u9762\u7684\u60f3\u83b7\u5f97\u8be5\u7c7b\u5b9e\u4f8b\uff0c\u76f4\u63a5 return \u5c31\u884c\u4e86\u3002\u65b9\u6cd5\u8fdb\u884c\u540c\u6b65\u6548\u7387\u592a\u4f4e\u3002 \u7ed3\u8bba\uff1a\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f \uff085\uff09\u61d2\u6c49\u5f0f\uff08\u7ebf\u7a0b\u5b89\u5168\uff0c\u540c\u6b65\u4ee3\u7801\u5757\uff09 \u00b6 \u8fd9\u79cd\u65b9\u5f0f\u53ea\u662f\u5bf9\u4e0a\u4e00\u79cd\u65b9\u5f0f\u7684\u6539\u8fdb\uff0c\u540c\u6837\u4e0d\u63a8\u8350\u4f7f\u7528\u3002\u53ea\u662f\u5c06synchronized\u5173\u952e\u5b57\u6362\u4e86\u4e00\u4e2a\u4f4d\u7f6e\u800c\u5df2\u3002 public static Singleton getInstance (){ if ( instance == null ){ synchronized ( Singleton . class ){ instance = new Singleton (); } } return instance ; } \uff086\uff09\u53cc\u91cd\u68c0\u67e5 \u00b6 \u6839\u636e\u4ee5\u4e0a\u65b9\u5f0f\u5b58\u5728\u7684\u4f18\u7f3a\u70b9\uff0c\u63d0\u51fa\u4e86\u53cc\u91cd\u68c0\u67e5\u7684\u65b9\u5f0f\uff0c\u63d0\u4f9b\u4e00\u4e2a\u9759\u6001\u7684\u516c\u6709\u65b9\u6cd5\uff0c\u52a0\u5165\u53cc\u91cd\u68c0\u67e5\u4ee3\u7801\uff0c\u89e3\u51b3\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898, \u540c\u65f6\u89e3\u51b3\u61d2\u52a0\u8f7d\u95ee\u9898 \u540c\u65f6\u4fdd\u8bc1\u4e86\u6548\u7387, \u63a8\u8350\u4f7f\u7528\u3002 //\u61d2\u6c49\u5f0f\u7b2c\u4e8c\u79cd\uff08\u7ebf\u7a0b\u5b89\u5168\uff0c\u540c\u6b65\u65b9\u6cd5\uff09 class Singleton { private static volatile Singleton instance ; private Singleton (){} // \u63d0\u4f9b\u4e00\u4e2a\u9759\u6001\u7684\u516c\u6709\u65b9\u6cd5\uff0c\u52a0\u5165\u53cc\u91cd\u68c0\u67e5\u7684\u4ee3\u7801\uff0c\u89e3\u51b3\u7ebf\u7a0b\u5b89\u5168\uff0c\u540c\u65f6\u89e3\u51b3\u61d2\u52a0\u8f7d\u7684\u95ee\u9898 // \u540c\u65f6\u4fdd\u8bc1\u4e86\u6548\u7387 public static Singleton getInstance (){ if ( instance == null ){ synchronized ( Singleton . class ){ if ( instance == null ){ instance = new Singleton (); } } } return instance ; } } \u4f18\u7f3a\u70b9\u8bf4\u660e Double-Check \u6982\u5ff5\u662f\u591a\u7ebf\u7a0b\u5f00\u53d1\u4e2d\u5e38\u4f7f\u7528\u5230\u7684\uff0c\u5982\u4ee3\u7801\u4e2d\u6240\u793a\uff0c\u6211\u4eec\u8fdb\u884c\u4e86\u4e24\u6b21 if (singleton == null)\u68c0\u67e5\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u4e86\u3002 \u8fd9\u6837\uff0c\u5b9e\u4f8b\u5316\u4ee3\u7801\u53ea\u7528\u6267\u884c\u4e00\u6b21\uff0c\u540e\u9762\u518d\u6b21\u8bbf\u95ee\u65f6\uff0c\u5224\u65ad if (singleton == null)\uff0c\u76f4\u63a5 return \u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u4e5f\u907f\u514d\u7684\u53cd\u590d\u8fdb\u884c\u65b9\u6cd5\u540c\u6b65\u3002 \u7ebf\u7a0b\u5b89\u5168\uff0c\u5ef6\u8fdf\u52a0\u8f7d\uff0c\u6548\u7387\u8f83\u9ad8 \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\u3002 \uff087\uff09\u9759\u6001\u5185\u90e8\u7c7b \u00b6 \u4e0a\u8ff0\u65b9\u6cd5\u90fd\u662f\u4f5c\u7528\u4e8e\u65b9\u6cd5\u4e0a\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a\u5185\u90e8\u7c7b\u6765\u4f7f\u7528\u3002 //\u9759\u6001\u5185\u90e8\u7c7b\u5b8c\u6210\uff0c\u63a8\u8350\u4f7f\u7528 class Singleton { private Singleton (){} // \u5199\u4e00\u4e2a\u9759\u6001\u5185\u90e8\u7c7b\uff0c\u8be5\u7c7b\u6709\u4e00\u4e2a\u9759\u6001\u5c5e\u6027Singleton private static class SingletonInstance { private static final Singleton INSTANCE = new Singleton (); } // \u63d0\u4f9b\u4e00\u4e2a\u9759\u6001\u7684\u516c\u6709\u65b9\u6cd5\uff0c\u52a0\u5165\u53cc\u91cd\u68c0\u67e5\u7684\u4ee3\u7801\uff0c\u89e3\u51b3\u7ebf\u7a0b\u5b89\u5168\uff0c\u540c\u65f6\u89e3\u51b3\u61d2\u52a0\u8f7d\u7684\u95ee\u9898 // \u540c\u65f6\u4fdd\u8bc1\u4e86\u6548\u7387 public static Singleton getInstance (){ return SingletonInstance . INSTANCE ; } } \u4f18\u7f3a\u70b9\u8bf4\u660e \u8fd9\u79cd\u65b9\u5f0f\u91c7\u7528\u4e86\u7c7b\u88c5\u8f7d\u7684\u673a\u5236\u6765\u4fdd\u8bc1\u521d\u59cb\u5316\u5b9e\u4f8b\u65f6\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u3002 \u9759\u6001\u5185\u90e8\u7c7b\u65b9\u5f0f\u5728 Singleton \u7c7b\u88ab\u88c5\u8f7d\u65f6\u5e76\u4e0d\u4f1a\u7acb\u5373\u5b9e\u4f8b\u5316\uff0c\u800c\u662f\u5728\u9700\u8981\u5b9e\u4f8b\u5316\u65f6\uff0c\u8c03\u7528 getInstance \u65b9\u6cd5\uff0c\u624d\u4f1a\u88c5\u8f7d SingletonInstance \u7c7b\uff0c\u4ece\u800c\u5b8c\u6210 Singleton \u7684\u5b9e\u4f8b\u5316\u3002 \u7c7b\u7684\u9759\u6001\u5c5e\u6027\u53ea\u4f1a\u5728\u7b2c\u4e00\u6b21\u52a0\u8f7d\u7c7b\u7684\u65f6\u5019\u521d\u59cb\u5316\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\uff0cJVM \u5e2e\u52a9\u6211\u4eec\u4fdd\u8bc1\u4e86\u7ebf\u7a0b\u7684\u5b89\u5168\u6027\uff0c\u5728\u7c7b\u8fdb\u884c\u521d\u59cb\u5316\u65f6\uff0c\u522b\u7684\u7ebf\u7a0b\u662f\u65e0\u6cd5\u8fdb\u5165\u7684\u3002 \u4f18\u70b9\uff1a\u907f\u514d\u4e86\u7ebf\u7a0b\u4e0d\u5b89\u5168\uff0c\u5229\u7528\u9759\u6001\u5185\u90e8\u7c7b\u7279\u70b9\u5b9e\u73b0\u5ef6\u8fdf\u52a0\u8f7d\uff0c\u6548\u7387\u9ad8\u3002 \u5f00\u53d1\u4e2d\u63a8\u8350\u4f7f\u7528 \uff088\uff09\u679a\u4e3e \u00b6 \u901a\u8fc7\u679a\u4e3e\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5355\u4f8b package com.singleton.type8 ; public class Singleton8 { public static void main ( String [] args ) { Singleton instance1 = Singleton . INSTANCE ; Singleton instance2 = Singleton . INSTANCE ; System . out . println ( instance1 == instance2 ); System . out . println ( \"instance2.hashCode1=\" + instance1 . hashCode ()); System . out . println ( \"instance2.hashCode1=\" + instance2 . hashCode ()); instance1 . sayOK (); } } // \u4f7f\u7528\u679a\u4e3e enum Singleton { INSTANCE ; //\u5c5e\u6027 public void sayOK (){ System . out . println ( \"ok~\" ); } } \u4f18\u7f3a\u70b9\u8bf4\u660e\uff1a \u8fd9\u501f\u52a9 JDK1.5 \u4e2d\u6dfb\u52a0\u7684\u679a\u4e3e\u6765\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f\u3002\u4e0d\u4ec5\u80fd\u907f\u514d\u591a\u7ebf\u7a0b\u540c\u6b65\u95ee\u9898\uff0c\u800c\u4e14\u8fd8\u80fd\u9632\u6b62\u53cd\u5e8f\u5217\u5316\u91cd\u65b0\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\u3002 \u8fd9\u79cd\u65b9\u5f0f\u662f Effective Java \u4f5c\u8005 Josh Bloch \u63d0\u5021\u7684\u65b9\u5f0f \u7ed3\u8bba\uff1a\u63a8\u8350\u4f7f\u7528\u3002 3\u3001\u5355\u4f8b\u6a21\u5f0f\u6ce8\u610f\u4e8b\u9879\u548c\u7ec6\u8282\u8bf4\u660e \u00b6 \u5355\u4f8b\u6a21\u5f0f\u4fdd\u8bc1\u4e86 \u7cfb\u7edf\u5185\u5b58\u4e2d\u8be5\u7c7b\u53ea\u5b58\u5728\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8282\u7701\u4e86\u7cfb\u7edf\u8d44\u6e90\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u9700\u8981\u9891\u7e41\u521b\u5efa\u9500\u6bc1\u7684\u5bf9\u8c61\uff0c\u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\u53ef\u4ee5\u63d0\u9ad8\u7cfb\u7edf\u6027\u80fd\u3002\u5f53\u60f3\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5355\u4f8b\u7c7b\u7684\u65f6\u5019\uff0c\u5fc5\u987b\u8981\u8bb0\u4f4f\u4f7f\u7528\u76f8\u5e94\u7684\u83b7\u53d6\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 new\u3002 \u5355\u4f8b\u6a21\u5f0f\u4f7f\u7528\u7684\u573a\u666f\uff1a\u9700\u8981 \u9891\u7e41\u7684\u8fdb\u884c\u521b\u5efa\u548c\u9500\u6bc1\u7684\u5bf9\u8c61\u3001\u521b\u5efa\u5bf9\u8c61\u65f6\u8017\u65f6\u8fc7\u591a\u6216\u8017\u8d39\u8d44\u6e90\u8fc7\u591a (\u5373\uff1a\u91cd\u91cf\u7ea7\u5bf9\u8c61)\uff0c\u4f46\u53c8\u7ecf\u5e38\u7528\u5230\u7684\u5bf9\u8c61\u3001\u5de5\u5177\u7c7b\u5bf9\u8c61\u3001\u9891\u7e41\u8bbf\u95ee\u6570\u636e\u5e93\u6216\u6587\u4ef6\u7684\u5bf9\u8c61(\u6bd4\u5982\u6570\u636e\u6e90\u3001session\u5de5\u5382\u7b49)\u3002 \u4e94\u3001\u5de5\u5382\u6a21\u5f0f \u00b6 1\u3001\u95ee\u9898\u5f15\u5165 \u00b6 \u770b\u4e00\u4e2a\u62ab\u8428\u7684\u9879\u76ee\uff1a\u8981\u4fbf\u4e8e\u62ab\u8428\u79cd\u7c7b\u7684\u6269\u5c55\uff0c\u8981\u4fbf\u4e8e\u7ef4\u62a4\uff1a\uff081\uff09\u62ab\u8428\u7684\u79cd\u7c7b\u5f88\u591a(\u6bd4\u5982 GreekPizz\u3001CheesePizz\u7b49) \uff082\uff09\u62ab\u8428\u7684\u5236\u4f5c\u6709 prepare\uff0cbake, cut, box \uff083\uff09\u5b8c\u6210\u62ab\u8428\u5e97\u8ba2\u8d2d\u529f\u80fd\u3002 \u8003\u8651\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u9996\u5148\u4f7f\u7528\u4f20\u7edf\u7684\u65b9\u6cd5\uff1a\u521b\u5efa\u4e00\u4e2a\u62bd\u8c61\u7684Pizza\u7c7b\uff0c\u91cc\u9762\u5305\u542b\u4e86\u62ab\u8428\u5236\u4f5c\u7684\u901a\u7528\u65b9\u6cd5\uff08\u5305\u62ecprepare\u3001bake\u7b49\uff09\uff0c\u7136\u540e\u5404\u79cd\u4e0d\u540c\u79cd\u7c7b\u7684Pizza\u9700\u8981\u7ee7\u627f\u8be5\u62bd\u8c61\u7c7b\u7136\u540e\u5b9e\u73b0\u5176\u4e2d\u7684\u62bd\u8c61\u65b9\u6cd5\u3002\u6700\u7ec8\u901a\u8fc7OrderPizza\u5bf9\u4e0d\u540c\u7684Pizza\u8fdb\u884c\u8ba2\u8d2d\u3002 public OrderPizza (){ Pizza pizza = null ; String orderType ; //\u8ba2\u8d2d\u62ab\u8428\u7684\u7c7b\u578b do { orderType = gettype (); if ( orderType . equals ( \"greek\" )){ pizza = new GreekPizza (); pizza . setName ( \" \u5e0c\u814a\u62ab\u8428 \" ); } else if ( orderType . equals ( \"cheese\" )){ pizza = new CheesePizza (); pizza . setName ( \" \u5976\u916a\u62ab\u8428 \" ); } else if ( orderType . equals ( \"pepper\" )){ pizza = new PepperPizza (); pizza . setName ( \" \u80e1\u6912\u62ab\u8428 \" ); } else { break ; } // \u8f93\u51fapizza\u5236\u4f5c\u7684\u8fc7\u7a0b pizza . prepare (); pizza . bake (); pizza . cut (); pizza . box (); } while ( true ); } \u4f20\u7edf\u65b9\u6cd5\u7684\u4f18\u7f3a\u70b9\uff1a \uff081\uff09\u4f18\u70b9\u662f\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u7b80\u5355\u6613\u64cd\u4f5c\u3002\uff082\uff09 \u7f3a\u70b9\u662f \u8fdd\u53cd\u4e86\u8bbe\u8ba1\u6a21\u5f0f\u7684 ocp \u539f\u5219 \uff0c\u5373\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5173\u95ed\u3002\u5373\u5f53\u6211\u4eec\u7ed9\u7c7b\u589e\u52a0\u65b0\u529f\u80fd\u7684\u65f6\u5019\uff0c\u5c3d\u91cf\u4e0d\u4fee\u6539\u4ee3\u7801\uff0c\u6216\u8005\u5c3d\u53ef\u80fd\u5c11\u4fee\u6539\u4ee3\u7801\u3002\u6240\u4ee5\u5f53\u6211\u4eec\u9700\u8981\u65b0\u589e\u4e00\u4e2aPizza\u7c7b\u7684\u65f6\u5019\uff0c \u9700\u8981\u5728OrderPizza\u4e2d\u91cd\u65b0\u5199\u4e00\u6761if\u8bed\u53e5\u8fdb\u884c\u5224\u65ad\u3002 \u4e0b\u9762\u901a\u8fc7\u5de5\u5382\u6a21\u5f0f\u5bf9\u4e0a\u8ff0\u65b9\u6cd5\u8fdb\u884c\u6539\u8fdb\u3002 2\u3001\u7b80\u5355\u5de5\u5382\u6a21\u5f0f \u00b6 \u57fa\u672c\u4ecb\u7ecd \u00b6 \uff081\uff09\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u662f\u5c5e\u4e8e\u521b\u5efa\u578b\u6a21\u5f0f\uff0c\u662f\u5de5\u5382\u6a21\u5f0f\u7684\u4e00\u79cd\u3002 \u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u662f\u7531\u4e00\u4e2a\u5de5\u5382\u5bf9\u8c61\u51b3\u5b9a\u521b\u5efa\u51fa\u54ea\u4e00\u79cd\u4ea7\u54c1\u7c7b\u7684\u5b9e\u4f8b \u3002\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u662f\u5de5\u5382\u6a21\u5f0f\u5bb6\u65cf\u4e2d\u6700\u7b80\u5355\u5b9e\u7528\u7684\u6a21\u5f0f\u3002 \uff082\uff09\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\uff1a\u5b9a\u4e49\u4e86\u4e00\u4e2a\u521b\u5efa\u5bf9\u8c61\u7684\u7c7b\uff0c \u7531\u8fd9\u4e2a\u7c7b\u6765\u5c01\u88c5\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u884c\u4e3a(\u4ee3\u7801) \uff083\uff09 \u5728\u8f6f\u4ef6\u5f00\u53d1\u4e2d\uff0c\u5f53\u6211\u4eec\u4f1a\u7528\u5230\u5927\u91cf\u7684\u521b\u5efa\u67d0\u79cd\u3001\u67d0\u7c7b\u6216\u8005\u67d0\u6279\u5bf9\u8c61\u65f6\uff0c\u5c31\u4f1a\u4f7f\u7528\u5230\u5de5\u5382\u6a21\u5f0f\u3002 \u4f18\u5316\u4e0a\u9762\u7684\u5b9e\u4f8b \u00b6 \u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u7684\u8bbe\u8ba1\u65b9\u6848\uff1a\u5b9a\u4e49\u4e00\u4e2a\u53ef\u4ee5\u5b9e\u4f8b\u5316 Pizza \u5bf9\u8c61\u7684\u7c7b\uff0c\u5c01\u88c5\u521b\u5efa\u5bf9\u8c61\u7684\u4ee3\u7801\u3002\u6240\u4ee5\u521b\u5efa\u4e00\u4e2a SimplePizzaFactory \uff0c\u5728\u8fd9\u4e2a\u7c7b\u4e2d\u8fdb\u884c Pizza \u7684\u521b\u5efa\u3002 public class SimpleFactory { public Pizza createPizza ( String orderType ){ Pizza pizza = null ; System . out . println ( \"\u4f7f\u7528\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\" ); if ( orderType . equals ( \"greek\" )){ pizza = new GreekPizza (); pizza . setName ( \" \u5e0c\u814a\u62ab\u8428 \" ); } else if ( orderType . equals ( \"cheese\" )){ pizza = new CheesePizza (); pizza . setName ( \" \u5976\u916a\u62ab\u8428 \" ); } else if ( orderType . equals ( \"pepper\" )){ pizza = new PepperPizza (); pizza . setName ( \" \u80e1\u6912\u62ab\u8428 \" ); } return pizza ; } } \u8fd9\u4e2a \u7b80\u5355\u5de5\u5382\u7c7b \u7528\u6765\u521b\u5efaPizza\uff0c\u5728 OrderPizza \u8fdb\u884c\u8c03\u7528\u8fd9\u4e2a\u7c7b\u4e2d\u7684\u65b9\u6cd5\u6765\u521b\u5efa\u76f8\u5e94\u7684Pizza\u3002 3\u3001\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f \u00b6 \u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u7684\u4e0d\u8db3 \u00b6 \u62ab\u8428\u9879\u76ee\u65b0\u7684\u9700\u6c42\uff1a\u5ba2\u6237\u5728\u70b9\u62ab\u8428\u65f6\uff0c\u53ef\u4ee5\u70b9\u4e0d\u540c\u53e3\u5473\u7684\u62ab\u8428\uff0c\u6bd4\u5982 \u5317\u4eac\u7684\u5976\u916a pizza\u3001\u5317\u4eac\u7684\u80e1\u6912pizza\u6216\u8005\u662f\u4f26\u6566\u7684\u5976\u916a pizza\u3001\u4f26\u6566\u7684\u80e1\u6912pizza\u3002 \u89e3\u51b3\u65b9\u6cd5\uff1a\u4f7f\u7528\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\uff0c\u521b\u5efa\u4e0d\u540c\u7684\u7b80\u5355\u5de5\u5382\u7c7b\uff0c\u6bd4\u5982 BJPizzaSimpleFactory\u3001LDPizzaSimpleFactory \u7b49\u7b49.\u4ece\u5f53\u524d \u8fd9\u4e2a\u6848\u4f8b\u6765\u8bf4\uff0c\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u8003\u8651\u5230\u9879\u76ee\u7684\u89c4\u6a21\uff0c\u4ee5\u53ca\u8f6f\u4ef6\u7684\u53ef\u7ef4\u62a4\u6027\u3001\u53ef\u6269\u5c55\u6027\u5e76\u4e0d\u662f\u7279\u522b\u597d\u3002\u4e0b\u9762\u4ecb\u7ecd\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u3002 \u7b80\u5355\u4ecb\u7ecd \u00b6 \u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u8bbe\u8ba1\u65b9\u6848\uff1a\u5c06\u62ab\u8428\u9879\u76ee\u7684\u5b9e\u4f8b\u5316\u529f\u80fd\u62bd\u8c61\u6210\u62bd\u8c61\u65b9\u6cd5\uff0c\u5728\u4e0d\u540c\u7684\u53e3\u5473\u70b9\u9910\u5b50\u7c7b\u4e2d\u5177\u4f53\u5b9e\u73b0\u3002\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\uff1a\u5b9a\u4e49\u4e86\u4e00\u4e2a\u521b\u5efa\u5bf9\u8c61\u7684\u62bd\u8c61\u65b9\u6cd5\uff0c\u7531\u5b50\u7c7b\u51b3\u5b9a\u8981\u5b9e\u4f8b\u5316\u7684\u7c7b\u3002 \u5de5\u5382\u65b9 \u6cd5\u6a21\u5f0f\u5c06\u5bf9\u8c61\u7684\u5b9e\u4f8b\u5316\u63a8\u8fdf\u5230\u5b50\u7c7b\u3002 public abstract class OrderPizza { // \u5b9a\u4e49\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\uff0c\u8ba9\u5404\u4e2a\u5de5\u5382\u5b50\u7c7b\u81ea\u5df1\u5b9e\u73b0 abstract Pizza createPizza ( String orderType ); public OrderPizza (){ Pizza pizza = null ; String orderType ; //\u8ba2\u8d2d\u62ab\u8428\u7684\u7c7b\u578b do { orderType = gettype (); pizza = createPizza ( orderType ); // \u8f93\u51fapizza\u5236\u4f5c\u7684\u8fc7\u7a0b pizza . prepare (); pizza . bake (); pizza . cut (); pizza . box (); } while ( true ); } private String gettype (){ try { BufferedReader strin = new BufferedReader ( new InputStreamReader ( System . in )); System . out . println ( \"input pizza type\" ); String str = strin . readLine (); return str ; } catch ( IOException e ){ e . printStackTrace (); return \"\" ; } } } \u8fd9\u4e2a OrderPizza \u7c7b\u4e0e\u4e0a\u9762\u4e0d\u540c\u7684\u662f\uff0c\u591a\u4e86\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5 createPizza \uff0c\u5e76\u5728\u5b50\u7c7b\u4e2d\u5b9e\u73b0\u8be5\u62bd\u8c61\u65b9\u6cd5\uff0c\u4f8b\u5982\u4e0b\u5217\u7684\u5317\u4eacPizza\u7684\u5b9e\u73b0\u7c7b\u3002 public class BJOrderPizza extends OrderPizza { @Override Pizza createPizza ( String orderType ) { Pizza pizza = null ; if ( orderType . equals ( \"cheese\" )){ pizza = new BJCheesePizza (); } else if ( orderType . equals ( \"pepper\" )){ pizza = new BJPepperPizza (); } return pizza ; } } \u5728\u5b9e\u73b0\u7c7b\u4e2d\u5b9e\u73b0\u5177\u4f53\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u8fdb\u884c\u8d2d\u4e70BJOrderPizza\uff0ccheeses\u53e3\u5473\u7684\u548cpepper\u53e3\u5473\u7684\u3002 4\u3001\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f \u00b6 \u57fa\u672c\u4ecb\u7ecd \u00b6 1) \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\uff1a\u5b9a\u4e49\u4e86\u4e00\u4e2a interface \u7528\u4e8e\u521b\u5efa\u76f8\u5173\u6216\u6709\u4f9d\u8d56\u5173\u7cfb\u7684\u5bf9\u8c61\u7c07\uff0c\u800c\u65e0\u9700\u6307\u660e\u5177\u4f53\u7684\u7c7b 2) \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u53ef\u4ee5\u5c06 \u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u548c\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u8fdb\u884c\u6574\u5408 \u3002 3) \u4ece\u8bbe\u8ba1\u5c42\u9762\u770b\uff0c \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u5c31\u662f\u5bf9\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u7684\u6539\u8fdb (\u6216\u8005\u79f0\u4e3a\u8fdb\u4e00\u6b65\u7684\u62bd\u8c61)\u3002 4) \u5c06\u5de5\u5382\u62bd\u8c61\u6210\u4e24\u5c42\uff0c AbsFactory(\u62bd\u8c61\u5de5\u5382) \u548c \u5177\u4f53\u5b9e\u73b0\u7684\u5de5\u5382\u5b50\u7c7b \u3002\u7a0b\u5e8f\u5458\u53ef\u4ee5\u6839\u636e\u521b\u5efa\u5bf9\u8c61\u7c7b\u578b\u4f7f\u7528\u5bf9\u5e94\u7684\u5de5\u5382\u5b50\u7c7b\u3002\u8fd9\u6837\u5c06\u5355\u4e2a\u7684\u7b80\u5355\u5de5\u5382\u7c7b\u53d8\u6210\u4e86\u5de5\u5382\u7c07\uff0c\u66f4\u5229\u4e8e\u4ee3\u7801\u7684\u7ef4\u62a4\u548c\u6269\u5c55\u3002 \u4ee3\u7801\u793a\u4f8b \u00b6 \u5bf9\u4e0a\u8ff0\u4ee3\u7801\u7684\u4e00\u4e9b\u4fee\u6539 // \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u7684\u62bd\u8c61\u5c42 public interface AbsFactory { // \u8ba9\u4e0b\u9762\u7684\u5de5\u5382\u5b50\u7c7b\u5177\u4f53\u5b9e\u73b0 public Pizza createPizza ( String orderType ); } \u6240\u6709\u7684\u5de5\u5382\u5b50\u7c7b\u90fd\u9700\u8981\u7ee7\u627f\u8be5\u62bd\u8c61\u7c7b\uff0c\u4e0b\u9762\u4e3e\u4e00\u4e2a BJFactory \u7684\u5b9e\u73b0\u4f8b\u5b50\u3002 public class BJFactory implements AbsFactory { @Override public Pizza createPizza ( String orderType ) { System . out . println ( \"\u4f7f\u7528\u7684\u662f\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\" ); Pizza pizza = null ; if ( orderType . equals ( \"cheese\" )){ pizza = new BJCheesePizza (); } else if ( orderType . equals ( \"pepper\" )){ pizza = new BJPepperPizza (); } return pizza ; } } \u5728\u8fd9\u4e2a\u5de5\u5382\u5b50\u7c7b\u4e2d\uff0c\u7ee7\u627f\u6700\u4e0a\u5c42\u7684\u5de5\u5382\u7c7b\uff0c\u5b9e\u73b0\u4e86\u5176\u4e2d\u7684\u62bd\u8c61\u65b9\u6cd5\uff0c\u6700\u540e\u662f\u8fdb\u884c\u8ba2\u8d2d\u7684\u65b9\u6cd5\uff0c public class OrderPizza { AbsFactory factory ; public OrderPizza ( AbsFactory factory ){ setFactory ( factory ); } private void setFactory ( AbsFactory factory ){ Pizza pizza = null ; String orderType = \"\" ; //\u7528\u6237\u8f93\u5165 this . factory = factory ; do { orderType = gettype (); pizza = factory . createPizza ( orderType ); if ( pizza != null ){ pizza . prepare (); pizza . bake (); pizza . cut (); pizza . box (); } else { System . out . println ( \"\u8ba2\u8d2d\u5931\u8d25\" ); break ; } } while ( true ); } } \u6700\u7ec8\u901a\u8fc7 new OrderPizza(new BJFactory()); \u5c31\u53ef\u4ee5\u5b8c\u6210\u5bf9BJPizza\u7684\u8ba2\u8d2d\u3002 \u516d\u3001\u539f\u578b\u6a21\u5f0f \u00b6 1\u3001\u95ee\u9898\u5f15\u5165 \u00b6 \u73b0\u5728\u6709\u4e00\u53ea\u7f8a tom\uff0c\u59d3\u540d\u4e3a: tom, \u5e74\u9f84\u4e3a\uff1a1\uff0c\u989c\u8272\u4e3a\uff1a\u767d\u8272\uff0c\u8bf7\u7f16\u5199\u7a0b\u5e8f\u521b\u5efa\u548c tom \u7f8a \u5c5e\u6027\u5b8c\u5168\u76f8\u540c\u7684 10\u53ea\u7f8a\u3002 2\u3001\u4f20\u7edf\u65b9\u6cd5\u89e3\u51b3 \u00b6 \u7528 Sheep \u7684get\u548cset\u65b9\u6cd5\u8fdb\u884c\u5bf9\u8c61\u7684\u590d\u5236\uff0c\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a Sheep sheep = new Sheep ( \"tom\" , 1 , \"\u767d\u8272\" ); Sheep sheep2 = new Sheep ( sheep . getName (), sheep . getAge (), sheep . getColor ()); Sheep sheep3 = new Sheep ( sheep . getName (), sheep . getAge (), sheep . getColor ()); Sheep sheep4 = new Sheep ( sheep . getName (), sheep . getAge (), sheep . getColor ()); Sheep sheep5 = new Sheep ( sheep . getName (), sheep . getAge (), sheep . getColor ()); \u4f20\u7edf\u65b9\u5f0f\u7684\u4f18\u7f3a\u70b9\uff1a \u4f18\u70b9\u662f\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u7b80\u5355\u6613\u64cd\u4f5c\u3002 \u5728\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\u65f6\uff0c\u603b\u662f\u9700\u8981\u91cd\u65b0\u83b7\u53d6\u539f\u59cb\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u5982\u679c\u521b\u5efa\u7684\u5bf9\u8c61\u6bd4\u8f83\u590d\u6742\u65f6\uff0c\u6548\u7387\u8f83\u4f4e\u3002 \u603b\u662f\u9700\u8981\u91cd\u65b0\u521d\u59cb\u5316\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u52a8\u6001\u5730\u83b7\u5f97\u5bf9\u8c61\u8fd0\u884c\u65f6\u7684\u72b6\u6001, \u4e0d\u591f\u7075\u6d3b\u3002 \u539f\u578b\u6a21\u5f0f \u00b6 Java \u4e2d Object \u7c7b\u662f\u6240\u6709\u7c7b\u7684\u6839\u7c7b\uff0cObject\u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2aclone()\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u53ef\u4ee5\u5c06\u4e00\u4e2a Java \u5bf9\u8c61\u590d\u5236\u4e00\u4efd\uff0c\u4f46\u662f\u9700\u8981\u5b9e\u73b0 clone \u7684 Java \u7c7b\u5fc5\u987b\u8981 \u5b9e\u73b0\u4e00\u4e2a\u63a5\u53e3Cloneable \uff0c\u8be5\u63a5\u53e3\u8868\u793a\u8be5\u7c7b\u80fd\u591f\u590d\u5236\u4e14\u5177\u6709\u590d\u5236\u7684\u80fd\u529b => \u539f\u578b\u6a21\u5f0f\u3002 \u539f\u578b\u6a21\u5f0f(Prototype \u6a21\u5f0f)\u662f\u6307\uff1a\u7528\u539f\u578b\u5b9e\u4f8b\u6307\u5b9a\u521b\u5efa\u5bf9\u8c61\u7684\u79cd\u7c7b\uff0c\u5e76\u4e14\u901a\u8fc7\u62f7\u8d1d\u8fd9\u4e9b\u539f\u578b\uff0c\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\u3002\u539f\u578b\u6a21\u5f0f\u662f\u4e00\u79cd\u521b\u5efa\u578b\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5141\u8bb8\u4e00\u4e2a\u5bf9\u8c61\u518d\u521b\u5efa\u53e6\u5916\u4e00\u4e2a\u53ef\u5b9a\u5236\u7684\u5bf9\u8c61\uff0c\u65e0\u9700\u77e5\u9053\u5982\u4f55\u521b\u5efa\u7684\u7ec6\u8282\u3002\u5de5\u4f5c\u539f\u7406\u662f:\u901a\u8fc7\u5c06\u4e00\u4e2a\u539f\u578b\u5bf9\u8c61\u4f20\u7ed9\u90a3\u4e2a\u8981\u53d1\u52a8\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u8981\u53d1\u52a8\u521b\u5efa\u7684\u5bf9\u8c61\u901a\u8fc7\u8bf7\u6c42\u539f\u578b\u5bf9\u8c61\u62f7\u8d1d\u5b83\u4eec\u81ea\u5df1\u6765\u5b9e\u65bd\u521b\u5efa\uff0c\u5373 \u5bf9\u8c61.clone()\u3002 public class Sheep implements Cloneable { private String name ; private int age ; private String color ; public Sheep friend ; //\u666e\u901a\u5bf9\u8c61\uff0c\u514b\u9686\u65f6\u5019\u5982\u4f55\u5904\u7406\uff0c\u9ed8\u8ba4\u662f\u6d45\u62f7\u8d1d public Sheep () { } public Sheep ( String name , int age , String color ) { this . name = name ; this . age = age ; this . color = color ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getAge () { return age ; } public void setAge ( int age ) { this . age = age ; } public String getColor () { return color ; } public void setColor ( String color ) { this . color = color ; } @Override public String toString () { return \"Sheep [name=\" + name + \", age=\" + age + \", color=\" + color + \"]\" ; } // \u514b\u9686\u8be5\u5b9e\u4f8b\uff0c\u4f7f\u7528\u9ed8\u8ba4\u7684clone\u65b9\u6cd5 @Override protected Object clone (){ Sheep sheep = null ; try { sheep = ( Sheep ) super . clone (); } catch ( Exception e ){ System . out . println ( e . getMessage ()); } return sheep ; } } \u4e0a\u8ff0\u4ee3\u7801\u662f\u6539\u8fdb\u7684 Sheep \u5bf9\u8c61\uff0c\u4e3b\u8981\u662f\u589e\u52a0\u4e86\u4e00\u4e2aclone\u65b9\u6cd5\uff0c\u5177\u4f53\u5982\u4f55\u5b9e\u73b0\u514b\u9686\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u7684\u793a\u4f8b\uff1a Sheep sheep = new Sheep ( \"tom\" , 1 , \"\u767d\u8272\" ); sheep . friend = new Sheep ( \"jack\" , 2 , \"\u9ed1\u8272\" ); Sheep sheep2 = ( Sheep ) sheep . clone (); Sheep sheep3 = ( Sheep ) sheep . clone (); Sheep sheep4 = ( Sheep ) sheep . clone (); Sheep sheep5 = ( Sheep ) sheep . clone (); \u6d45\u62f7\u8d1d\u548c\u6df1\u62f7\u8d1d\u7684\u8ba8\u8bba \u00b6 \u6d45\u62f7\u8d1d\u7684\u4ecb\u7ecd \u00b6 \u5bf9\u4e8e\u6570\u636e\u7c7b\u578b\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u6d45\u62f7\u8d1d\u4f1a\u76f4\u63a5\u8fdb\u884c\u503c\u4f20\u9012\uff0c\u4e5f\u5c31\u662f\u5c06\u8be5\u5c5e\u6027\u503c\u590d\u5236\u4e00\u4efd\u7ed9\u65b0\u7684\u5bf9\u8c61\u3002 \u5bf9\u4e8e\u6570\u636e\u7c7b\u578b\u662f\u5f15\u7528\u6570\u636e\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u6bd4\u5982\u8bf4\u6210\u5458\u53d8\u91cf\u662f\u67d0\u4e2a\u6570\u7ec4\u3001\u67d0\u4e2a\u7c7b\u7684\u5bf9\u8c61\u7b49\uff0c\u90a3\u4e48 \u6d45\u62f7\u8d1d\u4f1a\u8fdb\u884c \u5f15\u7528\u4f20\u9012\uff0c\u4e5f\u5c31\u662f\u53ea\u662f\u5c06\u8be5\u6210\u5458\u53d8\u91cf\u7684\u5f15\u7528\u503c\uff08\u5185\u5b58\u5730\u5740\uff09\u590d\u5236\u4e00\u4efd\u7ed9\u65b0\u7684\u5bf9\u8c61 \u3002\u56e0\u4e3a\u5b9e\u9645\u4e0a\u4e24\u4e2a\u5bf9\u8c61\u7684\u8be5\u6210\u5458\u53d8\u91cf\u90fd\u6307\u5411\u540c\u4e00\u4e2a\u5b9e\u4f8b\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5728\u4e00\u4e2a\u5bf9\u8c61\u4e2d\u4fee\u6539\u8be5\u6210\u5458\u53d8\u91cf\u4f1a\u5f71\u54cd\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\u7684\u8be5\u6210\u5458\u53d8\u91cf\u503c\u3002 \u524d\u9762\u6211\u4eec\u514b\u9686\u7f8a\u5c31\u662f\u6d45\u62f7\u8d1d \u6d45\u62f7\u8d1d\u662f\u4f7f\u7528\u9ed8\u8ba4\u7684 clone()\u65b9\u6cd5\u6765\u5b9e\u73b0\u3002sheep = (Sheep) super.clone(); \u6df1\u62f7\u8d1d\u4ecb\u7ecd \u00b6 \u590d\u5236\u5bf9\u8c61\u7684\u6240\u6709\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\u503c\u3002\u4e3a\u6240\u6709\u5f15\u7528\u6570\u636e\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\u7533\u8bf7\u5b58\u50a8\u7a7a\u95f4\uff0c\u5e76\u590d\u5236\u6bcf\u4e2a\u5f15\u7528\u6570\u636e\u7c7b\u578b\u6210\u5458\u53d8\u91cf\u6240\u5f15\u7528\u7684\u5bf9\u8c61\uff0c\u76f4\u5230\u8be5\u5bf9\u8c61 \u53ef\u8fbe\u7684\u6240\u6709\u5bf9\u8c61\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c \u5bf9\u8c61\u8fdb\u884c\u6df1\u62f7\u8d1d\u8981\u5bf9\u6574\u4e2a\u5bf9\u8c61(\u5305\u62ec\u5bf9\u8c61\u7684\u5f15\u7528\u7c7b\u578b)\u8fdb\u884c\u62f7\u8d1d \u3002 * \u6df1\u62f7\u8d1d\u5b9e\u73b0\u65b9\u5f0f 1\uff1a\u91cd\u5199 clone \u65b9\u6cd5\u6765\u5b9e\u73b0\u6df1\u62f7\u8d1d\u3002 * \u6df1\u62f7\u8d1d\u5b9e\u73b0\u65b9\u5f0f 2\uff1a\u901a\u8fc7\u5bf9\u8c61\u5e8f\u5217\u5316\u5b9e\u73b0\u6df1\u62f7\u8d1d(\u63a8\u8350) \u9996\u5148\u662f\u7b2c\u4e00\u79cd\u65b9\u5f0f\uff0c\u91cd\u5199clone\u65b9\u6cd5\u6765\u8fdb\u884c\u6df1\u62f7\u8d1d\u3002 public class DeepProtoType implements Serializable , Cloneable { public String name ; public DeepCloneableTarget deepCloneableTarget ; //\u5f15\u7528\u7c7b\u578b public DeepProtoType () { } // \u5b8c\u6210\u6df1\u62f7\u8d1d 1\u3001\u4f7f\u7528clone\u65b9\u6cd5 @Override protected Object clone () throws CloneNotSupportedException { Object deep = null ; //\u8fd9\u91cc\u5b8c\u6210\u5bf9\u57fa\u672c\u5c5e\u6027\u548cString\u7684\u514b\u9686 deep = super . clone (); //\u5bf9\u5f15\u7528\u6570\u636e\u7c7b\u578b\u7684\u5c5e\u6027\uff0c\u8fdb\u884c\u5355\u72ec\u5904\u7406 DeepProtoType deepProtoType = ( DeepProtoType ) deep ; deepProtoType . deepCloneableTarget = ( DeepCloneableTarget ) deepCloneableTarget . clone (); return deepProtoType ; } } \u8fd9\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u5c06\u7c7b\u4e2d\u7684\u5c5e\u6027\u518d\u5229\u7528clone\u65b9\u6cd5\u8fdb\u884c\u590d\u5236\u514b\u9686\uff0c\u4f46\u662f\u66f4\u63a8\u8350\u4f7f\u7528\u4e0b\u5217\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u4f7f\u7528\u5e8f\u5217\u5316\u7684\u65b9\u6cd5\u3002 // \u5b8c\u6210\u6df1\u62f7\u8d1d 2\u3001\u901a\u8fc7\u5bf9\u8c61\u5e8f\u5217\u5316\u65b9\u6cd5 public Object deepClone (){ //\u521b\u5efa\u6d41\u5bf9\u8c61 ByteArrayOutputStream bos = null ; ObjectOutputStream oos = null ; ByteArrayInputStream bis = null ; ObjectInputStream ois = null ; try { bos = new ByteArrayOutputStream (); oos = new ObjectOutputStream ( bos ); oos . writeObject ( this ); //\u5f53\u524d\u8fd9\u4e2a\u5bf9\u8c61\u4ee5\u5bf9\u8c61\u6d41\u7684\u65b9\u5f0f\u8f93\u51fa // \u53cd\u5e8f\u5217\u5316 bis = new ByteArrayInputStream ( bos . toByteArray ()); ois = new ObjectInputStream ( bis ); DeepProtoType copyObj = ( DeepProtoType ) ois . readObject (); return copyObj ; } catch ( Exception e ) { e . printStackTrace (); return null ; } \u4e00\u822c\u63a8\u8350\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff08\u867d\u7136\u6211\u81ea\u5df1\u4e2a\u4eba\u5bf9\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u6ca1\u6709\u7279\u522b\u900f\u5f7b\u7684\u7406\u89e3\uff09\uff0c\u7b2c\u4e00\u79cd\u65b9\u5f0f\u7684\u65b9\u6cd5\u5982\u679c\u5b58\u5728\u591a\u4e2a\u5f15\u7528\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u5904\u7406\u8d77\u6765\u4f1a\u8f83\u4e3a\u9ebb\u70e6\u3002 \u539f\u578b\u6a21\u5f0f\u7684\u7ec6\u8282 \u00b6 \uff081\uff09\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\u6bd4\u8f83\u590d\u6742\u65f6\uff0c\u53ef\u4ee5\u5229\u7528\u539f\u578b\u6a21\u5f0f\u7b80\u5316\u5bf9\u8c61\u7684\u521b\u5efa\u8fc7\u7a0b\uff0c\u540c\u65f6\u4e5f\u80fd\u591f\u63d0\u9ad8\u6548\u7387 \uff082\uff09 \u4e0d\u7528\u91cd\u65b0\u521d\u59cb\u5316\u5bf9\u8c61\uff0c\u800c\u662f\u52a8\u6001\u5730\u83b7\u5f97\u5bf9\u8c61\u8fd0\u884c\u65f6\u7684\u72b6\u6001 \uff083\uff09\u5982\u679c\u539f\u59cb\u5bf9\u8c61\u53d1\u751f\u53d8\u5316(\u589e\u52a0\u6216\u8005\u51cf\u5c11\u5c5e\u6027)\uff0c\u5176\u5b83\u514b\u9686\u5bf9\u8c61\u7684\u4e5f\u4f1a\u53d1\u751f\u76f8\u5e94\u7684\u53d8\u5316\uff0c\u65e0\u9700\u4fee\u6539\u4ee3\u7801 \uff084\uff09 \u5728\u5b9e\u73b0\u6df1\u514b\u9686\u7684\u65f6\u5019\u53ef\u80fd\u9700\u8981\u6bd4\u8f83\u590d\u6742\u7684\u4ee3\u7801 \uff085\uff09 \u7f3a\u70b9\uff1a\u9700\u8981\u4e3a\u6bcf\u4e00\u4e2a\u7c7b\u914d\u5907\u4e00\u4e2a\u514b\u9686\u65b9\u6cd5\uff0c\u8fd9\u5bf9\u5168\u65b0\u7684\u7c7b\u6765\u8bf4\u4e0d\u662f\u5f88\u96be\uff0c\u4f46\u5bf9\u5df2\u6709\u7684\u7c7b\u8fdb\u884c\u6539\u9020\u65f6\uff0c\u9700\u8981\u4fee\u6539\u5176\u6e90\u4ee3\u7801\uff0c\u8fdd\u80cc\u4e86 ocp \u539f\u5219\uff0c\u8fd9\u70b9\u8bf7\u540c\u5b66\u4eec\u6ce8\u610f. \u4e03\u3001\u5efa\u9020\u8005\u6a21\u5f0f \u00b6 \u95ee\u9898\u5f15\u5165 \u00b6 \u9700\u8981\u5efa\u623f\u5b50\uff1a\u8fd9\u4e00\u8fc7\u7a0b\u4e3a\u6253\u6869\u3001\u780c\u5899\u3001\u5c01\u9876\u3002\u623f\u5b50\u6709\u5404\u79cd\u5404\u6837\u7684\uff0c\u6bd4\u5982\u666e\u901a\u623f\uff0c\u9ad8\u697c\uff0c\u522b\u5885\uff0c\u5404\u79cd\u623f\u5b50\u7684\u8fc7\u7a0b\u867d\u7136\u4e00\u6837\uff0c\u4f46\u662f\u8981\u6c42\u4e0d\u8981\u76f8\u540c\u7684\u3002 \u4f20\u7edf\u65b9\u5f0f\u89e3\u51b3 \u00b6 \u4f20\u7edf\u65b9\u5f0f\u89e3\u51b3\u8f83\u4e3a\u7b80\u5355\uff0c\u901a\u8fc7\u5efa\u7acb\u4e00\u4e2a\u62bd\u8c61\u7684\u623f\u5b50\u7c7b\uff0c\u91cc\u9762\u5305\u542b\u4e86\u5efa\u623f\u5b50\u7684\u8fc7\u7a0b\uff1a\u6253\u6869\u3001\u780c\u5899\u3001\u5c01\u9876\u7684\u62bd\u8c61\u65b9\u6cd5\u3002\u7136\u540e\u4e0d\u540c\u7684\u623f\u5b50\u5b9e\u73b0\u5176\u4e2d\u7684\u65b9\u6cd5\u3002 public abstract class AbstractHouse { // \u6253\u5730\u57fa public abstract void buildBasic (); // \u780c\u5899 public abstract void buildWalls (); //\u5c01\u9876 public abstract void roofed (); public void build (){ buildBasic (); buildWalls (); roofed (); } } \u666e\u901a\u623f\u5b50\u5b9e\u73b0\u8fd9\u4e2a\u62bd\u8c61\u7684\u65b9\u6cd5\uff0c\u7136\u540e\u5efa\u9020\u666e\u901a\u623f\u5b50\u5c31\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u8fd9\u4e2a\u666e\u901a\u623f\u5b50\u7684\u7c7b\u5c31\u53ef\u4ee5\u4e86\u3002 public class CommonHouse extends AbstractHouse { @Override public void buildBasic () { System . out . println ( \"\u7ed9\u666e\u901a\u623f\u5b50\u6253\u5730\u57fa\" ); } @Override public void buildWalls () { System . out . println ( \"\u7ed9\u666e\u901a\u623f\u5b50\u780c\u5899\" ); } @Override public void roofed () { System . out . println ( \"\u7ed9\u666e\u901a\u623f\u5b50\u5c01\u9876\" ); } } \u4f20\u7edf\u65b9\u6cd5\u4f18\u70b9\u662f\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u7b80\u5355\u6613\u64cd\u4f5c\u3002 \u8bbe\u8ba1\u7684\u7a0b\u5e8f\u7ed3\u6784\uff0c\u8fc7\u4e8e\u7b80\u5355\uff0c\u6ca1\u6709\u8bbe\u8ba1\u7f13\u5b58\u5c42\u5bf9\u8c61\uff0c\u7a0b\u5e8f\u7684\u6269\u5c55\u548c\u7ef4\u62a4\u4e0d\u597d. \u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u65b9\u6848\uff0c\u628a\u4ea7\u54c1(\u5373\uff1a\u623f\u5b50) \u548c \u521b\u5efa\u4ea7\u54c1\u7684\u8fc7\u7a0b(\u5373\uff1a\u5efa\u623f\u5b50\u6d41\u7a0b) \u5c01\u88c5\u5728\u4e00\u8d77\uff0c\u8026\u5408\u6027\u589e\u5f3a\u4e86\u3002 \u5efa\u9020\u8005\u6a21\u5f0f\u4ecb\u7ecd \u00b6 \u57fa\u672c\u4ecb\u7ecd \u00b6 \u5efa\u9020\u8005\u6a21\u5f0f\uff08Builder Pattern\uff09 \u53c8\u53eb\u751f\u6210\u5668\u6a21\u5f0f\uff0c\u662f\u4e00\u79cd\u5bf9\u8c61\u6784\u5efa\u6a21\u5f0f\u3002\u5b83\u53ef\u4ee5\u5c06\u590d\u6742\u5bf9\u8c61\u7684\u5efa\u9020\u8fc7\u7a0b\u62bd\u8c61\u51fa\u6765\uff08\u62bd\u8c61\u7c7b\u522b\uff09\uff0c\u4f7f\u8fd9\u4e2a\u62bd\u8c61\u8fc7\u7a0b\u7684\u4e0d\u540c\u5b9e\u73b0\u65b9\u6cd5\u53ef\u4ee5\u6784\u9020\u51fa\u4e0d\u540c\u8868\u73b0\uff08\u5c5e\u6027\uff09\u7684\u5bf9\u8c61\u3002 \u5efa\u9020\u8005\u6a21\u5f0f \u662f\u4e00\u6b65\u4e00\u6b65\u521b\u5efa\u4e00\u4e2a\u590d\u6742\u7684\u5bf9\u8c61\uff0c\u5b83\u5141\u8bb8\u7528\u6237\u53ea\u901a\u8fc7\u6307\u5b9a\u590d\u6742\u5bf9\u8c61\u7684\u7c7b\u578b\u548c\u5185\u5bb9\u5c31\u53ef\u4ee5\u6784\u5efa\u5b83\u4eec\uff0c \u7528\u6237\u4e0d\u9700\u8981\u77e5\u9053\u5185\u90e8\u7684\u5177\u4f53\u6784\u5efa\u7ec6\u8282\u3002\u6709\u56db\u4e2a\u89d2\u8272\uff1a Product\uff08\u4ea7\u54c1\u89d2\u8272\uff09\uff1a \u4e00\u4e2a\u5177\u4f53\u7684\u4ea7\u54c1\u5bf9\u8c61\u3002 Builder\uff08\u62bd\u8c61\u5efa\u9020\u8005\uff09\uff1a \u521b\u5efa\u4e00\u4e2a Product \u5bf9\u8c61\u7684\u5404\u4e2a\u90e8\u4ef6\u6307\u5b9a\u7684 \u63a5\u53e3/\u62bd\u8c61\u7c7b\u3002 ConcreteBuilder\uff08\u5177\u4f53\u5efa\u9020\u8005\uff09\uff1a \u5b9e\u73b0\u63a5\u53e3\uff0c\u6784\u5efa\u548c\u88c5\u914d\u5404\u4e2a\u90e8\u4ef6\u3002 Director\uff08\u6307\u6325\u8005\uff09\uff1a \u6784\u5efa\u4e00\u4e2a\u4f7f\u7528 Builder \u63a5\u53e3\u7684\u5bf9\u8c61\u3002\u5b83\u4e3b\u8981\u662f\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u590d\u6742\u7684\u5bf9\u8c61\u3002\u5b83\u4e3b\u8981\u6709\u4e24\u4e2a\u4f5c\u7528\uff0c\u4e00\u662f\uff1a\u9694\u79bb\u4e86\u5ba2\u6237\u4e0e\u5bf9\u8c61\u7684\u751f\u4ea7\u8fc7\u7a0b\uff0c\u4e8c\u662f\uff1a\u8d1f\u8d23\u63a7\u5236\u4ea7\u54c1\u5bf9\u8c61\u7684\u751f\u4ea7\u8fc7\u7a0b\u3002 \u62bd\u8c61\u7684\u5efa\u9020\u8005\u4ee3\u7801\uff1a public abstract class HouseBuilder { protected House house = new House (); // \u5c06\u5236\u4f5c\u7684\u6d41\u7a0b\u5199\u597d\uff0c\u62bd\u8c61\u7684\u65b9\u6cd5 // \u6253\u5730\u57fa public abstract void buildBasic (); // \u780c\u5899 public abstract void buildWalls (); //\u5c01\u9876 public abstract void roofed (); // \u5efa\u9020\u597d\u623f\u5b50\uff0c\u5c06\u623f\u5b50\u8fd4\u56de public House buildHouse (){ return house ; } } \u5c06\u5236\u4f5c\u7684\u6d41\u7a0b\u5199\u6210\u62bd\u8c61\u7684\u65b9\u6cd5\uff0c\u5e76\u5c06\u5efa\u597d\u7684\u623f\u5b50\u8fd4\u56de\u3002\u7136\u540e\u5177\u4f53\u7684\u623f\u5b50\u5efa\u9020\u7684\u7ec6\u8282\u9700\u8981\u7531\u5b9e\u73b0\u7684\u5b50\u7c7b\u5b9e\u73b0\uff0c\u6bd4\u5982\u6211\u8981\u5efa\u9020\u9ad8\u697c\uff0c\u8981\u7528\u4e00\u4e2a\u9ad8\u697c\u7684\u5b9e\u73b0\u7c7b\u6765\u7ee7\u627f\u8be5\u7c7b\uff0c\u4f8b\u5982\u4e0b\u9762\u7684 HighBuild \u7c7b public class HighBuilding extends HouseBuilder { @Override public void buildBasic () { System . out . println ( \"\u9ad8\u697c\u6253\u5730\u57fa100\u7c73\" ); } @Override public void buildWalls () { System . out . println ( \"\u9ad8\u697c\u780c\u589920cm\" ); } @Override public void roofed () { System . out . println ( \"\u9ad8\u697c\u7684\u5c4b\u9876\" ); } } \u8fd9\u4e2a\u5c31\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u5efa\u9020\u8005\uff0c\u7528\u6765\u5efa\u9020\u5177\u4f53\u7684\u623f\u5b50\u3002\u4e0b\u9762\u6765\u770b\u4e00\u4e0b\u6307\u6325\u8005\uff0c\u4e3b\u8981\u662f\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u590d\u6742\u7684\u5bf9\u8c61\u3002 public class HouseDirector { HouseBuilder houseBuilder = null ; // \u901a\u8fc7\u6784\u9020\u5668\u4f20\u5165 public HouseDirector ( HouseBuilder houseBuilder ) { this . houseBuilder = houseBuilder ; } public void setHouseBuilder ( HouseBuilder houseBuilder ) { this . houseBuilder = houseBuilder ; } // \u5982\u4f55\u5904\u7406\u5efa\u9020\u623f\u5b50\u7684\u6d41\u7a0b\uff0c\u4ea4\u7ed9\u6307\u6325\u8005 public House constructHouse (){ houseBuilder . buildBasic (); houseBuilder . buildWalls (); houseBuilder . roofed (); return houseBuilder . buildHouse (); } } \u5728\u8fd9\u4e2a\u7c7b\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\uff08\u6216\u8005set\u65b9\u6cd5\uff09\u5c06 HouseBuilder \u5bf9\u8c61\u4f20\u5165\u3002\u7136\u540e\u901a\u8fc7 constructHouse \u5c06\u5177\u4f53\u6d41\u7a0b\u4ea4\u7ed9\u6307\u6325\u8005\u3002\u6700\u540e\u5728\u4e3b\u65b9\u6cd5\u4e2d\u8c03\u7528\u3002 public class Client { public static void main ( String [] args ) { // \u76d6\u666e\u901a\u7684\u623f\u5b50 CommonHouse commonHouse = new CommonHouse (); // \u51c6\u5907\u521b\u5efa\u623f\u5b50\u7684\u6307\u6325\u8005 HouseDirector houseDirector = new HouseDirector ( commonHouse ); // \u5b8c\u6210\u76d6\u623f\u5b50\uff0c\u8fd4\u56de\u4ea7\u54c1 House house = houseDirector . constructHouse (); } } \u5177\u4f53\u7ec6\u8282 \u00b6 \uff081\uff09\u5ba2\u6237\u7aef(\u4f7f\u7528\u7a0b\u5e8f)\u4e0d\u5fc5\u77e5\u9053\u4ea7\u54c1\u5185\u90e8\u7ec4\u6210\u7684\u7ec6\u8282\uff0c\u5c06\u4ea7\u54c1\u672c\u8eab\u4e0e\u4ea7\u54c1\u7684\u521b\u5efa\u8fc7\u7a0b\u89e3\u8026\uff0c\u4f7f\u5f97\u76f8\u540c\u7684\u521b\u5efa\u8fc7\u7a0b\u53ef\u4ee5\u521b\u5efa\u4e0d\u540c\u7684\u4ea7\u54c1\u5bf9\u8c61\u3002\uff082\uff09\u6bcf\u4e00\u4e2a\u5177\u4f53\u5efa\u9020\u8005\u90fd\u76f8\u5bf9\u72ec\u7acb\uff0c\u800c\u4e0e\u5176\u4ed6\u7684\u5177\u4f53\u5efa\u9020\u8005\u65e0\u5173\uff0c\u56e0\u6b64\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u66ff\u6362\u5177\u4f53\u5efa\u9020\u8005\u6216\u589e\u52a0\u65b0\u7684\u5177\u4f53\u5efa\u9020\u8005\uff0c \u7528\u6237\u4f7f\u7528\u4e0d\u540c\u7684\u5177\u4f53\u5efa\u9020\u8005\u5373\u53ef\u5f97\u5230\u4e0d\u540c\u7684\u4ea7\u54c1\u5bf9\u8c61\u3002 \uff083\uff09\u53ef\u4ee5\u66f4\u52a0\u7cbe\u7ec6\u5730\u63a7\u5236\u4ea7\u54c1\u7684\u521b\u5efa\u8fc7\u7a0b \u3002\u5c06\u590d\u6742\u4ea7\u54c1\u7684\u521b\u5efa\u6b65\u9aa4\u5206\u89e3\u5728\u4e0d\u540c\u7684\u65b9\u6cd5\u4e2d\uff0c\u4f7f\u5f97\u521b\u5efa\u8fc7\u7a0b\u66f4\u52a0\u6e05\u6670\uff0c\u4e5f\u66f4\u65b9\u4fbf\u4f7f\u7528\u7a0b\u5e8f\u6765\u63a7\u5236\u521b\u5efa\u8fc7\u7a0b\uff084\uff09 \u589e\u52a0\u65b0\u7684\u5177\u4f53\u5efa\u9020\u8005\u65e0\u987b\u4fee\u6539\u539f\u6709\u7c7b\u5e93\u7684\u4ee3\u7801\uff0c\u6307\u6325\u8005\u7c7b\u9488\u5bf9\u62bd\u8c61\u5efa\u9020\u8005\u7c7b\u7f16\u7a0b\uff0c\u7cfb\u7edf\u6269\u5c55\u65b9\u4fbf\uff0c\u7b26\u5408\u201c\u5f00\u95ed\u539f\u5219\u201d\uff085\uff09 \u5efa\u9020\u8005\u6a21\u5f0f\u6240\u521b\u5efa\u7684\u4ea7\u54c1\u4e00\u822c\u5177\u6709\u8f83\u591a\u7684\u5171\u540c\u70b9\uff0c\u5176\u7ec4\u6210\u90e8\u5206\u76f8\u4f3c\uff0c\u5982\u679c\u4ea7\u54c1\u4e4b\u95f4\u7684\u5dee\u5f02\u6027\u5f88\u5927\uff0c\u5219\u4e0d\u9002\u5408\u4f7f\u7528\u5efa\u9020\u8005\u6a21\u5f0f\uff0c\u56e0\u6b64\u5176\u4f7f\u7528\u8303\u56f4\u53d7\u5230\u4e00\u5b9a\u7684\u9650\u5236\u3002\uff086\uff09\u5982\u679c\u4ea7\u54c1\u7684\u5185\u90e8\u53d8\u5316\u590d\u6742\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9700\u8981\u5b9a\u4e49\u5f88\u591a\u5177\u4f53\u5efa\u9020\u8005\u7c7b\u6765\u5b9e\u73b0\u8fd9\u79cd\u53d8\u5316\uff0c\u5bfc\u81f4\u7cfb\u7edf\u53d8\u5f97\u5f88\u5e9e\u5927\uff0c\u56e0\u6b64\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8981\u8003\u8651\u662f\u5426\u9009\u62e9\u5efa\u9020\u8005\u6a21\u5f0f\u3002 \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f VS \u5efa\u9020\u8005\u6a21\u5f0f \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u5b9e\u73b0\u5bf9\u4ea7\u54c1\u5bb6\u65cf\u7684\u521b\u5efa\uff0c\u4e00\u4e2a\u4ea7\u54c1\u5bb6\u65cf\u662f\u8fd9\u6837\u7684\u4e00\u7cfb\u5217\u4ea7\u54c1\uff1a\u5177\u6709\u4e0d\u540c\u5206\u7c7b\u7ef4\u5ea6\u7684\u4ea7\u54c1\u7ec4\u5408\uff0c\u91c7\u7528\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u4e0d\u9700\u8981\u5173\u5fc3\u6784\u5efa\u8fc7\u7a0b\uff0c\u53ea\u5173\u5fc3\u4ec0\u4e48\u4ea7\u54c1\u7531\u4ec0\u4e48\u5de5\u5382\u751f\u4ea7\u5373\u53ef\u3002\u800c\u5efa\u9020\u8005\u6a21\u5f0f\u5219\u662f\u8981\u6c42\u6309\u7167\u6307\u5b9a\u7684\u84dd\u56fe\u5efa\u9020\u4ea7\u54c1\uff0c\u5b83\u7684\u4e3b\u8981\u76ee\u7684\u662f\u901a\u8fc7\u7ec4\u88c5\u96f6\u914d\u4ef6\u800c\u4ea7\u751f\u4e00\u4e2a\u65b0\u4ea7\u54c1\u3002 \u516b\u3001\u8bbe\u914d\u5668\u6a21\u5f0f \u00b6 \u9002\u914d\u5668\u6a21\u5f0f(Adapter Pattern)\u5c06\u67d0\u4e2a\u7c7b\u7684\u63a5\u53e3\u8f6c\u6362\u6210\u5ba2\u6237\u7aef\u671f\u671b\u7684\u53e6\u4e00\u4e2a\u63a5\u53e3\u8868\u793a\uff0c\u4e3b\u7684\u76ee\u7684\u662f\u517c\u5bb9\u6027\uff0c\u8ba9\u539f\u672c\u56e0\u63a5\u53e3\u4e0d\u5339\u914d\u4e0d\u80fd\u4e00\u8d77\u5de5\u4f5c\u7684\u4e24\u4e2a\u7c7b\u53ef\u4ee5\u534f\u540c\u5de5\u4f5c\u3002\u5176\u522b\u540d\u4e3a\u5305\u88c5\u5668(Wrapper)\u3002\u9002\u914d\u5668\u6a21\u5f0f\u5c5e\u4e8e\u7ed3\u6784\u578b\u6a21\u5f0f\u3002\u4e3b\u8981\u5206\u4e3a\u4e09\u7c7b\uff1a \u7c7b\u9002\u914d\u5668\u6a21\u5f0f\u3001\u5bf9\u8c61\u9002\u914d\u5668\u6a21\u5f0f\u3001\u63a5\u53e3\u9002\u914d\u5668\u6a21\u5f0f \u3002 \u57fa\u672c\u539f\u7406 \u00b6 1) \u9002\u914d\u5668\u6a21\u5f0f\uff1a\u5c06\u4e00\u4e2a\u7c7b\u7684\u63a5\u53e3\u8f6c\u6362\u6210\u53e6\u4e00\u79cd\u63a5\u53e3.\u8ba9\u539f\u672c\u63a5\u53e3\u4e0d\u517c\u5bb9\u7684\u7c7b\u53ef\u4ee5\u517c\u5bb9 2) \u4ece\u7528\u6237\u7684\u89d2\u5ea6\u770b\u4e0d\u5230\u88ab\u9002\u914d\u8005\uff0c\u662f\u89e3\u8026\u7684 3) \u7528\u6237\u8c03\u7528\u9002\u914d\u5668\u8f6c\u5316\u51fa\u6765\u7684\u76ee\u6807\u63a5\u53e3\u65b9\u6cd5\uff0c\u9002\u914d\u5668\u518d\u8c03\u7528\u88ab\u9002\u914d\u8005\u7684\u76f8\u5173\u63a5\u53e3\u65b9\u6cd5 4) \u7528\u6237\u6536\u5230\u53cd\u9988\u7ed3\u679c\uff0c\u611f\u89c9\u53ea\u662f\u548c\u76ee\u6807\u63a5\u53e3\u4ea4\u4e92\u3002 \u7c7b\u9002\u914d\u5668 \u00b6 Adapter\u7c7b\uff0c\u901a\u8fc7\u7ee7\u627fsrc\u7c7b\uff0c\u5b9e\u73b0dst\u7c7b\u63a5\u53e3\uff0c\u5b8c\u6210src->dst\u7684\u9002\u914d\u3002\u4ee5\u751f\u6d3b\u4e2d\u5145\u7535\u5668\u7684\u4f8b\u5b50\u6765\u8bb2\u89e3\u9002\u914d\u5668\uff0c\u5145\u7535\u5668\u672c\u8eab\u76f8\u5f53\u4e8eAdapter\uff0c220V \u4ea4\u6d41\u7535\u76f8\u5f53\u4e8e src (\u5373\u88ab\u9002\u914d\u8005)\uff0c\u6211\u4eec\u7684\u76ee\u7684 dst(\u5373\u76ee\u6807)\u662f 5V \u76f4\u6d41\u7535\u3002 public class Voltage220V { public int output220V (){ int src = 220 ; System . out . println ( \"\u7535\u538b=\" + src + \"\u4f0f\" ); return src ; } } \u4e0a\u9762\u8fd9\u4e2a\u662fsrc\u7c7b\uff0c\u4e0b\u9762\u662fdst\u7c7b\u63a5\u53e3 public interface IVoltage5V { public int output5V (); } \u6211\u4eec\u7684\u76ee\u7684\u662f\u5b9e\u73b0\u4e00\u4e2a Adapter \u7c7b\u6765\u5b8c\u6210\u9002\u914d\u3002 // \u9002\u914d\u5668\u7c7b public class VoltageAdapter extends Voltage220V implements IVoltage5V { @Override public int output5V () { // \u83b7\u53d6\u5230220V\u7684\u7535\u538b int srcV = output220V (); int dstV = srcV / 44 ; return dstV ; } } \u901a\u8fc7\u7c7b\u9002\u914d\u5668\u5c31\u53ef\u4ee5\u5b8c\u6210\u7535\u538b\u7684\u8f6c\u6362\u3002\u4f46\u662f\u9700\u8981\u6ce8\u610f\uff1a Java \u662f\u5355\u7ee7\u627f\u673a\u5236\uff0c\u6240\u4ee5\u7c7b\u9002\u914d\u5668\u9700\u8981\u7ee7\u627f src \u7c7b\u8fd9\u4e00\u70b9\u7b97\u662f\u4e00\u4e2a\u7f3a\u70b9, \u56e0\u4e3a\u8fd9\u8981\u6c42 dst \u5fc5\u987b\u662f\u63a5\u53e3\uff0c\u6709\u4e00\u5b9a\u5c40\u9650\u6027; src \u7c7b\u7684\u65b9\u6cd5\u5728 Adapter \u4e2d\u90fd\u4f1a\u66b4\u9732\u51fa\u6765\uff0c\u4e5f\u589e\u52a0\u4e86\u4f7f\u7528\u7684\u6210\u672c\u3002\u7531\u4e8e\u5176\u7ee7\u627f\u4e86 src \u7c7b\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u91cd\u5199 src \u7c7b\u7684\u65b9\u6cd5\uff0c\u4f7f\u5f97 Adapter\u7684\u7075\u6d3b\u6027\u589e\u5f3a\u4e86\u3002 \u5bf9\u8c61\u9002\u914d\u5668 \u00b6 \u57fa\u672c\u601d\u8def\u548c\u7c7b\u7684\u9002\u914d\u5668\u6a21\u5f0f\u76f8\u540c\uff0c\u53ea\u662f\u5c06Adapter \u7c7b\u4f5c\u4fee\u6539\uff0c\u4e0d\u662f\u7ee7\u627f src \u7c7b\uff0c\u800c\u662f\u6301\u6709 src \u7c7b\u7684\u5b9e\u4f8b\uff0c\u4ee5\u89e3\u51b3\u517c\u5bb9\u6027\u7684\u95ee\u9898\u3002 \u5373\uff1a\u6301\u6709src\u7c7b\uff0c\u5b9e\u73b0dst\u7c7b\u63a5\u53e3\uff0c\u5b8c\u6210 src->dst \u7684\u9002\u914d\u3002 \u6839\u636e\u201c\u5408\u6210\u590d\u7528\u539f\u5219\u201d\uff0c\u5728\u7cfb\u7edf\u4e2d\u5c3d\u91cf\u4f7f\u7528\u5173\u8054\u5173\u7cfb\uff08\u805a\u5408\uff09\u6765\u66ff\u4ee3\u7ee7\u627f\u5173\u7cfb \u3002\u5bf9\u8c61\u9002\u914d\u5668\u6a21\u5f0f\u662f\u9002\u914d\u5668\u6a21\u5f0f\u5e38\u7528\u7684\u4e00\u79cd\u3002 // \u9002\u914d\u5668\u7c7b public class VoltageAdapter implements IVoltage5V { private Voltage220V voltage220v ; public VoltageAdapter ( Voltage220V voltage220v ) { this . voltage220v = voltage220v ; } @Override public int output5V () { int dst = 0 ; if ( voltage220v != null ){ int src = voltage220v . output220V (); dst = src / 44 ; } return dst ; } } \u8fd9\u79cd\u65b9\u6cd5\uff0c\u4e0e\u4e0a\u9762\u7684\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u4f46\u4e0d\u662f\u901a\u8fc7\u7ee7\u627f\u7684\u65b9\u5f0f\uff0c\u800c\u662f\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\uff08\u6216\u8005set\uff09\u83b7\u53d6\u5b9e\u4f8b\u3002 \u5bf9\u8c61\u9002\u914d\u5668\u548c\u7c7b\u9002\u914d\u5668\u5176\u5b9e\u7b97\u662f\u540c\u4e00\u79cd\u601d\u60f3\uff0c\u53ea\u4e0d\u8fc7\u5b9e\u73b0\u65b9\u5f0f\u4e0d\u540c\u3002\u6839\u636e\u5408\u6210\u590d\u7528\u539f\u5219\uff0c\u4f7f\u7528\u7ec4\u5408\u66ff\u4ee3\u7ee7\u627f\uff0c \u6240\u4ee5\u5b83\u89e3\u51b3\u4e86\u7c7b\u9002\u914d\u5668\u5fc5\u987b\u7ee7\u627f src\u7684\u5c40\u9650\u6027\u95ee\u9898\uff0c\u4e5f\u4e0d\u518d\u8981\u6c42dst\u5fc5\u987b\u662f\u63a5\u53e3\u3002\u4f7f\u7528\u6210\u672c\u66f4\u4f4e\uff0c\u66f4\u7075\u6d3b \u63a5\u53e3\u9002\u914d\u5668 \u00b6 \u6838\u5fc3\u601d\u8def\uff1a\u5f53\u4e0d\u9700\u8981\u5168\u90e8\u5b9e\u73b0\u63a5\u53e3\u63d0\u4f9b\u7684\u65b9\u6cd5\u65f6\uff0c\u53ef\u5148\u8bbe\u8ba1\u4e00\u4e2a\u62bd\u8c61\u7c7b\u5b9e\u73b0\u63a5\u53e3\uff0c\u5e76\u4e3a\u8be5\u63a5\u53e3\u4e2d\u6bcf\u4e2a\u65b9\u6cd5\u63d0\u4f9b\u4e00\u4e2a\u9ed8\u8ba4\u5b9e\u73b0\uff08\u7a7a\u65b9\u6cd5\uff09\uff0c\u90a3\u4e48\u8be5\u62bd\u8c61\u7c7b\u7684\u5b50\u7c7b\u53ef\u6709\u9009\u62e9\u5730\u8986\u76d6\u7236\u7c7b\u7684\u67d0\u4e9b\u65b9\u6cd5\u6765\u5b9e\u73b0\u9700\u6c42\u3002\u9002\u7528\u4e8e\u4e00\u4e2a\u63a5\u53e3\u4e0d\u60f3\u4f7f\u7528\u5176\u6240\u6709\u7684\u65b9\u6cd5\u7684\u60c5\u51b5\u3002 \u9002\u914d\u5668\u7ec6\u8282 \u00b6 \u4e09\u79cd\u547d\u540d\u65b9\u5f0f\uff0c\u662f\u6839\u636esrc\u662f\u4ee5\u600e\u6837\u7684\u5f62\u5f0f\u7ed9\u5230 Adapter\uff08\u5728Adapter\u91cc\u7684\u5f62\u5f0f\uff09\u6765\u547d\u540d\u7684\u3002\u7c7b\u9002\u914d\u5668\uff1a\u4ee5\u7c7b\u7ed9\u5230\uff0c\u5728Adapter\u91cc\uff0c\u5c31\u662f\u5c06src\u5f53\u505a\u7c7b\uff0c\u7ee7\u627f\u3002\u5bf9\u8c61\u9002\u914d\u5668\uff1a\u4ee5\u5bf9\u8c61\u7ed9\u5230\uff0c\u5728Adapter \u91cc\uff0c\u5c06 src \u4f5c\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6301\u6709\u3002\u63a5\u53e3\u9002\u914d\u5668\uff1a\u4ee5\u63a5\u53e3\u7ed9\u5230\uff0c\u5728Adapter\u91cc\uff0c\u5c06src\u4f5c\u4e3a\u4e00\u4e2a\u63a5\u53e3\uff0c\u5b9e\u73b0\u3002Adapter \u6a21\u5f0f\u6700\u5927\u7684\u4f5c\u7528\u8fd8\u662f\u5c06\u539f\u672c\u4e0d\u517c\u5bb9\u7684\u63a5\u53e3\u878d\u5408\u5728\u4e00\u8d77\u5de5\u4f5c\u3002 \u4e5d\u3001\u6865\u63a5\u6a21\u5f0f \u00b6 \u57fa\u672c\u4ecb\u7ecd \u00b6 \u6865\u63a5\u6a21\u5f0f(Bridge \u6a21\u5f0f)\u662f\u6307\uff1a\u5c06\u5b9e\u73b0\u4e0e\u62bd\u8c61\u653e\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u7c7b\u5c42\u6b21\u4e2d\uff0c\u4f7f\u4e24\u4e2a\u5c42\u6b21\u53ef\u4ee5\u72ec\u7acb\u6539\u53d8\u3002\u662f\u4e00\u79cd\u7ed3\u6784\u578b\u8bbe\u8ba1\u6a21\u5f0f\u3002 Bridge \u6a21\u5f0f\u57fa\u4e8e\u7c7b\u7684\u6700\u5c0f\u8bbe\u8ba1\u539f\u5219\uff0c\u901a\u8fc7\u4f7f\u7528\u5c01\u88c5\u3001\u805a\u5408\u53ca\u7ee7\u627f\u7b49\u884c\u4e3a\u8ba9\u4e0d\u540c\u7684\u7c7b\u627f\u62c5\u4e0d\u540c\u7684\u804c\u8d23\u3002\u5b83\u7684\u4e3b\u8981\u7279\u70b9\u662f\u628a\u62bd\u8c61(Abstraction)\u4e0e\u884c\u4e3a\u5b9e\u73b0(Implementation)\u5206\u79bb\u5f00\u6765\uff0c\u4ece\u800c\u53ef\u4ee5\u4fdd\u6301\u5404\u90e8\u5206\u7684\u72ec\u7acb\u6027\u4ee5\u53ca\u5e94\u5bf9\u4ed6\u4eec\u7684\u529f\u80fd\u6269\u5c55\u3002 \u62bd\u8c61\u7c7b(Abstraction)\uff1a\u7ef4\u62a4\u4e86 Implementor/\u5373\u5b83\u7684\u5b9e\u73b0\u7c7b ConcreteImplementorA\uff0c \u4e8c\u8005\u662f\u805a\u5408\u5173\u7cfb\uff0c Abstraction\u5145\u5f53\u6865\u63a5\u7c7b\u3002RefinedAbstraction\uff1a\u662fAbstraction\u62bd\u8c61\u7c7b\u7684\u5b50\u7c7b\u3002Implementor : \u884c\u4e3a\u5b9e\u73b0\u7c7b\u7684\u63a5\u53e3\u3002ConcreteImplementorA/B\uff1a\u884c\u4e3a\u7684\u5177\u4f53\u5b9e\u73b0\u7c7b\u3002 \u793a\u4f8b\u4ee3\u7801 \u00b6 \u4e0b\u9762\u770b\u4e00\u4e9b\u5177\u4f53\u7684\u4f8b\u5b50\u3002 public abstract class Phone { // \u7ec4\u5408\u54c1\u724c private Brand brand ; // \u6784\u9020\u5668 public Phone ( Brand brand ) { this . brand = brand ; } protected void open (){ this . brand . open (); } protected void close (){ this . brand . close (); } protected void call (){ this . brand . call (); } } \u9996\u5148\u8fd9\u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u624b\u673a\u7c7b\uff0c\u7136\u540e\uff0c\u4e0b\u9762\u662f\u624b\u673a\u7684\u7c7b\u578b\uff08\u6298\u53e0\u5f0f\u6216\u8005\u6ed1\u76d6\u5f0f\uff09\u3002 public class UpRightPhone extends Phone { // \u6784\u9020\u5668 public UpRightPhone ( Brand brand ){ super ( brand ); } public void open (){ super . open (); System . out . println ( \"\u76f4\u7acb\u6837\u5f0f\u7684\u624b\u673a\" ); } public void close (){ super . close (); System . out . println ( \"\u76f4\u7acb\u6837\u5f0f\u7684\u624b\u673a\" ); } public void call (){ super . call (); System . out . println ( \"\u76f4\u7acb\u6837\u5f0f\u7684\u624b\u673a\" ); } } \u7136\u540e\u662f\u624b\u673a\u7684\u529f\u80fd\u63a5\u53e3 public interface Brand { void open (); void close (); void call (); } \u4e0b\u9762\u662f\u5177\u4f53\u7684\u624b\u673a\u54c1\u724c public class XiaoMi implements Brand { @Override public void open () { System . out . println ( \"\u5c0f\u7c73\u624b\u673a\u5f00\u673a\u4e86\" ); } @Override public void close () { System . out . println ( \"\u5c0f\u7c73\u624b\u673a\u5173\u673a\u4e86\" ); } @Override public void call () { System . out . println ( \"\u5c0f\u7c73\u624b\u673a\u6253\u7535\u8bdd\" ); } } \u6700\u540e\u8c03\u7528\u8005\u8c03\u7528\u76f8\u5173\u7684\u65b9\u6cd5\u5b9e\u73b0\u5177\u4f53\u7684\u529f\u80fd\u3002 public static void main ( String [] args ) { // \u83b7\u53d6\u6298\u53e0\u5f0f\u624b\u673a\uff08\u6837\u5f0f\u52a0\u54c1\u724c\uff09 Phone phone1 = new FoldedPhone ( new XiaoMi ()); phone1 . open (); phone1 . call (); phone1 . close (); } \u7ec6\u8282\u548c\u6ce8\u610f\u4e8b\u9879 \u00b6 \uff081\uff09\u5b9e\u73b0\u4e86\u62bd\u8c61\u548c\u5b9e\u73b0\u90e8\u5206\u7684\u5206\u79bb\uff0c\u4ece\u800c\u6781\u5927\u7684\u63d0\u4f9b\u4e86\u7cfb\u7edf\u7684\u7075\u6d3b\u6027\uff0c\u8ba9\u62bd\u8c61\u90e8\u5206\u548c\u5b9e\u73b0\u90e8\u5206\u72ec\u7acb\u5f00\u6765\uff0c\u8fd9\u6709\u52a9\u4e8e\u7cfb\u7edf\u8fdb\u884c\u5206\u5c42\u8bbe\u8ba1\uff0c\u4ece\u800c\u4ea7\u751f\u66f4\u597d\u7684\u7ed3\u6784\u5316\u7cfb\u7edf\u3002\uff082\uff09 \u5bf9\u4e8e\u7cfb\u7edf\u7684\u9ad8\u5c42\u90e8\u5206\uff0c\u53ea\u9700\u8981\u77e5\u9053\u62bd\u8c61\u90e8\u5206\u548c\u5b9e\u73b0\u90e8\u5206\u7684\u63a5\u53e3\u5c31\u53ef\u4ee5\u4e86\uff0c\u5176\u5b83\u7684\u90e8\u5206\u7531\u5177\u4f53\u4e1a\u52a1\u6765\u5b8c\u6210\u3002\uff083\uff09\u6865\u63a5\u6a21\u5f0f\u66ff\u4ee3\u591a\u5c42\u7ee7\u627f\u65b9\u6848\uff0c\u53ef\u4ee5\u51cf\u5c11\u5b50\u7c7b\u7684\u4e2a\u6570\uff0c\u964d\u4f4e\u7cfb\u7edf\u7684\u7ba1\u7406\u548c\u7ef4\u62a4\u6210\u672c\u3002\uff084\uff09\u6865\u63a5\u6a21\u5f0f\u7684\u5f15\u5165\u589e\u52a0\u4e86\u7cfb\u7edf\u7684\u7406\u89e3\u548c\u8bbe\u8ba1\u96be\u5ea6\uff0c\u7531\u4e8e\u805a\u5408\u5173\u8054\u5173\u7cfb\u5efa\u7acb\u5728\u62bd\u8c61\u5c42\uff0c\u8981\u6c42\u5f00\u53d1\u8005\u9488\u5bf9\u62bd\u8c61\u8fdb\u884c\u8bbe\u8ba1\u548c\u7f16\u7a0b\u3002 \u6865\u63a5\u6a21\u5f0f\u8981\u6c42\u6b63\u786e\u8bc6\u522b\u51fa\u7cfb\u7edf\u4e2d\u4e24\u4e2a\u72ec\u7acb\u53d8\u5316\u7684\u7ef4\u5ea6(\u62bd\u8c61\u3001\u548c\u5b9e\u73b0)\uff0c\u56e0\u6b64\u5176\u4f7f\u7528\u8303\u56f4\u6709\u4e00\u5b9a\u7684\u5c40\u9650\u6027\uff0c\u5373\u9700\u8981\u6709\u8fd9\u6837\u7684\u5e94\u7528\u573a\u666f\u3002 \u5e38\u7528\u573a\u666f \u00b6 1) -JDBC \u9a71\u52a8\u7a0b\u5e8f 2) -\u94f6\u884c\u8f6c\u8d26\u7cfb\u7edf \u8f6c\u8d26\u5206\u7c7b: \u7f51\u4e0a\u8f6c\u8d26\uff0c\u67dc\u53f0\u8f6c\u8d26\uff0cAMT \u8f6c\u8d26 \u8f6c\u8d26\u7528\u6237\u7c7b\u578b\uff1a\u666e\u901a\u7528\u6237\uff0c\u94f6\u5361\u7528\u6237\uff0c\u91d1\u5361\u7528\u6237.. 3) -\u6d88\u606f\u7ba1\u7406 * \u6d88\u606f\u7c7b\u578b\uff1a\u5373\u65f6\u6d88\u606f\uff0c\u5ef6\u65f6\u6d88\u606f * \u6d88\u606f\u5206\u7c7b\uff1a\u624b\u673a\u77ed\u4fe1\uff0c\u90ae\u4ef6\u6d88\u606f\uff0cQQ \u6d88\u606f... \u5341\u3001\u88c5\u9970\u8005\u6a21\u5f0f \u00b6 \u95ee\u9898\u5f15\u5165 \u00b6 1) \u5496\u5561\u79cd\u7c7b/\u5355\u54c1\u5496\u5561\uff1aEspresso(\u610f\u5927\u5229\u6d53\u5496\u5561)\u3001ShortBlack\u3001LongBlack(\u7f8e\u5f0f\u5496\u5561)\u3001Decaf(\u65e0\u56e0\u5496\u5561) 2) \u8c03\u6599\uff1aMilk\u3001Soy(\u8c46\u6d46)\u3001Chocolate 3) \u8981\u6c42\u5728\u6269\u5c55\u65b0\u7684\u5496\u5561\u79cd\u7c7b\u65f6\uff0c\u5177\u6709\u826f\u597d\u7684\u6269\u5c55\u6027\u3001\u6539\u52a8\u65b9\u4fbf\u3001\u7ef4\u62a4\u65b9\u4fbf 4) \u4f7f\u7528 OO \u7684\u6765\u8ba1\u7b97\u4e0d\u540c\u79cd\u7c7b\u5496\u5561\u7684\u8d39\u7528: \u5ba2\u6237\u53ef\u4ee5\u70b9\u5355\u54c1\u5496\u5561\uff0c\u4e5f\u53ef\u4ee5\u5355\u54c1\u5496\u5561+\u8c03\u6599\u7ec4\u5408\u3002 \u4f20\u7edf\u89e3\u51b3\u65b9\u6848 \u00b6 \u4e3a\u6bcf\u4e00\u79cd\u5355\u54c1Coffee\u521b\u5efa\u5bf9\u5e94\u7684\u7c7b\uff0c\u7136\u540e\u4e3a\u5bf9\u5e94\u7684\u8c03\u6599\u4e5f\u5efa\u7acb\u76f8\u5e94\u7684\u7c7b\uff0c\u7136\u540e\u8fdb\u884c\u7ec4\u5408\uff0c\u8fd9\u6837\u5904\u7406\u4f1a\u6bd4\u8f83\u7b80\u5355\uff0c\u4f46\u662f\u4f1a\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u5f53\u6211\u4eec\u589e\u52a0\u4e00\u4e2a\u5355\u54c1\u5496\u5561\uff0c\u6216\u8005\u4e00\u4e2a\u65b0\u7684\u8c03\u6599\uff0c\u7c7b\u7684\u6570\u91cf\u5c31\u4f1a\u500d\u589e\uff0c\u5c31\u4f1a\u51fa\u73b0\u7c7b\u7206\u70b8\u3002 \u56e0\u4e3a\u5496\u5561\u5355\u54c1+\u8c03\u6599\u7ec4\u5408\u4f1a\u9020\u6210\u7c7b\u7684\u500d\u589e\uff0c\u56e0\u6b64\u53ef\u4ee5\u505a\u6539\u8fdb\uff0c\u5c06\u8c03\u6599\u5185\u7f6e\u5230 Drink \u7c7b\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u9020\u6210\u7c7b\u6570\u91cf\u8fc7\u591a\u3002\u4ece\u800c\u63d0\u9ad8\u9879\u76ee\u7684\u7ef4\u62a4\u6027\u3002\u8fd9\u6837\u53ef\u4ee5\u63a7\u5236\u7c7b\u7684\u6570\u91cf\uff0c\u4e0d\u81f3\u4e8e\u9020\u6210\u5f88\u591a\u7684\u7c7b\uff0c\u5728\u589e\u52a0\u6216\u8005\u5220\u9664\u8c03\u6599\u79cd\u7c7b\u65f6\uff0c\u4ee3\u7801\u7684\u7ef4\u62a4\u91cf\u5f88\u5927\u3002 \u88c5\u9970\u8005\u6a21\u5f0f \u00b6 \u57fa\u672c\u539f\u7406 \u00b6 \u88c5\u9970\u8005\u6a21\u5f0f\uff1a\u52a8\u6001\u7684\u5c06\u65b0\u529f\u80fd\u9644\u52a0\u5230\u5bf9\u8c61\u4e0a\u3002\u5728\u5bf9\u8c61\u529f\u80fd\u6269\u5c55\u65b9\u9762\uff0c\u5b83\u6bd4\u7ee7\u627f\u66f4\u6709\u5f39\u6027\uff0c\u88c5\u9970\u8005\u6a21\u5f0f\u4e5f\u4f53\u73b0\u4e86\u5f00\u95ed\u539f\u5219(ocp)\u3002 + \u88c5\u9970\u8005\u6a21\u5f0f\u5c31\u50cf\u6253\u5305\u4e00\u4e2a\u5feb\u9012 - \u4e3b\u4f53\uff1a\u6bd4\u5982\uff1a\u9676\u74f7\u3001\u8863\u670d (Component) // \u88ab\u88c5\u9970\u8005 - \u5305\u88c5\uff1a\u6bd4\u5982\uff1a\u62a5\u7eb8\u586b\u5145\u3001\u5851\u6599\u6ce1\u6cab\u3001\u7eb8\u677f\u3001\u6728\u677f(Decorator) + Component \u4e3b\u4f53\uff1a\u6bd4\u5982\u7c7b\u4f3c\u524d\u9762\u7684 Drink + ConcreteComponent \u548c Decorator - ConcreteComponent\uff1a\u5177\u4f53\u7684\u4e3b\u4f53\uff0c\u6bd4\u5982\u524d\u9762\u7684\u5404\u4e2a\u5355\u54c1\u5496\u5561 - Decorator: \u88c5\u9970\u8005\uff0c\u6bd4\u5982\u5404\u8c03\u6599\u3002 \u4ee3\u7801\u793a\u4f8b \u00b6 \u9996\u5148\u5f0f\u62bd\u8c61\u7684 Drink \u7c7b public abstract class Drink { public String des ; //\u63cf\u8ff0 private float price = 0.0f ; public String getDes () { return des ; } public void setDes ( String des ) { this . des = des ; } public float getPrice () { return price ; } public void setPrice ( float price ) { this . price = price ; } //\u8ba1\u7b97\u8d39\u7528\u7684\u62bd\u8c61\u65b9\u6cd5 // \u7531\u5b50\u7c7b\u6765\u5b9e\u73b0 public abstract float cost (); } \u7136\u540e\u662f\u5b9e\u73b0\u4e86 Drink \u7c7b\u7684 Coffee \u7c7b\u3002\u4e3b\u8981\u662f\u5b9e\u73b0\u4e86\u5f97\u5230\u4ef7\u683c\u7684\u65b9\u6cd5\u3002 public class Coffee extends Drink { @Override public float cost () { return super . getPrice (); } } \u7136\u540e\u662f\u7ee7\u627fCoffee\u5177\u4f53\u7684Coffee\u7c7b public class LongBlack extends Coffee { public LongBlack (){ setDes ( \"LongBlack\" ); setPrice ( 5.0f ); } } \u7136\u540e\u662f Decorator \u7c7b\uff08\u4fee\u9970\u8005\u7c7b\uff09 public class Decorator extends Drink { private Drink obj ; public Decorator ( Drink obj ){ this . obj = obj ; } @Override public float cost () { return super . getPrice () + obj . cost (); } @Override public String getDes () { return super . des + \" \" + super . getPrice () + \" && \" + obj . getDes (); } } \u7136\u540e\u662f\u5177\u4f53\u7684 Decorator \u7c7b\uff0c\u4f8b\u5982Choloate public class Chocolate extends Decorator { public Chocolate ( Drink obj ){ super ( obj ); setDes ( \" \u5de7\u514b\u529b \" ); setPrice ( 3.0f ); //\u5f53\u524d\u8c03\u5473\u54c1\u7684\u4ef7\u683c } } \u901a\u8fc7\u7ee7\u627f Decorator \uff0c\u8bbe\u7f6e\u5176\u4e2d\u7684\u63cf\u8ff0\u548c\u4ef7\u683c\u3002\u6700\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0a\u7684\u7c7b\u8fdb\u884c\u6211\u4eec\u60f3\u8981\u7684\u5496\u5561\u7ec4\u5408\u4f8b\u5982\u4e00\u4efd\u5976+\u4e24\u4efd\u5de7\u514b\u529b\u7684LongBlack\u5496\u5561 public static void main ( String [] args ) { // \u88c5\u9970\u7740\u6a21\u5f0f\u4e0b\u7684\u8ba2\u5355\uff1a2\u4efd\u5de7\u514b\u529b+\u4e00\u4efd\u725b\u5976\u7684LongBlack // \u5148\u70b9\u4e00\u4efdLongBlack Drink order = new LongBlack (); System . out . println ( \"\u8d39\u75281=\" + order . cost ()); System . out . println ( \"\u63cf\u8ff0=\" + order . getDes ()); // \u52a0\u5165\u4e00\u4efd\u725b\u5976 order = new Milk ( order ); System . out . println ( \"\u8d39\u75282=\" + order . cost ()); System . out . println ( \"\u63cf\u8ff0=\" + order . getDes ()); // \u52a0\u5165\u4e00\u4efd\u5de7\u514b\u529b order = new Chocolate ( order ); System . out . println ( \"\u8d39\u75283=\" + order . cost ()); System . out . println ( \"\u63cf\u8ff0=\" + order . getDes ()); // \u52a0\u5165\u4e00\u4efd\u5de7\u514b\u529b order = new Chocolate ( order ); System . out . println ( \"\u8d39\u75283=\" + order . cost ()); System . out . println ( \"\u63cf\u8ff0=\" + order . getDes ()); } \u4f18\u7f3a\u70b9 \u00b6 Decorator\u6a21\u5f0f\u4e0e\u7ee7\u627f\u5173\u7cfb\u7684\u76ee\u7684\u90fd\u662f\u8981\u6269\u5c55\u5bf9\u8c61\u7684\u529f\u80fd\uff0c\u4f46\u662fDecorator\u53ef\u4ee5\u63d0\u4f9b\u6bd4\u7ee7\u627f\u66f4\u591a\u7684\u7075\u6d3b\u6027\u3002 \u901a\u8fc7\u4f7f\u7528\u4e0d\u540c\u7684\u5177\u4f53\u88c5\u9970\u7c7b\u4ee5\u53ca\u8fd9\u4e9b\u88c5\u9970\u7c7b\u7684\u6392\u5217\u7ec4\u5408\uff0c\u8bbe\u8ba1\u5e08\u53ef\u4ee5\u521b\u9020\u51fa\u5f88\u591a\u4e0d\u540c\u884c\u4e3a\u7684\u7ec4\u5408\u3002 \u8fd9\u79cd\u6bd4\u7ee7\u627f\u66f4\u52a0\u7075\u6d3b\u673a\u52a8\u7684\u7279\u6027\uff0c\u4e5f\u540c\u65f6\u610f\u5473\u7740\u66f4\u52a0\u591a\u7684\u590d\u6742\u6027\u3002 \u88c5\u9970\u6a21\u5f0f\u4f1a\u5bfc\u81f4\u8bbe\u8ba1\u4e2d\u51fa\u73b0\u8bb8\u591a\u5c0f\u7c7b\uff0c\u5982\u679c\u8fc7\u5ea6\u4f7f\u7528\uff0c\u4f1a\u4f7f\u7a0b\u5e8f\u53d8\u5f97\u5f88\u590d\u6742\u3002 \u88c5\u9970\u6a21\u5f0f\u662f\u9488\u5bf9\u62bd\u8c61\u7ec4\u4ef6\uff08Component\uff09\u7c7b\u578b\u7f16\u7a0b\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u8981\u9488\u5bf9\u5177\u4f53\u7ec4\u4ef6\u7f16\u7a0b\u65f6\uff0c\u5c31\u5e94\u8be5\u91cd\u65b0\u601d\u8003\u4f60\u7684\u5e94\u7528\u67b6\u6784\uff0c\u4ee5\u53ca\u88c5\u9970\u8005\u662f\u5426\u5408\u9002\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u6539\u53d8Component\u63a5\u53e3\uff0c\u589e\u52a0\u65b0\u7684\u516c\u5f00\u7684\u884c\u4e3a\uff0c\u5b9e\u73b0\u201c\u534a\u900f\u660e\u201d\u7684\u88c5\u9970\u8005\u6a21\u5f0f\u3002\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u8981\u505a\u51fa\u6700\u4f73\u9009\u62e9\u3002 \u5341\u4e00\u3001\u7ec4\u5408\u6a21\u5f0f \u00b6 \u95ee\u9898\u5f15\u5165 \u00b6 \u7f16\u5199\u7a0b\u5e8f\u5c55\u793a\u4e00\u4e2a\u5b66\u6821\u9662\u7cfb\u7ed3\u6784\uff1a\u9700\u6c42\u662f\u8fd9\u6837\uff0c\u8981\u5728\u4e00\u4e2a\u9875\u9762\u4e2d\u5c55\u793a\u51fa\u5b66\u6821\u7684\u9662\u7cfb\u7ec4\u6210\uff0c\u4e00\u4e2a\u5b66\u6821\u6709\u591a\u4e2a\u5b66\u9662\uff0c\u4e00\u4e2a\u5b66\u9662\u6709\u591a\u4e2a\u7cfb\u3002\u4f7f\u7528\u5e38\u89c1\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\uff1a \u5c06\u5b66\u9662\u770b\u505a\u662f\u5b66\u6821\u7684\u5b50\u7c7b\uff0c\u7cfb\u662f\u5b66\u9662\u7684\u5b50\u7c7b \u3002 \u5b9e\u9645\u4e0a\u6211\u4eec\u7684\u8981\u6c42\u662f \uff1a\u5728\u4e00\u4e2a\u9875\u9762\u4e2d\u5c55\u793a\u51fa\u5b66\u6821\u7684\u9662\u7cfb\u7ec4\u6210\uff0c\u4e00\u4e2a\u5b66\u6821\u6709\u591a\u4e2a\u5b66\u9662\uff0c\u4e00\u4e2a\u5b66\u9662\u6709\u591a\u4e2a\u7cfb\uff0c \u56e0\u6b64\u8fd9\u79cd\u65b9\u6848\uff0c\u4e0d\u80fd\u5f88\u597d\u5b9e\u73b0\u7684\u7ba1\u7406\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u5bf9\u5b66\u9662\u3001\u7cfb\u7684\u6dfb\u52a0\uff0c\u5220\u9664\uff0c\u904d\u5386\u7b49\u3002 \u89e3\u51b3\u65b9\u6848 \uff1a\u628a\u5b66\u6821\u3001\u9662\u3001\u7cfb\u90fd\u770b\u505a\u662f\u7ec4\u7ec7\u7ed3\u6784\uff0c\u4ed6\u4eec\u4e4b\u95f4\u6ca1\u6709\u7ee7\u627f\u7684\u5173\u7cfb\uff0c\u800c\u662f\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\uff0c\u53ef\u4ee5\u66f4\u597d\u7684\u5b9e\u73b0\u7ba1\u7406\u64cd\u4f5c\u3002 => \u7ec4\u5408\u6a21\u5f0f \u57fa\u672c\u4ecb\u7ecd \u00b6 \u7ec4\u5408\u6a21\u5f0f\uff08Composite Pattern\uff09\uff0c\u53c8\u53eb\u90e8\u5206\u6574\u4f53\u6a21\u5f0f\uff0c\u5b83\u521b\u5efa\u4e86\u5bf9\u8c61\u7ec4\u7684\u6811\u5f62\u7ed3\u6784\uff0c\u5c06\u5bf9\u8c61\u7ec4\u5408\u6210\u6811\u72b6\u7ed3\u6784\u4ee5\u8868\u793a\u201c\u6574\u4f53-\u90e8\u5206\u201d\u7684\u5c42\u6b21\u5173\u7cfb\u3002\u7ec4\u5408\u6a21\u5f0f\u4f9d\u636e\u6811\u5f62\u7ed3\u6784\u6765\u7ec4\u5408\u5bf9\u8c61\uff0c\u7528\u6765\u8868\u793a\u90e8\u5206\u4ee5\u53ca\u6574\u4f53\u5c42\u6b21\u3002\u7ec4\u5408\u6a21\u5f0f\u4f7f\u5f97 \u7528\u6237\u5bf9\u5355\u4e2a\u5bf9\u8c61\u548c\u7ec4\u5408\u5bf9\u8c61\u7684\u8bbf\u95ee\u5177\u6709\u4e00\u81f4\u6027 \uff0c\u5373\uff1a\u7ec4\u5408\u80fd\u8ba9\u5ba2\u6237\u4ee5\u4e00\u81f4\u7684\u65b9\u5f0f\u5904\u7406\u4e2a\u522b\u5bf9\u8c61\u4ee5\u53ca\u7ec4\u5408\u5bf9\u8c61\u3002\u4e0b\u9762\u770b\u4e00\u4e0b\u5177\u4f53\u7684\u4ee3\u7801\u5b9e\u73b0\u3002 public abstract class OrganizationComponent { private String name ; private String des ; protected void add ( OrganizationComponent organizationComponent ){ throw new UnsupportedOperationException (); } protected void remove ( OrganizationComponent organizationComponent ){ throw new UnsupportedOperationException (); } public OrganizationComponent ( String name , String des ) { this . name = name ; this . des = des ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public String getDes () { return des ; } public void setDes ( String des ) { this . des = des ; } // \u65b9\u6cd5print \u505a\u6210\u62bd\u8c61\uff0c\u4e0b\u9762\u7684\u5b50\u7c7b\u90fd\u9700\u8981\u5b9e\u73b0 protected abstract void print (); } \u4e0a\u9762\u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u57fa\u7c7b\uff0c\u5176\u5b83\u7684\u7c7b\u7ee7\u627f\u8be5\u7c7b\uff0c\u5e76\u5b9e\u73b0\u5176\u4e2d\u7684\u62bd\u8c61\u65b9\u6cd5\u3002\u4e0b\u9762\u662f\u5b66\u6821\u7c7b\u3002 // University\u5c31\u662f Composite ,\u53ef\u4ee5\u7ba1\u7406College public class University extends OrganizationComponent { List < OrganizationComponent > organizationComponents = new ArrayList <> (); public University ( String name , String des ) { super ( name , des ); } @Override protected void add ( OrganizationComponent organizationComponent ) { organizationComponents . add ( organizationComponent ); } @Override protected void remove ( OrganizationComponent organizationComponent ) { organizationComponents . remove ( organizationComponent ); } @Override public String getName () { return super . getName (); } @Override public String getDes () { return super . getDes (); } @Override protected void print () { System . out . println ( \"---------------\" + getName () + \"-----------------\" ); for ( OrganizationComponent organizationComponent : organizationComponents ) { organizationComponent . print (); } } } \u4e00\u4e2a\u5b66\u6821\u53ef\u4ee5\u6709\u591a\u4e2a\u5b66\u9662\uff0c\u5b66\u9662\u4e5f\u8981\u7ee7\u627f\u540c\u6837\u7684\u62bd\u8c61\u7c7b\u3002 public class College extends OrganizationComponent { List < OrganizationComponent > organizationComponents = new ArrayList <> (); public College ( String name , String des ) { super ( name , des ); } @Override protected void add ( OrganizationComponent organizationComponent ) { organizationComponents . add ( organizationComponent ); } @Override protected void remove ( OrganizationComponent organizationComponent ) { organizationComponents . remove ( organizationComponent ); } @Override public String getName () { return super . getName (); } @Override public String getDes () { return super . getDes (); } @Override protected void print () { System . out . println ( \"---------------\" + getName () + \"-----------------\" ); for ( OrganizationComponent organizationComponent : organizationComponents ) { organizationComponent . print (); } } } \u6700\u540e\u662f\u6bcf\u4e2a\u5b66\u9662\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u4e13\u4e1a\uff0c\u4e0d\u540c\u7684\u7cfb\uff0c\u4f46\u662f\u4e13\u4e1a\u4e0b\u9762\u6ca1\u6709\u989d\u5916\u7684\u7c7b\u4e86\uff0c\u4e0b\u9762\u662f\u4e13\u4e1a\u7c7b\uff0c\u540c\u6837\u7ee7\u627f\u62bd\u8c61\u7c7b\u3002 public class Department extends OrganizationComponent { public Department ( String name , String des ) { super ( name , des ); } @Override public String getName () { return super . getName (); } @Override public String getDes () { return super . getDes (); } @Override protected void print () { System . out . println ( getName ()); } } \u4e0b\u9762\u770b\u4e00\u4e0b\u5982\u4f55\u5177\u4f53\u7684\u4f7f\u7528\u8fd9\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u3002 public static void main ( String [] args ) { //\u521b\u5efa\u5b66\u6821 OrganizationComponent university = new University ( \"\u6e05\u534e\u5927\u5b66\" , \" \u4e2d\u56fd\u9876\u7ea7\u7684\u5927\u5b66 \" ); // \u521b\u5efa\u5b66\u9662 OrganizationComponent computerCollege = new College ( \"\u8ba1\u7b97\u673a\u5b66\u9662\" , \"\u8ba1\u7b97\u673a\u4e13\u4e1a\" ); OrganizationComponent softCollege = new College ( \"\u8f6f\u4ef6\u5b66\u9662\" , \"\u8f6f\u4ef6\u5de5\u7a0b\u4e13\u4e1a\" ); // \u521b\u5efa\u5404\u4e2a\u5b66\u9662\u4e0b\u9762\u7684\u7cfb computerCollege . add ( new Department ( \"\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\" , \"\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\" )); computerCollege . add ( new Department ( \"\u4fe1\u606f\u5b89\u5168\" , \"\u4fe1\u606f\u5b89\u5168\" )); computerCollege . add ( new Department ( \"\u7f51\u7edc\u5de5\u7a0b\" , \"\u7f51\u7edc\u5de5\u7a0b\" )); softCollege . add ( new Department ( \"\u8f6f\u4ef6\u5de5\u7a0b\" , \"\u8f6f\u4ef6\u5de5\u7a0b\" )); softCollege . add ( new Department ( \"\u4fe1\u606f\u5de5\u7a0b\" , \"\u4fe1\u606f\u5de5\u7a0b\" )); university . add ( computerCollege ); university . add ( softCollege ); university . print (); } \u6ce8\u610f\u4e8b\u9879\u548c\u7ec6\u8282 \u00b6 1) \u7b80\u5316\u5ba2\u6237\u7aef\u64cd\u4f5c\u3002\u5ba2\u6237\u7aef\u53ea\u9700\u8981\u9762\u5bf9\u4e00\u81f4\u7684\u5bf9\u8c61\u800c\u4e0d\u7528\u8003\u8651\u6574\u4f53\u90e8\u5206\u6216\u8005\u8282\u70b9\u53f6\u5b50\u7684\u95ee\u9898\u3002 2) \u5177\u6709\u8f83\u5f3a\u7684\u6269\u5c55\u6027\u3002\u5f53\u6211\u4eec\u8981\u66f4\u6539\u7ec4\u5408\u5bf9\u8c61\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8c03\u6574\u5185\u90e8\u7684\u5c42\u6b21\u5173\u7cfb\uff0c\u5ba2\u6237\u7aef\u4e0d\u7528\u505a\u51fa\u4efb\u4f55\u6539\u52a8. 3) \u65b9\u4fbf\u521b\u5efa\u51fa\u590d\u6742\u7684\u5c42\u6b21\u7ed3\u6784\u3002\u5ba2\u6237\u7aef\u4e0d\u7528\u7406\u4f1a\u7ec4\u5408\u91cc\u9762\u7684\u7ec4\u6210\u7ec6\u8282\uff0c\u5bb9\u6613\u6dfb\u52a0\u8282\u70b9\u6216\u8005\u53f6\u5b50\u4ece\u800c\u521b\u5efa\u51fa\u590d\u6742\u7684\u6811\u5f62\u7ed3\u6784 4) \u9700\u8981\u904d\u5386\u7ec4\u7ec7\u673a\u6784\uff0c\u6216\u8005\u5904\u7406\u7684\u5bf9\u8c61\u5177\u6709\u6811\u5f62\u7ed3\u6784\u65f6, \u975e\u5e38\u9002\u5408\u4f7f\u7528\u7ec4\u5408\u6a21\u5f0f. 5) \u8981\u6c42\u8f83\u9ad8\u7684\u62bd\u8c61\u6027\uff0c\u5982\u679c\u8282\u70b9\u548c\u53f6\u5b50\u6709\u5f88\u591a\u5dee\u5f02\u6027\u7684\u8bdd\uff0c\u6bd4\u5982\u5f88\u591a\u65b9\u6cd5\u548c\u5c5e\u6027\u90fd\u4e0d\u4e00\u6837\uff0c\u4e0d\u9002\u5408\u4f7f\u7528\u7ec4\u5408\u6a21\u5f0f\u3002 \u5341\u4e8c\u3001\u5916\u89c2\u6a21\u5f0f \u00b6 \u95ee\u9898\u5f15\u5165 \u00b6 \u7ec4\u5efa\u4e00\u4e2a\u5bb6\u5ead\u5f71\u9662\uff1a DVD \u64ad\u653e\u5668\u3001\u6295\u5f71\u4eea\u3001\u81ea\u52a8\u5c4f\u5e55\u3001\u73af\u7ed5\u7acb\u4f53\u58f0\u3001\u7206\u7c73\u82b1\u673a\uff0c\u8981\u6c42\u5b8c\u6210\u4f7f\u7528\u5bb6\u5ead\u5f71\u9662\u7684\u529f\u80fd\uff0c\u5176\u8fc7\u7a0b\u4e3a\uff0c\u76f4\u63a5\u7528\u9065\u63a7\u5668\uff0c\u7edf\u7b79\u5404\u8bbe\u5907\u5f00\u5173\u3002 \u5f00\u7206\u7c73\u82b1\u673a->\u653e\u4e0b\u5c4f\u5e55->\u5f00\u6295\u5f71\u4eea->\u5f00\u97f3\u54cd->\u5f00 DVD\uff0c\u9009 dvd->\u53bb\u62ff\u7206\u7c73\u82b1->\u8c03\u6697\u706f\u5149->\u64ad\u653e-> \u89c2\u5f71\u7ed3\u675f\u540e\uff0c\u5173\u95ed\u5404\u79cd\u8bbe\u5907\u3002 \u4f20\u7edf\u65b9\u5f0f\u89e3\u51b3 \u00b6 \u4e3a\u6bcf\u4e2a\u7528\u54c1\u521b\u5efa\u5bf9\u5e94\u7684\u7c7b\u4e0e\u5bf9\u8c61\uff0c\u4ee5\u53ca\u9700\u8981\u4f7f\u7528\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\uff0c\u7136\u540e\u8fdb\u884c\u8c03\u7528\u3002\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u5b58\u5728\u8f83\u5927\u7684\u95ee\u9898\u548c\u590d\u6742\u5ea6\u3002 \u521b\u5efa\u5404\u4e2a\u5b50\u7cfb\u7edf\u7684\u5bf9\u8c61\uff0c\u5e76\u76f4\u63a5\u53bb\u8c03\u7528\u5b50\u7cfb\u7edf\uff08\u5bf9\u8c61\uff09\u76f8\u5173\u65b9\u6cd5\uff0c\u4f1a\u9020\u6210\u8c03\u7528\u8fc7\u7a0b\u6df7\u4e71\uff0c\u6ca1\u6709\u6e05\u6670\u7684\u8fc7\u7a0b\u3002\u4e0d\u5229\u4e8e\u53bb\u7ef4\u62a4\u5bf9\u5b50\u7cfb\u7edf\u7684\u64cd\u4f5c\u3002 \u89e3\u51b3\u601d\u8def \uff1a\u5b9a\u4e49\u4e00\u4e2a\u9ad8\u5c42\u63a5\u53e3\uff0c\u7ed9\u5b50\u7cfb\u7edf\u4e2d\u7684\u4e00\u7ec4\u63a5\u53e3\u63d0\u4f9b\u4e00\u4e2a\u4e00\u81f4\u7684\u754c\u9762(\u6bd4\u5982\u5728\u9ad8\u5c42\u63a5\u53e3\u63d0\u4f9b\u56db\u4e2a\u65b9\u6cd5ready, play, pause, end )\uff0c\u7528\u6765\u8bbf\u95ee\u5b50\u7cfb\u7edf\u4e2d\u7684\u4e00\u7fa4\u63a5\u53e3\u3002 \u4e5f\u5c31\u662f\u8bf4 \u5c31\u662f\u901a\u8fc7\u5b9a\u4e49\u4e00\u4e2a\u4e00\u81f4\u7684\u63a5\u53e3(\u754c\u9762\u7c7b)\uff0c\u7528\u4ee5\u5c4f\u853d\u5185\u90e8\u5b50\u7cfb\u7edf\u7684\u7ec6\u8282\uff0c\u4f7f\u5f97\u8c03\u7528\u7aef\u53ea\u9700\u8ddf\u8fd9\u4e2a\u63a5\u53e3\u53d1 \u751f\u8c03\u7528\uff0c\u800c\u65e0\u9700\u5173\u5fc3\u8fd9\u4e2a\u5b50\u7cfb\u7edf\u7684\u5185\u90e8\u7ec6\u8282 => \u5916\u89c2\u6a21\u5f0f\u3002\uff08\u81ea\u6211\u611f\u89c9\u5c31\u662f\u52a0\u4e86\u4e00\u5c42\uff0c\u6ca1\u4ec0\u4e48\u662f\u52a0\u4e00\u5c42\u89e3\u51b3\u4e0d\u4e86\u7684\uff0c\u5982\u679c\u6709\uff0c\u90a3\u5c31\u518d\u52a0\u4e00\u5c42\uff09\u3002 \u5916\u89c2\u6a21\u5f0f\u4ecb\u7ecd \u00b6 \u5916\u89c2\u6a21\u5f0f\uff08Facade\uff09\uff0c\u4e5f\u53eb\u8fc7\u7a0b\u6a21\u5f0f\uff1a\u5916\u89c2\u6a21\u5f0f\u4e3a\u5b50\u7cfb\u7edf\u4e2d\u7684\u4e00\u7ec4\u63a5\u53e3\u63d0\u4f9b\u4e00\u4e2a\u4e00\u81f4\u7684\u754c\u9762\uff0c\u6b64\u6a21\u5f0f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u9ad8\u5c42\u63a5\u53e3\uff0c\u8fd9\u4e2a\u63a5\u53e3\u4f7f\u5f97\u8fd9\u4e00\u5b50\u7cfb\u7edf\u66f4\u52a0\u5bb9\u6613\u4f7f\u7528\u3002\u5916\u89c2\u6a21\u5f0f\u901a\u8fc7\u5b9a\u4e49\u4e00\u4e2a\u4e00\u81f4\u7684\u63a5\u53e3\uff0c\u7528\u4ee5\u5c4f\u853d\u5185\u90e8\u5b50\u7cfb\u7edf\u7684\u7ec6\u8282\uff0c\u4f7f\u5f97\u8c03\u7528\u7aef\u53ea\u9700\u8ddf\u8fd9\u4e2a\u63a5\u53e3\u53d1\u751f\u8c03\u7528\uff0c\u800c\u65e0\u9700\u5173\u5fc3\u8fd9\u4e2a\u5b50\u7cfb\u7edf\u7684\u5185\u90e8\u7ec6\u8282\u3002 \u4e0b\u9762\u662f\u4ee3\u7801\u793a\u4f8b public class DVDPlayer { // \u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\uff0c\u997f\u6c49\u5f0f private static DVDPlayer instance = new DVDPlayer (); public static DVDPlayer getInstance (){ return instance ; } public void on (){ System . out . println ( \" dvd on \" ); } public void off (){ System . out . println ( \"dvd off\" ); } public void play (){ System . out . println ( \"dvd is playing\" ); } public void pause (){ System . out . println ( \"dvd pause\" ); } } \u4e0a\u9762\u7684\u4ee3\u7801\u662fDVDPlayer\u7684\u4e00\u4e9b\u64cd\u4f5c public class Screen { private static Screen instance = new Screen (); public static Screen getInstance (){ return instance ; } public void up (){ System . out . println ( \" screen up \" ); } public void down (){ System . out . println ( \" screen down \" ); } } \u4e0a\u9762\u662fScreen\u5c4f\u5e55\u7684\u4e00\u4e9b\u64cd\u4f5c\u3002\u8fd8\u6709\u8bb8\u591a\u7684\u64cd\u4f5c\u4e0e\u4e0a\u8ff0\u60c5\u51b5\u7c7b\u4f3c\uff0c\u4e0d\u518d\u5199\u4e86\uff0c\u4e0b\u9762\u662f \u591a\u52a0\u7684\u90a3\u4e00\u5c42 \uff0c\u4e5f\u5c31\u662f\u8c03\u7528\u5404\u4e2a\u5b50\u7cfb\u7edf\u7684\u63a5\u53e3\u3002 public class HomeTheaterFacade { // \u5b9a\u4e49\u5404\u4e2a\u5b50\u7cfb\u7edf\u7684\u5bf9\u8c61 private TheaterLight theaterLight ; private Popcorn popcorn ; private Projector projector ; private Screen screen ; private Setero setero ; private DVDPlayer dvdPlayer ; public HomeTheaterFacade () { this . theaterLight = TheaterLight . getInstance (); this . popcorn = Popcorn . getInstance (); this . projector = Projector . getInstance (); this . screen = Screen . getInstance (); this . setero = Setero . getInstance (); this . dvdPlayer = DVDPlayer . getInstance (); } // \u64cd\u4f5c\u5206\u4e3a4\u6b65 public void ready (){ popcorn . on (); popcorn . pop (); screen . down (); projector . on (); setero . on (); dvdPlayer . on (); theaterLight . dim (); } public void play (){ dvdPlayer . play (); } public void pause (){ dvdPlayer . pause (); } public void end (){ popcorn . off (); theaterLight . bright (); screen . up (); projector . off (); setero . off (); dvdPlayer . off (); } } \u6700\u540e\u662f\u8c03\u7528\u8fd9\u4e2a\u7c7b\uff0c\u6765\u5b8c\u6210\u5bb6\u5ead\u5f71\u9662\u7684\u529f\u80fd\u3002 public static void main ( String [] args ) { HomeTheaterFacade homeTheaterFacade = new HomeTheaterFacade (); homeTheaterFacade . ready (); homeTheaterFacade . play (); } \u6ce8\u610f\u4e8b\u9879\u548c\u7ec6\u8282 \u00b6 \u5916\u89c2\u6a21\u5f0f\u5bf9\u5916\u5c4f\u853d\u4e86\u5b50\u7cfb\u7edf\u7684\u7ec6\u8282\uff0c\u56e0\u6b64\u5916\u89c2\u6a21\u5f0f\u964d\u4f4e\u4e86\u5ba2\u6237\u7aef\u5bf9\u5b50\u7cfb\u7edf\u4f7f\u7528\u7684\u590d\u6742\u6027 \u5916\u89c2\u6a21\u5f0f\u5bf9\u5ba2\u6237\u7aef\u4e0e\u5b50\u7cfb\u7edf\u7684\u8026\u5408\u5173\u7cfb - \u89e3\u8026\uff0c\u8ba9\u5b50\u7cfb\u7edf\u5185\u90e8\u7684\u6a21\u5757\u66f4\u6613\u7ef4\u62a4\u548c\u6269\u5c55 \u901a\u8fc7\u5408\u7406\u7684\u4f7f\u7528\u5916\u89c2\u6a21\u5f0f\uff0c\u53ef\u4ee5\u5e2e\u6211\u4eec\u66f4\u597d\u7684\u5212\u5206\u8bbf\u95ee\u7684\u5c42\u6b21 \u5f53\u7cfb\u7edf\u9700\u8981\u8fdb\u884c\u5206\u5c42\u8bbe\u8ba1\u65f6\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 Facade \u6a21\u5f0f \u5728\u7ef4\u62a4\u4e00\u4e2a\u9057\u7559\u7684\u5927\u578b\u7cfb\u7edf\u65f6\uff0c\u53ef\u80fd\u8fd9\u4e2a\u7cfb\u7edf\u5df2\u7ecf\u53d8\u5f97\u975e\u5e38\u96be\u4ee5\u7ef4\u62a4\u548c\u6269\u5c55\uff0c\u6b64\u65f6\u53ef\u4ee5\u8003\u8651\u4e3a\u65b0\u7cfb\u7edf\u5f00\u53d1\u4e00\u4e2a Facade \u7c7b\uff0c\u6765\u63d0\u4f9b\u9057\u7559\u7cfb\u7edf\u7684\u6bd4\u8f83\u6e05\u6670\u7b80\u5355\u7684\u63a5\u53e3\uff0c\u8ba9\u65b0\u7cfb\u7edf\u4e0e Facade \u7c7b\u4ea4\u4e92\uff0c\u63d0\u9ad8\u590d\u7528\u6027 \u4e0d\u80fd\u8fc7\u591a\u7684\u6216\u8005\u4e0d\u5408\u7406\u7684\u4f7f\u7528\u5916\u89c2\u6a21\u5f0f\uff0c\u4f7f\u7528\u5916\u89c2\u6a21\u5f0f\u597d\uff0c\u8fd8\u662f\u76f4\u63a5\u8c03\u7528\u6a21\u5757\u597d\u3002\u8981\u4ee5\u8ba9\u7cfb\u7edf\u6709\u5c42\u6b21\uff0c\u5229\u4e8e\u7ef4\u62a4\u4e3a\u76ee\u7684\u3002","title":"\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"Java/designpattern/designpattern/#java","text":"","title":"\u8bbe\u8ba1\u6a21\u5f0f(Java)"},{"location":"Java/designpattern/designpattern/#_1","text":"\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\uff0c \u8bbe\u8ba1\u6a21\u5f0f \u662f\u5bf9\u8f6f\u4ef6\u8bbe\u8ba1\u8fc7\u7a0b\u4e2d\u666e\u904d\u5b58\u5728\uff08\u53cd\u590d\u51fa\u73b0\uff09\u7684\u5404\u79cd\u95ee\u9898\uff0c\u6240\u63d0\u51fa\u7684\u89e3\u51b3\u65b9\u6848\u3002\u8fd9\u4e9b\u89e3\u51b3\u65b9\u6848\u662f\u4f17\u591a\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u7ecf\u8fc7\u76f8\u5f53\u957f\u7684\u4e00\u6bb5\u65f6\u95f4\u7684\u8bd5\u9a8c\u548c\u9519\u8bef\u603b\u7ed3\u51fa\u6765\u7684\u3002\u8bbe\u8ba1\u6a21\u5f0f\u4ee3\u8868\u4e86\u6700\u4f73\u7684\u5b9e\u8df5\uff0c\u8fd9\u4e2a\u672f\u8bed\u662f\u7531\u57c3\u91cc\u5e0c\u00b7\u4f3d\u739b\uff08Erich Gamma\uff09\u7b49\u4eba\u57281990\u5e74\u4ee3\u4ece\u5efa\u7b51\u8bbe\u8ba1\u9886\u57df\u5f15\u5165\u5230\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u3002","title":"\u4e00\u3001\u4ec0\u4e48\u662f\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"Java/designpattern/designpattern/#_2","text":"","title":"\u4e8c\u3001\u8bbe\u8ba1\u6a21\u5f0f\u7684\u76ee\u7684\u548c\u539f\u5219"},{"location":"Java/designpattern/designpattern/#1","text":"\u5728\u7f16\u5199\u8f6f\u4ef6\u8fc7\u7a0b\u4e2d\uff0c\u7a0b\u5e8f\u5458\u9762\u4e34\u7740\u6765\u81ea \u8026\u5408\u6027\uff0c\u5185\u805a\u6027\u4ee5\u53ca\u53ef\u7ef4\u62a4\u6027\uff0c\u53ef\u6269\u5c55\u6027\uff0c\u91cd\u7528\u6027\uff0c\u7075\u6d3b\u6027 \u7b49\u591a\u65b9\u9762\u7684\u6311\u6218\uff0c\u8bbe\u8ba1\u6a21\u5f0f\u662f\u4e3a\u4e86\u8ba9\u7a0b\u5e8f(\u8f6f\u4ef6)\u5177\u6709\u66f4\u597d\u7684\uff1a \u4ee3\u7801\u91cd\u7528\u6027\uff08\u76f8\u540c\u529f\u80fd\u7684\u4ee3\u7801\uff0c\u4e0d\u7528\u591a\u6b21\u7f16\u5199\uff09 \u53ef\u8bfb\u6027\uff08\u7f16\u7a0b\u89c4\u8303\u6027\uff0c\u4fbf\u4e8e\u5176\u5b83\u7a0b\u5e8f\u5458\u7684\u9605\u8bfb\u548c\u7406\u89e3\uff09 \u53ef\u6269\u5c55\u6027\uff08\u5f53\u9700\u8981\u65b0\u589e\u529f\u80fd\u65f6\uff0c\u975e\u5e38\u7684\u65b9\u4fbf\uff09 \u53ef\u9760\u6027\uff08\u5f53\u6211\u4eec\u65b0\u589e\u65b0\u7684\u529f\u80fd\u540e\uff0c\u5bf9\u539f\u6765\u7684\u529f\u80fd\u6ca1\u6709\u5f71\u54cd\uff09 \u4f7f\u7a0b\u5e8f\u5448\u73b0\u9ad8\u5185\u805a\uff0c\u4f4e\u8026\u5408\u7684\u7279\u6027","title":"1\u3001\u76ee\u7684"},{"location":"Java/designpattern/designpattern/#2","text":"\u8bbe\u8ba1\u6a21\u5f0f\u7684\u539f\u5219\uff0c\u5176\u5b9e\u5c31\u662f\u7a0b\u5e8f\u5458\u5728\u7f16\u7a0b\u65f6\uff0c\u5e94\u5f53\u9075\u5b88\u7684\u89c4\u5219\uff0c\u4e5f\u5c31\u662f\u5404\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u7684\u57fa\u7840\uff0c\u4e0b\u9762\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u5e38\u7528\u7684\u4e03\u5927\u539f\u5219\uff1a \u5355\u4e00\u804c\u8d23\u539f\u5219\u3001\u63a5\u53e3\u9694\u79bb\u539f\u5219\u3001\u4f9d\u8d56\u5012\u8f6c\uff08\u5012\u7f6e\uff09\u539f\u5219\u3001\u91cc\u6c0f\u66ff\u6362\u539f\u5219\u3001\u5f00\u95ed\u539f\u5219\u3001\u8fea\u7c73\u7279\u6cd5\u5219\u3001\u5408\u6210\u590d\u7528\u539f\u5219 \u3002","title":"2\u3001\u539f\u5219"},{"location":"Java/designpattern/designpattern/#1_1","text":"\u5bf9\u7c7b\u6765\u8bf4\uff0c \u4e00\u4e2a\u7c7b\u5e94\u8be5\u53ea\u8d1f\u8d23\u4e00\u9879\u539f\u5219 \uff0c\u5982\u679c\u7c7bA\u8d1f\u8d23\u4e24\u4e2a\u4e0d\u540c\u804c\u8d23\uff1a\u804c\u8d231\u3001\u804c\u8d232\u3002\u5f53\u804c\u8d231\u9700\u6c42\u53d8\u66f4\u800c\u6539\u53d8A\u65f6\uff0c\u53ef\u80fd\u9020\u6210\u804c\u8d232\u6267\u884c\u9519\u8bef\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u7c7bA\u7684\u7c92\u5ea6\u5206\u89e3\u4e3aA1\u3001A2\u3002\u4e0b\u9762\u4ee5\u4ee5\u4ea4\u901a\u5de5\u5177\u4e3a\u6848\u4f8b\u8bb2\u89e3\u3002 \uff081\uff09\u6848\u4f8b1 package com.principle.singleresponsibility ; public class SingleResponsibility1 { public static void main ( String [] args ) { Vehicle vehicle = new Vehicle (); vehicle . run ( \"\u6c7d\u8f66\" ); vehicle . run ( \"\u6469\u6258\u8f66\" ); vehicle . run ( \"\u98de\u673a\" ); } } // \u4ea4\u901a\u5de5\u5177\u7c7b class Vehicle { public void run ( String vehicle ){ System . out . println ( vehicle + \"\u5728\u516c\u8def\u4e0a\u8fd0\u884c\u3002\u3002\u3002\" ); } } \u5728\u8fd9\u79cd\u65b9\u5f0f\u7684run\u65b9\u6cd5\u4e2d\uff0c\u8fdd\u80cc\u4e86 \u5355\u4e00\u804c\u8d23\u539f\u5219 \uff0c\u4e0b\u9762\u662f\u89e3\u51b3\u65b9\u6cd5\uff0c\u6839\u636e\u4ea4\u901a\u5de5\u5177\u8fd0\u884c\u7684\u65b9\u6cd5\u4e0d\u540c\uff0c\u5206\u89e3\u6210\u4e0d\u540c\u7684\u7c7b\u3002 \uff082\uff09\u6848\u4f8b2 package com.principle.singleresponsibility ; public class SingleResponsibility2 { public static void main ( String [] args ) { RoadVehicle roadVehicle = new RoadVehicle (); roadVehicle . run ( \"\u6c7d\u8f66\" ); roadVehicle . run ( \"\u6469\u6258\u8f66\" ); AirVehicle airVehicle = new AirVehicle (); airVehicle . run ( \"\u98de\u673a\" ); } } // \u5355\u4e00\u804c\u8d23\u539f\u5219\uff0c\u4f46\u662f\u6539\u52a8\u5f88\u5927 class RoadVehicle { public void run ( String vehicle ){ System . out . println ( vehicle + \"\u5728\u516c\u8def\u8fd0\u884c\" ); } } class AirVehicle { public void run ( String vehicle ){ System . out . println ( vehicle + \"\u5728\u5929\u7a7a\u8fd0\u884c\" ); } } class WaterVehicle { public void run ( String vehicle ){ System . out . println ( vehicle + \"\u5728\u6c34\u4e0a\u8fd0\u884c\" ); } } \u8fd9\u79cd\u65b9\u5f0f\u9075\u5faa\u4e86\u5355\u4e00\u804c\u8d23\u539f\u5219\uff0c\u4f46\u662f\u8fd9\u6837\u505a\u7684\u6539\u52a8\u5f88\u5927\uff0c\u5373 \u5c06\u7c7b\u5206\u89e3 \uff0c\u540c\u65f6\u4fee\u6539\u4e86\u5ba2\u6237\u7aef\uff0c\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539Vehicle\u7c7b\uff0c\u6539\u52a8\u7684\u4ee3\u7801\u4f1a\u6bd4\u8f83\u5c11\u3002 \uff083\uff09\u6848\u4f8b3 package com.principle.singleresponsibility ; public class SingleResponsibility3 { public static void main ( String [] args ) { Vehicle2 vehicle2 = new Vehicle2 (); vehicle2 . run ( \"\u6c7d\u8f66\" ); vehicle2 . runWater ( \"\u8f6e\u8239\" ); vehicle2 . runAir ( \"\u98de\u673a\" ); } } class Vehicle2 { public void run ( String vehicle ){ System . out . println ( vehicle + \"\u5728\u516c\u8def\u4e0a\u8fd0\u884c\u3002\u3002\u3002\" ); } public void runAir ( String vehicle ){ System . out . println ( vehicle + \"\u5728\u5929\u7a7a\u8fd0\u884c\u3002\u3002\u3002\" ); } public void runWater ( String vehicle ){ System . out . println ( vehicle + \"\u5728\u6c34\u4e2d\u8fd0\u884c\u3002\u3002\u3002\" ); } } \u8fd9\u79cd\u4fee\u6539\u65b9\u6cd5\u6ca1\u6709\u5bf9\u539f\u6765\u7684\u7c7b\u505a\u5f88\u5927\u7684\u4fee\u6539\uff0c\u53ea\u662f\u589e\u52a0\u4e86\u65b9\u6cd5\uff0c\u8fd9\u91cc\u867d\u7136 \u6ca1\u6709\u5728\u7c7b\u7ea7\u522b\u4e0a\u9075\u5b88\u5355\u4e00\u804c\u8d23\u539f\u5219 \uff0c\u4f46\u662f \u5728\u65b9\u6cd5\u7ea7\u522b\u4e0a\uff0c\u4ecd\u7136\u662f\u9075\u5b88\u5355\u4e00\u804c\u8d23\u7684 \u3002 \uff084\uff09\u6ce8\u610f\u7684\u4e8b\u9879\u548c\u7ec6\u8282 \u964d\u4f4e\u7c7b\u7684 \u590d\u6742\u5ea6 \uff0c\u4e00\u4e2a\u7c7b\u53ea\u8d1f\u8d23\u4e00\u9879\u804c\u8d23\u3002 \u63d0\u9ad8\u7c7b\u7684 \u53ef\u8bfb\u6027\uff0c\u53ef\u7ef4\u62a4\u6027 \u3002 \u964d\u4f4e\u53d8\u66f4\u5f15\u8d77\u7684\u98ce\u9669\u3002 \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e94\u5f53\u9075\u5b88\u5355\u4e00\u804c\u8d23\u539f\u5219\uff0c\u53ea\u8981\u903b\u8f91\u8db3\u591f\u7b80\u5355\uff0c\u624d\u53ef\u4ee5\u5728\u4ee3\u7801\u7ea7\u8fdd\u53cd\u5355\u4e00\u804c\u8d23\u539f\u5219\uff1b\u53ea\u6709\u7c7b\u4e2d\u65b9\u6cd5\u8db3\u591f\u5c11\uff0c\u53ef\u4ee5\u5728\u65b9\u6cd5\u7ea7\u522b\u4fdd\u6301\u5355\u4e00\u804c\u8d23\u539f\u5219\u3002","title":"1\u3001\u5355\u4e00\u804c\u8d23\u539f\u5219"},{"location":"Java/designpattern/designpattern/#2_1","text":"\u5ba2\u6237\u7aef\u4e0d\u5e94\u8be5\u4f9d\u8d56\u5b83\u4e0d\u9700\u8981\u7684\u63a5\u53e3\uff0c\u5373 \u4e00\u4e2a\u7c7b\u5bf9\u53e6\u4e00\u4e2a\u7c7b\u7684\u4f9d\u8d56\u5e94\u8be5\u5efa\u7acb\u5728\u6700\u5c0f\u7684\u63a5\u53e3 \u4e0a\u3002\u4ee5\u4e0b\u56fe\u4e3a\u4f8b\u3002 \u56fe\u4e2d\u6848\u4f8b\uff0c\u7c7bA\u901a\u8fc7\u63a5\u53e3Interface1\u4f9d\u8d56\u7c7bB\uff0c\u7c7bC\u901a\u8fc7\u63a5\u53e3Interface1\u4f9d\u8d56\u7c7bD\uff0c\u5982\u679c\u63a5\u53e3Interface1\u5bf9\u4e8e\u7c7bA\u548c\u7c7bC\u6765\u8bf4\u4e0d\u662f\u6700\u5c0f\u63a5\u53e3\uff0c\u90a3\u4e48\u7c7bB\u548c\u7c7bD\u5fc5\u987b\u8981\u53bb\u5b9e\u73b0\u5b83\u4eec\u4e0d\u9700\u8981\u7684\u65b9\u6cd5\u3002\u6839\u636e\u63a5\u53e3\u9694\u79bb\u539f\u5219\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06Interface1 \u62c6\u5206\u4e3a\u72ec\u7acb\u7684\u51e0\u4e2a\u63a5\u53e3 \uff0c\u7c7bA\u548c\u7c7bC \u5206\u522b\u4e0e\u5b83\u4eec\u9700\u8981\u7684\u63a5\u53e3\u5efa\u7acb\u4f9d\u8d56\u5173\u7cfb \u3002\u4e0b\u9762\u901a\u8fc7\u6848\u4f8b\u6765\u5bf9\u63a5\u53e3\u9694\u79bb\u539f\u5219\u8fdb\u884c\u89e3\u91ca\u3002 \uff081\uff09\u6848\u4f8b1 \u8fd9\u4e2a\u6848\u4f8b\u662f\u6700\u539f\u59cb\u7684\u6848\u4f8b\uff0c\u4e5f\u5c31\u662f\u4e0a\u56fe\u4e2d\u6ca1\u6709\u4f7f\u7528\u63a5\u53e3\u9694\u79bb\u539f\u5219\u7684\u4ee3\u7801\u3002 package com.principle.segregation ; public class Segregation1 { } interface Interface1 { void operation1 (); void operation2 (); void operation3 (); void operation4 (); void operation5 (); } class B implements Interface1 { @Override public void operation1 () { System . out . println ( \"B\u5b9e\u73b0\u4e86operation1\" ); } @Override public void operation2 () { System . out . println ( \"B\u5b9e\u73b0\u4e86operation2\" ); } @Override public void operation3 () { System . out . println ( \"B\u5b9e\u73b0\u4e86operation3\" ); } @Override public void operation4 () { System . out . println ( \"B\u5b9e\u73b0\u4e86operation4\" ); } @Override public void operation5 () { System . out . println ( \"B\u5b9e\u73b0\u4e86operation5\" ); } } class D implements Interface1 { @Override public void operation1 () { System . out . println ( \"D\u5b9e\u73b0\u4e86operation1\" ); } @Override public void operation2 () { System . out . println ( \"D\u5b9e\u73b0\u4e86operation2\" ); } @Override public void operation3 () { System . out . println ( \"D\u5b9e\u73b0\u4e86operation3\" ); } @Override public void operation4 () { System . out . println ( \"D\u5b9e\u73b0\u4e86operation4\" ); } @Override public void operation5 () { System . out . println ( \"D\u5b9e\u73b0\u4e86operation5\" ); } } class A { // A\u7c7b\u901a\u8fc7\u63a5\u53e3Interface1 \u4f9d\u8d56B\u7c7b\uff0c\u4f46\u662f\u53ea\u4f1a\u4f7f\u7528\u5230123\u65b9\u6cd5 public void depend1 ( Interface1 i ){ i . operation1 (); } public void depend2 ( Interface1 i ){ i . operation2 (); } public void depend3 ( Interface1 i ){ i . operation3 (); } } class C { // C\u7c7b\u901a\u8fc7\u63a5\u53e3Interface1 \u4f9d\u8d56D\u7c7b\uff0c\u4f46\u662f\u53ea\u4f1a\u4f7f\u7528\u5230145\u65b9\u6cd5 public void depend1 ( Interface1 i ){ i . operation1 (); } public void depend4 ( Interface1 i ){ i . operation4 (); } public void depend5 ( Interface1 i ){ i . operation5 (); } } \u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0c\u6ca1\u6709\u5c06Interface1\u62c6\u5206\uff0c\u4ece\u800c\u7834\u574f\u4e86\u63a5\u53e3\u9694\u79bb\u539f\u5219\uff0c\u53ef\u4ee5\u5c06Interface1\u8fdb\u884c\u62c6\u5206\u4e3a\u51e0\u4e2a\u72ec\u7acb\u7684\u63a5\u53e3\uff0c\u7c7bA\u548c\u7c7bC\u5206\u522b\u4e0e\u5b83\u4eec\u9700\u8981\u7684\u63a5\u53e3\u5efa\u7acb\u4f9d\u8d56\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u91c7\u7528\u63a5\u53e3\u9694\u79bb\u539f\u5219\uff0c\u770b\u4e0b\u4e00\u4e2a\u6848\u4f8b\u3002 \uff082\uff09\u6848\u4f8b2 \u5c06Interface1\u62c6\u5206\u4e3a\u4e09\u4e2a\u63a5\u53e3\uff0c\u5982\u4e0b\u56fe\u3002 \u7c7bA\u6839\u636e\u9700\u8981\u4f9d\u8d56Interface1\u548c2\uff0c\u7c7bC\u6839\u636e\u9700\u8981\u4f9d\u8d56Interface2\u548c3\uff0c\u6848\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a package com.principle.segregation.improve ; public class Segregation1 { public static void main ( String [] args ) { A a = new A (); a . depend1 ( new B ()); //A\u7c7b\u901a\u8fc7\u63a5\u53e3\u53bb\u4f9d\u8d56 a . depend2 ( new B ()); a . depend3 ( new B ()); C c = new C (); c . depend1 ( new D ()); c . depend4 ( new D ()); c . depend5 ( new D ()); } } interface Interface1 { void operation1 (); } interface Interface2 { void operation2 (); void operation3 (); } interface Interface3 { void operation4 (); void operation5 (); } class B implements Interface1 , Interface2 { @Override public void operation1 () { System . out . println ( \"B\u5b9e\u73b0\u4e86operation1\" ); } @Override public void operation2 () { System . out . println ( \"B\u5b9e\u73b0\u4e86operation2\" ); } @Override public void operation3 () { System . out . println ( \"B\u5b9e\u73b0\u4e86operation3\" ); } } class D implements Interface1 , Interface3 { @Override public void operation1 () { System . out . println ( \"D\u5b9e\u73b0\u4e86operation1\" ); } @Override public void operation4 () { System . out . println ( \"D\u5b9e\u73b0\u4e86operation4\" ); } @Override public void operation5 () { System . out . println ( \"D\u5b9e\u73b0\u4e86operation5\" ); } } class A { // A\u7c7b\u901a\u8fc7\u63a5\u53e3Interface1,Interface2 \u4f9d\u8d56B\u7c7b\uff0c\u4f46\u662f\u53ea\u4f1a\u4f7f\u7528\u5230123\u65b9\u6cd5 public void depend1 ( Interface1 i ){ i . operation1 (); } public void depend2 ( Interface2 i ){ i . operation2 (); } public void depend3 ( Interface2 i ){ i . operation3 (); } } class C { // C\u7c7b\u901a\u8fc7\u63a5\u53e3Interface1,interface3 \u4f9d\u8d56D\u7c7b\uff0c\u4f46\u662f\u53ea\u4f1a\u4f7f\u7528\u5230145\u65b9\u6cd5 public void depend1 ( Interface1 i ){ i . operation1 (); } public void depend4 ( Interface3 i ){ i . operation4 (); } public void depend5 ( Interface3 i ){ i . operation5 (); } } \u6848\u4f8b\u4e2d\u7c7bB\u548c\u7c7bD\u5206\u522b\u5b9e\u73b0\u4e86\u7c7bA\u548c\u7c7bC\u9700\u8981\u7684\u63a5\u53e3\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u63a5\u53e3\u9694\u79bb\u539f\u5219\u3002","title":"2\u3001\u63a5\u53e3\u9694\u79bb\u539f\u5219"},{"location":"Java/designpattern/designpattern/#3","text":"\u4f9d\u8d56\u5012\u8f6c\u539f\u5219\u662f\u6307\uff1a\u9ad8\u5c42\u6a21\u5757\u4e0d\u5e94\u8be5\u4f9d\u8d56\u5e95\u5c42\u6a21\u5757\uff0c\u4e8c\u8005\u90fd\u5e94\u8be5\u4f9d\u8d56\u5176\u62bd\u8c61\uff1b \u62bd\u8c61\u4e0d\u5e94\u8be5\u4f9d\u8d56\u7ec6\u8282\uff0c\u7ec6\u8282\u5e94\u8be5\u4f9d\u8d56\u62bd\u8c61 \uff1b\u4e2d\u5fc3\u601d\u60f3\u662f \u9762\u5411\u63a5\u53e3\u7f16\u7a0b \uff1b\u8bbe\u8ba1\u7406\u5ff5\uff1a\u76f8\u5bf9\u4e8e\u7ec6\u8282\u7684\u591a\u53d8\u6027\uff0c\u62bd\u8c61\u7684\u4e1c\u897f\u8981\u7a33\u5b9a\u7684\u591a\uff0c\u4ee5\u62bd\u8c61\u4e3a\u57fa\u7840\u642d\u5efa\u7684\u67b6\u6784\u6bd4\u4ee5\u7ec6\u8282\u4e3a\u57fa\u7840\u7684\u67b6\u6784\u8981\u7a33\u5b9a\u7684\u591a\uff08\u5728Java\u4e2d\uff0c\u62bd\u8c61\u6307\u7684\u662f\u63a5\u53e3\u6216\u62bd\u8c61\u7c7b\uff0c\u7ec6\u8282\u5c31\u662f\u5177\u4f53\u7684\u5b9e\u73b0\u7c7b\uff09\u3002\u4f7f\u7528\u63a5\u53e3\u6216\u62bd\u8c61\u7c7b\u7684\u76ee\u7684\u662f\u5236\u5b9a\u597d\u89c4\u8303\uff0c\u800c\u4e0d\u6d89\u53ca\u4efb\u4f55\u5177\u4f53\u7684\u64cd\u4f5c\uff0c\u628a\u5c55\u73b0\u7ec6\u8282\u7684\u4efb\u52a1\u4ea4\u7ed9\u4ed6\u4eec\u7684\u5b9e\u73b0\u7c7b\u53bb\u5b8c\u6210\u3002 (1)\u6848\u4f8b1 \u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0c\u5b9e\u73b0\u4e86Person\u63a5\u6536\u6d88\u606f\u7684\u529f\u80fd\u3002 package com.principle.inversion ; public class DependencyInversion { public static void main ( String [] args ) { Person person = new Person (); person . receive ( new Email ()); } } class Email { public String getInfo (){ return \"\u7535\u5b50\u90ae\u4ef6\u4fe1\u606f:hello world!\" ; } } // \u5b8c\u6210Person\u63a5\u6536\u6d88\u606f\u7684\u529f\u80fd // \u65b9\u5f0f1 class Person { public void receive ( Email email ){ System . out . println ( email . getInfo ()); } } \u4f46\u662f\u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0cPerson\u901a\u8fc7Email\u53d1\u9001\u6d88\u606f\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u901a\u8fc7\u5fae\u4fe1\u3001\u77ed\u4fe1\u7b49\u53d1\u9001\u6d88\u606f\uff0c\u6211\u4eec\u9700\u8981\u65b0\u589e\u7c7b\uff0c\u540c\u65f6\u4e5f\u8981\u5728Person\u4e2d\u65b0\u589e\u76f8\u5e94\u7684\u63a5\u6536\u65b9\u6cd5\u3002 \uff082\uff09\u6848\u4f8b2 \u5bf9\u4e0a\u4e00\u4e2a\u6848\u4f8b\u7684\u6539\u8fdb\uff0c\u5f15\u5165\u4e00\u4e2a\u62bd\u8c61\u63a5\u53e3IReceiver\uff0c\u8868\u793a\u63a5\u6536\u8005\uff0c\u8fd9\u6837Person\u7c7b\u4e0e\u63a5\u53e3IReceiver\u53d1\u751f\u4f9d\u8d56\uff0c\u56e0\u4e3aEmail,WeiXin\u7b49\u7b49\u5c5e\u4e8e\u63a5\u6536\u8303\u56f4\uff0c\u5b83\u4eec\u5404\u81ea\u5b9e\u73b0IReceiver\u63a5\u53e3\u5c31\u884c\u4e86\uff0c\u8fd9\u6837\u5c31\u662f\u4f9d\u8d56\u5012\u8f6c\u539f\u5219\u3002 package com.principle.inversion.improve ; public class DependencyInversion { public static void main ( String [] args ) { Person person = new Person (); person . receive ( new Email ()); person . receive ( new WeiXin ()); } } // \u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3 interface IReceiver { public String getInfo (); } class Email implements IReceiver { public String getInfo (){ return \"\u7535\u5b50\u90ae\u4ef6\u4fe1\u606f:hello world!\" ; } } // \u589e\u52a0\u5fae\u4fe1 class WeiXin implements IReceiver { @Override public String getInfo () { return \"\u5fae\u4fe1\u6d88\u606f:hello wechat\" ; } } // \u5b8c\u6210Person\u63a5\u6536\u6d88\u606f\u7684\u529f\u80fd // \u65b9\u5f0f2 class Person { public void receive ( IReceiver receiver ){ System . out . println ( receiver . getInfo ()); } } \u4ee5\u4e0a\u6848\u4f8b\u901a\u8fc7\u63a5\u53e3\u6765\u5b9e\u73b0\u4f9d\u8d56\u5012\u8f6c\u539f\u5219\u3002 \uff083\uff09\u4e09\u79cd\u5b9e\u73b0\u4f9d\u8d56\u5012\u8f6c\u7684\u65b9\u5f0f \u5b9e\u73b0\u4f9d\u8d56\u5012\u8f6c\u9664\u4e86\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684\u63a5\u53e3\u4f20\u9012\u7684\u65b9\u5f0f\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u4f20\u9012\u548csetter\u65b9\u5f0f\u4f20\u9012\u3002 package com.principle.inversion ; public class DependencyPass { public static void main ( String [] args ) { ChangHong changHong1 = new ChangHong (); OpenAndClose openAndClose = new OpenAndClose (); openAndClose . open ( changHong1 ); // \u901a\u8fc7\u6784\u9020\u5668\u8fdb\u884c\u4f9d\u8d56\u4f20\u9012 OpenAndClose1 openAndClose1 = new OpenAndClose1 ( changHong1 ); openAndClose1 . open (); // \u901a\u8fc7 setter \u65b9\u6cd5\u8fdb\u884c\u4f9d\u8d56\u4f20\u9012 ChangHong2 changHong2 = new ChangHong2 (); OpenAndClose2 openAndClose2 = new OpenAndClose2 (); openAndClose2 . setTv ( changHong2 ); openAndClose2 . open (); } } // \u65b9\u5f0f 1\uff1a \u901a\u8fc7\u63a5\u53e3\u4f20\u9012\u5b9e\u73b0\u4f9d\u8d56 // \u5f00\u5173\u7684\u63a5\u53e3 interface IOpenAndClose { public void open ( ITV tv ); // \u62bd\u8c61\u65b9\u6cd5,\u63a5\u6536\u63a5\u53e3 } interface ITV { // ITV \u63a5\u53e3 public void play (); } class ChangHong implements ITV { @Override public void play () { System . out . println ( \"\u957f\u8679\u7535\u89c6\u673a\uff0c\u6253\u5f00\" ); } } // \u5b9e\u73b0\u63a5\u53e3 class OpenAndClose implements IOpenAndClose { public void open ( ITV tv ) { tv . play (); } } // \u65b9\u5f0f 2: \u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u4f9d\u8d56\u4f20\u9012 interface IOpenAndClose1 { public void open (); // \u62bd\u8c61\u65b9\u6cd5 } class OpenAndClose1 implements IOpenAndClose1 { public ITV tv ; // \u6210\u5458 public OpenAndClose1 ( ITV tv ) { // \u6784\u9020\u5668 this . tv = tv ; } public void open () { this . tv . play (); } } // \u65b9\u5f0f 3 , \u901a\u8fc7 setter \u65b9\u6cd5\u4f20\u9012 interface IOpenAndClose2 { public void open (); // \u62bd\u8c61\u65b9\u6cd5 public void setTv ( ITV2 tv ); } interface ITV2 { // ITV \u63a5\u53e3 public void play (); } class OpenAndClose2 implements IOpenAndClose2 { private ITV2 tv ; public void setTv ( ITV2 tv ) { this . tv = tv ; } public void open () { this . tv . play (); } } class ChangHong2 implements ITV2 { @Override public void play () { System . out . println ( \"\u957f\u8679\u7535\u89c6\u673a\uff0c\u6253\u5f00\" ); } } \u4f9d\u8d56\u5012\u8f6c\u539f\u5219\u4e2d\u9700\u8981\u6ce8\u610f\uff1a\u5e95\u5c42\u6a21\u5757\u5c3d\u91cf\u90fd\u8981\u7531\u62bd\u8c61\u7c7b\u6216\u63a5\u53e3\uff0c\u6216\u8005\u4e24\u8005\u90fd\u6709\uff0c\u7a0b\u5e8f\u7a33\u5b9a\u6027\u66f4\u597d\uff0c\u53d8\u91cf\u7684\u58f0\u660e\u7c7b\u578b \u5c3d\u91cf\u662f\u62bd\u8c61\u7c7b\u6216\u63a5\u53e3 \uff0c\u8fd9\u6837\u6211\u4eec\u7684\u53d8\u91cf\u5f15\u7528\u548c\u5b9e\u9645\u5bf9\u8c61\u95f4\uff0c\u5c31\u5b58\u5728\u4e00\u4e2a\u7f13\u51b2\u5c42\uff0c\u5229\u4e8e\u7a0b\u5e8f\u6269\u5c55\u548c\u4f18\u5316\uff0c\u7ee7\u627f\u9075\u5faa\u91cc\u6c0f\u66ff\u6362\u539f\u5219\u3002","title":"3\u3001\u4f9d\u8d56\u5012\u8f6c\u539f\u5219"},{"location":"Java/designpattern/designpattern/#4","text":"\u7ee7\u627f\u5b58\u5728\u7684\u95ee\u9898 \uff1a\u7ee7\u627f\u5305\u542b\u8fd9\u6837\u4e00\u5c42\u542b\u4e49\uff1a\u7236\u7c7b\u4e2d\u51e1\u662f\u5df2\u7ecf\u5b9e\u73b0\u597d\u7684\u65b9\u6cd5\uff0c\u5b9e\u9645\u4e0a\u662f\u5728\u8bbe\u5b9a\u89c4\u8303\u548c\u5951\u7ea6\uff0c\u867d\u7136\u5b83\u4e0d\u5f3a\u5236\u8981\u6c42\u6240\u6709\u7684\u5b50\u7c7b\u5fc5\u987b\u9075\u5faa\u8fd9\u4e9b\u5951\u7ea6\uff0c\u4f46\u662f\u5982\u679c\u5b50\u7c7b\u5bf9\u8fd9\u4e9b\u5df2\u7ecf\u5b9e\u73b0\u7684\u65b9\u6cd5\u4efb\u610f\u4fee\u6539\uff0c\u5c31\u4f1a\u5bf9\u6574\u4e2a\u7ee7\u627f\u4f53\u7cfb\u9020\u6210\u7834\u574f\u3002 \u7ee7\u627f\u5728\u7ed9\u7a0b\u5e8f\u8bbe\u8ba1\u5e26\u6765\u4fbf\u5229\u7684\u540c\u65f6\uff0c\u4e5f\u5e26\u6765\u4e86\u5f0a\u7aef\u3002\u6bd4\u5982\u4f7f\u7528\u7ee7\u627f\u4f1a\u7ed9\u7a0b\u5e8f\u5e26\u6765\u4fb5\u5165\u6027\uff0c\u7a0b\u5e8f\u7684\u53ef\u79fb\u690d\u6027\u964d\u4f4e\uff0c\u589e\u52a0\u5bf9\u8c61\u95f4\u7684\u8026\u5408\u6027\uff0c\u5982\u679c\u4e00\u4e2a\u7c7b\u88ab\u5176\u4ed6\u7684\u7c7b\u6240\u7ee7\u627f\uff0c\u5219\u5f53\u8fd9\u4e2a\u7c7b\u9700\u8981\u4fee\u6539\u65f6\uff0c\u5fc5\u987b\u8003\u8651\u5230\u6240\u6709\u7684\u5b50\u7c7b\uff0c\u5e76\u4e14\u7236\u7c7b\u4fee\u6539\u540e\uff0c\u6240\u6709\u6d89\u53ca\u5230\u5b50\u7c7b\u7684\u529f\u80fd\u90fd\u6709\u53ef\u80fd\u4ea7\u751f\u6545\u969c\u3002 \u91cc\u6c0f\u66ff\u6362\u539f\u5219\u7684\u4ecb\u7ecd\uff1a \u5982\u679c\u5bf9\u6bcf\u4e2a\u7c7b\u578b\u4e3a T1 \u7684\u5bf9\u8c61 o1\uff0c\u90fd\u6709\u7c7b\u578b\u4e3a T2 \u7684\u5bf9\u8c61 o2\uff0c\u4f7f\u5f97\u4ee5 T1 \u5b9a\u4e49\u7684\u6240\u6709\u7a0b\u5e8f P \u5728\u6240\u6709\u7684\u5bf9\u8c61 o1 \u90fd\u4ee3\u6362\u6210 o2 \u65f6\uff0c\u7a0b\u5e8f P \u7684\u884c\u4e3a\u6ca1\u6709\u53d1\u751f\u53d8\u5316\uff0c\u90a3\u4e48\u7c7b\u578b T2 \u662f\u7c7b\u578b T1 \u7684\u5b50\u7c7b\u578b\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c \u6240\u6709\u5f15\u7528\u57fa\u7c7b\u7684\u5730\u65b9\u5fc5\u987b\u80fd\u900f\u660e\u5730\u4f7f\u7528\u5176\u5b50\u7c7b\u7684\u5bf9\u8c61\u3002 \u5728\u7ee7\u627f\u65f6\uff0c\u5b50\u7c7b\u4e2d\u5c3d\u91cf\u4e0d\u8981\u91cd\u5199\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u5b9e\u9645\u4e0a\uff0c\u7ee7\u627f\u4f7f\u4e24\u4e2a\u7c7b\u7684\u8026\u5408\u6027\u589e\u5f3a\u4e86\uff0c\u5728\u9002\u5f53\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7\u805a\u5408\u3001\u7ec4\u5408\u3001\u4f9d\u8d56\u6765\u89e3\u51b3\u95ee\u9898\u3002 \uff081\uff09\u6848\u4f8b1 package com.principle.liskov ; public class Liskov { public static void main ( String [] args ) { A a = new A (); System . out . println ( \"11-3=\" + a . func1 ( 11 , 3 )); System . out . println ( \"1-8=\" + a . func1 ( 1 , 8 )); System . out . println ( \"--------------------------\" ); B b = new B (); System . out . println ( \"11-3=\" + b . func1 ( 11 , 3 )); System . out . println ( \"1-8=\" + b . func1 ( 1 , 8 )); System . out . println ( \"11+3+9=\" + b . func2 ( 11 , 3 )); } } // A\u7c7b\uff0c\u8fd4\u56de\u4e24\u4e2a\u6570\u5b57\u7684\u5dee class A { public int func1 ( int num1 , int num2 ){ return num1 - num2 ; } } // B\u7c7b\uff0c\u7ee7\u627f\u4e86A\u7c7b class B extends A { public int func1 ( int a , int b ) { return a + b ; } public int func2 ( int a , int b ){ return func1 ( a , b ) + 9 ; } } \u6211\u4eec\u53d1\u73b0\u539f\u6765\u8fd0\u884c\u6b63\u5e38\u7684\u76f8\u51cf\u529f\u80fd\u53d1\u751f\u4e86\u9519\u8bef\u3002\u539f\u56e0\u5c31\u662f\u7c7b B \u65e0\u610f\u4e2d\u91cd\u5199\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u9020\u6210\u539f\u6709\u529f\u80fd\u51fa\u73b0\u9519\u8bef\u3002\u5728\u5b9e\u9645\u7f16\u7a0b\u4e2d\uff0c\u6211\u4eec\u5e38\u5e38\u4f1a\u901a\u8fc7\u91cd\u5199\u7236\u7c7b\u7684\u65b9\u6cd5\u5b8c\u6210\u65b0\u7684\u529f\u80fd\uff0c\u8fd9\u6837\u5199\u8d77\u6765\u867d\u7136\u7b80\u5355\uff0c\u4f46\u6574\u4e2a\u7ee7\u627f\u4f53\u7cfb\u7684\u590d\u7528\u6027\u4f1a\u6bd4\u8f83\u5dee\u3002\u7279\u522b\u662f\u8fd0\u884c\u591a\u6001\u6bd4\u8f83\u9891\u7e41\u7684\u65f6\u5019\u3002 \u901a\u7528\u7684\u505a\u6cd5\u662f\uff1a \u539f\u6765\u7684\u7236\u7c7b\u548c\u5b50\u7c7b\u90fd\u7ee7\u627f\u4e00\u4e2a\u66f4\u901a\u4fd7\u7684\u57fa\u7c7b \uff0c\u539f\u6709\u7684\u7ee7\u627f\u5173\u7cfb\u53bb\u6389\uff0c\u91c7\u7528\u4f9d\u8d56\uff0c\u805a\u5408\uff0c\u7ec4\u5408\u7b49\u5173\u7cfb\u4ee3\u66ff\u3002 \uff082\uff09\u6848\u4f8b\u4e8c package com.principle.liskov.improve ; public class Liskov { public static void main ( String [] args ) { A a = new A (); System . out . println ( \"11-3=\" + a . func1 ( 11 , 3 )); System . out . println ( \"1-8=\" + a . func1 ( 1 , 8 )); System . out . println ( \"--------------------------\" ); B b = new B (); System . out . println ( \"11+3=\" + b . func1 ( 11 , 3 )); System . out . println ( \"1+8=\" + b . func1 ( 1 , 8 )); System . out . println ( \"11+3+9=\" + b . func2 ( 11 , 3 )); System . out . println ( \"11-3=\" + b . func3 ( 11 , 3 )); } } //\u521b\u5efa\u4e00\u4e2a\u66f4\u52a0\u57fa\u7840\u7684\u57fa\u7c7b class Base { // \u628a\u66f4\u52a0\u57fa\u7840\u7684\u65b9\u6cd5\u548c\u6210\u5458\u5199\u5230\u79ef\u7d2f\u91cc\u9762 } // A\u7c7b\uff0c\u8fd4\u56de\u4e24\u4e2a\u6570\u5b57\u7684\u5dee class A extends Base { public int func1 ( int num1 , int num2 ){ return num1 - num2 ; } } // B\u7c7b\uff0c\u7ee7\u627f\u4e86Base\u7c7b class B extends Base { // \u5982\u679cB\u9700\u8981\u4f7f\u7528A\u7c7b\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528\u7ec4\u5408\u5173\u7cfb private A a = new A (); public int func1 ( int a , int b ) { return a + b ; } public int func2 ( int a , int b ){ return func1 ( a , b ) + 9 ; } //\u6211\u4eec\u4ecd\u7136\u8981\u4f7f\u7528A\u7684\u65b9\u6cd5 public int func3 ( int a , int b ){ return this . a . func1 ( a , b ); } } \u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u66f4\u52a0\u57fa\u7840\u7684\u57fa\u7c7b\uff0c\u628a\u66f4\u52a0\u57fa\u7840\u7684\u65b9\u6cd5\u548c\u6210\u5458\u5199\u5230Base\u7c7b\u4e2d\uff0c\u4f7fA\u548cB\u7c7b\u540c\u65f6\u7ee7\u627f\u57fa\u7c7bBase\uff0c\u5982\u679cB\u8981\u4f7f\u7528A\u7c7b\u4e2d\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528\u7ec4\u5408\u5173\u7cfb\u3002","title":"4\u3001\u91cc\u6c0f\u66ff\u6362\u539f\u5219"},{"location":"Java/designpattern/designpattern/#5","text":"\u5f00\u95ed\u539f\u5219\uff08Open Closed Principle\uff09\u662f\u7f16\u7a0b\u4e2d \u6700\u57fa\u7840\u3001\u6700\u91cd\u8981 \u7684\u8bbe\u8ba1\u539f\u5219\u3002\u4e00\u4e2a\u8f6f\u4ef6\u5b9e\u4f53\u5982\u7c7b\uff0c\u6a21\u5757\u548c\u51fd\u6570\u5e94\u8be5\u5bf9\u6269\u5c55\u5f00\u653e\uff08\u5bf9\u63d0\u4f9b\u65b9\uff09\uff0c\u5bf9\u4fee\u6539\u5173\u95ed\uff08\u5bf9\u4f7f\u7528\u65b9\uff09\u3002\u7528\u62bd\u8c61\u6784\u5efa\u6846\u67b6\uff0c\u7528\u5b9e\u73b0\u6269\u5c55\u7ec6\u8282\u3002\u5f53\u8f6f\u4ef6\u9700\u8981\u53d8\u5316\u65f6\uff0c\u5c3d\u91cf\u901a\u8fc7 \u6269\u5c55\u8f6f\u4ef6\u5b9e\u4f53\u7684\u884c\u4e3a \u6765\u5b9e\u73b0\u53d8\u5316\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u4fee\u6539\u5df2\u6709\u4ee3\u7801\u6765\u5b9e\u73b0\u53d8\u5316\u3002 \uff081\uff09\u6848\u4f8b1 package com.principle.ocp ; public class Ocp { public static void main ( String [] args ) { GraphicEditor graphicEditor = new GraphicEditor (); graphicEditor . drawRectangle ( new Rectangle ()); graphicEditor . drawCircle ( new Circle ()); } } // \u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u7ed8\u56fe\u7684\u7c7b class GraphicEditor { public void drawShape ( Shape s ){ if ( s . m_type == 1 ){ drawRectangle ( s ); } else if ( s . m_type == 2 ){ drawCircle ( s ); } } public void drawRectangle ( Shape r ){ System . out . println ( \"\u7ed8\u5236\u77e9\u5f62\" ); } public void drawCircle ( Shape r ){ System . out . println ( \"\u7ed8\u5236\u5706\u5f62\" ); } } class Shape { int m_type ; } class Rectangle extends Shape { Rectangle (){ super . m_type = 1 ; } } class Circle extends Shape { Circle (){ super . m_type = 2 ; } } \u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0c\u5e76\u6ca1\u6709\u9075\u5b88 \u5f00\u95ed\u539f\u5219 \uff0c\u5373\u5f53\u6211\u4eec\u7ed9\u7c7b\u589e\u52a0\u65b0\u529f\u80fd\u7684\u65f6\u5019\uff0c\u5c3d\u91cf\u4e0d\u4fee\u6539\u4ee3\u7801\uff0c\u6216\u8005\u5c3d\u53ef\u80fd\u5c11\u4fee\u6539\u4ee3\u7801\uff0c\u4f46\u662f\u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u65b0\u589e\u4e00\u4e2a\u56fe\u5f62\u79cd\u7c7b\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539\u8f83\u591a\u7684\u5730\u65b9\u3002 \uff082\uff09\u6848\u4f8b2 \u628a\u521b\u5efa Shape \u7c7b\u505a\u6210\u62bd\u8c61\u7c7b\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u62bd\u8c61\u7684 draw \u65b9\u6cd5\uff0c\u8ba9\u5b50\u7c7b\u53bb\u5b9e\u73b0\u5373\u53ef\uff0c\u8fd9\u6837\u6211\u4eec\u6709\u65b0\u7684\u56fe\u5f62\u79cd\u7c7b\u65f6\uff0c\u53ea\u9700\u8981\u8ba9\u65b0\u7684\u56fe\u5f62\u7c7b\u7ee7\u627f Shape\uff0c\u5e76\u5b9e\u73b0 draw \u65b9\u6cd5\u5373\u53ef\uff0c\u4f7f\u7528\u65b9\u7684\u4ee3\u7801\u5c31\u4e0d\u9700\u8981\u4fee\u6539\uff0c\u6ee1\u8db3\u4e86\u5f00\u95ed\u539f\u5219\u3002 package com.principle.ocp.improve ; public class Ocp { public static void main ( String [] args ) { GraphicEditor graphicEditor = new GraphicEditor (); graphicEditor . drawShape ( new Rectangle ()); graphicEditor . drawShape ( new Circle ()); } } // \u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u7ed8\u56fe\u7684\u7c7b class GraphicEditor { public void drawShape ( Shape s ){ s . draw (); } } abstract class Shape { int m_type ; public abstract void draw (); //\u62bd\u8c61\u65b9\u6cd5 } class Rectangle extends Shape { Rectangle (){ super . m_type = 1 ; } @Override public void draw () { System . out . println ( \"\u7ed8\u5236\u77e9\u5f62\" ); } } class Circle extends Shape { Circle (){ super . m_type = 2 ; } @Override public void draw () { System . out . println ( \"\u7ed8\u5236\u5706\u5f62\" ); } } \u8fd9\u4e2a\u6848\u4f8b\u6ee1\u8db3\u4e86\u5f00\u95ed\u539f\u5219\uff0c\u5728\u65b0\u589e\u529f\u80fd\u7684\u65f6\u5019\uff0c\u4fee\u6539\u5c11\u91cf\u7684\u4ee3\u7801\u5c31\u53ef\u4ee5\u5b8c\u6210\u3002","title":"5\u3001\u5f00\u95ed\u539f\u5219"},{"location":"Java/designpattern/designpattern/#6","text":"\u8fea\u7c73\u7279\u6cd5\u5219\u53c8\u53eb \u6700\u5c11\u77e5\u9053\u539f\u5219 \uff0c\u5373\u4e00\u4e2a\u7c7b\u5bf9\u81ea\u5df1\u4f9d\u8d56\u7684\u7c7b\u77e5\u9053\u7684\u8d8a\u5c11\u8d8a\u597d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u88ab\u4f9d\u8d56\u7684\u7c7b\u4e0d\u7ba1\u591a\u4e48\u590d\u6742\uff0c\u90fd\u5c3d\u91cf\u5c06\u903b\u8f91\u5c01\u88c5\u5728\u7c7b\u7684\u5185\u90e8\uff0c\u5bf9\u5916\u9664\u4e86\u63d0\u4f9b\u7684public\u65b9\u6cd5\uff0c\u4e0d\u5bf9\u5916\u6cc4\u9732\u4efb\u4f55\u4fe1\u606f\u3002\u6216\u8005\u66f4\u7b80\u5355\u7684\u5b9a\u4e49\uff1a\u53ea\u4e0e\u76f4\u63a5\u670b\u53cb\u901a\u4fe1\u3002 \u76f4\u63a5\u7684\u670b\u53cb \uff1a\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u4f1a\u4e0e\u5176\u4ed6\u5bf9\u8c61\u6709\u8026\u5408\u5173\u7cfb\uff0c\u53ea\u8981\u4e24\u4e2a\u5bf9\u8c61\u4e4b\u95f4\u6709\u8026\u5408\u5173\u7cfb\uff0c\u6211\u4eec\u5c31\u8bf4\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u4e4b\u95f4\u662f\u670b\u53cb\u5173\u7cfb\u3002\u8026\u5408\u7684\u65b9\u5f0f\u5f88\u591a\uff0c\u4f9d\u8d56\uff0c\u5173\u8054\uff0c\u7ec4\u5408\uff0c\u805a\u5408\u7b49\u3002\u5176\u4e2d\uff0c\u6211\u4eec\u79f0\u51fa\u73b0\u7684 \u6210\u5458\u53d8\u91cf\uff0c\u65b9\u6cd5\u53c2\u6570\uff0c\u65b9\u6cd5\u8fd4\u56de\u503c \u4e2d\u7684\u7c7b\u4e3a\u76f4\u63a5\u7684\u670b\u53cb\uff0c\u800c\u51fa\u73b0\u5728\u5c40\u90e8\u53d8\u91cf\u4e2d\u7684\u7c7b\u4e0d\u662f\u76f4\u63a5\u7684\u670b\u53cb\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u964c\u751f\u7684\u7c7b\u6700\u597d\u4e0d\u8981\u4ee5\u5c40\u90e8\u53d8\u91cf\u7684\u5f62\u5f0f\u51fa\u73b0\u5728\u7c7b\u7684\u5185\u90e8\u3002 \uff081\uff09\u6848\u4f8b1 \u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff1a\u6709\u4e00\u4e2a\u5b66\u6821\uff0c\u4e0b\u5c5e\u6709\u5404\u4e2a\u5b66\u9662\u548c\u603b\u90e8\uff0c\u6253\u5370\u51fa\u5b66\u6821\u603b\u90e8\u5458\u5de5 ID \u548c\u5b66\u9662\u5458\u5de5\u7684 id\u3002 package com.principle.demeter ; import java.util.ArrayList ; import java.util.List ; public class Demeter1 { public static void main ( String [] args ) { // \u521b\u5efa\u4e00\u4e2aSchoolManager\u5bf9\u8c61 SchoolManager schoolManager = new SchoolManager (); schoolManager . printAllEmployee ( new CollegeManager ()); } } class Employee { private String id ; public void setId ( String id ) { this . id = id ; } public String getId () { return id ; } } class CollegeEmployee { private String id ; public void setId ( String id ) { this . id = id ; } public String getId () { return id ; } } class CollegeManager { public List < CollegeEmployee > getAllEmployee () { List < CollegeEmployee > list = new ArrayList < CollegeEmployee > (); for ( int i = 0 ; i < 10 ; i ++ ) { CollegeEmployee emp = new CollegeEmployee (); emp . setId ( \"\u5b66\u9662\u5458\u5de5id= \" + i ); list . add ( emp ); } return list ; } } // SchoolManager\u7c7b\u7684\u76f4\u63a5\u670b\u53cb\u6709Employee\u548cCollegeManager // CollegeEmployee\u4e0d\u662f\u76f4\u63a5\u670b\u53cb\uff0c\u8fd9\u6837\u505a\u8fdd\u53cd\u4e86\u8fea\u7c73\u7279\u6cd5\u5219 class SchoolManager { public List < Employee > getAllEmployee () { List < Employee > list = new ArrayList < Employee > (); for ( int i = 0 ; i < 5 ; i ++ ) { Employee emp = new Employee (); emp . setId ( \"\u5b66\u6821\u603b\u90e8\u5458\u5de5id= \" + i ); list . add ( emp ); } return list ; } void printAllEmployee ( CollegeManager sub ) { List < CollegeEmployee > list1 = sub . getAllEmployee (); System . out . println ( \"------------\u5206\u516c\u53f8\u5458\u5de5------------\" ); // CollegeEmployee\u4e0d\u662fSchoolManager\u7684\u76f4\u63a5\u670b\u53cb // \u56e0\u4e3a\u5b83\u662f\u4ee5\u5c40\u90e8\u53d8\u91cf\u7684\u5f62\u5f0f\u5b58\u5728 for ( CollegeEmployee e : list1 ) { System . out . println ( e . getId ()); } List < Employee > list2 = this . getAllEmployee (); System . out . println ( \"------------\u5b66\u6821\u603b\u90e8\u5458\u5de5------------\" ); for ( Employee e : list2 ) { System . out . println ( e . getId ()); } } } \u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2dSchoolManager\u7c7b\u7684\u76f4\u63a5\u670b\u53cb\u6709Employee\u548cCollegeManager\uff0cCollegeEmployee\u4e0d\u662f\u76f4\u63a5\u670b\u53cb\uff08\u56e0\u4e3a\u5b83\u662f\u4ee5\u5c40\u90e8\u53d8\u91cf\u7684\u5f62\u5f0f\u5b58\u5728\u7684\uff09\uff0c\u8fd9\u6837\u505a\u8fdd\u53cd\u4e86\u8fea\u7c73\u7279\u6cd5\u5219\u3002 \uff082)\u6848\u4f8b2 \u524d\u9762\u8bbe\u8ba1\u7684\u95ee\u9898\u5728\u4e8e SchoolManager \u4e2d\uff0cCollegeEmployee \u7c7b\u5e76\u4e0d\u662f SchoolManager \u7c7b\u7684\u76f4\u63a5\u670b\u53cb\u3002 \u6309\u7167\u8fea\u7c73\u7279\u6cd5\u5219\uff0c\u5e94\u8be5\u907f\u514d\u7c7b\u4e2d\u51fa\u73b0\u8fd9\u6837\u975e\u76f4\u63a5\u670b\u53cb\u5173\u7cfb\u7684\u8026\u5408\u3002 package com.principle.demeter.improve ; import java.util.ArrayList ; import java.util.List ; public class Demeter1 { public static void main ( String [] args ) { // \u521b\u5efa\u4e00\u4e2aSchoolManager\u5bf9\u8c61 SchoolManager schoolManager = new SchoolManager (); schoolManager . printAllEmployee ( new CollegeManager ()); } } class Employee { private String id ; public void setId ( String id ) { this . id = id ; } public String getId () { return id ; } } class CollegeEmployee { private String id ; public void setId ( String id ) { this . id = id ; } public String getId () { return id ; } } class CollegeManager { public List < CollegeEmployee > getAllEmployee () { List < CollegeEmployee > list = new ArrayList < CollegeEmployee > (); for ( int i = 0 ; i < 10 ; i ++ ) { CollegeEmployee emp = new CollegeEmployee (); emp . setId ( \"\u5b66\u9662\u5458\u5de5id= \" + i ); list . add ( emp ); } return list ; } // \u8f93\u51fa\u5b66\u9662\u5458\u5de5\u7684\u4fe1\u606f public void printEmployee (){ List < CollegeEmployee > list1 = this . getAllEmployee (); System . out . println ( \"------------\u5b66\u9662\u5458\u5de5------------\" ); for ( CollegeEmployee e : list1 ) { System . out . println ( e . getId ()); } } } class SchoolManager { public List < Employee > getAllEmployee () { List < Employee > list = new ArrayList < Employee > (); for ( int i = 0 ; i < 5 ; i ++ ) { Employee emp = new Employee (); emp . setId ( \"\u5b66\u6821\u603b\u90e8\u5458\u5de5id= \" + i ); list . add ( emp ); } return list ; } void printAllEmployee ( CollegeManager sub ) { sub . printEmployee (); List < Employee > list2 = this . getAllEmployee (); System . out . println ( \"------------\u5b66\u6821\u603b\u90e8\u5458\u5de5------------\" ); for ( Employee e : list2 ) { System . out . println ( e . getId ()); } } } \u8fea\u7c73\u7279\u6cd5\u5219\u7684\u6838\u5fc3\u662f\u964d\u4f4e\u7c7b\u4e4b\u95f4\u7684\u8026\u5408 , \u4f46\u662f\u6ce8\u610f\uff1a\u7531\u4e8e\u6bcf\u4e2a\u7c7b\u90fd\u51cf\u5c11\u4e86\u4e0d\u5fc5\u8981\u7684\u4f9d\u8d56\uff0c\u56e0\u6b64\u8fea\u7c73\u7279\u6cd5\u5219\u53ea\u662f\u8981\u6c42\u964d\u4f4e\u7c7b\u95f4(\u5bf9\u8c61\u95f4)\u8026\u5408\u5173\u7cfb\uff0c\u5e76\u4e0d\u662f\u8981\u6c42\u5b8c\u5168\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\u3002","title":"6\u3001\u8fea\u7c73\u7279\u6cd5\u5219"},{"location":"Java/designpattern/designpattern/#7","text":"\u5408\u6210\u590d\u7528\u539f\u5219\u662f \u5c3d\u91cf\u4f7f\u7528\u5408\u6210/\u805a\u5408\u7684\u65b9\u5f0f\uff0c\u800c\u4e0d\u662f\u7ee7\u627f \u3002\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u627e\u51fa\u5e94\u7528\u4e2d\u53ef\u80fd\u9700\u8981\u53d8\u5316\u4e4b\u5904\uff0c\u628a\u5b83\u4eec\u72ec\u7acb\u51fa\u6765\uff0c\u4e0d\u8981\u548c\u90a3\u4e9b\u4e0d\u9700\u8981\u53d8\u5316\u7684\u4ee3\u7801\u6df7\u5728\u4e00\u8d77\u3002\u9488\u5bf9\u63a5\u53e3\u7f16\u7a0b\uff0c\u800c\u4e0d\u662f\u9488\u5bf9\u5b9e\u73b0\u7f16\u7a0b\uff0c\u4e3a\u4e86\u4ea4\u4e92\u5bf9\u8c61\u4e4b\u95f4\u7684\u677e\u8026\u5408\u8bbe\u8ba1\u800c\u52aa\u529b\u3002","title":"7\u3001\u5408\u6210\u590d\u7528\u539f\u5219"},{"location":"Java/designpattern/designpattern/#_3","text":"\u8bbe\u8ba1\u6a21\u5f0f\u662f\u7a0b\u5e8f\u5458\u5728\u9762\u5bf9\u540c\u7c7b\u8f6f\u4ef6\u5de5\u7a0b\u8bbe\u8ba1\u95ee\u9898\u6240\u603b\u7ed3\u51fa\u6765\u7684\u6709\u7528\u7684\u7ecf\u9a8c\uff0c\u6a21\u5f0f\u4e0d\u662f\u4ee3\u7801\uff0c\u800c\u662f\u67d0\u7c7b\u95ee\u9898\u7684\u901a\u7528\u89e3\u51b3\u65b9\u6848\uff0c\u8bbe\u8ba1\u6a21\u5f0f\uff08Design pattern\uff09\u4ee3\u8868\u4e86\u6700\u4f73\u7684\u5b9e\u8df5\u3002\u8fd9\u4e9b\u89e3\u51b3\u65b9\u6848\u662f\u4f17\u591a\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u7ecf\u8fc7\u76f8\u5f53\u957f\u7684\u4e00\u6bb5\u65f6\u95f4\u7684\u8bd5\u9a8c\u548c\u9519\u8bef\u603b\u7ed3\u51fa\u6765\u7684\u3002\u8bbe\u8ba1\u6a21\u5f0f\u7684\u672c\u8d28 \u63d0\u9ad8\u8f6f\u4ef6\u7684\u7ef4\u62a4\u6027\u3001\u901a\u7528\u6027\u548c\u6269\u5c55\u6027\uff0c\u5e76\u964d\u4f4e\u8f6f\u4ef6\u7684\u590d\u6742\u5ea6 \u3002\u8bbe\u8ba1\u6a21\u5f0f\u5e76\u4e0d\u5c40\u9650\u4e8e\u67d0\u79cd\u8bed\u8a00\uff0cjava\uff0cphp\uff0cc++ \u90fd\u6709\u8bbe\u8ba1\u6a21\u5f0f\u3002\u8bbe\u8ba1\u6a21\u5f0f\u5206\u4e3a\u4e09\u79cd\u7c7b\u578b\uff0c\u517123\u79cd\u3002 \u521b\u5efa\u578b\u6a21\u5f0f\uff1a\u5355\u4f8b\u6a21\u5f0f\u3001\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u3001\u539f\u578b\u6a21\u5f0f\u3001\u5efa\u9020\u8005\u6a21\u5f0f\u3001\u5de5\u5382\u6a21\u5f0f\u3002 \u7ed3\u6784\u578b\u6a21\u5f0f\uff1a\u9002\u914d\u5668\u6a21\u5f0f\u3001\u6865\u63a5\u6a21\u5f0f\u3001\u88c5\u9970\u6a21\u5f0f\u3001\u7ec4\u5408\u6a21\u5f0f\u3001\u5916\u89c2\u6a21\u5f0f\u3001\u4eab\u5143\u6a21\u5f0f\u3001\u4ee3\u7406\u6a21\u5f0f\u3002 \u884c\u4e3a\u578b\u6a21\u5f0f\uff1a \u6a21\u7248\u65b9\u6cd5\u6a21\u5f0f\u3001\u547d\u4ee4\u6a21\u5f0f\u3001\u8bbf\u95ee\u8005\u6a21\u5f0f\u3001\u8fed\u4ee3\u5668\u6a21\u5f0f\u3001\u89c2\u5bdf\u8005\u6a21\u5f0f\u3001\u4e2d\u4ecb\u8005\u6a21\u5f0f\u3001\u5907\u5fd8\u5f55\u6a21\u5f0f\u3001\u89e3\u91ca\u5668\u6a21\u5f0f\uff08Interpreter \u6a21\u5f0f\uff09\u3001\u72b6\u6001\u6a21\u5f0f\u3001\u7b56\u7565\u6a21\u5f0f\u3001\u804c\u8d23\u94fe\u6a21\u5f0f(\u8d23\u4efb\u94fe\u6a21\u5f0f) \u4e0d\u540c\u7684\u4e66\u7c4d\u4e0a\u5bf9\u5206\u7c7b\u548c\u540d\u79f0\u7565\u6709\u5dee\u5f02","title":"\u4e09\u3001\u8bbe\u8ba1\u6a21\u5f0f\u6982\u8ff0"},{"location":"Java/designpattern/designpattern/#_4","text":"","title":"\u56db\u3001\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"Java/designpattern/designpattern/#1_2","text":"\u6240\u8c13\u7c7b\u7684\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5c31\u662f \u91c7\u53d6\u4e00\u5b9a\u7684\u65b9\u6cd5\u4fdd\u8bc1\u5728\u6574\u4e2a\u7684\u8f6f\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u5bf9\u67d0\u4e2a\u7c7b\u53ea\u80fd\u5b58\u5728\u4e00\u4e2a\u5bf9\u8c61\u5b9e\u4f8b \uff0c\u5e76\u4e14\u8be5\u7c7b\u53ea\u63d0\u4f9b\u4e00\u4e2a\u53d6\u5f97\u5176\u5bf9\u8c61\u5b9e\u4f8b\u7684\u65b9\u6cd5(\u9759\u6001\u65b9\u6cd5)\u3002 \u6bd4\u5982 Hibernate \u7684 SessionFactory\uff0c\u5b83\u5145\u5f53\u6570\u636e\u5b58\u50a8\u6e90\u7684\u4ee3\u7406\uff0c\u5e76\u8d1f\u8d23\u521b\u5efa Session \u5bf9\u8c61\u3002SessionFactory \u5e76\u4e0d\u662f\u8f7b\u91cf\u7ea7\u7684\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u9879\u76ee\u901a\u5e38\u53ea\u9700\u8981\u4e00\u4e2a SessionFactory \u5c31\u591f\uff0c\u8fd9\u662f\u5c31\u4f1a\u4f7f\u7528\u5230\u5355\u4f8b\u6a21\u5f0f\u3002","title":"1\u3001\u7b80\u4ecb"},{"location":"Java/designpattern/designpattern/#2_2","text":"","title":"2\u3001\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\u7684\u516b\u79cd\u65b9\u5f0f"},{"location":"Java/designpattern/designpattern/#1_3","text":"\u521b\u5efa\u4e00\u4e2a\u997f\u6c49\u5f0f\uff08\u9759\u6001\u5e38\u91cf\uff09\u5e94\u7528\u5b9e\u4f8b\u7684\u6b65\u9aa4\u53ef\u4ee5\u5206\u4e3a\u4e00\u4e0b\u51e0\u6b65\uff1a \u6784\u9020\u5668\u79c1\u6709\u5316\uff08\u9632\u6b62\u5916\u90e8new\uff09 \u7c7b\u7684\u5185\u90e8\u521b\u5efa\u5bf9\u8c61 \u5411\u5916\u66b4\u9732\u4e00\u4e2a\u9759\u6001\u7684\u516c\u5171\u65b9\u6cd5\u3002getInstance \u5b9e\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a package com.singleton.type1 ; public class Singleton1 { public static void main ( String [] args ) { Singleton instance1 = Singleton . getInstance (); Singleton instance2 = Singleton . getInstance (); System . out . println ( instance1 == instance2 ); System . out . println ( \"instance2.hashCode1=\" + instance1 . hashCode ()); System . out . println ( \"instance2.hashCode1=\" + instance2 . hashCode ()); } } // \u997f\u6c49\u5f0f\uff08\u4f7f\u7528\u9759\u6001\u53d8\u91cf\u6765\u5199\uff09 class Singleton { // 1\u3001\u5148\u5c06\u6784\u9020\u5668\u79c1\u6709\u5316\uff0c\u5916\u90e8\u4e0d\u80fdnew private Singleton (){ } // 2\u3001\u672c\u7c7b\u5185\u90e8\u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b private final static Singleton instance = new Singleton (); // 3\u3001\u5bf9\u5916\u63d0\u4f9b\u4e00\u4e2a\u516c\u6709\u7684\u65b9\u6cd5\u8fd4\u56de\u5b9e\u4f8b\u5bf9\u8c61 public static Singleton getInstance (){ return instance ; } } \u6700\u540e\u7a0b\u5e8f\u4ee3\u7801\u8f93\u51fa\u7684\u7ed3\u679c\u662f\uff1a\u4e24\u4e2a\u5bf9\u8c61\u76f8\u7b49\uff0c\u5e76\u4e14\u8fd4\u56de\u7684hash\u503c\u4e5f\u662f\u4e00\u6837\u7684\u3002 \u4f18\u7f3a\u70b9\u8bf4\u660e\uff1a \u4f18\u70b9\uff1a\u8fd9\u79cd\u5199\u6cd5\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u5728\u7c7b\u88c5\u8f7d\u7684\u65f6\u5019\u5c31\u5b8c\u6210\u5b9e\u4f8b\u5316\u3002\u907f\u514d\u4e86\u7ebf\u7a0b\u540c\u6b65\u95ee\u9898\u3002 \u5728\u7c7b\u88c5\u8f7d\u7684\u65f6\u5019\u5c31\u5b8c\u6210\u5b9e\u4f8b\u5316\uff0c\u6ca1\u6709\u8fbe\u5230 Lazy Loading\u7684\u6548\u679c\u3002\u5982\u679c\u4ece\u59cb\u81f3\u7ec8\u4ece\u672a\u4f7f\u7528\u8fc7\u8fd9\u4e2a\u5b9e\u4f8b\uff0c\u5219\u4f1a\u9020\u6210\u5185\u5b58\u7684\u6d6a\u8d39\u3002 \u7ed3\u8bba\uff1a\u8fd9\u79cd\u5355\u4f8b\u6a21\u5f0f\u53ef\u7528\uff0c\u53ef\u80fd\u9020\u6210\u5185\u5b58\u6d6a\u8d39 \u8fd9\u79cd\u65b9\u5f0f\u57fa\u4e8e classloder \u673a\u5236\u907f\u514d\u4e86\u591a\u7ebf\u7a0b\u7684\u540c\u6b65\u95ee\u9898\uff0c\u4e0d\u8fc7\uff0cinstance \u5728\u7c7b\u88c5\u8f7d\u65f6\u5c31\u5b9e\u4f8b\u5316\uff0c\u5728\u5355\u4f8b\u6a21\u5f0f\u4e2d\u5927\u591a\u6570\u90fd\u662f\u8c03\u7528 getInstance \u65b9\u6cd5\uff0c\u4f46\u662f\u5bfc\u81f4\u7c7b\u88c5\u8f7d\u7684\u539f\u56e0\u6709\u5f88\u591a\u79cd\uff0c\u56e0\u6b64\u4e0d\u80fd\u786e\u5b9a\u6709\u5176\u4ed6\u7684\u65b9\u5f0f\uff08\u6216\u8005\u5176\u4ed6\u7684\u9759\u6001\u65b9\u6cd5\uff09\u5bfc\u81f4\u7c7b\u88c5\u8f7d\uff0c\u8fd9\u65f6\u5019\u521d\u59cb\u5316 instance \u5c31\u6ca1\u6709\u8fbe\u5230 lazy loading \u7684\u6548\u679c\u3002","title":"\uff081\uff09\u997f\u6c49\u5f0f\uff08\u9759\u6001\u5e38\u91cf\uff09"},{"location":"Java/designpattern/designpattern/#2_3","text":"\u8fd9\u79cd\u65b9\u6cd5\u662f\u6839\u636e\u4e0a\u4e00\u79cd\u65b9\u6cd5\u8fdb\u884c\u6539\u8fdb\u7684\uff0c\u5c06\u4e0a\u4e00\u79cd\u7684\u9759\u6001\u53d8\u91cf\u6539\u4e3a\u9759\u6001\u4ee3\u7801\u5757\u3002 // \u997f\u6c49\u5f0f\uff08\u4f7f\u7528\u9759\u6001\u53d8\u91cf\u6765\u5199\uff09 class Singleton { // 1\u3001\u5148\u5c06\u6784\u9020\u5668\u79c1\u6709\u5316\uff0c\u5916\u90e8\u4e0d\u80fdnew private Singleton (){ } // 2\u3001\u672c\u7c7b\u5185\u90e8\u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b private final static Singleton instance ; static { //\u5728\u9759\u6001\u4ee3\u7801\u5757\u4e2d\u521b\u5efa\u5355\u4f8b\u5bf9\u8c61 instance = new Singleton (); } // 3\u3001\u5bf9\u5916\u63d0\u4f9b\u4e00\u4e2a\u516c\u6709\u7684\u65b9\u6cd5\u8fd4\u56de\u5b9e\u4f8b\u5bf9\u8c61 public static Singleton getInstance (){ return instance ; } } \u6700\u7ec8\u7684\u8f93\u51fa\u7ed3\u679c\u548c\u4e0a\u4e00\u4e2a\u76f8\u540c \u4f18\u7f3a\u70b9\u8bf4\u660e \u8fd9\u79cd\u65b9\u5f0f\u548c\u4e0a\u9762\u7684\u65b9\u5f0f\u5176\u5b9e\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u5c06\u7c7b\u5b9e\u4f8b\u5316\u7684\u8fc7\u7a0b\u653e\u5728\u4e86\u9759\u6001\u4ee3\u7801\u5757\u4e2d\uff0c\u4e5f\u662f\u5728\u7c7b\u88c5\u8f7d\u7684\u65f6\u5019\uff0c\u5c31\u6267\u884c\u9759\u6001\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\uff0c\u521d\u59cb\u5316\u7c7b\u7684\u5b9e\u4f8b\u3002\u4f18\u7f3a\u70b9\u548c\u4e0a\u9762\u662f\u4e00\u6837\u7684\u3002 \u7ed3\u8bba\uff1a\u8fd9\u79cd\u5355\u4f8b\u6a21\u5f0f\u53ef\u7528\uff0c\u4f46\u662f\u53ef\u80fd\u9020\u6210\u5185\u5b58\u6d6a\u8d39","title":"\uff082\uff09\u997f\u6c49\u5f0f\uff08\u9759\u6001\u4ee3\u7801\u5757\uff09"},{"location":"Java/designpattern/designpattern/#3_1","text":"\u4e0a\u8ff0\u4e24\u79cd\u65b9\u6cd5\u90fd\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u90fd\u4f1a\u9020\u6210\u7ebf\u7a0b\u7684\u6d6a\u8d39\u3002\u4e0b\u9762\u662f\u4e00\u79cd\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\u65b9\u6cd5\u3002 package com.singleton.type3 ; public class Singleton3 { public static void main ( String [] args ) { Singleton instance1 = Singleton . getInstance (); Singleton instance2 = Singleton . getInstance (); System . out . println ( instance1 == instance2 ); System . out . println ( \"instance2.hashCode1=\" + instance1 . hashCode ()); System . out . println ( \"instance2.hashCode1=\" + instance2 . hashCode ()); } } class Singleton { private static Singleton instance ; private Singleton (){} // \u63d0\u4f9b\u4e00\u4e2a\u9759\u6001\u7684\u516c\u6709\u65b9\u6cd5\uff0c\u5f53\u4f7f\u7528\u8be5\u65b9\u6cd5\u65f6\uff0c\u624d\u53bb\u521b\u5efainstance // \u61d2\u6c49\u5f0f // \u7528\u5230\u65f6\u5019\u624d\u521b\u5efa public static Singleton getInstance (){ if ( instance == null ){ instance = new Singleton (); } return instance ; } } \u4f18\u7f3a\u70b9\u8bf4\u660e \u8d77\u5230\u4e86Lazy Loading\u7684\u6548\u679c\uff0c\u4f46\u662f\u53ea\u80fd\u5728\u5355\u7ebf\u7a0b\u4e0b\u4f7f\u7528\u3002 \u5982\u679c\u5728\u591a\u7ebf\u7a0b\u4e0b\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u5165\u4e86 if (singleton == null)\u5224\u65ad\u8bed\u53e5\u5757\uff0c\u8fd8\u672a\u6765\u5f97\u53ca\u5f80\u4e0b\u6267\u884c\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u4e5f\u901a\u8fc7\u4e86\u8fd9\u4e2a\u5224\u65ad\u8bed\u53e5\uff0c\u8fd9\u65f6\u4fbf\u4f1a\u4ea7\u751f\u591a\u4e2a\u5b9e\u4f8b\u3002\u6240\u4ee5\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u4e0d\u53ef\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u3002 \u7ed3\u8bba\uff1a\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u4e0d\u8981\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u3002","title":"\uff083\uff09\u61d2\u6c49\u5f0f\uff08\u7ebf\u7a0b\u4e0d\u5b89\u5168\uff09"},{"location":"Java/designpattern/designpattern/#4_1","text":"\u9488\u5bf9\u4e0a\u4e00\u79cd\u65b9\u6cd5\u7684\u7f3a\u9677\uff0c\u4f7f\u7528 synchronized \u5173\u952e\u5b57\u53ef\u4ee5\u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\u3002 package com.singleton.type4 ; public class Singleton4 { public static void main ( String [] args ) { Singleton instance1 = Singleton . getInstance (); Singleton instance2 = Singleton . getInstance (); System . out . println ( instance1 == instance2 ); System . out . println ( \"instance2.hashCode1=\" + instance1 . hashCode ()); System . out . println ( \"instance2.hashCode1=\" + instance2 . hashCode ()); } } //\u61d2\u6c49\u5f0f\u7b2c\u4e8c\u79cd\uff08\u7ebf\u7a0b\u5b89\u5168\uff0c\u540c\u6b65\u65b9\u6cd5\uff09 class Singleton { private static Singleton instance ; private Singleton (){} // \u63d0\u4f9b\u4e00\u4e2a\u9759\u6001\u7684\u516c\u6709\u65b9\u6cd5\uff0c\u52a0\u5165\u4e86\u4e00\u4e2a\u540c\u6b65\u5904\u7406\u7684\u4ee3\u7801\uff0c\u5f53\u4f7f\u7528\u8be5\u65b9\u6cd5\u65f6\uff0c\u624d\u53bb\u521b\u5efainstance // \u61d2\u6c49\u5f0f // \u7528\u5230\u65f6\u5019\u624d\u521b\u5efa public static synchronized Singleton getInstance (){ if ( instance == null ){ instance = new Singleton (); } return instance ; } } \u4f18\u7f3a\u70b9\u8bf4\u660e\uff1a \u89e3\u51b3\u4e86\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898 \u6548\u7387\u592a\u4f4e\u4e86\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u5728\u60f3\u83b7\u5f97\u7c7b\u7684\u5b9e\u4f8b\u65f6\u5019\uff0c\u6267\u884cgetInstance()\u65b9\u6cd5\u90fd\u8981\u8fdb\u884c\u540c\u6b65\u3002\u800c\u5176\u5b9e\u8fd9\u4e2a\u65b9\u6cd5\u53ea\u6267\u884c\u4e00\u6b21\u5b9e\u4f8b\u5316\u4ee3\u7801\u5c31\u591f\u4e86\uff0c\u540e\u9762\u7684\u60f3\u83b7\u5f97\u8be5\u7c7b\u5b9e\u4f8b\uff0c\u76f4\u63a5 return \u5c31\u884c\u4e86\u3002\u65b9\u6cd5\u8fdb\u884c\u540c\u6b65\u6548\u7387\u592a\u4f4e\u3002 \u7ed3\u8bba\uff1a\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f","title":"\uff084\uff09\u61d2\u6c49\u5f0f\uff08\u7ebf\u7a0b\u5b89\u5168\uff0c\u540c\u6b65\u65b9\u6cd5\uff09"},{"location":"Java/designpattern/designpattern/#5_1","text":"\u8fd9\u79cd\u65b9\u5f0f\u53ea\u662f\u5bf9\u4e0a\u4e00\u79cd\u65b9\u5f0f\u7684\u6539\u8fdb\uff0c\u540c\u6837\u4e0d\u63a8\u8350\u4f7f\u7528\u3002\u53ea\u662f\u5c06synchronized\u5173\u952e\u5b57\u6362\u4e86\u4e00\u4e2a\u4f4d\u7f6e\u800c\u5df2\u3002 public static Singleton getInstance (){ if ( instance == null ){ synchronized ( Singleton . class ){ instance = new Singleton (); } } return instance ; }","title":"\uff085\uff09\u61d2\u6c49\u5f0f\uff08\u7ebf\u7a0b\u5b89\u5168\uff0c\u540c\u6b65\u4ee3\u7801\u5757\uff09"},{"location":"Java/designpattern/designpattern/#6_1","text":"\u6839\u636e\u4ee5\u4e0a\u65b9\u5f0f\u5b58\u5728\u7684\u4f18\u7f3a\u70b9\uff0c\u63d0\u51fa\u4e86\u53cc\u91cd\u68c0\u67e5\u7684\u65b9\u5f0f\uff0c\u63d0\u4f9b\u4e00\u4e2a\u9759\u6001\u7684\u516c\u6709\u65b9\u6cd5\uff0c\u52a0\u5165\u53cc\u91cd\u68c0\u67e5\u4ee3\u7801\uff0c\u89e3\u51b3\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898, \u540c\u65f6\u89e3\u51b3\u61d2\u52a0\u8f7d\u95ee\u9898 \u540c\u65f6\u4fdd\u8bc1\u4e86\u6548\u7387, \u63a8\u8350\u4f7f\u7528\u3002 //\u61d2\u6c49\u5f0f\u7b2c\u4e8c\u79cd\uff08\u7ebf\u7a0b\u5b89\u5168\uff0c\u540c\u6b65\u65b9\u6cd5\uff09 class Singleton { private static volatile Singleton instance ; private Singleton (){} // \u63d0\u4f9b\u4e00\u4e2a\u9759\u6001\u7684\u516c\u6709\u65b9\u6cd5\uff0c\u52a0\u5165\u53cc\u91cd\u68c0\u67e5\u7684\u4ee3\u7801\uff0c\u89e3\u51b3\u7ebf\u7a0b\u5b89\u5168\uff0c\u540c\u65f6\u89e3\u51b3\u61d2\u52a0\u8f7d\u7684\u95ee\u9898 // \u540c\u65f6\u4fdd\u8bc1\u4e86\u6548\u7387 public static Singleton getInstance (){ if ( instance == null ){ synchronized ( Singleton . class ){ if ( instance == null ){ instance = new Singleton (); } } } return instance ; } } \u4f18\u7f3a\u70b9\u8bf4\u660e Double-Check \u6982\u5ff5\u662f\u591a\u7ebf\u7a0b\u5f00\u53d1\u4e2d\u5e38\u4f7f\u7528\u5230\u7684\uff0c\u5982\u4ee3\u7801\u4e2d\u6240\u793a\uff0c\u6211\u4eec\u8fdb\u884c\u4e86\u4e24\u6b21 if (singleton == null)\u68c0\u67e5\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u4e86\u3002 \u8fd9\u6837\uff0c\u5b9e\u4f8b\u5316\u4ee3\u7801\u53ea\u7528\u6267\u884c\u4e00\u6b21\uff0c\u540e\u9762\u518d\u6b21\u8bbf\u95ee\u65f6\uff0c\u5224\u65ad if (singleton == null)\uff0c\u76f4\u63a5 return \u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u4e5f\u907f\u514d\u7684\u53cd\u590d\u8fdb\u884c\u65b9\u6cd5\u540c\u6b65\u3002 \u7ebf\u7a0b\u5b89\u5168\uff0c\u5ef6\u8fdf\u52a0\u8f7d\uff0c\u6548\u7387\u8f83\u9ad8 \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u5355\u4f8b\u8bbe\u8ba1\u6a21\u5f0f\u3002","title":"\uff086\uff09\u53cc\u91cd\u68c0\u67e5"},{"location":"Java/designpattern/designpattern/#7_1","text":"\u4e0a\u8ff0\u65b9\u6cd5\u90fd\u662f\u4f5c\u7528\u4e8e\u65b9\u6cd5\u4e0a\u7684\uff0c\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a\u5185\u90e8\u7c7b\u6765\u4f7f\u7528\u3002 //\u9759\u6001\u5185\u90e8\u7c7b\u5b8c\u6210\uff0c\u63a8\u8350\u4f7f\u7528 class Singleton { private Singleton (){} // \u5199\u4e00\u4e2a\u9759\u6001\u5185\u90e8\u7c7b\uff0c\u8be5\u7c7b\u6709\u4e00\u4e2a\u9759\u6001\u5c5e\u6027Singleton private static class SingletonInstance { private static final Singleton INSTANCE = new Singleton (); } // \u63d0\u4f9b\u4e00\u4e2a\u9759\u6001\u7684\u516c\u6709\u65b9\u6cd5\uff0c\u52a0\u5165\u53cc\u91cd\u68c0\u67e5\u7684\u4ee3\u7801\uff0c\u89e3\u51b3\u7ebf\u7a0b\u5b89\u5168\uff0c\u540c\u65f6\u89e3\u51b3\u61d2\u52a0\u8f7d\u7684\u95ee\u9898 // \u540c\u65f6\u4fdd\u8bc1\u4e86\u6548\u7387 public static Singleton getInstance (){ return SingletonInstance . INSTANCE ; } } \u4f18\u7f3a\u70b9\u8bf4\u660e \u8fd9\u79cd\u65b9\u5f0f\u91c7\u7528\u4e86\u7c7b\u88c5\u8f7d\u7684\u673a\u5236\u6765\u4fdd\u8bc1\u521d\u59cb\u5316\u5b9e\u4f8b\u65f6\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u3002 \u9759\u6001\u5185\u90e8\u7c7b\u65b9\u5f0f\u5728 Singleton \u7c7b\u88ab\u88c5\u8f7d\u65f6\u5e76\u4e0d\u4f1a\u7acb\u5373\u5b9e\u4f8b\u5316\uff0c\u800c\u662f\u5728\u9700\u8981\u5b9e\u4f8b\u5316\u65f6\uff0c\u8c03\u7528 getInstance \u65b9\u6cd5\uff0c\u624d\u4f1a\u88c5\u8f7d SingletonInstance \u7c7b\uff0c\u4ece\u800c\u5b8c\u6210 Singleton \u7684\u5b9e\u4f8b\u5316\u3002 \u7c7b\u7684\u9759\u6001\u5c5e\u6027\u53ea\u4f1a\u5728\u7b2c\u4e00\u6b21\u52a0\u8f7d\u7c7b\u7684\u65f6\u5019\u521d\u59cb\u5316\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\uff0cJVM \u5e2e\u52a9\u6211\u4eec\u4fdd\u8bc1\u4e86\u7ebf\u7a0b\u7684\u5b89\u5168\u6027\uff0c\u5728\u7c7b\u8fdb\u884c\u521d\u59cb\u5316\u65f6\uff0c\u522b\u7684\u7ebf\u7a0b\u662f\u65e0\u6cd5\u8fdb\u5165\u7684\u3002 \u4f18\u70b9\uff1a\u907f\u514d\u4e86\u7ebf\u7a0b\u4e0d\u5b89\u5168\uff0c\u5229\u7528\u9759\u6001\u5185\u90e8\u7c7b\u7279\u70b9\u5b9e\u73b0\u5ef6\u8fdf\u52a0\u8f7d\uff0c\u6548\u7387\u9ad8\u3002 \u5f00\u53d1\u4e2d\u63a8\u8350\u4f7f\u7528","title":"\uff087\uff09\u9759\u6001\u5185\u90e8\u7c7b"},{"location":"Java/designpattern/designpattern/#8","text":"\u901a\u8fc7\u679a\u4e3e\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5355\u4f8b package com.singleton.type8 ; public class Singleton8 { public static void main ( String [] args ) { Singleton instance1 = Singleton . INSTANCE ; Singleton instance2 = Singleton . INSTANCE ; System . out . println ( instance1 == instance2 ); System . out . println ( \"instance2.hashCode1=\" + instance1 . hashCode ()); System . out . println ( \"instance2.hashCode1=\" + instance2 . hashCode ()); instance1 . sayOK (); } } // \u4f7f\u7528\u679a\u4e3e enum Singleton { INSTANCE ; //\u5c5e\u6027 public void sayOK (){ System . out . println ( \"ok~\" ); } } \u4f18\u7f3a\u70b9\u8bf4\u660e\uff1a \u8fd9\u501f\u52a9 JDK1.5 \u4e2d\u6dfb\u52a0\u7684\u679a\u4e3e\u6765\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f\u3002\u4e0d\u4ec5\u80fd\u907f\u514d\u591a\u7ebf\u7a0b\u540c\u6b65\u95ee\u9898\uff0c\u800c\u4e14\u8fd8\u80fd\u9632\u6b62\u53cd\u5e8f\u5217\u5316\u91cd\u65b0\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\u3002 \u8fd9\u79cd\u65b9\u5f0f\u662f Effective Java \u4f5c\u8005 Josh Bloch \u63d0\u5021\u7684\u65b9\u5f0f \u7ed3\u8bba\uff1a\u63a8\u8350\u4f7f\u7528\u3002","title":"\uff088\uff09\u679a\u4e3e"},{"location":"Java/designpattern/designpattern/#3_2","text":"\u5355\u4f8b\u6a21\u5f0f\u4fdd\u8bc1\u4e86 \u7cfb\u7edf\u5185\u5b58\u4e2d\u8be5\u7c7b\u53ea\u5b58\u5728\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8282\u7701\u4e86\u7cfb\u7edf\u8d44\u6e90\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u9700\u8981\u9891\u7e41\u521b\u5efa\u9500\u6bc1\u7684\u5bf9\u8c61\uff0c\u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\u53ef\u4ee5\u63d0\u9ad8\u7cfb\u7edf\u6027\u80fd\u3002\u5f53\u60f3\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5355\u4f8b\u7c7b\u7684\u65f6\u5019\uff0c\u5fc5\u987b\u8981\u8bb0\u4f4f\u4f7f\u7528\u76f8\u5e94\u7684\u83b7\u53d6\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 new\u3002 \u5355\u4f8b\u6a21\u5f0f\u4f7f\u7528\u7684\u573a\u666f\uff1a\u9700\u8981 \u9891\u7e41\u7684\u8fdb\u884c\u521b\u5efa\u548c\u9500\u6bc1\u7684\u5bf9\u8c61\u3001\u521b\u5efa\u5bf9\u8c61\u65f6\u8017\u65f6\u8fc7\u591a\u6216\u8017\u8d39\u8d44\u6e90\u8fc7\u591a (\u5373\uff1a\u91cd\u91cf\u7ea7\u5bf9\u8c61)\uff0c\u4f46\u53c8\u7ecf\u5e38\u7528\u5230\u7684\u5bf9\u8c61\u3001\u5de5\u5177\u7c7b\u5bf9\u8c61\u3001\u9891\u7e41\u8bbf\u95ee\u6570\u636e\u5e93\u6216\u6587\u4ef6\u7684\u5bf9\u8c61(\u6bd4\u5982\u6570\u636e\u6e90\u3001session\u5de5\u5382\u7b49)\u3002","title":"3\u3001\u5355\u4f8b\u6a21\u5f0f\u6ce8\u610f\u4e8b\u9879\u548c\u7ec6\u8282\u8bf4\u660e"},{"location":"Java/designpattern/designpattern/#_5","text":"","title":"\u4e94\u3001\u5de5\u5382\u6a21\u5f0f"},{"location":"Java/designpattern/designpattern/#1_4","text":"\u770b\u4e00\u4e2a\u62ab\u8428\u7684\u9879\u76ee\uff1a\u8981\u4fbf\u4e8e\u62ab\u8428\u79cd\u7c7b\u7684\u6269\u5c55\uff0c\u8981\u4fbf\u4e8e\u7ef4\u62a4\uff1a\uff081\uff09\u62ab\u8428\u7684\u79cd\u7c7b\u5f88\u591a(\u6bd4\u5982 GreekPizz\u3001CheesePizz\u7b49) \uff082\uff09\u62ab\u8428\u7684\u5236\u4f5c\u6709 prepare\uff0cbake, cut, box \uff083\uff09\u5b8c\u6210\u62ab\u8428\u5e97\u8ba2\u8d2d\u529f\u80fd\u3002 \u8003\u8651\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u9996\u5148\u4f7f\u7528\u4f20\u7edf\u7684\u65b9\u6cd5\uff1a\u521b\u5efa\u4e00\u4e2a\u62bd\u8c61\u7684Pizza\u7c7b\uff0c\u91cc\u9762\u5305\u542b\u4e86\u62ab\u8428\u5236\u4f5c\u7684\u901a\u7528\u65b9\u6cd5\uff08\u5305\u62ecprepare\u3001bake\u7b49\uff09\uff0c\u7136\u540e\u5404\u79cd\u4e0d\u540c\u79cd\u7c7b\u7684Pizza\u9700\u8981\u7ee7\u627f\u8be5\u62bd\u8c61\u7c7b\u7136\u540e\u5b9e\u73b0\u5176\u4e2d\u7684\u62bd\u8c61\u65b9\u6cd5\u3002\u6700\u7ec8\u901a\u8fc7OrderPizza\u5bf9\u4e0d\u540c\u7684Pizza\u8fdb\u884c\u8ba2\u8d2d\u3002 public OrderPizza (){ Pizza pizza = null ; String orderType ; //\u8ba2\u8d2d\u62ab\u8428\u7684\u7c7b\u578b do { orderType = gettype (); if ( orderType . equals ( \"greek\" )){ pizza = new GreekPizza (); pizza . setName ( \" \u5e0c\u814a\u62ab\u8428 \" ); } else if ( orderType . equals ( \"cheese\" )){ pizza = new CheesePizza (); pizza . setName ( \" \u5976\u916a\u62ab\u8428 \" ); } else if ( orderType . equals ( \"pepper\" )){ pizza = new PepperPizza (); pizza . setName ( \" \u80e1\u6912\u62ab\u8428 \" ); } else { break ; } // \u8f93\u51fapizza\u5236\u4f5c\u7684\u8fc7\u7a0b pizza . prepare (); pizza . bake (); pizza . cut (); pizza . box (); } while ( true ); } \u4f20\u7edf\u65b9\u6cd5\u7684\u4f18\u7f3a\u70b9\uff1a \uff081\uff09\u4f18\u70b9\u662f\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u7b80\u5355\u6613\u64cd\u4f5c\u3002\uff082\uff09 \u7f3a\u70b9\u662f \u8fdd\u53cd\u4e86\u8bbe\u8ba1\u6a21\u5f0f\u7684 ocp \u539f\u5219 \uff0c\u5373\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5173\u95ed\u3002\u5373\u5f53\u6211\u4eec\u7ed9\u7c7b\u589e\u52a0\u65b0\u529f\u80fd\u7684\u65f6\u5019\uff0c\u5c3d\u91cf\u4e0d\u4fee\u6539\u4ee3\u7801\uff0c\u6216\u8005\u5c3d\u53ef\u80fd\u5c11\u4fee\u6539\u4ee3\u7801\u3002\u6240\u4ee5\u5f53\u6211\u4eec\u9700\u8981\u65b0\u589e\u4e00\u4e2aPizza\u7c7b\u7684\u65f6\u5019\uff0c \u9700\u8981\u5728OrderPizza\u4e2d\u91cd\u65b0\u5199\u4e00\u6761if\u8bed\u53e5\u8fdb\u884c\u5224\u65ad\u3002 \u4e0b\u9762\u901a\u8fc7\u5de5\u5382\u6a21\u5f0f\u5bf9\u4e0a\u8ff0\u65b9\u6cd5\u8fdb\u884c\u6539\u8fdb\u3002","title":"1\u3001\u95ee\u9898\u5f15\u5165"},{"location":"Java/designpattern/designpattern/#2_4","text":"","title":"2\u3001\u7b80\u5355\u5de5\u5382\u6a21\u5f0f"},{"location":"Java/designpattern/designpattern/#_6","text":"\uff081\uff09\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u662f\u5c5e\u4e8e\u521b\u5efa\u578b\u6a21\u5f0f\uff0c\u662f\u5de5\u5382\u6a21\u5f0f\u7684\u4e00\u79cd\u3002 \u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u662f\u7531\u4e00\u4e2a\u5de5\u5382\u5bf9\u8c61\u51b3\u5b9a\u521b\u5efa\u51fa\u54ea\u4e00\u79cd\u4ea7\u54c1\u7c7b\u7684\u5b9e\u4f8b \u3002\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u662f\u5de5\u5382\u6a21\u5f0f\u5bb6\u65cf\u4e2d\u6700\u7b80\u5355\u5b9e\u7528\u7684\u6a21\u5f0f\u3002 \uff082\uff09\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\uff1a\u5b9a\u4e49\u4e86\u4e00\u4e2a\u521b\u5efa\u5bf9\u8c61\u7684\u7c7b\uff0c \u7531\u8fd9\u4e2a\u7c7b\u6765\u5c01\u88c5\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u884c\u4e3a(\u4ee3\u7801) \uff083\uff09 \u5728\u8f6f\u4ef6\u5f00\u53d1\u4e2d\uff0c\u5f53\u6211\u4eec\u4f1a\u7528\u5230\u5927\u91cf\u7684\u521b\u5efa\u67d0\u79cd\u3001\u67d0\u7c7b\u6216\u8005\u67d0\u6279\u5bf9\u8c61\u65f6\uff0c\u5c31\u4f1a\u4f7f\u7528\u5230\u5de5\u5382\u6a21\u5f0f\u3002","title":"\u57fa\u672c\u4ecb\u7ecd"},{"location":"Java/designpattern/designpattern/#_7","text":"\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u7684\u8bbe\u8ba1\u65b9\u6848\uff1a\u5b9a\u4e49\u4e00\u4e2a\u53ef\u4ee5\u5b9e\u4f8b\u5316 Pizza \u5bf9\u8c61\u7684\u7c7b\uff0c\u5c01\u88c5\u521b\u5efa\u5bf9\u8c61\u7684\u4ee3\u7801\u3002\u6240\u4ee5\u521b\u5efa\u4e00\u4e2a SimplePizzaFactory \uff0c\u5728\u8fd9\u4e2a\u7c7b\u4e2d\u8fdb\u884c Pizza \u7684\u521b\u5efa\u3002 public class SimpleFactory { public Pizza createPizza ( String orderType ){ Pizza pizza = null ; System . out . println ( \"\u4f7f\u7528\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\" ); if ( orderType . equals ( \"greek\" )){ pizza = new GreekPizza (); pizza . setName ( \" \u5e0c\u814a\u62ab\u8428 \" ); } else if ( orderType . equals ( \"cheese\" )){ pizza = new CheesePizza (); pizza . setName ( \" \u5976\u916a\u62ab\u8428 \" ); } else if ( orderType . equals ( \"pepper\" )){ pizza = new PepperPizza (); pizza . setName ( \" \u80e1\u6912\u62ab\u8428 \" ); } return pizza ; } } \u8fd9\u4e2a \u7b80\u5355\u5de5\u5382\u7c7b \u7528\u6765\u521b\u5efaPizza\uff0c\u5728 OrderPizza \u8fdb\u884c\u8c03\u7528\u8fd9\u4e2a\u7c7b\u4e2d\u7684\u65b9\u6cd5\u6765\u521b\u5efa\u76f8\u5e94\u7684Pizza\u3002","title":"\u4f18\u5316\u4e0a\u9762\u7684\u5b9e\u4f8b"},{"location":"Java/designpattern/designpattern/#3_3","text":"","title":"3\u3001\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f"},{"location":"Java/designpattern/designpattern/#_8","text":"\u62ab\u8428\u9879\u76ee\u65b0\u7684\u9700\u6c42\uff1a\u5ba2\u6237\u5728\u70b9\u62ab\u8428\u65f6\uff0c\u53ef\u4ee5\u70b9\u4e0d\u540c\u53e3\u5473\u7684\u62ab\u8428\uff0c\u6bd4\u5982 \u5317\u4eac\u7684\u5976\u916a pizza\u3001\u5317\u4eac\u7684\u80e1\u6912pizza\u6216\u8005\u662f\u4f26\u6566\u7684\u5976\u916a pizza\u3001\u4f26\u6566\u7684\u80e1\u6912pizza\u3002 \u89e3\u51b3\u65b9\u6cd5\uff1a\u4f7f\u7528\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\uff0c\u521b\u5efa\u4e0d\u540c\u7684\u7b80\u5355\u5de5\u5382\u7c7b\uff0c\u6bd4\u5982 BJPizzaSimpleFactory\u3001LDPizzaSimpleFactory \u7b49\u7b49.\u4ece\u5f53\u524d \u8fd9\u4e2a\u6848\u4f8b\u6765\u8bf4\uff0c\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u8003\u8651\u5230\u9879\u76ee\u7684\u89c4\u6a21\uff0c\u4ee5\u53ca\u8f6f\u4ef6\u7684\u53ef\u7ef4\u62a4\u6027\u3001\u53ef\u6269\u5c55\u6027\u5e76\u4e0d\u662f\u7279\u522b\u597d\u3002\u4e0b\u9762\u4ecb\u7ecd\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u3002","title":"\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u7684\u4e0d\u8db3"},{"location":"Java/designpattern/designpattern/#_9","text":"\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u8bbe\u8ba1\u65b9\u6848\uff1a\u5c06\u62ab\u8428\u9879\u76ee\u7684\u5b9e\u4f8b\u5316\u529f\u80fd\u62bd\u8c61\u6210\u62bd\u8c61\u65b9\u6cd5\uff0c\u5728\u4e0d\u540c\u7684\u53e3\u5473\u70b9\u9910\u5b50\u7c7b\u4e2d\u5177\u4f53\u5b9e\u73b0\u3002\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\uff1a\u5b9a\u4e49\u4e86\u4e00\u4e2a\u521b\u5efa\u5bf9\u8c61\u7684\u62bd\u8c61\u65b9\u6cd5\uff0c\u7531\u5b50\u7c7b\u51b3\u5b9a\u8981\u5b9e\u4f8b\u5316\u7684\u7c7b\u3002 \u5de5\u5382\u65b9 \u6cd5\u6a21\u5f0f\u5c06\u5bf9\u8c61\u7684\u5b9e\u4f8b\u5316\u63a8\u8fdf\u5230\u5b50\u7c7b\u3002 public abstract class OrderPizza { // \u5b9a\u4e49\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\uff0c\u8ba9\u5404\u4e2a\u5de5\u5382\u5b50\u7c7b\u81ea\u5df1\u5b9e\u73b0 abstract Pizza createPizza ( String orderType ); public OrderPizza (){ Pizza pizza = null ; String orderType ; //\u8ba2\u8d2d\u62ab\u8428\u7684\u7c7b\u578b do { orderType = gettype (); pizza = createPizza ( orderType ); // \u8f93\u51fapizza\u5236\u4f5c\u7684\u8fc7\u7a0b pizza . prepare (); pizza . bake (); pizza . cut (); pizza . box (); } while ( true ); } private String gettype (){ try { BufferedReader strin = new BufferedReader ( new InputStreamReader ( System . in )); System . out . println ( \"input pizza type\" ); String str = strin . readLine (); return str ; } catch ( IOException e ){ e . printStackTrace (); return \"\" ; } } } \u8fd9\u4e2a OrderPizza \u7c7b\u4e0e\u4e0a\u9762\u4e0d\u540c\u7684\u662f\uff0c\u591a\u4e86\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5 createPizza \uff0c\u5e76\u5728\u5b50\u7c7b\u4e2d\u5b9e\u73b0\u8be5\u62bd\u8c61\u65b9\u6cd5\uff0c\u4f8b\u5982\u4e0b\u5217\u7684\u5317\u4eacPizza\u7684\u5b9e\u73b0\u7c7b\u3002 public class BJOrderPizza extends OrderPizza { @Override Pizza createPizza ( String orderType ) { Pizza pizza = null ; if ( orderType . equals ( \"cheese\" )){ pizza = new BJCheesePizza (); } else if ( orderType . equals ( \"pepper\" )){ pizza = new BJPepperPizza (); } return pizza ; } } \u5728\u5b9e\u73b0\u7c7b\u4e2d\u5b9e\u73b0\u5177\u4f53\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u8fdb\u884c\u8d2d\u4e70BJOrderPizza\uff0ccheeses\u53e3\u5473\u7684\u548cpepper\u53e3\u5473\u7684\u3002","title":"\u7b80\u5355\u4ecb\u7ecd"},{"location":"Java/designpattern/designpattern/#4_2","text":"","title":"4\u3001\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f"},{"location":"Java/designpattern/designpattern/#_10","text":"1) \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\uff1a\u5b9a\u4e49\u4e86\u4e00\u4e2a interface \u7528\u4e8e\u521b\u5efa\u76f8\u5173\u6216\u6709\u4f9d\u8d56\u5173\u7cfb\u7684\u5bf9\u8c61\u7c07\uff0c\u800c\u65e0\u9700\u6307\u660e\u5177\u4f53\u7684\u7c7b 2) \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u53ef\u4ee5\u5c06 \u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u548c\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u8fdb\u884c\u6574\u5408 \u3002 3) \u4ece\u8bbe\u8ba1\u5c42\u9762\u770b\uff0c \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u5c31\u662f\u5bf9\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\u7684\u6539\u8fdb (\u6216\u8005\u79f0\u4e3a\u8fdb\u4e00\u6b65\u7684\u62bd\u8c61)\u3002 4) \u5c06\u5de5\u5382\u62bd\u8c61\u6210\u4e24\u5c42\uff0c AbsFactory(\u62bd\u8c61\u5de5\u5382) \u548c \u5177\u4f53\u5b9e\u73b0\u7684\u5de5\u5382\u5b50\u7c7b \u3002\u7a0b\u5e8f\u5458\u53ef\u4ee5\u6839\u636e\u521b\u5efa\u5bf9\u8c61\u7c7b\u578b\u4f7f\u7528\u5bf9\u5e94\u7684\u5de5\u5382\u5b50\u7c7b\u3002\u8fd9\u6837\u5c06\u5355\u4e2a\u7684\u7b80\u5355\u5de5\u5382\u7c7b\u53d8\u6210\u4e86\u5de5\u5382\u7c07\uff0c\u66f4\u5229\u4e8e\u4ee3\u7801\u7684\u7ef4\u62a4\u548c\u6269\u5c55\u3002","title":"\u57fa\u672c\u4ecb\u7ecd"},{"location":"Java/designpattern/designpattern/#_11","text":"\u5bf9\u4e0a\u8ff0\u4ee3\u7801\u7684\u4e00\u4e9b\u4fee\u6539 // \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u7684\u62bd\u8c61\u5c42 public interface AbsFactory { // \u8ba9\u4e0b\u9762\u7684\u5de5\u5382\u5b50\u7c7b\u5177\u4f53\u5b9e\u73b0 public Pizza createPizza ( String orderType ); } \u6240\u6709\u7684\u5de5\u5382\u5b50\u7c7b\u90fd\u9700\u8981\u7ee7\u627f\u8be5\u62bd\u8c61\u7c7b\uff0c\u4e0b\u9762\u4e3e\u4e00\u4e2a BJFactory \u7684\u5b9e\u73b0\u4f8b\u5b50\u3002 public class BJFactory implements AbsFactory { @Override public Pizza createPizza ( String orderType ) { System . out . println ( \"\u4f7f\u7528\u7684\u662f\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\" ); Pizza pizza = null ; if ( orderType . equals ( \"cheese\" )){ pizza = new BJCheesePizza (); } else if ( orderType . equals ( \"pepper\" )){ pizza = new BJPepperPizza (); } return pizza ; } } \u5728\u8fd9\u4e2a\u5de5\u5382\u5b50\u7c7b\u4e2d\uff0c\u7ee7\u627f\u6700\u4e0a\u5c42\u7684\u5de5\u5382\u7c7b\uff0c\u5b9e\u73b0\u4e86\u5176\u4e2d\u7684\u62bd\u8c61\u65b9\u6cd5\uff0c\u6700\u540e\u662f\u8fdb\u884c\u8ba2\u8d2d\u7684\u65b9\u6cd5\uff0c public class OrderPizza { AbsFactory factory ; public OrderPizza ( AbsFactory factory ){ setFactory ( factory ); } private void setFactory ( AbsFactory factory ){ Pizza pizza = null ; String orderType = \"\" ; //\u7528\u6237\u8f93\u5165 this . factory = factory ; do { orderType = gettype (); pizza = factory . createPizza ( orderType ); if ( pizza != null ){ pizza . prepare (); pizza . bake (); pizza . cut (); pizza . box (); } else { System . out . println ( \"\u8ba2\u8d2d\u5931\u8d25\" ); break ; } } while ( true ); } } \u6700\u7ec8\u901a\u8fc7 new OrderPizza(new BJFactory()); \u5c31\u53ef\u4ee5\u5b8c\u6210\u5bf9BJPizza\u7684\u8ba2\u8d2d\u3002","title":"\u4ee3\u7801\u793a\u4f8b"},{"location":"Java/designpattern/designpattern/#_12","text":"","title":"\u516d\u3001\u539f\u578b\u6a21\u5f0f"},{"location":"Java/designpattern/designpattern/#1_5","text":"\u73b0\u5728\u6709\u4e00\u53ea\u7f8a tom\uff0c\u59d3\u540d\u4e3a: tom, \u5e74\u9f84\u4e3a\uff1a1\uff0c\u989c\u8272\u4e3a\uff1a\u767d\u8272\uff0c\u8bf7\u7f16\u5199\u7a0b\u5e8f\u521b\u5efa\u548c tom \u7f8a \u5c5e\u6027\u5b8c\u5168\u76f8\u540c\u7684 10\u53ea\u7f8a\u3002","title":"1\u3001\u95ee\u9898\u5f15\u5165"},{"location":"Java/designpattern/designpattern/#2_5","text":"\u7528 Sheep \u7684get\u548cset\u65b9\u6cd5\u8fdb\u884c\u5bf9\u8c61\u7684\u590d\u5236\uff0c\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a Sheep sheep = new Sheep ( \"tom\" , 1 , \"\u767d\u8272\" ); Sheep sheep2 = new Sheep ( sheep . getName (), sheep . getAge (), sheep . getColor ()); Sheep sheep3 = new Sheep ( sheep . getName (), sheep . getAge (), sheep . getColor ()); Sheep sheep4 = new Sheep ( sheep . getName (), sheep . getAge (), sheep . getColor ()); Sheep sheep5 = new Sheep ( sheep . getName (), sheep . getAge (), sheep . getColor ()); \u4f20\u7edf\u65b9\u5f0f\u7684\u4f18\u7f3a\u70b9\uff1a \u4f18\u70b9\u662f\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u7b80\u5355\u6613\u64cd\u4f5c\u3002 \u5728\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\u65f6\uff0c\u603b\u662f\u9700\u8981\u91cd\u65b0\u83b7\u53d6\u539f\u59cb\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u5982\u679c\u521b\u5efa\u7684\u5bf9\u8c61\u6bd4\u8f83\u590d\u6742\u65f6\uff0c\u6548\u7387\u8f83\u4f4e\u3002 \u603b\u662f\u9700\u8981\u91cd\u65b0\u521d\u59cb\u5316\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u52a8\u6001\u5730\u83b7\u5f97\u5bf9\u8c61\u8fd0\u884c\u65f6\u7684\u72b6\u6001, \u4e0d\u591f\u7075\u6d3b\u3002","title":"2\u3001\u4f20\u7edf\u65b9\u6cd5\u89e3\u51b3"},{"location":"Java/designpattern/designpattern/#_13","text":"Java \u4e2d Object \u7c7b\u662f\u6240\u6709\u7c7b\u7684\u6839\u7c7b\uff0cObject\u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2aclone()\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u53ef\u4ee5\u5c06\u4e00\u4e2a Java \u5bf9\u8c61\u590d\u5236\u4e00\u4efd\uff0c\u4f46\u662f\u9700\u8981\u5b9e\u73b0 clone \u7684 Java \u7c7b\u5fc5\u987b\u8981 \u5b9e\u73b0\u4e00\u4e2a\u63a5\u53e3Cloneable \uff0c\u8be5\u63a5\u53e3\u8868\u793a\u8be5\u7c7b\u80fd\u591f\u590d\u5236\u4e14\u5177\u6709\u590d\u5236\u7684\u80fd\u529b => \u539f\u578b\u6a21\u5f0f\u3002 \u539f\u578b\u6a21\u5f0f(Prototype \u6a21\u5f0f)\u662f\u6307\uff1a\u7528\u539f\u578b\u5b9e\u4f8b\u6307\u5b9a\u521b\u5efa\u5bf9\u8c61\u7684\u79cd\u7c7b\uff0c\u5e76\u4e14\u901a\u8fc7\u62f7\u8d1d\u8fd9\u4e9b\u539f\u578b\uff0c\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\u3002\u539f\u578b\u6a21\u5f0f\u662f\u4e00\u79cd\u521b\u5efa\u578b\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5141\u8bb8\u4e00\u4e2a\u5bf9\u8c61\u518d\u521b\u5efa\u53e6\u5916\u4e00\u4e2a\u53ef\u5b9a\u5236\u7684\u5bf9\u8c61\uff0c\u65e0\u9700\u77e5\u9053\u5982\u4f55\u521b\u5efa\u7684\u7ec6\u8282\u3002\u5de5\u4f5c\u539f\u7406\u662f:\u901a\u8fc7\u5c06\u4e00\u4e2a\u539f\u578b\u5bf9\u8c61\u4f20\u7ed9\u90a3\u4e2a\u8981\u53d1\u52a8\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u8981\u53d1\u52a8\u521b\u5efa\u7684\u5bf9\u8c61\u901a\u8fc7\u8bf7\u6c42\u539f\u578b\u5bf9\u8c61\u62f7\u8d1d\u5b83\u4eec\u81ea\u5df1\u6765\u5b9e\u65bd\u521b\u5efa\uff0c\u5373 \u5bf9\u8c61.clone()\u3002 public class Sheep implements Cloneable { private String name ; private int age ; private String color ; public Sheep friend ; //\u666e\u901a\u5bf9\u8c61\uff0c\u514b\u9686\u65f6\u5019\u5982\u4f55\u5904\u7406\uff0c\u9ed8\u8ba4\u662f\u6d45\u62f7\u8d1d public Sheep () { } public Sheep ( String name , int age , String color ) { this . name = name ; this . age = age ; this . color = color ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public int getAge () { return age ; } public void setAge ( int age ) { this . age = age ; } public String getColor () { return color ; } public void setColor ( String color ) { this . color = color ; } @Override public String toString () { return \"Sheep [name=\" + name + \", age=\" + age + \", color=\" + color + \"]\" ; } // \u514b\u9686\u8be5\u5b9e\u4f8b\uff0c\u4f7f\u7528\u9ed8\u8ba4\u7684clone\u65b9\u6cd5 @Override protected Object clone (){ Sheep sheep = null ; try { sheep = ( Sheep ) super . clone (); } catch ( Exception e ){ System . out . println ( e . getMessage ()); } return sheep ; } } \u4e0a\u8ff0\u4ee3\u7801\u662f\u6539\u8fdb\u7684 Sheep \u5bf9\u8c61\uff0c\u4e3b\u8981\u662f\u589e\u52a0\u4e86\u4e00\u4e2aclone\u65b9\u6cd5\uff0c\u5177\u4f53\u5982\u4f55\u5b9e\u73b0\u514b\u9686\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u7684\u793a\u4f8b\uff1a Sheep sheep = new Sheep ( \"tom\" , 1 , \"\u767d\u8272\" ); sheep . friend = new Sheep ( \"jack\" , 2 , \"\u9ed1\u8272\" ); Sheep sheep2 = ( Sheep ) sheep . clone (); Sheep sheep3 = ( Sheep ) sheep . clone (); Sheep sheep4 = ( Sheep ) sheep . clone (); Sheep sheep5 = ( Sheep ) sheep . clone ();","title":"\u539f\u578b\u6a21\u5f0f"},{"location":"Java/designpattern/designpattern/#_14","text":"","title":"\u6d45\u62f7\u8d1d\u548c\u6df1\u62f7\u8d1d\u7684\u8ba8\u8bba"},{"location":"Java/designpattern/designpattern/#_15","text":"\u5bf9\u4e8e\u6570\u636e\u7c7b\u578b\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u6d45\u62f7\u8d1d\u4f1a\u76f4\u63a5\u8fdb\u884c\u503c\u4f20\u9012\uff0c\u4e5f\u5c31\u662f\u5c06\u8be5\u5c5e\u6027\u503c\u590d\u5236\u4e00\u4efd\u7ed9\u65b0\u7684\u5bf9\u8c61\u3002 \u5bf9\u4e8e\u6570\u636e\u7c7b\u578b\u662f\u5f15\u7528\u6570\u636e\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\uff0c\u6bd4\u5982\u8bf4\u6210\u5458\u53d8\u91cf\u662f\u67d0\u4e2a\u6570\u7ec4\u3001\u67d0\u4e2a\u7c7b\u7684\u5bf9\u8c61\u7b49\uff0c\u90a3\u4e48 \u6d45\u62f7\u8d1d\u4f1a\u8fdb\u884c \u5f15\u7528\u4f20\u9012\uff0c\u4e5f\u5c31\u662f\u53ea\u662f\u5c06\u8be5\u6210\u5458\u53d8\u91cf\u7684\u5f15\u7528\u503c\uff08\u5185\u5b58\u5730\u5740\uff09\u590d\u5236\u4e00\u4efd\u7ed9\u65b0\u7684\u5bf9\u8c61 \u3002\u56e0\u4e3a\u5b9e\u9645\u4e0a\u4e24\u4e2a\u5bf9\u8c61\u7684\u8be5\u6210\u5458\u53d8\u91cf\u90fd\u6307\u5411\u540c\u4e00\u4e2a\u5b9e\u4f8b\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5728\u4e00\u4e2a\u5bf9\u8c61\u4e2d\u4fee\u6539\u8be5\u6210\u5458\u53d8\u91cf\u4f1a\u5f71\u54cd\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\u7684\u8be5\u6210\u5458\u53d8\u91cf\u503c\u3002 \u524d\u9762\u6211\u4eec\u514b\u9686\u7f8a\u5c31\u662f\u6d45\u62f7\u8d1d \u6d45\u62f7\u8d1d\u662f\u4f7f\u7528\u9ed8\u8ba4\u7684 clone()\u65b9\u6cd5\u6765\u5b9e\u73b0\u3002sheep = (Sheep) super.clone();","title":"\u6d45\u62f7\u8d1d\u7684\u4ecb\u7ecd"},{"location":"Java/designpattern/designpattern/#_16","text":"\u590d\u5236\u5bf9\u8c61\u7684\u6240\u6709\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\u503c\u3002\u4e3a\u6240\u6709\u5f15\u7528\u6570\u636e\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\u7533\u8bf7\u5b58\u50a8\u7a7a\u95f4\uff0c\u5e76\u590d\u5236\u6bcf\u4e2a\u5f15\u7528\u6570\u636e\u7c7b\u578b\u6210\u5458\u53d8\u91cf\u6240\u5f15\u7528\u7684\u5bf9\u8c61\uff0c\u76f4\u5230\u8be5\u5bf9\u8c61 \u53ef\u8fbe\u7684\u6240\u6709\u5bf9\u8c61\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c \u5bf9\u8c61\u8fdb\u884c\u6df1\u62f7\u8d1d\u8981\u5bf9\u6574\u4e2a\u5bf9\u8c61(\u5305\u62ec\u5bf9\u8c61\u7684\u5f15\u7528\u7c7b\u578b)\u8fdb\u884c\u62f7\u8d1d \u3002 * \u6df1\u62f7\u8d1d\u5b9e\u73b0\u65b9\u5f0f 1\uff1a\u91cd\u5199 clone \u65b9\u6cd5\u6765\u5b9e\u73b0\u6df1\u62f7\u8d1d\u3002 * \u6df1\u62f7\u8d1d\u5b9e\u73b0\u65b9\u5f0f 2\uff1a\u901a\u8fc7\u5bf9\u8c61\u5e8f\u5217\u5316\u5b9e\u73b0\u6df1\u62f7\u8d1d(\u63a8\u8350) \u9996\u5148\u662f\u7b2c\u4e00\u79cd\u65b9\u5f0f\uff0c\u91cd\u5199clone\u65b9\u6cd5\u6765\u8fdb\u884c\u6df1\u62f7\u8d1d\u3002 public class DeepProtoType implements Serializable , Cloneable { public String name ; public DeepCloneableTarget deepCloneableTarget ; //\u5f15\u7528\u7c7b\u578b public DeepProtoType () { } // \u5b8c\u6210\u6df1\u62f7\u8d1d 1\u3001\u4f7f\u7528clone\u65b9\u6cd5 @Override protected Object clone () throws CloneNotSupportedException { Object deep = null ; //\u8fd9\u91cc\u5b8c\u6210\u5bf9\u57fa\u672c\u5c5e\u6027\u548cString\u7684\u514b\u9686 deep = super . clone (); //\u5bf9\u5f15\u7528\u6570\u636e\u7c7b\u578b\u7684\u5c5e\u6027\uff0c\u8fdb\u884c\u5355\u72ec\u5904\u7406 DeepProtoType deepProtoType = ( DeepProtoType ) deep ; deepProtoType . deepCloneableTarget = ( DeepCloneableTarget ) deepCloneableTarget . clone (); return deepProtoType ; } } \u8fd9\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u5c06\u7c7b\u4e2d\u7684\u5c5e\u6027\u518d\u5229\u7528clone\u65b9\u6cd5\u8fdb\u884c\u590d\u5236\u514b\u9686\uff0c\u4f46\u662f\u66f4\u63a8\u8350\u4f7f\u7528\u4e0b\u5217\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u4f7f\u7528\u5e8f\u5217\u5316\u7684\u65b9\u6cd5\u3002 // \u5b8c\u6210\u6df1\u62f7\u8d1d 2\u3001\u901a\u8fc7\u5bf9\u8c61\u5e8f\u5217\u5316\u65b9\u6cd5 public Object deepClone (){ //\u521b\u5efa\u6d41\u5bf9\u8c61 ByteArrayOutputStream bos = null ; ObjectOutputStream oos = null ; ByteArrayInputStream bis = null ; ObjectInputStream ois = null ; try { bos = new ByteArrayOutputStream (); oos = new ObjectOutputStream ( bos ); oos . writeObject ( this ); //\u5f53\u524d\u8fd9\u4e2a\u5bf9\u8c61\u4ee5\u5bf9\u8c61\u6d41\u7684\u65b9\u5f0f\u8f93\u51fa // \u53cd\u5e8f\u5217\u5316 bis = new ByteArrayInputStream ( bos . toByteArray ()); ois = new ObjectInputStream ( bis ); DeepProtoType copyObj = ( DeepProtoType ) ois . readObject (); return copyObj ; } catch ( Exception e ) { e . printStackTrace (); return null ; } \u4e00\u822c\u63a8\u8350\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff08\u867d\u7136\u6211\u81ea\u5df1\u4e2a\u4eba\u5bf9\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u6ca1\u6709\u7279\u522b\u900f\u5f7b\u7684\u7406\u89e3\uff09\uff0c\u7b2c\u4e00\u79cd\u65b9\u5f0f\u7684\u65b9\u6cd5\u5982\u679c\u5b58\u5728\u591a\u4e2a\u5f15\u7528\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u5904\u7406\u8d77\u6765\u4f1a\u8f83\u4e3a\u9ebb\u70e6\u3002","title":"\u6df1\u62f7\u8d1d\u4ecb\u7ecd"},{"location":"Java/designpattern/designpattern/#_17","text":"\uff081\uff09\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\u6bd4\u8f83\u590d\u6742\u65f6\uff0c\u53ef\u4ee5\u5229\u7528\u539f\u578b\u6a21\u5f0f\u7b80\u5316\u5bf9\u8c61\u7684\u521b\u5efa\u8fc7\u7a0b\uff0c\u540c\u65f6\u4e5f\u80fd\u591f\u63d0\u9ad8\u6548\u7387 \uff082\uff09 \u4e0d\u7528\u91cd\u65b0\u521d\u59cb\u5316\u5bf9\u8c61\uff0c\u800c\u662f\u52a8\u6001\u5730\u83b7\u5f97\u5bf9\u8c61\u8fd0\u884c\u65f6\u7684\u72b6\u6001 \uff083\uff09\u5982\u679c\u539f\u59cb\u5bf9\u8c61\u53d1\u751f\u53d8\u5316(\u589e\u52a0\u6216\u8005\u51cf\u5c11\u5c5e\u6027)\uff0c\u5176\u5b83\u514b\u9686\u5bf9\u8c61\u7684\u4e5f\u4f1a\u53d1\u751f\u76f8\u5e94\u7684\u53d8\u5316\uff0c\u65e0\u9700\u4fee\u6539\u4ee3\u7801 \uff084\uff09 \u5728\u5b9e\u73b0\u6df1\u514b\u9686\u7684\u65f6\u5019\u53ef\u80fd\u9700\u8981\u6bd4\u8f83\u590d\u6742\u7684\u4ee3\u7801 \uff085\uff09 \u7f3a\u70b9\uff1a\u9700\u8981\u4e3a\u6bcf\u4e00\u4e2a\u7c7b\u914d\u5907\u4e00\u4e2a\u514b\u9686\u65b9\u6cd5\uff0c\u8fd9\u5bf9\u5168\u65b0\u7684\u7c7b\u6765\u8bf4\u4e0d\u662f\u5f88\u96be\uff0c\u4f46\u5bf9\u5df2\u6709\u7684\u7c7b\u8fdb\u884c\u6539\u9020\u65f6\uff0c\u9700\u8981\u4fee\u6539\u5176\u6e90\u4ee3\u7801\uff0c\u8fdd\u80cc\u4e86 ocp \u539f\u5219\uff0c\u8fd9\u70b9\u8bf7\u540c\u5b66\u4eec\u6ce8\u610f.","title":"\u539f\u578b\u6a21\u5f0f\u7684\u7ec6\u8282"},{"location":"Java/designpattern/designpattern/#_18","text":"","title":"\u4e03\u3001\u5efa\u9020\u8005\u6a21\u5f0f"},{"location":"Java/designpattern/designpattern/#_19","text":"\u9700\u8981\u5efa\u623f\u5b50\uff1a\u8fd9\u4e00\u8fc7\u7a0b\u4e3a\u6253\u6869\u3001\u780c\u5899\u3001\u5c01\u9876\u3002\u623f\u5b50\u6709\u5404\u79cd\u5404\u6837\u7684\uff0c\u6bd4\u5982\u666e\u901a\u623f\uff0c\u9ad8\u697c\uff0c\u522b\u5885\uff0c\u5404\u79cd\u623f\u5b50\u7684\u8fc7\u7a0b\u867d\u7136\u4e00\u6837\uff0c\u4f46\u662f\u8981\u6c42\u4e0d\u8981\u76f8\u540c\u7684\u3002","title":"\u95ee\u9898\u5f15\u5165"},{"location":"Java/designpattern/designpattern/#_20","text":"\u4f20\u7edf\u65b9\u5f0f\u89e3\u51b3\u8f83\u4e3a\u7b80\u5355\uff0c\u901a\u8fc7\u5efa\u7acb\u4e00\u4e2a\u62bd\u8c61\u7684\u623f\u5b50\u7c7b\uff0c\u91cc\u9762\u5305\u542b\u4e86\u5efa\u623f\u5b50\u7684\u8fc7\u7a0b\uff1a\u6253\u6869\u3001\u780c\u5899\u3001\u5c01\u9876\u7684\u62bd\u8c61\u65b9\u6cd5\u3002\u7136\u540e\u4e0d\u540c\u7684\u623f\u5b50\u5b9e\u73b0\u5176\u4e2d\u7684\u65b9\u6cd5\u3002 public abstract class AbstractHouse { // \u6253\u5730\u57fa public abstract void buildBasic (); // \u780c\u5899 public abstract void buildWalls (); //\u5c01\u9876 public abstract void roofed (); public void build (){ buildBasic (); buildWalls (); roofed (); } } \u666e\u901a\u623f\u5b50\u5b9e\u73b0\u8fd9\u4e2a\u62bd\u8c61\u7684\u65b9\u6cd5\uff0c\u7136\u540e\u5efa\u9020\u666e\u901a\u623f\u5b50\u5c31\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u8fd9\u4e2a\u666e\u901a\u623f\u5b50\u7684\u7c7b\u5c31\u53ef\u4ee5\u4e86\u3002 public class CommonHouse extends AbstractHouse { @Override public void buildBasic () { System . out . println ( \"\u7ed9\u666e\u901a\u623f\u5b50\u6253\u5730\u57fa\" ); } @Override public void buildWalls () { System . out . println ( \"\u7ed9\u666e\u901a\u623f\u5b50\u780c\u5899\" ); } @Override public void roofed () { System . out . println ( \"\u7ed9\u666e\u901a\u623f\u5b50\u5c01\u9876\" ); } } \u4f20\u7edf\u65b9\u6cd5\u4f18\u70b9\u662f\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u7b80\u5355\u6613\u64cd\u4f5c\u3002 \u8bbe\u8ba1\u7684\u7a0b\u5e8f\u7ed3\u6784\uff0c\u8fc7\u4e8e\u7b80\u5355\uff0c\u6ca1\u6709\u8bbe\u8ba1\u7f13\u5b58\u5c42\u5bf9\u8c61\uff0c\u7a0b\u5e8f\u7684\u6269\u5c55\u548c\u7ef4\u62a4\u4e0d\u597d. \u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u65b9\u6848\uff0c\u628a\u4ea7\u54c1(\u5373\uff1a\u623f\u5b50) \u548c \u521b\u5efa\u4ea7\u54c1\u7684\u8fc7\u7a0b(\u5373\uff1a\u5efa\u623f\u5b50\u6d41\u7a0b) \u5c01\u88c5\u5728\u4e00\u8d77\uff0c\u8026\u5408\u6027\u589e\u5f3a\u4e86\u3002","title":"\u4f20\u7edf\u65b9\u5f0f\u89e3\u51b3"},{"location":"Java/designpattern/designpattern/#_21","text":"","title":"\u5efa\u9020\u8005\u6a21\u5f0f\u4ecb\u7ecd"},{"location":"Java/designpattern/designpattern/#_22","text":"\u5efa\u9020\u8005\u6a21\u5f0f\uff08Builder Pattern\uff09 \u53c8\u53eb\u751f\u6210\u5668\u6a21\u5f0f\uff0c\u662f\u4e00\u79cd\u5bf9\u8c61\u6784\u5efa\u6a21\u5f0f\u3002\u5b83\u53ef\u4ee5\u5c06\u590d\u6742\u5bf9\u8c61\u7684\u5efa\u9020\u8fc7\u7a0b\u62bd\u8c61\u51fa\u6765\uff08\u62bd\u8c61\u7c7b\u522b\uff09\uff0c\u4f7f\u8fd9\u4e2a\u62bd\u8c61\u8fc7\u7a0b\u7684\u4e0d\u540c\u5b9e\u73b0\u65b9\u6cd5\u53ef\u4ee5\u6784\u9020\u51fa\u4e0d\u540c\u8868\u73b0\uff08\u5c5e\u6027\uff09\u7684\u5bf9\u8c61\u3002 \u5efa\u9020\u8005\u6a21\u5f0f \u662f\u4e00\u6b65\u4e00\u6b65\u521b\u5efa\u4e00\u4e2a\u590d\u6742\u7684\u5bf9\u8c61\uff0c\u5b83\u5141\u8bb8\u7528\u6237\u53ea\u901a\u8fc7\u6307\u5b9a\u590d\u6742\u5bf9\u8c61\u7684\u7c7b\u578b\u548c\u5185\u5bb9\u5c31\u53ef\u4ee5\u6784\u5efa\u5b83\u4eec\uff0c \u7528\u6237\u4e0d\u9700\u8981\u77e5\u9053\u5185\u90e8\u7684\u5177\u4f53\u6784\u5efa\u7ec6\u8282\u3002\u6709\u56db\u4e2a\u89d2\u8272\uff1a Product\uff08\u4ea7\u54c1\u89d2\u8272\uff09\uff1a \u4e00\u4e2a\u5177\u4f53\u7684\u4ea7\u54c1\u5bf9\u8c61\u3002 Builder\uff08\u62bd\u8c61\u5efa\u9020\u8005\uff09\uff1a \u521b\u5efa\u4e00\u4e2a Product \u5bf9\u8c61\u7684\u5404\u4e2a\u90e8\u4ef6\u6307\u5b9a\u7684 \u63a5\u53e3/\u62bd\u8c61\u7c7b\u3002 ConcreteBuilder\uff08\u5177\u4f53\u5efa\u9020\u8005\uff09\uff1a \u5b9e\u73b0\u63a5\u53e3\uff0c\u6784\u5efa\u548c\u88c5\u914d\u5404\u4e2a\u90e8\u4ef6\u3002 Director\uff08\u6307\u6325\u8005\uff09\uff1a \u6784\u5efa\u4e00\u4e2a\u4f7f\u7528 Builder \u63a5\u53e3\u7684\u5bf9\u8c61\u3002\u5b83\u4e3b\u8981\u662f\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u590d\u6742\u7684\u5bf9\u8c61\u3002\u5b83\u4e3b\u8981\u6709\u4e24\u4e2a\u4f5c\u7528\uff0c\u4e00\u662f\uff1a\u9694\u79bb\u4e86\u5ba2\u6237\u4e0e\u5bf9\u8c61\u7684\u751f\u4ea7\u8fc7\u7a0b\uff0c\u4e8c\u662f\uff1a\u8d1f\u8d23\u63a7\u5236\u4ea7\u54c1\u5bf9\u8c61\u7684\u751f\u4ea7\u8fc7\u7a0b\u3002 \u62bd\u8c61\u7684\u5efa\u9020\u8005\u4ee3\u7801\uff1a public abstract class HouseBuilder { protected House house = new House (); // \u5c06\u5236\u4f5c\u7684\u6d41\u7a0b\u5199\u597d\uff0c\u62bd\u8c61\u7684\u65b9\u6cd5 // \u6253\u5730\u57fa public abstract void buildBasic (); // \u780c\u5899 public abstract void buildWalls (); //\u5c01\u9876 public abstract void roofed (); // \u5efa\u9020\u597d\u623f\u5b50\uff0c\u5c06\u623f\u5b50\u8fd4\u56de public House buildHouse (){ return house ; } } \u5c06\u5236\u4f5c\u7684\u6d41\u7a0b\u5199\u6210\u62bd\u8c61\u7684\u65b9\u6cd5\uff0c\u5e76\u5c06\u5efa\u597d\u7684\u623f\u5b50\u8fd4\u56de\u3002\u7136\u540e\u5177\u4f53\u7684\u623f\u5b50\u5efa\u9020\u7684\u7ec6\u8282\u9700\u8981\u7531\u5b9e\u73b0\u7684\u5b50\u7c7b\u5b9e\u73b0\uff0c\u6bd4\u5982\u6211\u8981\u5efa\u9020\u9ad8\u697c\uff0c\u8981\u7528\u4e00\u4e2a\u9ad8\u697c\u7684\u5b9e\u73b0\u7c7b\u6765\u7ee7\u627f\u8be5\u7c7b\uff0c\u4f8b\u5982\u4e0b\u9762\u7684 HighBuild \u7c7b public class HighBuilding extends HouseBuilder { @Override public void buildBasic () { System . out . println ( \"\u9ad8\u697c\u6253\u5730\u57fa100\u7c73\" ); } @Override public void buildWalls () { System . out . println ( \"\u9ad8\u697c\u780c\u589920cm\" ); } @Override public void roofed () { System . out . println ( \"\u9ad8\u697c\u7684\u5c4b\u9876\" ); } } \u8fd9\u4e2a\u5c31\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u5efa\u9020\u8005\uff0c\u7528\u6765\u5efa\u9020\u5177\u4f53\u7684\u623f\u5b50\u3002\u4e0b\u9762\u6765\u770b\u4e00\u4e0b\u6307\u6325\u8005\uff0c\u4e3b\u8981\u662f\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u590d\u6742\u7684\u5bf9\u8c61\u3002 public class HouseDirector { HouseBuilder houseBuilder = null ; // \u901a\u8fc7\u6784\u9020\u5668\u4f20\u5165 public HouseDirector ( HouseBuilder houseBuilder ) { this . houseBuilder = houseBuilder ; } public void setHouseBuilder ( HouseBuilder houseBuilder ) { this . houseBuilder = houseBuilder ; } // \u5982\u4f55\u5904\u7406\u5efa\u9020\u623f\u5b50\u7684\u6d41\u7a0b\uff0c\u4ea4\u7ed9\u6307\u6325\u8005 public House constructHouse (){ houseBuilder . buildBasic (); houseBuilder . buildWalls (); houseBuilder . roofed (); return houseBuilder . buildHouse (); } } \u5728\u8fd9\u4e2a\u7c7b\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\uff08\u6216\u8005set\u65b9\u6cd5\uff09\u5c06 HouseBuilder \u5bf9\u8c61\u4f20\u5165\u3002\u7136\u540e\u901a\u8fc7 constructHouse \u5c06\u5177\u4f53\u6d41\u7a0b\u4ea4\u7ed9\u6307\u6325\u8005\u3002\u6700\u540e\u5728\u4e3b\u65b9\u6cd5\u4e2d\u8c03\u7528\u3002 public class Client { public static void main ( String [] args ) { // \u76d6\u666e\u901a\u7684\u623f\u5b50 CommonHouse commonHouse = new CommonHouse (); // \u51c6\u5907\u521b\u5efa\u623f\u5b50\u7684\u6307\u6325\u8005 HouseDirector houseDirector = new HouseDirector ( commonHouse ); // \u5b8c\u6210\u76d6\u623f\u5b50\uff0c\u8fd4\u56de\u4ea7\u54c1 House house = houseDirector . constructHouse (); } }","title":"\u57fa\u672c\u4ecb\u7ecd"},{"location":"Java/designpattern/designpattern/#_23","text":"\uff081\uff09\u5ba2\u6237\u7aef(\u4f7f\u7528\u7a0b\u5e8f)\u4e0d\u5fc5\u77e5\u9053\u4ea7\u54c1\u5185\u90e8\u7ec4\u6210\u7684\u7ec6\u8282\uff0c\u5c06\u4ea7\u54c1\u672c\u8eab\u4e0e\u4ea7\u54c1\u7684\u521b\u5efa\u8fc7\u7a0b\u89e3\u8026\uff0c\u4f7f\u5f97\u76f8\u540c\u7684\u521b\u5efa\u8fc7\u7a0b\u53ef\u4ee5\u521b\u5efa\u4e0d\u540c\u7684\u4ea7\u54c1\u5bf9\u8c61\u3002\uff082\uff09\u6bcf\u4e00\u4e2a\u5177\u4f53\u5efa\u9020\u8005\u90fd\u76f8\u5bf9\u72ec\u7acb\uff0c\u800c\u4e0e\u5176\u4ed6\u7684\u5177\u4f53\u5efa\u9020\u8005\u65e0\u5173\uff0c\u56e0\u6b64\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u66ff\u6362\u5177\u4f53\u5efa\u9020\u8005\u6216\u589e\u52a0\u65b0\u7684\u5177\u4f53\u5efa\u9020\u8005\uff0c \u7528\u6237\u4f7f\u7528\u4e0d\u540c\u7684\u5177\u4f53\u5efa\u9020\u8005\u5373\u53ef\u5f97\u5230\u4e0d\u540c\u7684\u4ea7\u54c1\u5bf9\u8c61\u3002 \uff083\uff09\u53ef\u4ee5\u66f4\u52a0\u7cbe\u7ec6\u5730\u63a7\u5236\u4ea7\u54c1\u7684\u521b\u5efa\u8fc7\u7a0b \u3002\u5c06\u590d\u6742\u4ea7\u54c1\u7684\u521b\u5efa\u6b65\u9aa4\u5206\u89e3\u5728\u4e0d\u540c\u7684\u65b9\u6cd5\u4e2d\uff0c\u4f7f\u5f97\u521b\u5efa\u8fc7\u7a0b\u66f4\u52a0\u6e05\u6670\uff0c\u4e5f\u66f4\u65b9\u4fbf\u4f7f\u7528\u7a0b\u5e8f\u6765\u63a7\u5236\u521b\u5efa\u8fc7\u7a0b\uff084\uff09 \u589e\u52a0\u65b0\u7684\u5177\u4f53\u5efa\u9020\u8005\u65e0\u987b\u4fee\u6539\u539f\u6709\u7c7b\u5e93\u7684\u4ee3\u7801\uff0c\u6307\u6325\u8005\u7c7b\u9488\u5bf9\u62bd\u8c61\u5efa\u9020\u8005\u7c7b\u7f16\u7a0b\uff0c\u7cfb\u7edf\u6269\u5c55\u65b9\u4fbf\uff0c\u7b26\u5408\u201c\u5f00\u95ed\u539f\u5219\u201d\uff085\uff09 \u5efa\u9020\u8005\u6a21\u5f0f\u6240\u521b\u5efa\u7684\u4ea7\u54c1\u4e00\u822c\u5177\u6709\u8f83\u591a\u7684\u5171\u540c\u70b9\uff0c\u5176\u7ec4\u6210\u90e8\u5206\u76f8\u4f3c\uff0c\u5982\u679c\u4ea7\u54c1\u4e4b\u95f4\u7684\u5dee\u5f02\u6027\u5f88\u5927\uff0c\u5219\u4e0d\u9002\u5408\u4f7f\u7528\u5efa\u9020\u8005\u6a21\u5f0f\uff0c\u56e0\u6b64\u5176\u4f7f\u7528\u8303\u56f4\u53d7\u5230\u4e00\u5b9a\u7684\u9650\u5236\u3002\uff086\uff09\u5982\u679c\u4ea7\u54c1\u7684\u5185\u90e8\u53d8\u5316\u590d\u6742\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9700\u8981\u5b9a\u4e49\u5f88\u591a\u5177\u4f53\u5efa\u9020\u8005\u7c7b\u6765\u5b9e\u73b0\u8fd9\u79cd\u53d8\u5316\uff0c\u5bfc\u81f4\u7cfb\u7edf\u53d8\u5f97\u5f88\u5e9e\u5927\uff0c\u56e0\u6b64\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8981\u8003\u8651\u662f\u5426\u9009\u62e9\u5efa\u9020\u8005\u6a21\u5f0f\u3002 \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f VS \u5efa\u9020\u8005\u6a21\u5f0f \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u5b9e\u73b0\u5bf9\u4ea7\u54c1\u5bb6\u65cf\u7684\u521b\u5efa\uff0c\u4e00\u4e2a\u4ea7\u54c1\u5bb6\u65cf\u662f\u8fd9\u6837\u7684\u4e00\u7cfb\u5217\u4ea7\u54c1\uff1a\u5177\u6709\u4e0d\u540c\u5206\u7c7b\u7ef4\u5ea6\u7684\u4ea7\u54c1\u7ec4\u5408\uff0c\u91c7\u7528\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u4e0d\u9700\u8981\u5173\u5fc3\u6784\u5efa\u8fc7\u7a0b\uff0c\u53ea\u5173\u5fc3\u4ec0\u4e48\u4ea7\u54c1\u7531\u4ec0\u4e48\u5de5\u5382\u751f\u4ea7\u5373\u53ef\u3002\u800c\u5efa\u9020\u8005\u6a21\u5f0f\u5219\u662f\u8981\u6c42\u6309\u7167\u6307\u5b9a\u7684\u84dd\u56fe\u5efa\u9020\u4ea7\u54c1\uff0c\u5b83\u7684\u4e3b\u8981\u76ee\u7684\u662f\u901a\u8fc7\u7ec4\u88c5\u96f6\u914d\u4ef6\u800c\u4ea7\u751f\u4e00\u4e2a\u65b0\u4ea7\u54c1\u3002","title":"\u5177\u4f53\u7ec6\u8282"},{"location":"Java/designpattern/designpattern/#_24","text":"\u9002\u914d\u5668\u6a21\u5f0f(Adapter Pattern)\u5c06\u67d0\u4e2a\u7c7b\u7684\u63a5\u53e3\u8f6c\u6362\u6210\u5ba2\u6237\u7aef\u671f\u671b\u7684\u53e6\u4e00\u4e2a\u63a5\u53e3\u8868\u793a\uff0c\u4e3b\u7684\u76ee\u7684\u662f\u517c\u5bb9\u6027\uff0c\u8ba9\u539f\u672c\u56e0\u63a5\u53e3\u4e0d\u5339\u914d\u4e0d\u80fd\u4e00\u8d77\u5de5\u4f5c\u7684\u4e24\u4e2a\u7c7b\u53ef\u4ee5\u534f\u540c\u5de5\u4f5c\u3002\u5176\u522b\u540d\u4e3a\u5305\u88c5\u5668(Wrapper)\u3002\u9002\u914d\u5668\u6a21\u5f0f\u5c5e\u4e8e\u7ed3\u6784\u578b\u6a21\u5f0f\u3002\u4e3b\u8981\u5206\u4e3a\u4e09\u7c7b\uff1a \u7c7b\u9002\u914d\u5668\u6a21\u5f0f\u3001\u5bf9\u8c61\u9002\u914d\u5668\u6a21\u5f0f\u3001\u63a5\u53e3\u9002\u914d\u5668\u6a21\u5f0f \u3002","title":"\u516b\u3001\u8bbe\u914d\u5668\u6a21\u5f0f"},{"location":"Java/designpattern/designpattern/#_25","text":"1) \u9002\u914d\u5668\u6a21\u5f0f\uff1a\u5c06\u4e00\u4e2a\u7c7b\u7684\u63a5\u53e3\u8f6c\u6362\u6210\u53e6\u4e00\u79cd\u63a5\u53e3.\u8ba9\u539f\u672c\u63a5\u53e3\u4e0d\u517c\u5bb9\u7684\u7c7b\u53ef\u4ee5\u517c\u5bb9 2) \u4ece\u7528\u6237\u7684\u89d2\u5ea6\u770b\u4e0d\u5230\u88ab\u9002\u914d\u8005\uff0c\u662f\u89e3\u8026\u7684 3) \u7528\u6237\u8c03\u7528\u9002\u914d\u5668\u8f6c\u5316\u51fa\u6765\u7684\u76ee\u6807\u63a5\u53e3\u65b9\u6cd5\uff0c\u9002\u914d\u5668\u518d\u8c03\u7528\u88ab\u9002\u914d\u8005\u7684\u76f8\u5173\u63a5\u53e3\u65b9\u6cd5 4) \u7528\u6237\u6536\u5230\u53cd\u9988\u7ed3\u679c\uff0c\u611f\u89c9\u53ea\u662f\u548c\u76ee\u6807\u63a5\u53e3\u4ea4\u4e92\u3002","title":"\u57fa\u672c\u539f\u7406"},{"location":"Java/designpattern/designpattern/#_26","text":"Adapter\u7c7b\uff0c\u901a\u8fc7\u7ee7\u627fsrc\u7c7b\uff0c\u5b9e\u73b0dst\u7c7b\u63a5\u53e3\uff0c\u5b8c\u6210src->dst\u7684\u9002\u914d\u3002\u4ee5\u751f\u6d3b\u4e2d\u5145\u7535\u5668\u7684\u4f8b\u5b50\u6765\u8bb2\u89e3\u9002\u914d\u5668\uff0c\u5145\u7535\u5668\u672c\u8eab\u76f8\u5f53\u4e8eAdapter\uff0c220V \u4ea4\u6d41\u7535\u76f8\u5f53\u4e8e src (\u5373\u88ab\u9002\u914d\u8005)\uff0c\u6211\u4eec\u7684\u76ee\u7684 dst(\u5373\u76ee\u6807)\u662f 5V \u76f4\u6d41\u7535\u3002 public class Voltage220V { public int output220V (){ int src = 220 ; System . out . println ( \"\u7535\u538b=\" + src + \"\u4f0f\" ); return src ; } } \u4e0a\u9762\u8fd9\u4e2a\u662fsrc\u7c7b\uff0c\u4e0b\u9762\u662fdst\u7c7b\u63a5\u53e3 public interface IVoltage5V { public int output5V (); } \u6211\u4eec\u7684\u76ee\u7684\u662f\u5b9e\u73b0\u4e00\u4e2a Adapter \u7c7b\u6765\u5b8c\u6210\u9002\u914d\u3002 // \u9002\u914d\u5668\u7c7b public class VoltageAdapter extends Voltage220V implements IVoltage5V { @Override public int output5V () { // \u83b7\u53d6\u5230220V\u7684\u7535\u538b int srcV = output220V (); int dstV = srcV / 44 ; return dstV ; } } \u901a\u8fc7\u7c7b\u9002\u914d\u5668\u5c31\u53ef\u4ee5\u5b8c\u6210\u7535\u538b\u7684\u8f6c\u6362\u3002\u4f46\u662f\u9700\u8981\u6ce8\u610f\uff1a Java \u662f\u5355\u7ee7\u627f\u673a\u5236\uff0c\u6240\u4ee5\u7c7b\u9002\u914d\u5668\u9700\u8981\u7ee7\u627f src \u7c7b\u8fd9\u4e00\u70b9\u7b97\u662f\u4e00\u4e2a\u7f3a\u70b9, \u56e0\u4e3a\u8fd9\u8981\u6c42 dst \u5fc5\u987b\u662f\u63a5\u53e3\uff0c\u6709\u4e00\u5b9a\u5c40\u9650\u6027; src \u7c7b\u7684\u65b9\u6cd5\u5728 Adapter \u4e2d\u90fd\u4f1a\u66b4\u9732\u51fa\u6765\uff0c\u4e5f\u589e\u52a0\u4e86\u4f7f\u7528\u7684\u6210\u672c\u3002\u7531\u4e8e\u5176\u7ee7\u627f\u4e86 src \u7c7b\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u91cd\u5199 src \u7c7b\u7684\u65b9\u6cd5\uff0c\u4f7f\u5f97 Adapter\u7684\u7075\u6d3b\u6027\u589e\u5f3a\u4e86\u3002","title":"\u7c7b\u9002\u914d\u5668"},{"location":"Java/designpattern/designpattern/#_27","text":"\u57fa\u672c\u601d\u8def\u548c\u7c7b\u7684\u9002\u914d\u5668\u6a21\u5f0f\u76f8\u540c\uff0c\u53ea\u662f\u5c06Adapter \u7c7b\u4f5c\u4fee\u6539\uff0c\u4e0d\u662f\u7ee7\u627f src \u7c7b\uff0c\u800c\u662f\u6301\u6709 src \u7c7b\u7684\u5b9e\u4f8b\uff0c\u4ee5\u89e3\u51b3\u517c\u5bb9\u6027\u7684\u95ee\u9898\u3002 \u5373\uff1a\u6301\u6709src\u7c7b\uff0c\u5b9e\u73b0dst\u7c7b\u63a5\u53e3\uff0c\u5b8c\u6210 src->dst \u7684\u9002\u914d\u3002 \u6839\u636e\u201c\u5408\u6210\u590d\u7528\u539f\u5219\u201d\uff0c\u5728\u7cfb\u7edf\u4e2d\u5c3d\u91cf\u4f7f\u7528\u5173\u8054\u5173\u7cfb\uff08\u805a\u5408\uff09\u6765\u66ff\u4ee3\u7ee7\u627f\u5173\u7cfb \u3002\u5bf9\u8c61\u9002\u914d\u5668\u6a21\u5f0f\u662f\u9002\u914d\u5668\u6a21\u5f0f\u5e38\u7528\u7684\u4e00\u79cd\u3002 // \u9002\u914d\u5668\u7c7b public class VoltageAdapter implements IVoltage5V { private Voltage220V voltage220v ; public VoltageAdapter ( Voltage220V voltage220v ) { this . voltage220v = voltage220v ; } @Override public int output5V () { int dst = 0 ; if ( voltage220v != null ){ int src = voltage220v . output220V (); dst = src / 44 ; } return dst ; } } \u8fd9\u79cd\u65b9\u6cd5\uff0c\u4e0e\u4e0a\u9762\u7684\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u4f46\u4e0d\u662f\u901a\u8fc7\u7ee7\u627f\u7684\u65b9\u5f0f\uff0c\u800c\u662f\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\uff08\u6216\u8005set\uff09\u83b7\u53d6\u5b9e\u4f8b\u3002 \u5bf9\u8c61\u9002\u914d\u5668\u548c\u7c7b\u9002\u914d\u5668\u5176\u5b9e\u7b97\u662f\u540c\u4e00\u79cd\u601d\u60f3\uff0c\u53ea\u4e0d\u8fc7\u5b9e\u73b0\u65b9\u5f0f\u4e0d\u540c\u3002\u6839\u636e\u5408\u6210\u590d\u7528\u539f\u5219\uff0c\u4f7f\u7528\u7ec4\u5408\u66ff\u4ee3\u7ee7\u627f\uff0c \u6240\u4ee5\u5b83\u89e3\u51b3\u4e86\u7c7b\u9002\u914d\u5668\u5fc5\u987b\u7ee7\u627f src\u7684\u5c40\u9650\u6027\u95ee\u9898\uff0c\u4e5f\u4e0d\u518d\u8981\u6c42dst\u5fc5\u987b\u662f\u63a5\u53e3\u3002\u4f7f\u7528\u6210\u672c\u66f4\u4f4e\uff0c\u66f4\u7075\u6d3b","title":"\u5bf9\u8c61\u9002\u914d\u5668"},{"location":"Java/designpattern/designpattern/#_28","text":"\u6838\u5fc3\u601d\u8def\uff1a\u5f53\u4e0d\u9700\u8981\u5168\u90e8\u5b9e\u73b0\u63a5\u53e3\u63d0\u4f9b\u7684\u65b9\u6cd5\u65f6\uff0c\u53ef\u5148\u8bbe\u8ba1\u4e00\u4e2a\u62bd\u8c61\u7c7b\u5b9e\u73b0\u63a5\u53e3\uff0c\u5e76\u4e3a\u8be5\u63a5\u53e3\u4e2d\u6bcf\u4e2a\u65b9\u6cd5\u63d0\u4f9b\u4e00\u4e2a\u9ed8\u8ba4\u5b9e\u73b0\uff08\u7a7a\u65b9\u6cd5\uff09\uff0c\u90a3\u4e48\u8be5\u62bd\u8c61\u7c7b\u7684\u5b50\u7c7b\u53ef\u6709\u9009\u62e9\u5730\u8986\u76d6\u7236\u7c7b\u7684\u67d0\u4e9b\u65b9\u6cd5\u6765\u5b9e\u73b0\u9700\u6c42\u3002\u9002\u7528\u4e8e\u4e00\u4e2a\u63a5\u53e3\u4e0d\u60f3\u4f7f\u7528\u5176\u6240\u6709\u7684\u65b9\u6cd5\u7684\u60c5\u51b5\u3002","title":"\u63a5\u53e3\u9002\u914d\u5668"},{"location":"Java/designpattern/designpattern/#_29","text":"\u4e09\u79cd\u547d\u540d\u65b9\u5f0f\uff0c\u662f\u6839\u636esrc\u662f\u4ee5\u600e\u6837\u7684\u5f62\u5f0f\u7ed9\u5230 Adapter\uff08\u5728Adapter\u91cc\u7684\u5f62\u5f0f\uff09\u6765\u547d\u540d\u7684\u3002\u7c7b\u9002\u914d\u5668\uff1a\u4ee5\u7c7b\u7ed9\u5230\uff0c\u5728Adapter\u91cc\uff0c\u5c31\u662f\u5c06src\u5f53\u505a\u7c7b\uff0c\u7ee7\u627f\u3002\u5bf9\u8c61\u9002\u914d\u5668\uff1a\u4ee5\u5bf9\u8c61\u7ed9\u5230\uff0c\u5728Adapter \u91cc\uff0c\u5c06 src \u4f5c\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6301\u6709\u3002\u63a5\u53e3\u9002\u914d\u5668\uff1a\u4ee5\u63a5\u53e3\u7ed9\u5230\uff0c\u5728Adapter\u91cc\uff0c\u5c06src\u4f5c\u4e3a\u4e00\u4e2a\u63a5\u53e3\uff0c\u5b9e\u73b0\u3002Adapter \u6a21\u5f0f\u6700\u5927\u7684\u4f5c\u7528\u8fd8\u662f\u5c06\u539f\u672c\u4e0d\u517c\u5bb9\u7684\u63a5\u53e3\u878d\u5408\u5728\u4e00\u8d77\u5de5\u4f5c\u3002","title":"\u9002\u914d\u5668\u7ec6\u8282"},{"location":"Java/designpattern/designpattern/#_30","text":"","title":"\u4e5d\u3001\u6865\u63a5\u6a21\u5f0f"},{"location":"Java/designpattern/designpattern/#_31","text":"\u6865\u63a5\u6a21\u5f0f(Bridge \u6a21\u5f0f)\u662f\u6307\uff1a\u5c06\u5b9e\u73b0\u4e0e\u62bd\u8c61\u653e\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u7c7b\u5c42\u6b21\u4e2d\uff0c\u4f7f\u4e24\u4e2a\u5c42\u6b21\u53ef\u4ee5\u72ec\u7acb\u6539\u53d8\u3002\u662f\u4e00\u79cd\u7ed3\u6784\u578b\u8bbe\u8ba1\u6a21\u5f0f\u3002 Bridge \u6a21\u5f0f\u57fa\u4e8e\u7c7b\u7684\u6700\u5c0f\u8bbe\u8ba1\u539f\u5219\uff0c\u901a\u8fc7\u4f7f\u7528\u5c01\u88c5\u3001\u805a\u5408\u53ca\u7ee7\u627f\u7b49\u884c\u4e3a\u8ba9\u4e0d\u540c\u7684\u7c7b\u627f\u62c5\u4e0d\u540c\u7684\u804c\u8d23\u3002\u5b83\u7684\u4e3b\u8981\u7279\u70b9\u662f\u628a\u62bd\u8c61(Abstraction)\u4e0e\u884c\u4e3a\u5b9e\u73b0(Implementation)\u5206\u79bb\u5f00\u6765\uff0c\u4ece\u800c\u53ef\u4ee5\u4fdd\u6301\u5404\u90e8\u5206\u7684\u72ec\u7acb\u6027\u4ee5\u53ca\u5e94\u5bf9\u4ed6\u4eec\u7684\u529f\u80fd\u6269\u5c55\u3002 \u62bd\u8c61\u7c7b(Abstraction)\uff1a\u7ef4\u62a4\u4e86 Implementor/\u5373\u5b83\u7684\u5b9e\u73b0\u7c7b ConcreteImplementorA\uff0c \u4e8c\u8005\u662f\u805a\u5408\u5173\u7cfb\uff0c Abstraction\u5145\u5f53\u6865\u63a5\u7c7b\u3002RefinedAbstraction\uff1a\u662fAbstraction\u62bd\u8c61\u7c7b\u7684\u5b50\u7c7b\u3002Implementor : \u884c\u4e3a\u5b9e\u73b0\u7c7b\u7684\u63a5\u53e3\u3002ConcreteImplementorA/B\uff1a\u884c\u4e3a\u7684\u5177\u4f53\u5b9e\u73b0\u7c7b\u3002","title":"\u57fa\u672c\u4ecb\u7ecd"},{"location":"Java/designpattern/designpattern/#_32","text":"\u4e0b\u9762\u770b\u4e00\u4e9b\u5177\u4f53\u7684\u4f8b\u5b50\u3002 public abstract class Phone { // \u7ec4\u5408\u54c1\u724c private Brand brand ; // \u6784\u9020\u5668 public Phone ( Brand brand ) { this . brand = brand ; } protected void open (){ this . brand . open (); } protected void close (){ this . brand . close (); } protected void call (){ this . brand . call (); } } \u9996\u5148\u8fd9\u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u624b\u673a\u7c7b\uff0c\u7136\u540e\uff0c\u4e0b\u9762\u662f\u624b\u673a\u7684\u7c7b\u578b\uff08\u6298\u53e0\u5f0f\u6216\u8005\u6ed1\u76d6\u5f0f\uff09\u3002 public class UpRightPhone extends Phone { // \u6784\u9020\u5668 public UpRightPhone ( Brand brand ){ super ( brand ); } public void open (){ super . open (); System . out . println ( \"\u76f4\u7acb\u6837\u5f0f\u7684\u624b\u673a\" ); } public void close (){ super . close (); System . out . println ( \"\u76f4\u7acb\u6837\u5f0f\u7684\u624b\u673a\" ); } public void call (){ super . call (); System . out . println ( \"\u76f4\u7acb\u6837\u5f0f\u7684\u624b\u673a\" ); } } \u7136\u540e\u662f\u624b\u673a\u7684\u529f\u80fd\u63a5\u53e3 public interface Brand { void open (); void close (); void call (); } \u4e0b\u9762\u662f\u5177\u4f53\u7684\u624b\u673a\u54c1\u724c public class XiaoMi implements Brand { @Override public void open () { System . out . println ( \"\u5c0f\u7c73\u624b\u673a\u5f00\u673a\u4e86\" ); } @Override public void close () { System . out . println ( \"\u5c0f\u7c73\u624b\u673a\u5173\u673a\u4e86\" ); } @Override public void call () { System . out . println ( \"\u5c0f\u7c73\u624b\u673a\u6253\u7535\u8bdd\" ); } } \u6700\u540e\u8c03\u7528\u8005\u8c03\u7528\u76f8\u5173\u7684\u65b9\u6cd5\u5b9e\u73b0\u5177\u4f53\u7684\u529f\u80fd\u3002 public static void main ( String [] args ) { // \u83b7\u53d6\u6298\u53e0\u5f0f\u624b\u673a\uff08\u6837\u5f0f\u52a0\u54c1\u724c\uff09 Phone phone1 = new FoldedPhone ( new XiaoMi ()); phone1 . open (); phone1 . call (); phone1 . close (); }","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"Java/designpattern/designpattern/#_33","text":"\uff081\uff09\u5b9e\u73b0\u4e86\u62bd\u8c61\u548c\u5b9e\u73b0\u90e8\u5206\u7684\u5206\u79bb\uff0c\u4ece\u800c\u6781\u5927\u7684\u63d0\u4f9b\u4e86\u7cfb\u7edf\u7684\u7075\u6d3b\u6027\uff0c\u8ba9\u62bd\u8c61\u90e8\u5206\u548c\u5b9e\u73b0\u90e8\u5206\u72ec\u7acb\u5f00\u6765\uff0c\u8fd9\u6709\u52a9\u4e8e\u7cfb\u7edf\u8fdb\u884c\u5206\u5c42\u8bbe\u8ba1\uff0c\u4ece\u800c\u4ea7\u751f\u66f4\u597d\u7684\u7ed3\u6784\u5316\u7cfb\u7edf\u3002\uff082\uff09 \u5bf9\u4e8e\u7cfb\u7edf\u7684\u9ad8\u5c42\u90e8\u5206\uff0c\u53ea\u9700\u8981\u77e5\u9053\u62bd\u8c61\u90e8\u5206\u548c\u5b9e\u73b0\u90e8\u5206\u7684\u63a5\u53e3\u5c31\u53ef\u4ee5\u4e86\uff0c\u5176\u5b83\u7684\u90e8\u5206\u7531\u5177\u4f53\u4e1a\u52a1\u6765\u5b8c\u6210\u3002\uff083\uff09\u6865\u63a5\u6a21\u5f0f\u66ff\u4ee3\u591a\u5c42\u7ee7\u627f\u65b9\u6848\uff0c\u53ef\u4ee5\u51cf\u5c11\u5b50\u7c7b\u7684\u4e2a\u6570\uff0c\u964d\u4f4e\u7cfb\u7edf\u7684\u7ba1\u7406\u548c\u7ef4\u62a4\u6210\u672c\u3002\uff084\uff09\u6865\u63a5\u6a21\u5f0f\u7684\u5f15\u5165\u589e\u52a0\u4e86\u7cfb\u7edf\u7684\u7406\u89e3\u548c\u8bbe\u8ba1\u96be\u5ea6\uff0c\u7531\u4e8e\u805a\u5408\u5173\u8054\u5173\u7cfb\u5efa\u7acb\u5728\u62bd\u8c61\u5c42\uff0c\u8981\u6c42\u5f00\u53d1\u8005\u9488\u5bf9\u62bd\u8c61\u8fdb\u884c\u8bbe\u8ba1\u548c\u7f16\u7a0b\u3002 \u6865\u63a5\u6a21\u5f0f\u8981\u6c42\u6b63\u786e\u8bc6\u522b\u51fa\u7cfb\u7edf\u4e2d\u4e24\u4e2a\u72ec\u7acb\u53d8\u5316\u7684\u7ef4\u5ea6(\u62bd\u8c61\u3001\u548c\u5b9e\u73b0)\uff0c\u56e0\u6b64\u5176\u4f7f\u7528\u8303\u56f4\u6709\u4e00\u5b9a\u7684\u5c40\u9650\u6027\uff0c\u5373\u9700\u8981\u6709\u8fd9\u6837\u7684\u5e94\u7528\u573a\u666f\u3002","title":"\u7ec6\u8282\u548c\u6ce8\u610f\u4e8b\u9879"},{"location":"Java/designpattern/designpattern/#_34","text":"1) -JDBC \u9a71\u52a8\u7a0b\u5e8f 2) -\u94f6\u884c\u8f6c\u8d26\u7cfb\u7edf \u8f6c\u8d26\u5206\u7c7b: \u7f51\u4e0a\u8f6c\u8d26\uff0c\u67dc\u53f0\u8f6c\u8d26\uff0cAMT \u8f6c\u8d26 \u8f6c\u8d26\u7528\u6237\u7c7b\u578b\uff1a\u666e\u901a\u7528\u6237\uff0c\u94f6\u5361\u7528\u6237\uff0c\u91d1\u5361\u7528\u6237.. 3) -\u6d88\u606f\u7ba1\u7406 * \u6d88\u606f\u7c7b\u578b\uff1a\u5373\u65f6\u6d88\u606f\uff0c\u5ef6\u65f6\u6d88\u606f * \u6d88\u606f\u5206\u7c7b\uff1a\u624b\u673a\u77ed\u4fe1\uff0c\u90ae\u4ef6\u6d88\u606f\uff0cQQ \u6d88\u606f...","title":"\u5e38\u7528\u573a\u666f"},{"location":"Java/designpattern/designpattern/#_35","text":"","title":"\u5341\u3001\u88c5\u9970\u8005\u6a21\u5f0f"},{"location":"Java/designpattern/designpattern/#_36","text":"1) \u5496\u5561\u79cd\u7c7b/\u5355\u54c1\u5496\u5561\uff1aEspresso(\u610f\u5927\u5229\u6d53\u5496\u5561)\u3001ShortBlack\u3001LongBlack(\u7f8e\u5f0f\u5496\u5561)\u3001Decaf(\u65e0\u56e0\u5496\u5561) 2) \u8c03\u6599\uff1aMilk\u3001Soy(\u8c46\u6d46)\u3001Chocolate 3) \u8981\u6c42\u5728\u6269\u5c55\u65b0\u7684\u5496\u5561\u79cd\u7c7b\u65f6\uff0c\u5177\u6709\u826f\u597d\u7684\u6269\u5c55\u6027\u3001\u6539\u52a8\u65b9\u4fbf\u3001\u7ef4\u62a4\u65b9\u4fbf 4) \u4f7f\u7528 OO \u7684\u6765\u8ba1\u7b97\u4e0d\u540c\u79cd\u7c7b\u5496\u5561\u7684\u8d39\u7528: \u5ba2\u6237\u53ef\u4ee5\u70b9\u5355\u54c1\u5496\u5561\uff0c\u4e5f\u53ef\u4ee5\u5355\u54c1\u5496\u5561+\u8c03\u6599\u7ec4\u5408\u3002","title":"\u95ee\u9898\u5f15\u5165"},{"location":"Java/designpattern/designpattern/#_37","text":"\u4e3a\u6bcf\u4e00\u79cd\u5355\u54c1Coffee\u521b\u5efa\u5bf9\u5e94\u7684\u7c7b\uff0c\u7136\u540e\u4e3a\u5bf9\u5e94\u7684\u8c03\u6599\u4e5f\u5efa\u7acb\u76f8\u5e94\u7684\u7c7b\uff0c\u7136\u540e\u8fdb\u884c\u7ec4\u5408\uff0c\u8fd9\u6837\u5904\u7406\u4f1a\u6bd4\u8f83\u7b80\u5355\uff0c\u4f46\u662f\u4f1a\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u5f53\u6211\u4eec\u589e\u52a0\u4e00\u4e2a\u5355\u54c1\u5496\u5561\uff0c\u6216\u8005\u4e00\u4e2a\u65b0\u7684\u8c03\u6599\uff0c\u7c7b\u7684\u6570\u91cf\u5c31\u4f1a\u500d\u589e\uff0c\u5c31\u4f1a\u51fa\u73b0\u7c7b\u7206\u70b8\u3002 \u56e0\u4e3a\u5496\u5561\u5355\u54c1+\u8c03\u6599\u7ec4\u5408\u4f1a\u9020\u6210\u7c7b\u7684\u500d\u589e\uff0c\u56e0\u6b64\u53ef\u4ee5\u505a\u6539\u8fdb\uff0c\u5c06\u8c03\u6599\u5185\u7f6e\u5230 Drink \u7c7b\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u9020\u6210\u7c7b\u6570\u91cf\u8fc7\u591a\u3002\u4ece\u800c\u63d0\u9ad8\u9879\u76ee\u7684\u7ef4\u62a4\u6027\u3002\u8fd9\u6837\u53ef\u4ee5\u63a7\u5236\u7c7b\u7684\u6570\u91cf\uff0c\u4e0d\u81f3\u4e8e\u9020\u6210\u5f88\u591a\u7684\u7c7b\uff0c\u5728\u589e\u52a0\u6216\u8005\u5220\u9664\u8c03\u6599\u79cd\u7c7b\u65f6\uff0c\u4ee3\u7801\u7684\u7ef4\u62a4\u91cf\u5f88\u5927\u3002","title":"\u4f20\u7edf\u89e3\u51b3\u65b9\u6848"},{"location":"Java/designpattern/designpattern/#_38","text":"","title":"\u88c5\u9970\u8005\u6a21\u5f0f"},{"location":"Java/designpattern/designpattern/#_39","text":"\u88c5\u9970\u8005\u6a21\u5f0f\uff1a\u52a8\u6001\u7684\u5c06\u65b0\u529f\u80fd\u9644\u52a0\u5230\u5bf9\u8c61\u4e0a\u3002\u5728\u5bf9\u8c61\u529f\u80fd\u6269\u5c55\u65b9\u9762\uff0c\u5b83\u6bd4\u7ee7\u627f\u66f4\u6709\u5f39\u6027\uff0c\u88c5\u9970\u8005\u6a21\u5f0f\u4e5f\u4f53\u73b0\u4e86\u5f00\u95ed\u539f\u5219(ocp)\u3002 + \u88c5\u9970\u8005\u6a21\u5f0f\u5c31\u50cf\u6253\u5305\u4e00\u4e2a\u5feb\u9012 - \u4e3b\u4f53\uff1a\u6bd4\u5982\uff1a\u9676\u74f7\u3001\u8863\u670d (Component) // \u88ab\u88c5\u9970\u8005 - \u5305\u88c5\uff1a\u6bd4\u5982\uff1a\u62a5\u7eb8\u586b\u5145\u3001\u5851\u6599\u6ce1\u6cab\u3001\u7eb8\u677f\u3001\u6728\u677f(Decorator) + Component \u4e3b\u4f53\uff1a\u6bd4\u5982\u7c7b\u4f3c\u524d\u9762\u7684 Drink + ConcreteComponent \u548c Decorator - ConcreteComponent\uff1a\u5177\u4f53\u7684\u4e3b\u4f53\uff0c\u6bd4\u5982\u524d\u9762\u7684\u5404\u4e2a\u5355\u54c1\u5496\u5561 - Decorator: \u88c5\u9970\u8005\uff0c\u6bd4\u5982\u5404\u8c03\u6599\u3002","title":"\u57fa\u672c\u539f\u7406"},{"location":"Java/designpattern/designpattern/#_40","text":"\u9996\u5148\u5f0f\u62bd\u8c61\u7684 Drink \u7c7b public abstract class Drink { public String des ; //\u63cf\u8ff0 private float price = 0.0f ; public String getDes () { return des ; } public void setDes ( String des ) { this . des = des ; } public float getPrice () { return price ; } public void setPrice ( float price ) { this . price = price ; } //\u8ba1\u7b97\u8d39\u7528\u7684\u62bd\u8c61\u65b9\u6cd5 // \u7531\u5b50\u7c7b\u6765\u5b9e\u73b0 public abstract float cost (); } \u7136\u540e\u662f\u5b9e\u73b0\u4e86 Drink \u7c7b\u7684 Coffee \u7c7b\u3002\u4e3b\u8981\u662f\u5b9e\u73b0\u4e86\u5f97\u5230\u4ef7\u683c\u7684\u65b9\u6cd5\u3002 public class Coffee extends Drink { @Override public float cost () { return super . getPrice (); } } \u7136\u540e\u662f\u7ee7\u627fCoffee\u5177\u4f53\u7684Coffee\u7c7b public class LongBlack extends Coffee { public LongBlack (){ setDes ( \"LongBlack\" ); setPrice ( 5.0f ); } } \u7136\u540e\u662f Decorator \u7c7b\uff08\u4fee\u9970\u8005\u7c7b\uff09 public class Decorator extends Drink { private Drink obj ; public Decorator ( Drink obj ){ this . obj = obj ; } @Override public float cost () { return super . getPrice () + obj . cost (); } @Override public String getDes () { return super . des + \" \" + super . getPrice () + \" && \" + obj . getDes (); } } \u7136\u540e\u662f\u5177\u4f53\u7684 Decorator \u7c7b\uff0c\u4f8b\u5982Choloate public class Chocolate extends Decorator { public Chocolate ( Drink obj ){ super ( obj ); setDes ( \" \u5de7\u514b\u529b \" ); setPrice ( 3.0f ); //\u5f53\u524d\u8c03\u5473\u54c1\u7684\u4ef7\u683c } } \u901a\u8fc7\u7ee7\u627f Decorator \uff0c\u8bbe\u7f6e\u5176\u4e2d\u7684\u63cf\u8ff0\u548c\u4ef7\u683c\u3002\u6700\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0a\u7684\u7c7b\u8fdb\u884c\u6211\u4eec\u60f3\u8981\u7684\u5496\u5561\u7ec4\u5408\u4f8b\u5982\u4e00\u4efd\u5976+\u4e24\u4efd\u5de7\u514b\u529b\u7684LongBlack\u5496\u5561 public static void main ( String [] args ) { // \u88c5\u9970\u7740\u6a21\u5f0f\u4e0b\u7684\u8ba2\u5355\uff1a2\u4efd\u5de7\u514b\u529b+\u4e00\u4efd\u725b\u5976\u7684LongBlack // \u5148\u70b9\u4e00\u4efdLongBlack Drink order = new LongBlack (); System . out . println ( \"\u8d39\u75281=\" + order . cost ()); System . out . println ( \"\u63cf\u8ff0=\" + order . getDes ()); // \u52a0\u5165\u4e00\u4efd\u725b\u5976 order = new Milk ( order ); System . out . println ( \"\u8d39\u75282=\" + order . cost ()); System . out . println ( \"\u63cf\u8ff0=\" + order . getDes ()); // \u52a0\u5165\u4e00\u4efd\u5de7\u514b\u529b order = new Chocolate ( order ); System . out . println ( \"\u8d39\u75283=\" + order . cost ()); System . out . println ( \"\u63cf\u8ff0=\" + order . getDes ()); // \u52a0\u5165\u4e00\u4efd\u5de7\u514b\u529b order = new Chocolate ( order ); System . out . println ( \"\u8d39\u75283=\" + order . cost ()); System . out . println ( \"\u63cf\u8ff0=\" + order . getDes ()); }","title":"\u4ee3\u7801\u793a\u4f8b"},{"location":"Java/designpattern/designpattern/#_41","text":"Decorator\u6a21\u5f0f\u4e0e\u7ee7\u627f\u5173\u7cfb\u7684\u76ee\u7684\u90fd\u662f\u8981\u6269\u5c55\u5bf9\u8c61\u7684\u529f\u80fd\uff0c\u4f46\u662fDecorator\u53ef\u4ee5\u63d0\u4f9b\u6bd4\u7ee7\u627f\u66f4\u591a\u7684\u7075\u6d3b\u6027\u3002 \u901a\u8fc7\u4f7f\u7528\u4e0d\u540c\u7684\u5177\u4f53\u88c5\u9970\u7c7b\u4ee5\u53ca\u8fd9\u4e9b\u88c5\u9970\u7c7b\u7684\u6392\u5217\u7ec4\u5408\uff0c\u8bbe\u8ba1\u5e08\u53ef\u4ee5\u521b\u9020\u51fa\u5f88\u591a\u4e0d\u540c\u884c\u4e3a\u7684\u7ec4\u5408\u3002 \u8fd9\u79cd\u6bd4\u7ee7\u627f\u66f4\u52a0\u7075\u6d3b\u673a\u52a8\u7684\u7279\u6027\uff0c\u4e5f\u540c\u65f6\u610f\u5473\u7740\u66f4\u52a0\u591a\u7684\u590d\u6742\u6027\u3002 \u88c5\u9970\u6a21\u5f0f\u4f1a\u5bfc\u81f4\u8bbe\u8ba1\u4e2d\u51fa\u73b0\u8bb8\u591a\u5c0f\u7c7b\uff0c\u5982\u679c\u8fc7\u5ea6\u4f7f\u7528\uff0c\u4f1a\u4f7f\u7a0b\u5e8f\u53d8\u5f97\u5f88\u590d\u6742\u3002 \u88c5\u9970\u6a21\u5f0f\u662f\u9488\u5bf9\u62bd\u8c61\u7ec4\u4ef6\uff08Component\uff09\u7c7b\u578b\u7f16\u7a0b\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u8981\u9488\u5bf9\u5177\u4f53\u7ec4\u4ef6\u7f16\u7a0b\u65f6\uff0c\u5c31\u5e94\u8be5\u91cd\u65b0\u601d\u8003\u4f60\u7684\u5e94\u7528\u67b6\u6784\uff0c\u4ee5\u53ca\u88c5\u9970\u8005\u662f\u5426\u5408\u9002\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u6539\u53d8Component\u63a5\u53e3\uff0c\u589e\u52a0\u65b0\u7684\u516c\u5f00\u7684\u884c\u4e3a\uff0c\u5b9e\u73b0\u201c\u534a\u900f\u660e\u201d\u7684\u88c5\u9970\u8005\u6a21\u5f0f\u3002\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\u8981\u505a\u51fa\u6700\u4f73\u9009\u62e9\u3002","title":"\u4f18\u7f3a\u70b9"},{"location":"Java/designpattern/designpattern/#_42","text":"","title":"\u5341\u4e00\u3001\u7ec4\u5408\u6a21\u5f0f"},{"location":"Java/designpattern/designpattern/#_43","text":"\u7f16\u5199\u7a0b\u5e8f\u5c55\u793a\u4e00\u4e2a\u5b66\u6821\u9662\u7cfb\u7ed3\u6784\uff1a\u9700\u6c42\u662f\u8fd9\u6837\uff0c\u8981\u5728\u4e00\u4e2a\u9875\u9762\u4e2d\u5c55\u793a\u51fa\u5b66\u6821\u7684\u9662\u7cfb\u7ec4\u6210\uff0c\u4e00\u4e2a\u5b66\u6821\u6709\u591a\u4e2a\u5b66\u9662\uff0c\u4e00\u4e2a\u5b66\u9662\u6709\u591a\u4e2a\u7cfb\u3002\u4f7f\u7528\u5e38\u89c1\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\uff1a \u5c06\u5b66\u9662\u770b\u505a\u662f\u5b66\u6821\u7684\u5b50\u7c7b\uff0c\u7cfb\u662f\u5b66\u9662\u7684\u5b50\u7c7b \u3002 \u5b9e\u9645\u4e0a\u6211\u4eec\u7684\u8981\u6c42\u662f \uff1a\u5728\u4e00\u4e2a\u9875\u9762\u4e2d\u5c55\u793a\u51fa\u5b66\u6821\u7684\u9662\u7cfb\u7ec4\u6210\uff0c\u4e00\u4e2a\u5b66\u6821\u6709\u591a\u4e2a\u5b66\u9662\uff0c\u4e00\u4e2a\u5b66\u9662\u6709\u591a\u4e2a\u7cfb\uff0c \u56e0\u6b64\u8fd9\u79cd\u65b9\u6848\uff0c\u4e0d\u80fd\u5f88\u597d\u5b9e\u73b0\u7684\u7ba1\u7406\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u5bf9\u5b66\u9662\u3001\u7cfb\u7684\u6dfb\u52a0\uff0c\u5220\u9664\uff0c\u904d\u5386\u7b49\u3002 \u89e3\u51b3\u65b9\u6848 \uff1a\u628a\u5b66\u6821\u3001\u9662\u3001\u7cfb\u90fd\u770b\u505a\u662f\u7ec4\u7ec7\u7ed3\u6784\uff0c\u4ed6\u4eec\u4e4b\u95f4\u6ca1\u6709\u7ee7\u627f\u7684\u5173\u7cfb\uff0c\u800c\u662f\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\uff0c\u53ef\u4ee5\u66f4\u597d\u7684\u5b9e\u73b0\u7ba1\u7406\u64cd\u4f5c\u3002 => \u7ec4\u5408\u6a21\u5f0f","title":"\u95ee\u9898\u5f15\u5165"},{"location":"Java/designpattern/designpattern/#_44","text":"\u7ec4\u5408\u6a21\u5f0f\uff08Composite Pattern\uff09\uff0c\u53c8\u53eb\u90e8\u5206\u6574\u4f53\u6a21\u5f0f\uff0c\u5b83\u521b\u5efa\u4e86\u5bf9\u8c61\u7ec4\u7684\u6811\u5f62\u7ed3\u6784\uff0c\u5c06\u5bf9\u8c61\u7ec4\u5408\u6210\u6811\u72b6\u7ed3\u6784\u4ee5\u8868\u793a\u201c\u6574\u4f53-\u90e8\u5206\u201d\u7684\u5c42\u6b21\u5173\u7cfb\u3002\u7ec4\u5408\u6a21\u5f0f\u4f9d\u636e\u6811\u5f62\u7ed3\u6784\u6765\u7ec4\u5408\u5bf9\u8c61\uff0c\u7528\u6765\u8868\u793a\u90e8\u5206\u4ee5\u53ca\u6574\u4f53\u5c42\u6b21\u3002\u7ec4\u5408\u6a21\u5f0f\u4f7f\u5f97 \u7528\u6237\u5bf9\u5355\u4e2a\u5bf9\u8c61\u548c\u7ec4\u5408\u5bf9\u8c61\u7684\u8bbf\u95ee\u5177\u6709\u4e00\u81f4\u6027 \uff0c\u5373\uff1a\u7ec4\u5408\u80fd\u8ba9\u5ba2\u6237\u4ee5\u4e00\u81f4\u7684\u65b9\u5f0f\u5904\u7406\u4e2a\u522b\u5bf9\u8c61\u4ee5\u53ca\u7ec4\u5408\u5bf9\u8c61\u3002\u4e0b\u9762\u770b\u4e00\u4e0b\u5177\u4f53\u7684\u4ee3\u7801\u5b9e\u73b0\u3002 public abstract class OrganizationComponent { private String name ; private String des ; protected void add ( OrganizationComponent organizationComponent ){ throw new UnsupportedOperationException (); } protected void remove ( OrganizationComponent organizationComponent ){ throw new UnsupportedOperationException (); } public OrganizationComponent ( String name , String des ) { this . name = name ; this . des = des ; } public String getName () { return name ; } public void setName ( String name ) { this . name = name ; } public String getDes () { return des ; } public void setDes ( String des ) { this . des = des ; } // \u65b9\u6cd5print \u505a\u6210\u62bd\u8c61\uff0c\u4e0b\u9762\u7684\u5b50\u7c7b\u90fd\u9700\u8981\u5b9e\u73b0 protected abstract void print (); } \u4e0a\u9762\u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u57fa\u7c7b\uff0c\u5176\u5b83\u7684\u7c7b\u7ee7\u627f\u8be5\u7c7b\uff0c\u5e76\u5b9e\u73b0\u5176\u4e2d\u7684\u62bd\u8c61\u65b9\u6cd5\u3002\u4e0b\u9762\u662f\u5b66\u6821\u7c7b\u3002 // University\u5c31\u662f Composite ,\u53ef\u4ee5\u7ba1\u7406College public class University extends OrganizationComponent { List < OrganizationComponent > organizationComponents = new ArrayList <> (); public University ( String name , String des ) { super ( name , des ); } @Override protected void add ( OrganizationComponent organizationComponent ) { organizationComponents . add ( organizationComponent ); } @Override protected void remove ( OrganizationComponent organizationComponent ) { organizationComponents . remove ( organizationComponent ); } @Override public String getName () { return super . getName (); } @Override public String getDes () { return super . getDes (); } @Override protected void print () { System . out . println ( \"---------------\" + getName () + \"-----------------\" ); for ( OrganizationComponent organizationComponent : organizationComponents ) { organizationComponent . print (); } } } \u4e00\u4e2a\u5b66\u6821\u53ef\u4ee5\u6709\u591a\u4e2a\u5b66\u9662\uff0c\u5b66\u9662\u4e5f\u8981\u7ee7\u627f\u540c\u6837\u7684\u62bd\u8c61\u7c7b\u3002 public class College extends OrganizationComponent { List < OrganizationComponent > organizationComponents = new ArrayList <> (); public College ( String name , String des ) { super ( name , des ); } @Override protected void add ( OrganizationComponent organizationComponent ) { organizationComponents . add ( organizationComponent ); } @Override protected void remove ( OrganizationComponent organizationComponent ) { organizationComponents . remove ( organizationComponent ); } @Override public String getName () { return super . getName (); } @Override public String getDes () { return super . getDes (); } @Override protected void print () { System . out . println ( \"---------------\" + getName () + \"-----------------\" ); for ( OrganizationComponent organizationComponent : organizationComponents ) { organizationComponent . print (); } } } \u6700\u540e\u662f\u6bcf\u4e2a\u5b66\u9662\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u4e13\u4e1a\uff0c\u4e0d\u540c\u7684\u7cfb\uff0c\u4f46\u662f\u4e13\u4e1a\u4e0b\u9762\u6ca1\u6709\u989d\u5916\u7684\u7c7b\u4e86\uff0c\u4e0b\u9762\u662f\u4e13\u4e1a\u7c7b\uff0c\u540c\u6837\u7ee7\u627f\u62bd\u8c61\u7c7b\u3002 public class Department extends OrganizationComponent { public Department ( String name , String des ) { super ( name , des ); } @Override public String getName () { return super . getName (); } @Override public String getDes () { return super . getDes (); } @Override protected void print () { System . out . println ( getName ()); } } \u4e0b\u9762\u770b\u4e00\u4e0b\u5982\u4f55\u5177\u4f53\u7684\u4f7f\u7528\u8fd9\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u3002 public static void main ( String [] args ) { //\u521b\u5efa\u5b66\u6821 OrganizationComponent university = new University ( \"\u6e05\u534e\u5927\u5b66\" , \" \u4e2d\u56fd\u9876\u7ea7\u7684\u5927\u5b66 \" ); // \u521b\u5efa\u5b66\u9662 OrganizationComponent computerCollege = new College ( \"\u8ba1\u7b97\u673a\u5b66\u9662\" , \"\u8ba1\u7b97\u673a\u4e13\u4e1a\" ); OrganizationComponent softCollege = new College ( \"\u8f6f\u4ef6\u5b66\u9662\" , \"\u8f6f\u4ef6\u5de5\u7a0b\u4e13\u4e1a\" ); // \u521b\u5efa\u5404\u4e2a\u5b66\u9662\u4e0b\u9762\u7684\u7cfb computerCollege . add ( new Department ( \"\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\" , \"\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\" )); computerCollege . add ( new Department ( \"\u4fe1\u606f\u5b89\u5168\" , \"\u4fe1\u606f\u5b89\u5168\" )); computerCollege . add ( new Department ( \"\u7f51\u7edc\u5de5\u7a0b\" , \"\u7f51\u7edc\u5de5\u7a0b\" )); softCollege . add ( new Department ( \"\u8f6f\u4ef6\u5de5\u7a0b\" , \"\u8f6f\u4ef6\u5de5\u7a0b\" )); softCollege . add ( new Department ( \"\u4fe1\u606f\u5de5\u7a0b\" , \"\u4fe1\u606f\u5de5\u7a0b\" )); university . add ( computerCollege ); university . add ( softCollege ); university . print (); }","title":"\u57fa\u672c\u4ecb\u7ecd"},{"location":"Java/designpattern/designpattern/#_45","text":"1) \u7b80\u5316\u5ba2\u6237\u7aef\u64cd\u4f5c\u3002\u5ba2\u6237\u7aef\u53ea\u9700\u8981\u9762\u5bf9\u4e00\u81f4\u7684\u5bf9\u8c61\u800c\u4e0d\u7528\u8003\u8651\u6574\u4f53\u90e8\u5206\u6216\u8005\u8282\u70b9\u53f6\u5b50\u7684\u95ee\u9898\u3002 2) \u5177\u6709\u8f83\u5f3a\u7684\u6269\u5c55\u6027\u3002\u5f53\u6211\u4eec\u8981\u66f4\u6539\u7ec4\u5408\u5bf9\u8c61\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8c03\u6574\u5185\u90e8\u7684\u5c42\u6b21\u5173\u7cfb\uff0c\u5ba2\u6237\u7aef\u4e0d\u7528\u505a\u51fa\u4efb\u4f55\u6539\u52a8. 3) \u65b9\u4fbf\u521b\u5efa\u51fa\u590d\u6742\u7684\u5c42\u6b21\u7ed3\u6784\u3002\u5ba2\u6237\u7aef\u4e0d\u7528\u7406\u4f1a\u7ec4\u5408\u91cc\u9762\u7684\u7ec4\u6210\u7ec6\u8282\uff0c\u5bb9\u6613\u6dfb\u52a0\u8282\u70b9\u6216\u8005\u53f6\u5b50\u4ece\u800c\u521b\u5efa\u51fa\u590d\u6742\u7684\u6811\u5f62\u7ed3\u6784 4) \u9700\u8981\u904d\u5386\u7ec4\u7ec7\u673a\u6784\uff0c\u6216\u8005\u5904\u7406\u7684\u5bf9\u8c61\u5177\u6709\u6811\u5f62\u7ed3\u6784\u65f6, \u975e\u5e38\u9002\u5408\u4f7f\u7528\u7ec4\u5408\u6a21\u5f0f. 5) \u8981\u6c42\u8f83\u9ad8\u7684\u62bd\u8c61\u6027\uff0c\u5982\u679c\u8282\u70b9\u548c\u53f6\u5b50\u6709\u5f88\u591a\u5dee\u5f02\u6027\u7684\u8bdd\uff0c\u6bd4\u5982\u5f88\u591a\u65b9\u6cd5\u548c\u5c5e\u6027\u90fd\u4e0d\u4e00\u6837\uff0c\u4e0d\u9002\u5408\u4f7f\u7528\u7ec4\u5408\u6a21\u5f0f\u3002","title":"\u6ce8\u610f\u4e8b\u9879\u548c\u7ec6\u8282"},{"location":"Java/designpattern/designpattern/#_46","text":"","title":"\u5341\u4e8c\u3001\u5916\u89c2\u6a21\u5f0f"},{"location":"Java/designpattern/designpattern/#_47","text":"\u7ec4\u5efa\u4e00\u4e2a\u5bb6\u5ead\u5f71\u9662\uff1a DVD \u64ad\u653e\u5668\u3001\u6295\u5f71\u4eea\u3001\u81ea\u52a8\u5c4f\u5e55\u3001\u73af\u7ed5\u7acb\u4f53\u58f0\u3001\u7206\u7c73\u82b1\u673a\uff0c\u8981\u6c42\u5b8c\u6210\u4f7f\u7528\u5bb6\u5ead\u5f71\u9662\u7684\u529f\u80fd\uff0c\u5176\u8fc7\u7a0b\u4e3a\uff0c\u76f4\u63a5\u7528\u9065\u63a7\u5668\uff0c\u7edf\u7b79\u5404\u8bbe\u5907\u5f00\u5173\u3002 \u5f00\u7206\u7c73\u82b1\u673a->\u653e\u4e0b\u5c4f\u5e55->\u5f00\u6295\u5f71\u4eea->\u5f00\u97f3\u54cd->\u5f00 DVD\uff0c\u9009 dvd->\u53bb\u62ff\u7206\u7c73\u82b1->\u8c03\u6697\u706f\u5149->\u64ad\u653e-> \u89c2\u5f71\u7ed3\u675f\u540e\uff0c\u5173\u95ed\u5404\u79cd\u8bbe\u5907\u3002","title":"\u95ee\u9898\u5f15\u5165"},{"location":"Java/designpattern/designpattern/#_48","text":"\u4e3a\u6bcf\u4e2a\u7528\u54c1\u521b\u5efa\u5bf9\u5e94\u7684\u7c7b\u4e0e\u5bf9\u8c61\uff0c\u4ee5\u53ca\u9700\u8981\u4f7f\u7528\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\uff0c\u7136\u540e\u8fdb\u884c\u8c03\u7528\u3002\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u5b58\u5728\u8f83\u5927\u7684\u95ee\u9898\u548c\u590d\u6742\u5ea6\u3002 \u521b\u5efa\u5404\u4e2a\u5b50\u7cfb\u7edf\u7684\u5bf9\u8c61\uff0c\u5e76\u76f4\u63a5\u53bb\u8c03\u7528\u5b50\u7cfb\u7edf\uff08\u5bf9\u8c61\uff09\u76f8\u5173\u65b9\u6cd5\uff0c\u4f1a\u9020\u6210\u8c03\u7528\u8fc7\u7a0b\u6df7\u4e71\uff0c\u6ca1\u6709\u6e05\u6670\u7684\u8fc7\u7a0b\u3002\u4e0d\u5229\u4e8e\u53bb\u7ef4\u62a4\u5bf9\u5b50\u7cfb\u7edf\u7684\u64cd\u4f5c\u3002 \u89e3\u51b3\u601d\u8def \uff1a\u5b9a\u4e49\u4e00\u4e2a\u9ad8\u5c42\u63a5\u53e3\uff0c\u7ed9\u5b50\u7cfb\u7edf\u4e2d\u7684\u4e00\u7ec4\u63a5\u53e3\u63d0\u4f9b\u4e00\u4e2a\u4e00\u81f4\u7684\u754c\u9762(\u6bd4\u5982\u5728\u9ad8\u5c42\u63a5\u53e3\u63d0\u4f9b\u56db\u4e2a\u65b9\u6cd5ready, play, pause, end )\uff0c\u7528\u6765\u8bbf\u95ee\u5b50\u7cfb\u7edf\u4e2d\u7684\u4e00\u7fa4\u63a5\u53e3\u3002 \u4e5f\u5c31\u662f\u8bf4 \u5c31\u662f\u901a\u8fc7\u5b9a\u4e49\u4e00\u4e2a\u4e00\u81f4\u7684\u63a5\u53e3(\u754c\u9762\u7c7b)\uff0c\u7528\u4ee5\u5c4f\u853d\u5185\u90e8\u5b50\u7cfb\u7edf\u7684\u7ec6\u8282\uff0c\u4f7f\u5f97\u8c03\u7528\u7aef\u53ea\u9700\u8ddf\u8fd9\u4e2a\u63a5\u53e3\u53d1 \u751f\u8c03\u7528\uff0c\u800c\u65e0\u9700\u5173\u5fc3\u8fd9\u4e2a\u5b50\u7cfb\u7edf\u7684\u5185\u90e8\u7ec6\u8282 => \u5916\u89c2\u6a21\u5f0f\u3002\uff08\u81ea\u6211\u611f\u89c9\u5c31\u662f\u52a0\u4e86\u4e00\u5c42\uff0c\u6ca1\u4ec0\u4e48\u662f\u52a0\u4e00\u5c42\u89e3\u51b3\u4e0d\u4e86\u7684\uff0c\u5982\u679c\u6709\uff0c\u90a3\u5c31\u518d\u52a0\u4e00\u5c42\uff09\u3002","title":"\u4f20\u7edf\u65b9\u5f0f\u89e3\u51b3"},{"location":"Java/designpattern/designpattern/#_49","text":"\u5916\u89c2\u6a21\u5f0f\uff08Facade\uff09\uff0c\u4e5f\u53eb\u8fc7\u7a0b\u6a21\u5f0f\uff1a\u5916\u89c2\u6a21\u5f0f\u4e3a\u5b50\u7cfb\u7edf\u4e2d\u7684\u4e00\u7ec4\u63a5\u53e3\u63d0\u4f9b\u4e00\u4e2a\u4e00\u81f4\u7684\u754c\u9762\uff0c\u6b64\u6a21\u5f0f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u9ad8\u5c42\u63a5\u53e3\uff0c\u8fd9\u4e2a\u63a5\u53e3\u4f7f\u5f97\u8fd9\u4e00\u5b50\u7cfb\u7edf\u66f4\u52a0\u5bb9\u6613\u4f7f\u7528\u3002\u5916\u89c2\u6a21\u5f0f\u901a\u8fc7\u5b9a\u4e49\u4e00\u4e2a\u4e00\u81f4\u7684\u63a5\u53e3\uff0c\u7528\u4ee5\u5c4f\u853d\u5185\u90e8\u5b50\u7cfb\u7edf\u7684\u7ec6\u8282\uff0c\u4f7f\u5f97\u8c03\u7528\u7aef\u53ea\u9700\u8ddf\u8fd9\u4e2a\u63a5\u53e3\u53d1\u751f\u8c03\u7528\uff0c\u800c\u65e0\u9700\u5173\u5fc3\u8fd9\u4e2a\u5b50\u7cfb\u7edf\u7684\u5185\u90e8\u7ec6\u8282\u3002 \u4e0b\u9762\u662f\u4ee3\u7801\u793a\u4f8b public class DVDPlayer { // \u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\uff0c\u997f\u6c49\u5f0f private static DVDPlayer instance = new DVDPlayer (); public static DVDPlayer getInstance (){ return instance ; } public void on (){ System . out . println ( \" dvd on \" ); } public void off (){ System . out . println ( \"dvd off\" ); } public void play (){ System . out . println ( \"dvd is playing\" ); } public void pause (){ System . out . println ( \"dvd pause\" ); } } \u4e0a\u9762\u7684\u4ee3\u7801\u662fDVDPlayer\u7684\u4e00\u4e9b\u64cd\u4f5c public class Screen { private static Screen instance = new Screen (); public static Screen getInstance (){ return instance ; } public void up (){ System . out . println ( \" screen up \" ); } public void down (){ System . out . println ( \" screen down \" ); } } \u4e0a\u9762\u662fScreen\u5c4f\u5e55\u7684\u4e00\u4e9b\u64cd\u4f5c\u3002\u8fd8\u6709\u8bb8\u591a\u7684\u64cd\u4f5c\u4e0e\u4e0a\u8ff0\u60c5\u51b5\u7c7b\u4f3c\uff0c\u4e0d\u518d\u5199\u4e86\uff0c\u4e0b\u9762\u662f \u591a\u52a0\u7684\u90a3\u4e00\u5c42 \uff0c\u4e5f\u5c31\u662f\u8c03\u7528\u5404\u4e2a\u5b50\u7cfb\u7edf\u7684\u63a5\u53e3\u3002 public class HomeTheaterFacade { // \u5b9a\u4e49\u5404\u4e2a\u5b50\u7cfb\u7edf\u7684\u5bf9\u8c61 private TheaterLight theaterLight ; private Popcorn popcorn ; private Projector projector ; private Screen screen ; private Setero setero ; private DVDPlayer dvdPlayer ; public HomeTheaterFacade () { this . theaterLight = TheaterLight . getInstance (); this . popcorn = Popcorn . getInstance (); this . projector = Projector . getInstance (); this . screen = Screen . getInstance (); this . setero = Setero . getInstance (); this . dvdPlayer = DVDPlayer . getInstance (); } // \u64cd\u4f5c\u5206\u4e3a4\u6b65 public void ready (){ popcorn . on (); popcorn . pop (); screen . down (); projector . on (); setero . on (); dvdPlayer . on (); theaterLight . dim (); } public void play (){ dvdPlayer . play (); } public void pause (){ dvdPlayer . pause (); } public void end (){ popcorn . off (); theaterLight . bright (); screen . up (); projector . off (); setero . off (); dvdPlayer . off (); } } \u6700\u540e\u662f\u8c03\u7528\u8fd9\u4e2a\u7c7b\uff0c\u6765\u5b8c\u6210\u5bb6\u5ead\u5f71\u9662\u7684\u529f\u80fd\u3002 public static void main ( String [] args ) { HomeTheaterFacade homeTheaterFacade = new HomeTheaterFacade (); homeTheaterFacade . ready (); homeTheaterFacade . play (); }","title":"\u5916\u89c2\u6a21\u5f0f\u4ecb\u7ecd"},{"location":"Java/designpattern/designpattern/#_50","text":"\u5916\u89c2\u6a21\u5f0f\u5bf9\u5916\u5c4f\u853d\u4e86\u5b50\u7cfb\u7edf\u7684\u7ec6\u8282\uff0c\u56e0\u6b64\u5916\u89c2\u6a21\u5f0f\u964d\u4f4e\u4e86\u5ba2\u6237\u7aef\u5bf9\u5b50\u7cfb\u7edf\u4f7f\u7528\u7684\u590d\u6742\u6027 \u5916\u89c2\u6a21\u5f0f\u5bf9\u5ba2\u6237\u7aef\u4e0e\u5b50\u7cfb\u7edf\u7684\u8026\u5408\u5173\u7cfb - \u89e3\u8026\uff0c\u8ba9\u5b50\u7cfb\u7edf\u5185\u90e8\u7684\u6a21\u5757\u66f4\u6613\u7ef4\u62a4\u548c\u6269\u5c55 \u901a\u8fc7\u5408\u7406\u7684\u4f7f\u7528\u5916\u89c2\u6a21\u5f0f\uff0c\u53ef\u4ee5\u5e2e\u6211\u4eec\u66f4\u597d\u7684\u5212\u5206\u8bbf\u95ee\u7684\u5c42\u6b21 \u5f53\u7cfb\u7edf\u9700\u8981\u8fdb\u884c\u5206\u5c42\u8bbe\u8ba1\u65f6\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 Facade \u6a21\u5f0f \u5728\u7ef4\u62a4\u4e00\u4e2a\u9057\u7559\u7684\u5927\u578b\u7cfb\u7edf\u65f6\uff0c\u53ef\u80fd\u8fd9\u4e2a\u7cfb\u7edf\u5df2\u7ecf\u53d8\u5f97\u975e\u5e38\u96be\u4ee5\u7ef4\u62a4\u548c\u6269\u5c55\uff0c\u6b64\u65f6\u53ef\u4ee5\u8003\u8651\u4e3a\u65b0\u7cfb\u7edf\u5f00\u53d1\u4e00\u4e2a Facade \u7c7b\uff0c\u6765\u63d0\u4f9b\u9057\u7559\u7cfb\u7edf\u7684\u6bd4\u8f83\u6e05\u6670\u7b80\u5355\u7684\u63a5\u53e3\uff0c\u8ba9\u65b0\u7cfb\u7edf\u4e0e Facade \u7c7b\u4ea4\u4e92\uff0c\u63d0\u9ad8\u590d\u7528\u6027 \u4e0d\u80fd\u8fc7\u591a\u7684\u6216\u8005\u4e0d\u5408\u7406\u7684\u4f7f\u7528\u5916\u89c2\u6a21\u5f0f\uff0c\u4f7f\u7528\u5916\u89c2\u6a21\u5f0f\u597d\uff0c\u8fd8\u662f\u76f4\u63a5\u8c03\u7528\u6a21\u5757\u597d\u3002\u8981\u4ee5\u8ba9\u7cfb\u7edf\u6709\u5c42\u6b21\uff0c\u5229\u4e8e\u7ef4\u62a4\u4e3a\u76ee\u7684\u3002","title":"\u6ce8\u610f\u4e8b\u9879\u548c\u7ec6\u8282"},{"location":"Python/","text":"python\u5b66\u4e60 \u00b6 \u70b9\u51fb\u5de6\u4fa7\u67e5\u770b\u76f8\u5173\u5185\u5bb9","title":"python\u5b66\u4e60"},{"location":"Python/#python","text":"\u70b9\u51fb\u5de6\u4fa7\u67e5\u770b\u76f8\u5173\u5185\u5bb9","title":"python\u5b66\u4e60"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-Gazebo%E4%BB%BF%E7%9C%9F/","text":"Gazebo\u4eff\u771f \u00b6 Gazebo\u662fROS\u7cfb\u7edf\u4e2d\u6700\u4e3a\u5e38\u7528\u7684\u4e09\u7ef4\u7269\u7406\u4eff\u771f\u5e73\u53f0\uff0c\u652f\u6301\u52a8\u529b\u5b66\u5f15\u64ce\uff0c\u53ef\u4ee5\u5b9e\u73b0\u9ad8\u8d28\u91cf\u7684\u56fe\u5f62\u6e32\u67d3\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u6a21\u62df\u673a\u5668\u4eba\u53ca\u5468\u8fb9\u73af\u5883\uff0c\u8fd8\u53ef\u4ee5\u52a0\u5165\u6469\u64e6\u529b\u3001\u5f39\u6027\u7cfb\u6570\u7b49\u7269\u7406\u5c5e\u6027\u3002\u6240\u4ee5\u7c7b\u4f3cGazebo\u8fd9\u6837\u7684\u4eff\u771f\u5e73\u53f0\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u9a8c\u8bc1\u673a\u5668\u4eba\u7b97\u6cd5\u3001\u4f18\u5316\u673a\u5668\u4eba\u8bbe\u8ba1\u3001\u6d4b\u8bd5\u673a\u5668\u4eba\u573a\u666f\u5e94\u7528\uff0c\u4e3a\u673a\u5668\u4eba\u5f00\u53d1\u63d0\u4f9b\u66f4\u591a\u53ef\u80fd\u3002 \u5b89\u88c5\u8fd0\u884c \u00b6 \u901a\u8fc7\u547d\u4ee4apt\u8fdb\u884c\u5b89\u88c5 sudo apt install ros-humble-gazebo-* \u7136\u540e\u901a\u8fc7\u4e00\u4e0b\u547d\u4ee4\u53ef\u4ee5\u8fd0\u884c ros2 launch gazebo_ros gazebo.launch.py \u6216\u8005\u4e0b\u9762\u7684\u547d\u4ee4 gazebo --verbose -s libgazebo_ros_init.so -s libgazebo_ros_factory.so \u8fd0\u884c\u4e4b\u540e\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u9875\u9762\uff1a \u4e3a\u4fdd\u8bc1\u6a21\u578b\u987a\u5229\u52a0\u8f7d\uff0c\u8bf7\u5c06\u79bb\u7ebf\u6a21\u578b\u4e0b\u8f7d\u5e76\u653e\u7f6e\u5230~/.gazebo/models\u8def\u5f84\u4e0b\uff0c\u4e0b\u8f7d\u94fe\u63a5\u5982\u4e0b\uff1ahttps://github.com/osrf/gazebo_models gazebo\u542f\u52a8\u8282\u70b9\u4e0e\u670d\u52a1 \u00b6 \u9996\u5148\u67e5\u770b\u8282\u70b9 ros2 node list \u6b63\u786e\u8fd4\u56de\uff1a/gazebo \u4ea7\u770b\u8282\u70b9\u7684\u5bf9\u5916\u63d0\u4f9b\u7684\u670d\u52a1\uff1aros2 service list\u3002 \u53ef\u4ee5\u770b\u51fa\u5982\u4e0b\u7684\u7ed3\u679c\uff1a /delete_entity /get_model_list /spawn_entity /gazebo/describe_parameters /gazebo/get_parameter_types /gazebo/get_parameters /gazebo/list_parameters /gazebo/set_parameters /gazebo/set_parameters_atomically \u51fa\u53bb\u6700\u540e\u51e0\u4e2a\u5e38\u89c4\u7684\u670d\u52a1\uff0c\u6211\u4eec\u53ea\u6ce8\u610f\u524d\u4e09\u4e2a\u7279\u6b8a\u7684\u670d\u52a1\uff1a * /spawn_entity\uff0c\u7528\u4e8e\u52a0\u8f7d\u6a21\u578b\u5230gazebo\u4e2d * /get_model_list\uff0c\u7528\u4e8e\u83b7\u53d6\u6a21\u578b\u5217\u8868 * /delete_entity\uff0c\u7528\u4e8e\u5220\u9664gazbeo\u4e2d\u5df2\u7ecf\u52a0\u8f7d\u7684\u6a21\u578b \u521b\u5efa\u5de5\u4f5c\u7a7a\u95f4\u53ca\u529f\u80fd\u5305 \u00b6 \u521b\u5efa\u4e00\u4e2agazebo_demo\u7684\u6587\u4ef6\u5939\uff0c\u5728\u5176\u4e2d\u521b\u5efa\u4e00\u4e2asrc\u6587\u4ef6\uff0c\u7136\u540e\u5728src\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u6211\u4eec\u7684\u529f\u80fd\u5305myrobot(\u4ee5c++\u4e3a\u4f8b)\u3002 mkdir -p gazebo_demo/src cd gazebo_demo/src ros2 pkg create myrobot --build-type ament_camke \u8fdb\u5165\u5230myrobot\u7684\u76ee\u5f55\u4e0b\uff0c\u521b\u5efalaunch\u3001urdf\u6587\u4ef6\u5939\uff0c\u4fee\u6539CMakeLists.txt\u6587\u4ef6\uff0c\u8fd9\u4e00\u6b65\u9aa4\u548crviz\u4e2d\u7c7b\u4f3c\u3002\u5728urdf\u6587\u4ef6\u5939\u4e0b\u521b\u5efa\u4e00\u4e2ademo01_base.urdf\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u6587\u4ef6\uff0c\u53ea\u6709\u4e00\u4e2a\u57fa\u7840\u7684\u7acb\u65b9\u4f53\u3002 <robot name= \"myrobot\" > <link name= \"base_link\" > <visual> <geometry> <box size= \"0.2 0.2 0.2\" /> </geometry> <origin xyz= \"0.0 0.0 0.0\" /> </visual> <collision> <geometry> <box size= \"0.2 0.2 0.2\" /> </geometry> <origin xyz= \"0.0 0.0 0.0\" /> </collision> <inertial> <mass value= \"0.1\" /> <inertia ixx= \"0.000190416666667\" ixy= \"0\" ixz= \"0\" iyy= \"0.0001904\" iyz= \"0\" izz= \"0.00036\" /> </inertial> </link> <gazebo reference= \"base_link\" > <material> Gazebo/Red </material> </gazebo> </robot> \u8fd9\u91cc\u548c\u4ee5\u524d\u7684\u6587\u4ef6\u4e0d\u540c\u7684\u662f\u52a0\u5165\u4e86collision\u548cintertial\u5c5e\u6027\uff0c\u90fd\u5c5e\u4e8e\u7269\u7406\u76f8\u5173\u53c2\u6570\uff0c\u8fd9\u4e2a\u5c31\u4e0d\u505a\u8ba8\u8bba\u3002 lauch\u6587\u4ef6 \u00b6 launch\u6587\u4ef6\u7684\u7f16\u5199\uff0claunch\u6587\u4ef6\u4e3b\u8981\u542f\u52a8\u4e24\u4e2a\u90e8\u5206\uff0c\u542f\u52a8Gazebo\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u673a\u5668\u4eba\u6a21\u578b\u52a0\u8f7d\u5230Gazebo\u4e2d\u3002 start_gazebo_cmd = ExecuteProcess ( cmd = [ 'gazebo' , '--verbose' , '-s' , 'libgazebo_ros_init.so' , '-s' , 'libgazebo_ros_factory.so' ], output = 'screen' ) \u8fd9\u4e2a\u547d\u4ee4\u5c31\u662f\u542f\u52a8Gazebo\u7684\uff0c\u5c31\u662f\u4e00\u4e2a\u542f\u52a8\u547d\u4ee4\uff0c\u5e76\u6ca1\u6709\u7279\u522b\u590d\u6742\u7684\u5730\u65b9\uff0c\u4e0b\u9762\u662f\u52a0\u8f7d\u6a21\u578b\u7684\u547d\u4ee4\uff1a spawn_entity_cmd = Node ( package = 'gazebo_ros' , executable = 'spawn_entity.py' , arguments = [ '-entity' , robot_name_in_model , '-file' , urdf_model_path ], output = 'screen' ) \u8fd9\u4e2a\u547d\u4ee4\u6ce8\u610f\u540e\u9762\u4e24\u4e2a\u53c2\u6570-entity\u662f\u6a21\u578b\u6587\u4ef6\u4e2d\u7684\u540d\u5b57\uff0c-file\u662f\u901a\u8fc7urdf\u6587\u4ef6\u52a0\u8f7d\u53c2\u6570\uff0c\u540e\u9762\u6211\u4eec\u8fd8\u53ef\u4ee5\u770b\u5230\u901a\u8fc7topic\u8bdd\u9898\u52a0\u8f7d\u6a21\u578b\u7684\u3002\u5b8c\u6574\u7684\u542f\u52a8\u6587\u4ef6\u5982\u4e0b\uff1a import os from launch import LaunchDescription from launch.actions import ExecuteProcess from launch_ros.actions import Node from launch_ros.substitutions import FindPackageShare from launch_ros.parameter_descriptions import ParameterValue from launch.substitutions import Command def generate_launch_description (): robot_name_in_model = 'myrobot' package_name = 'myrobot' urdf_name = \"demo01_base.urdf\" ld = LaunchDescription () pkg_share = FindPackageShare ( package = package_name ) . find ( package_name ) urdf_model_path = os . path . join ( pkg_share , f 'urdf/ { urdf_name } ' ) # Start Gazebo server start_gazebo_cmd = ExecuteProcess ( cmd = [ 'gazebo' , '--verbose' , '-s' , 'libgazebo_ros_init.so' , '-s' , 'libgazebo_ros_factory.so' ], output = 'screen' ) # Launch the robot spawn_entity_cmd = Node ( package = 'gazebo_ros' , executable = 'spawn_entity.py' , arguments = [ '-entity' , robot_name_in_model , '-file' , urdf_model_path ], output = 'screen' ) ld . add_action ( start_gazebo_cmd ) ld . add_action ( spawn_entity_cmd ) return ld \u542f\u52a8\u4e4b\u540e\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u7684Gazebo\u6a21\u578b\uff1a \u53ef\u4ee5\u770b\u5230\u7ea2\u8272\u7684\u6a21\u578b\uff0c\u56e0\u4e3a\u6700\u540e\u52a0\u4e0a\u4e86Gazebo\u7684\u6807\u7b7e\u8bbe\u7f6e\u3002 \u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7684\u6a21\u578b\u6587\u4ef6 \u00b6 \u901a\u8fc7\u4e0a\u9762\u7684\u663e\u793a\u6a21\u578b\u6587\u4ef6\uff0c\u53ef\u4ee5\u770b\u51fa\u53ea\u6709\u7a7a\u8361\u8361\u7684\u6a21\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u52a0\u5165\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7684\u73af\u5883\uff0c\u4f8b\u5982\u6211\u4eec\u5728\u529f\u80fd\u5305\u4e2d\u65b0\u5efa\u4e00\u4e2aworld\u7684\u6587\u4ef6\u5939\uff0c\u5728\u5176\u4e2d\u653e\u5165\u6211\u4eec\u7684\u73af\u5883\u6a21\u578b\u6587\u4ef6myworld.world\u3002\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u542f\u52a8\u6587\u4ef6\u914d\u7f6e\uff1agazebo --verbose -s libgazebo_ros_init.so -s libgazebo_ros_factory.so \u4f60\u7684world\u6587\u4ef6\u76ee\u5f55/fishbot.world\u3002\u5c31\u662f\u5728\u539f\u547d\u4ee4\u7684\u57fa\u7840\u4e0a\u52a0\u4e86\u4e2a\u6587\u4ef6\u8def\u5f84\uff0c\u6548\u679c\u5982\u4e0b\uff1a launch\u6587\u4ef6\u52a0\u8f7dworld \u00b6 \u4e0a\u9762\u7684\u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5b9e\u73b0\u4e86launch\u6587\u4ef6\u542f\u52a8gazebo\u5e76\u663e\u793a\u673a\u5668\u4eba\u6a21\u578b\uff0c\u4f46\u662f\u8fd8\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\uff0c\u5982\u679c\u6587\u4ef6xacro\u7684\u8bdd\uff0c\u65e0\u6cd5\u76f4\u63a5\u901a\u8fc7-file\u8fdb\u884c\u8bfb\u53d6\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u4f7f\u7528-topic\u547d\u4ee4\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 robot_state_publisher_node \u5c06robot_description\u8bdd\u9898\u53d1\u5e03\u51fa\u53bb\uff0c\u8fd9\u4e2a\u8bdd\u9898\u4e2d\u5305\u542b\u4e86\u673a\u5668\u4eba\u7684\u6a21\u578b\u6587\u4ef6\u3002 robot_description = ParameterValue ( Command ([ 'xacro ' , urdf_model_path ]), value_type = str ) # \u5c06\u673a\u5668\u4eba\u6a21\u578b\u901a\u8fc7robot_description\u8bdd\u9898\u53d1\u5e03\u51fa\u53bb\uff08gazebo\u597d\u50cf\u4e0d\u80fd\u76f4\u63a5\u52a0\u8f7dxacro\u6587\u4ef6\uff09 robot_state_publisher_node = Node ( package = 'robot_state_publisher' , executable = 'robot_state_publisher' , parameters = [{ 'robot_description' : robot_description }] ) \u8fd9\u90e8\u5206\u5c31\u548c\u4e0a\u8282\u8bfe\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u662f\u5c06\u6a21\u578b\u53d1\u5e03\u5230Gazebo\u4e2d\u4e86\uff0c\u7136\u540e\u4e0b\u9762\u662f\u66f4\u6539\u52a0\u8f7d\u6a21\u578b\u7684\u65b9\u5f0f\u4e86 spawn_entity_cmd = Node ( package = 'gazebo_ros' , executable = 'spawn_entity.py' , arguments = [ '-entity' , robot_name_in_model , '-topic' , 'robot_description' ], output = 'screen' ) \u6ce8\u610f\u5230\u4f7f\u7528\u4e86-topic\u7684\u65b9\u5f0f\uff0c\u540e\u9762\u52a0\u4e0a\u4e86\u8bdd\u9898\u540d\u79f0robot_description\u3002\u542f\u52a8Gazebo\u670d\u52a1\u7684\u547d\u4ee4\u540e\u9762\u4e5f\u8981\u52a0\u4e0a\u6211\u4eec\u5b9a\u4e49\u7684world\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 start_gazebo_cmd = ExecuteProcess ( cmd = [ 'gazebo' , '--verbose' , '-s' , 'libgazebo_ros_init.so' , '-s' , 'libgazebo_ros_factory.so' , gazebo_world_path ], output = 'screen' ) \u6700\u540e\u67e5\u770b\u5b8c\u6574\u7684launch\u6587\u4ef6 import os from launch import LaunchDescription from launch.actions import ExecuteProcess from launch_ros.actions import Node from launch_ros.substitutions import FindPackageShare from launch.substitutions import Command from launch_ros.parameter_descriptions import ParameterValue def generate_launch_description (): robot_name_in_model = 'myrobot' package_name = 'myrobot' urdf_name = \"sumcar.xacro\" ld = LaunchDescription () pkg_share = FindPackageShare ( package = package_name ) . find ( package_name ) urdf_model_path = os . path . join ( pkg_share , f 'urdf/ { urdf_name } ' ) gazebo_world_path = os . path . join ( pkg_share , 'world/myworld.world' ) robot_description = ParameterValue ( Command ([ 'xacro ' , urdf_model_path ]), value_type = str ) # Start Gazebo server start_gazebo_cmd = ExecuteProcess ( cmd = [ 'gazebo' , '--verbose' , '-s' , 'libgazebo_ros_init.so' , '-s' , 'libgazebo_ros_factory.so' , gazebo_world_path ], output = 'screen' ) # \u5c06\u673a\u5668\u4eba\u6a21\u578b\u901a\u8fc7robot_description\u8bdd\u9898\u53d1\u5e03\u51fa\u53bb\uff08gazebo\u597d\u50cf\u4e0d\u80fd\u76f4\u63a5\u52a0\u8f7dxacro\u6587\u4ef6\uff09 robot_state_publisher_node = Node ( package = 'robot_state_publisher' , executable = 'robot_state_publisher' , parameters = [{ 'robot_description' : robot_description }] ) # Launch the robot spawn_entity_cmd = Node ( package = 'gazebo_ros' , executable = 'spawn_entity.py' , arguments = [ '-entity' , robot_name_in_model , '-topic' , 'robot_description' ], output = 'screen' ) ld . add_action ( robot_state_publisher_node ) ld . add_action ( start_gazebo_cmd ) ld . add_action ( spawn_entity_cmd ) return ld \u5c06\u4ee5\u4e0a\u6587\u4ef6\u5199\u597d\u540e\uff0c\u53ef\u4ee5\u7f16\u8bd1\u8fd0\u884c\u67e5\u770b\uff0c\u6700\u7ec8\u7684\u6548\u679c\u5982\u4e0b\uff1a \u8fd9\u4e2a\u91cc\u9762\u84dd\u8272\u7684\u533a\u57df\u662f\u96f7\u8fbe\u6240\u80fd\u770b\u89c1\u7684\u8303\u56f4\uff0c\u673a\u5668\u4eba\u4e5f\u5df2\u7ecf\u51fa\u73b0\u5728\u4e86world\u533a\u57df\u7684\u4e2d\u5fc3\u3002","title":"Gazebo\u4eff\u771f"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-Gazebo%E4%BB%BF%E7%9C%9F/#gazebo","text":"Gazebo\u662fROS\u7cfb\u7edf\u4e2d\u6700\u4e3a\u5e38\u7528\u7684\u4e09\u7ef4\u7269\u7406\u4eff\u771f\u5e73\u53f0\uff0c\u652f\u6301\u52a8\u529b\u5b66\u5f15\u64ce\uff0c\u53ef\u4ee5\u5b9e\u73b0\u9ad8\u8d28\u91cf\u7684\u56fe\u5f62\u6e32\u67d3\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u6a21\u62df\u673a\u5668\u4eba\u53ca\u5468\u8fb9\u73af\u5883\uff0c\u8fd8\u53ef\u4ee5\u52a0\u5165\u6469\u64e6\u529b\u3001\u5f39\u6027\u7cfb\u6570\u7b49\u7269\u7406\u5c5e\u6027\u3002\u6240\u4ee5\u7c7b\u4f3cGazebo\u8fd9\u6837\u7684\u4eff\u771f\u5e73\u53f0\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u9a8c\u8bc1\u673a\u5668\u4eba\u7b97\u6cd5\u3001\u4f18\u5316\u673a\u5668\u4eba\u8bbe\u8ba1\u3001\u6d4b\u8bd5\u673a\u5668\u4eba\u573a\u666f\u5e94\u7528\uff0c\u4e3a\u673a\u5668\u4eba\u5f00\u53d1\u63d0\u4f9b\u66f4\u591a\u53ef\u80fd\u3002","title":"Gazebo\u4eff\u771f"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-Gazebo%E4%BB%BF%E7%9C%9F/#_1","text":"\u901a\u8fc7\u547d\u4ee4apt\u8fdb\u884c\u5b89\u88c5 sudo apt install ros-humble-gazebo-* \u7136\u540e\u901a\u8fc7\u4e00\u4e0b\u547d\u4ee4\u53ef\u4ee5\u8fd0\u884c ros2 launch gazebo_ros gazebo.launch.py \u6216\u8005\u4e0b\u9762\u7684\u547d\u4ee4 gazebo --verbose -s libgazebo_ros_init.so -s libgazebo_ros_factory.so \u8fd0\u884c\u4e4b\u540e\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u9875\u9762\uff1a \u4e3a\u4fdd\u8bc1\u6a21\u578b\u987a\u5229\u52a0\u8f7d\uff0c\u8bf7\u5c06\u79bb\u7ebf\u6a21\u578b\u4e0b\u8f7d\u5e76\u653e\u7f6e\u5230~/.gazebo/models\u8def\u5f84\u4e0b\uff0c\u4e0b\u8f7d\u94fe\u63a5\u5982\u4e0b\uff1ahttps://github.com/osrf/gazebo_models","title":"\u5b89\u88c5\u8fd0\u884c"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-Gazebo%E4%BB%BF%E7%9C%9F/#gazebo_1","text":"\u9996\u5148\u67e5\u770b\u8282\u70b9 ros2 node list \u6b63\u786e\u8fd4\u56de\uff1a/gazebo \u4ea7\u770b\u8282\u70b9\u7684\u5bf9\u5916\u63d0\u4f9b\u7684\u670d\u52a1\uff1aros2 service list\u3002 \u53ef\u4ee5\u770b\u51fa\u5982\u4e0b\u7684\u7ed3\u679c\uff1a /delete_entity /get_model_list /spawn_entity /gazebo/describe_parameters /gazebo/get_parameter_types /gazebo/get_parameters /gazebo/list_parameters /gazebo/set_parameters /gazebo/set_parameters_atomically \u51fa\u53bb\u6700\u540e\u51e0\u4e2a\u5e38\u89c4\u7684\u670d\u52a1\uff0c\u6211\u4eec\u53ea\u6ce8\u610f\u524d\u4e09\u4e2a\u7279\u6b8a\u7684\u670d\u52a1\uff1a * /spawn_entity\uff0c\u7528\u4e8e\u52a0\u8f7d\u6a21\u578b\u5230gazebo\u4e2d * /get_model_list\uff0c\u7528\u4e8e\u83b7\u53d6\u6a21\u578b\u5217\u8868 * /delete_entity\uff0c\u7528\u4e8e\u5220\u9664gazbeo\u4e2d\u5df2\u7ecf\u52a0\u8f7d\u7684\u6a21\u578b","title":"gazebo\u542f\u52a8\u8282\u70b9\u4e0e\u670d\u52a1"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-Gazebo%E4%BB%BF%E7%9C%9F/#_2","text":"\u521b\u5efa\u4e00\u4e2agazebo_demo\u7684\u6587\u4ef6\u5939\uff0c\u5728\u5176\u4e2d\u521b\u5efa\u4e00\u4e2asrc\u6587\u4ef6\uff0c\u7136\u540e\u5728src\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u6211\u4eec\u7684\u529f\u80fd\u5305myrobot(\u4ee5c++\u4e3a\u4f8b)\u3002 mkdir -p gazebo_demo/src cd gazebo_demo/src ros2 pkg create myrobot --build-type ament_camke \u8fdb\u5165\u5230myrobot\u7684\u76ee\u5f55\u4e0b\uff0c\u521b\u5efalaunch\u3001urdf\u6587\u4ef6\u5939\uff0c\u4fee\u6539CMakeLists.txt\u6587\u4ef6\uff0c\u8fd9\u4e00\u6b65\u9aa4\u548crviz\u4e2d\u7c7b\u4f3c\u3002\u5728urdf\u6587\u4ef6\u5939\u4e0b\u521b\u5efa\u4e00\u4e2ademo01_base.urdf\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\u6587\u4ef6\uff0c\u53ea\u6709\u4e00\u4e2a\u57fa\u7840\u7684\u7acb\u65b9\u4f53\u3002 <robot name= \"myrobot\" > <link name= \"base_link\" > <visual> <geometry> <box size= \"0.2 0.2 0.2\" /> </geometry> <origin xyz= \"0.0 0.0 0.0\" /> </visual> <collision> <geometry> <box size= \"0.2 0.2 0.2\" /> </geometry> <origin xyz= \"0.0 0.0 0.0\" /> </collision> <inertial> <mass value= \"0.1\" /> <inertia ixx= \"0.000190416666667\" ixy= \"0\" ixz= \"0\" iyy= \"0.0001904\" iyz= \"0\" izz= \"0.00036\" /> </inertial> </link> <gazebo reference= \"base_link\" > <material> Gazebo/Red </material> </gazebo> </robot> \u8fd9\u91cc\u548c\u4ee5\u524d\u7684\u6587\u4ef6\u4e0d\u540c\u7684\u662f\u52a0\u5165\u4e86collision\u548cintertial\u5c5e\u6027\uff0c\u90fd\u5c5e\u4e8e\u7269\u7406\u76f8\u5173\u53c2\u6570\uff0c\u8fd9\u4e2a\u5c31\u4e0d\u505a\u8ba8\u8bba\u3002","title":"\u521b\u5efa\u5de5\u4f5c\u7a7a\u95f4\u53ca\u529f\u80fd\u5305"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-Gazebo%E4%BB%BF%E7%9C%9F/#lauch","text":"launch\u6587\u4ef6\u7684\u7f16\u5199\uff0claunch\u6587\u4ef6\u4e3b\u8981\u542f\u52a8\u4e24\u4e2a\u90e8\u5206\uff0c\u542f\u52a8Gazebo\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u673a\u5668\u4eba\u6a21\u578b\u52a0\u8f7d\u5230Gazebo\u4e2d\u3002 start_gazebo_cmd = ExecuteProcess ( cmd = [ 'gazebo' , '--verbose' , '-s' , 'libgazebo_ros_init.so' , '-s' , 'libgazebo_ros_factory.so' ], output = 'screen' ) \u8fd9\u4e2a\u547d\u4ee4\u5c31\u662f\u542f\u52a8Gazebo\u7684\uff0c\u5c31\u662f\u4e00\u4e2a\u542f\u52a8\u547d\u4ee4\uff0c\u5e76\u6ca1\u6709\u7279\u522b\u590d\u6742\u7684\u5730\u65b9\uff0c\u4e0b\u9762\u662f\u52a0\u8f7d\u6a21\u578b\u7684\u547d\u4ee4\uff1a spawn_entity_cmd = Node ( package = 'gazebo_ros' , executable = 'spawn_entity.py' , arguments = [ '-entity' , robot_name_in_model , '-file' , urdf_model_path ], output = 'screen' ) \u8fd9\u4e2a\u547d\u4ee4\u6ce8\u610f\u540e\u9762\u4e24\u4e2a\u53c2\u6570-entity\u662f\u6a21\u578b\u6587\u4ef6\u4e2d\u7684\u540d\u5b57\uff0c-file\u662f\u901a\u8fc7urdf\u6587\u4ef6\u52a0\u8f7d\u53c2\u6570\uff0c\u540e\u9762\u6211\u4eec\u8fd8\u53ef\u4ee5\u770b\u5230\u901a\u8fc7topic\u8bdd\u9898\u52a0\u8f7d\u6a21\u578b\u7684\u3002\u5b8c\u6574\u7684\u542f\u52a8\u6587\u4ef6\u5982\u4e0b\uff1a import os from launch import LaunchDescription from launch.actions import ExecuteProcess from launch_ros.actions import Node from launch_ros.substitutions import FindPackageShare from launch_ros.parameter_descriptions import ParameterValue from launch.substitutions import Command def generate_launch_description (): robot_name_in_model = 'myrobot' package_name = 'myrobot' urdf_name = \"demo01_base.urdf\" ld = LaunchDescription () pkg_share = FindPackageShare ( package = package_name ) . find ( package_name ) urdf_model_path = os . path . join ( pkg_share , f 'urdf/ { urdf_name } ' ) # Start Gazebo server start_gazebo_cmd = ExecuteProcess ( cmd = [ 'gazebo' , '--verbose' , '-s' , 'libgazebo_ros_init.so' , '-s' , 'libgazebo_ros_factory.so' ], output = 'screen' ) # Launch the robot spawn_entity_cmd = Node ( package = 'gazebo_ros' , executable = 'spawn_entity.py' , arguments = [ '-entity' , robot_name_in_model , '-file' , urdf_model_path ], output = 'screen' ) ld . add_action ( start_gazebo_cmd ) ld . add_action ( spawn_entity_cmd ) return ld \u542f\u52a8\u4e4b\u540e\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u7684Gazebo\u6a21\u578b\uff1a \u53ef\u4ee5\u770b\u5230\u7ea2\u8272\u7684\u6a21\u578b\uff0c\u56e0\u4e3a\u6700\u540e\u52a0\u4e0a\u4e86Gazebo\u7684\u6807\u7b7e\u8bbe\u7f6e\u3002","title":"lauch\u6587\u4ef6"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-Gazebo%E4%BB%BF%E7%9C%9F/#_3","text":"\u901a\u8fc7\u4e0a\u9762\u7684\u663e\u793a\u6a21\u578b\u6587\u4ef6\uff0c\u53ef\u4ee5\u770b\u51fa\u53ea\u6709\u7a7a\u8361\u8361\u7684\u6a21\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u52a0\u5165\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7684\u73af\u5883\uff0c\u4f8b\u5982\u6211\u4eec\u5728\u529f\u80fd\u5305\u4e2d\u65b0\u5efa\u4e00\u4e2aworld\u7684\u6587\u4ef6\u5939\uff0c\u5728\u5176\u4e2d\u653e\u5165\u6211\u4eec\u7684\u73af\u5883\u6a21\u578b\u6587\u4ef6myworld.world\u3002\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u542f\u52a8\u6587\u4ef6\u914d\u7f6e\uff1agazebo --verbose -s libgazebo_ros_init.so -s libgazebo_ros_factory.so \u4f60\u7684world\u6587\u4ef6\u76ee\u5f55/fishbot.world\u3002\u5c31\u662f\u5728\u539f\u547d\u4ee4\u7684\u57fa\u7840\u4e0a\u52a0\u4e86\u4e2a\u6587\u4ef6\u8def\u5f84\uff0c\u6548\u679c\u5982\u4e0b\uff1a","title":"\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u7684\u6a21\u578b\u6587\u4ef6"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-Gazebo%E4%BB%BF%E7%9C%9F/#launchworld","text":"\u4e0a\u9762\u7684\u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5b9e\u73b0\u4e86launch\u6587\u4ef6\u542f\u52a8gazebo\u5e76\u663e\u793a\u673a\u5668\u4eba\u6a21\u578b\uff0c\u4f46\u662f\u8fd8\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\uff0c\u5982\u679c\u6587\u4ef6xacro\u7684\u8bdd\uff0c\u65e0\u6cd5\u76f4\u63a5\u901a\u8fc7-file\u8fdb\u884c\u8bfb\u53d6\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u4f7f\u7528-topic\u547d\u4ee4\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 robot_state_publisher_node \u5c06robot_description\u8bdd\u9898\u53d1\u5e03\u51fa\u53bb\uff0c\u8fd9\u4e2a\u8bdd\u9898\u4e2d\u5305\u542b\u4e86\u673a\u5668\u4eba\u7684\u6a21\u578b\u6587\u4ef6\u3002 robot_description = ParameterValue ( Command ([ 'xacro ' , urdf_model_path ]), value_type = str ) # \u5c06\u673a\u5668\u4eba\u6a21\u578b\u901a\u8fc7robot_description\u8bdd\u9898\u53d1\u5e03\u51fa\u53bb\uff08gazebo\u597d\u50cf\u4e0d\u80fd\u76f4\u63a5\u52a0\u8f7dxacro\u6587\u4ef6\uff09 robot_state_publisher_node = Node ( package = 'robot_state_publisher' , executable = 'robot_state_publisher' , parameters = [{ 'robot_description' : robot_description }] ) \u8fd9\u90e8\u5206\u5c31\u548c\u4e0a\u8282\u8bfe\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u662f\u5c06\u6a21\u578b\u53d1\u5e03\u5230Gazebo\u4e2d\u4e86\uff0c\u7136\u540e\u4e0b\u9762\u662f\u66f4\u6539\u52a0\u8f7d\u6a21\u578b\u7684\u65b9\u5f0f\u4e86 spawn_entity_cmd = Node ( package = 'gazebo_ros' , executable = 'spawn_entity.py' , arguments = [ '-entity' , robot_name_in_model , '-topic' , 'robot_description' ], output = 'screen' ) \u6ce8\u610f\u5230\u4f7f\u7528\u4e86-topic\u7684\u65b9\u5f0f\uff0c\u540e\u9762\u52a0\u4e0a\u4e86\u8bdd\u9898\u540d\u79f0robot_description\u3002\u542f\u52a8Gazebo\u670d\u52a1\u7684\u547d\u4ee4\u540e\u9762\u4e5f\u8981\u52a0\u4e0a\u6211\u4eec\u5b9a\u4e49\u7684world\u6a21\u578b\u6587\u4ef6\u8def\u5f84\u3002 start_gazebo_cmd = ExecuteProcess ( cmd = [ 'gazebo' , '--verbose' , '-s' , 'libgazebo_ros_init.so' , '-s' , 'libgazebo_ros_factory.so' , gazebo_world_path ], output = 'screen' ) \u6700\u540e\u67e5\u770b\u5b8c\u6574\u7684launch\u6587\u4ef6 import os from launch import LaunchDescription from launch.actions import ExecuteProcess from launch_ros.actions import Node from launch_ros.substitutions import FindPackageShare from launch.substitutions import Command from launch_ros.parameter_descriptions import ParameterValue def generate_launch_description (): robot_name_in_model = 'myrobot' package_name = 'myrobot' urdf_name = \"sumcar.xacro\" ld = LaunchDescription () pkg_share = FindPackageShare ( package = package_name ) . find ( package_name ) urdf_model_path = os . path . join ( pkg_share , f 'urdf/ { urdf_name } ' ) gazebo_world_path = os . path . join ( pkg_share , 'world/myworld.world' ) robot_description = ParameterValue ( Command ([ 'xacro ' , urdf_model_path ]), value_type = str ) # Start Gazebo server start_gazebo_cmd = ExecuteProcess ( cmd = [ 'gazebo' , '--verbose' , '-s' , 'libgazebo_ros_init.so' , '-s' , 'libgazebo_ros_factory.so' , gazebo_world_path ], output = 'screen' ) # \u5c06\u673a\u5668\u4eba\u6a21\u578b\u901a\u8fc7robot_description\u8bdd\u9898\u53d1\u5e03\u51fa\u53bb\uff08gazebo\u597d\u50cf\u4e0d\u80fd\u76f4\u63a5\u52a0\u8f7dxacro\u6587\u4ef6\uff09 robot_state_publisher_node = Node ( package = 'robot_state_publisher' , executable = 'robot_state_publisher' , parameters = [{ 'robot_description' : robot_description }] ) # Launch the robot spawn_entity_cmd = Node ( package = 'gazebo_ros' , executable = 'spawn_entity.py' , arguments = [ '-entity' , robot_name_in_model , '-topic' , 'robot_description' ], output = 'screen' ) ld . add_action ( robot_state_publisher_node ) ld . add_action ( start_gazebo_cmd ) ld . add_action ( spawn_entity_cmd ) return ld \u5c06\u4ee5\u4e0a\u6587\u4ef6\u5199\u597d\u540e\uff0c\u53ef\u4ee5\u7f16\u8bd1\u8fd0\u884c\u67e5\u770b\uff0c\u6700\u7ec8\u7684\u6548\u679c\u5982\u4e0b\uff1a \u8fd9\u4e2a\u91cc\u9762\u84dd\u8272\u7684\u533a\u57df\u662f\u96f7\u8fbe\u6240\u80fd\u770b\u89c1\u7684\u8303\u56f4\uff0c\u673a\u5668\u4eba\u4e5f\u5df2\u7ecf\u51fa\u73b0\u5728\u4e86world\u533a\u57df\u7684\u4e2d\u5fc3\u3002","title":"launch\u6587\u4ef6\u52a0\u8f7dworld"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-URDF%E5%BB%BA%E6%A8%A1/","text":"URDF\uff08Unified Robot Description Format\uff09 \u00b6 \u7edf\u4e00\u673a\u5668\u4eba\u63cf\u8ff0\u683c\u5f0f\uff0cURDF\u4f7f\u7528XML\u683c\u5f0f\u63cf\u8ff0\u673a\u5668\u4eba\u6587\u4ef6\u3002\u901a\u8fc7URDF\u6587\u4ef6\u6211\u4eec\u53ef\u4ee5\u642d\u5efa\u4e00\u4e2a\u6211\u4eec\u81ea\u5df1\u7684\u4eff\u771f\u673a\u5668\u4eba\uff0c\u7136\u540e\u901a\u8fc7RVIZ\u6216\u8005Gazebo\u7b49\u8f6f\u4ef6\u8fdb\u884c\u5c55\u793a\uff0c\u4e0b\u9762\u8fdb\u884c\u7b80\u5355\u7684\u4ecb\u7ecd\u3002 URDF\u7684\u57fa\u672c\u8bed\u6cd5 \u00b6 XML\u662f\u88ab\u8bbe\u8ba1\u7528\u6765\u4f20\u8f93\u548c\u5b58\u50a8\u6570\u636e\u7684\u53ef\u6269\u5c55\u6807\u8bb0\u8bed\u8a00\uff0c\u6ce8\u610f\u8bed\u8a00\u672c\u8eab\u662f\u6ca1\u6709\u542b\u4e49\u7684\uff0c\u53ea\u662f\u89c4\u5b9a\u4e86\u5176\u6570\u636e\u683c\u5f0f\u3002\u4e0eHTML\u7c7b\u4f3c\uff0cXML\u4e5f\u662f\u901a\u8fc7\u95ed\u5408\u7684\u5c16\u62ec\u53f7\u7ec4\u6210\uff0c\u4f46\u662f\u8bed\u6cd5\u4e0a\u6bd4HTML\u8bed\u8a00\u4e25\u8c28\uff0c\u4e0b\u9762\u770b\u4e00\u4e2a\u4f8b\u5b50\u3002 <robot name= \"myrobot\" > <link name= \"arm\" ></link> <joint name= \"body\" ></joint> <link name= \"leg\" ></link> </robot> \u7c7b\u4f3c\u4e0a\u9762\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u673a\u5668\u4eba\u6a21\u578b\u6587\u4ef6\u3002 URDF\u6587\u4ef6\u7ec4\u6210 \u00b6 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0cURDF\u7531\u58f0\u660e\u4fe1\u606f\u548c\u4e24\u79cd\u5173\u952e\u7ec4\u4ef6(joint\u548clink)\u5171\u540c\u7ec4\u6210\u3002 \u58f0\u660e\u4fe1\u606f \u00b6 \u9996\u5148\u662fxml\u6587\u4ef6\u7684\u58f0\u660e\u4fe1\u606f\uff0c\u8fd9\u4e5f\u662f\u6240\u6709xml\u6587\u4ef6\u5fc5\u987b\u7684\uff0c\u5199\u5728\u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u3002 <?xml version=\"1.0\"?> \u63a5\u4e0b\u6765\u662f\u673a\u5668\u4eba\u7684\u58f0\u660e\u901a\u8fc7\u4e00\u4e2a robot \u6807\u7b7e\u8fdb\u884c\u58f0\u660e\uff0c\u6807\u7b7e\u4e2d\u52a0\u5165name\u5c5e\u6027\u3002 <robot name= \"myrobot\" > <link></link> <joint></joint> </robot> \u4e24\u79cd\u5173\u952e\u7ec4\u4ef6(Joint&Link) \u00b6 \u4e00\u822c\u6765\u8bf4\u673a\u5668\u4eba\u7531\u591a\u79cd\u7ec4\u4ef6\u7ec4\u6210\uff0c\u4f8b\u5982\u4e00\u4e2a\u65e0\u4eba\u8f66\u6027\u673a\u5668\u4eba\uff0c\u7531\u5e95\u76d8\u3001\u8f6e\u5b50\u3001\u96f7\u8fbe\u7b49\u90e8\u4ef6\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u5c31\u662f link \u3002\u8fd9\u4e9b\u7ec4\u4ef6\u4e0e\u7ec4\u4ef6\u8fdb\u884c\u8fde\u63a5\u7684\u90e8\u5206\u79f0\u4e3a joint \u3002\u901a\u8fc7\u7ed9link\u548cjoint\u6807\u7b7e\u4e2d\u7684name\u5c5e\u6027\u6765\u533a\u522b\u3002\u4e0b\u9762\u6765\u5199\u4e00\u4e2a\u6700\u57fa\u7840\u7684base_link\u6807\u7b7e\u3002 <!-- base link --> <link name= \"base_link\" > <visual> <origin xyz= \"0 0 0.0\" rpy= \"0 0 0\" /> <geometry> <cylinder length= \"0.12\" radius= \"0.10\" /> </geometry> </visual> <material name= \"white\" > <color rgba= \"1.0 1.0 1.0 0.5\" /> </material> </link> link\u6807\u7b7e \u00b6 \u9996\u5148\u770b\u770blink\u6807\u7b7e\u7684\u7ec4\u6210\uff0c\u9996\u5148\u6700\u57fa\u7840\u7684\u662fvisual\u6807\u7b7e\uff0c\u7528\u4e8e\u663e\u793a\u5f62\u72b6\uff0c\u5176\u4e2d\u4e5f\u5305\u62ec\u4e86\u591a\u4e2a\u6807\u7b7e\uff0c\u9996\u5148geometry\u8868\u793a\u96c6\u5408\u5f62\u72b6\u3002\u53ef\u4ee5\u7531\u591a\u79cd\u5f62\u72b6\uff1a * box \u957f\u65b9\u4f53 size-\u957f\u5bbd\u9ad8 \\ cylinder \u5706\u67f1\u4f53\uff0cradius-\u534a\u5f84\uff0clength-\u9ad8\u5ea6\uff0c\\ sphere \u7403\u4f53\uff0cradius-\u534a\u5f84\uff0c\\ mesh:\u7b2c\u4e09\u65b9\u5bfc\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cfilename-\u6587\u4ef6\u8def\u5f84\u3002\\ \u53e6\u4e00\u4e2a\u5c5e\u6027\u662forigin\uff0c\u8868\u793a\u504f\u79fb\u91cf\uff0c\u9ed8\u8ba4\u662f\u5728\u7269\u4f53\u7684\u96c6\u5408\u4e2d\u5fc3\u3002 * xyz\u9ed8\u8ba4\u4e3a\u96f6\u77e2\u91cf * rpy\u5f27\u5ea6\u8868\u793a\u7684\u7ffb\u6eda\u3001\u4fef\u4ef0\u3001\u504f\u822a material\u8868\u793a\u6750\u8d28\uff0c\u901a\u5e38\u7528\u5b83\u7684\u989c\u8272\u5c5e\u6027\u3002color\u4e2drgba\u5c5e\u6027\uff0crgb\u8868\u793a\u7ea2\u7eff\u84dd\uff0ca\u8868\u793a\u900f\u660e\u5ea6\uff0c\u519b\u4e8b0-1\u4e4b\u95f4\u7684\u6570\u5b57\u3002 \u5269\u4f59\u8fd8\u6709collision\u78b0\u649e\u5c5e\u6027\u53c2\u6570\uff0cinterial\u60ef\u6027\u53c2\u6570\u5728\u4eff\u771f\u4e2d\u4f1a\u7528\u5230\u3002 joint\u6807\u7b7e \u00b6 joint\u79f0\u4e3a\u673a\u5668\u4eba\u7684\u5173\u8282\uff0c\u7528\u4e8e\u8fde\u63a5\u4e24\u4e2a\u673a\u5668\u4eba\u90e8\u4ef6\uff0c\u8981\u5199\u660e\u7236\u5b50\u5173\u7cfb\uff0c\u901a\u5e38\u6709\u4e00\u4e0b\u51e0\u4e2a\u529f\u80fd\uff1a\u7236\u5b50\u4e4b\u95f4\u7684\u8fde\u63a5\u7c7b\u578b\uff0c\u5305\u62ec\u662f\u5426\u56fa\u5b9a\u7684\uff0c\u53ef\u4ee5\u65cb\u8f6c\u7684\u7b49\uff1b\u7236\u90e8\u4ef6\u540d\u5b57\uff1b\u5b50\u90e8\u4ef6\u540d\u5b57\uff1b\u7236\u5b50\u4e4b\u95f4\u76f8\u5bf9\u4f4d\u7f6e\uff1b\u7236\u5b50\u4e4b\u95f4\u7684\u65cb\u8f6c\u8f74\uff0c\u7ed5\u54ea\u4e2a\u8f74\u8f6c\u2026\u2026 <joint name= \"laser_joint\" type= \"fixed\" > <parent link= \"base_link\" /> <child link= \"laser_link\" /> <origin xyz= \"0 0 0.075\" /> <axis xyz= \"0 0 1\" /> </joint> \u4f8b\u5982\u4e0a\u9762\u7684\u8fd9\u4e2a\u5173\u8282\u6587\u4ef6\uff0c\u5173\u8282\u540d\u79f0\u662flaser_joint\uff0c\u96f7\u8fbe\u8fde\u63a5\u7684\u5173\u8282\uff0c\u7c7b\u578btype\u662ffixed\u56fa\u5b9a\u7684\uff0c\u7236\u7ec4\u4ef6\u662fbase_link\uff0c\u5b50\u7ec4\u4ef6\u662flaser_link\u96f7\u8fbe\u7ec4\u4ef6\uff0c\u4e24\u8005\u7684\u8fde\u63a5\u5728z\u8f74\u4e0a\u504f\u79fb0.075m\u3002\u53ef\u4ee5\u7ed5z\u8f74\u65cb\u8f6c\u3002joint\u7684type\u5c5e\u6027\u53ef\u4ee5\u6709\u591a\u79cd\u65b9\u5f0f\uff1a * revolute: \u65cb\u8f6c\u5173\u8282\uff0c\u7ed5\u5355\u8f74\u65cb\u8f6c,\u89d2\u5ea6\u6709\u4e0a\u4e0b\u9650,\u6bd4\u5982\u8235\u673a0-180 * continuous: \u65cb\u8f6c\u5173\u8282\uff0c\u53ef\u4ee5\u7ed5\u5355\u8f74\u65e0\u9650\u65cb\u8f6c,\u6bd4\u5982\u81ea\u884c\u8f66\u7684\u524d\u540e\u8f6e * fixed: \u56fa\u5b9a\u5173\u8282\uff0c\u4e0d\u5141\u8bb8\u8fd0\u52a8\u7684\u7279\u6b8a\u5173\u8282 * prismatic: \u6ed1\u52a8\u5173\u8282\uff0c\u6cbf\u67d0\u4e00\u8f74\u7ebf\u79fb\u52a8\u7684\u5173\u8282\uff0c\u6709\u4f4d\u7f6e\u6781\u9650 * planer: \u5e73\u9762\u5173\u8282\uff0c\u5141\u8bb8\u5728xyz\uff0crxryrz\u516d\u4e2a\u65b9\u5411\u8fd0\u52a8 * floating: \u6d6e\u52a8\u5173\u8282\uff0c\u5141\u8bb8\u8fdb\u884c\u5e73\u79fb\u3001\u65cb\u8f6c\u8fd0\u52a8 xacro\u7b80\u5316URDF\u6587\u4ef6 \u00b6 \u5728\u4e0a\u9762\u7684urdf\u6587\u4ef6\u7684\u4ecb\u7ecd\u4e2d\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\uff0c\u6bd4\u5982\u5404\u7ec4\u4ef6\u7684\u6570\u636e\u90fd\u662f\u5199\u597d\u7684\uff08\u8f6e\u5b50\u534a\u5f84\u3001\u673a\u5668\u4eba\u9ad8\u5ea6\u7b49\uff09\uff0c\u5982\u679c\u8981\u4fee\u6539\u5176\u4e2d\u7684\u6570\u636e\u6bd4\u8f83\u9ebb\u70e6\uff0c\u800c\u4e14\u5982\u679c\u5176\u5b83\u6570\u636e\u7531\u8f6e\u5b50\u534a\u5f84\u8ba1\u7b97\u5f97\u51fa\uff0c\u4fee\u6539\u8f6e\u5b50\u534a\u5f84\u540e\uff0c\u8fd8\u9700\u8981\u8ba1\u7b97\u540e\u4fee\u6539\u5176\u5b83\u5173\u8054\u7684\u6570\u636e\u3002\u9488\u5bf9\u8fd9\u79cd\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528xacro\u6587\u4ef6\u3002 \u8bed\u6cd5\u4ecb\u7ecd \u00b6 xacro \u63d0\u4f9b\u4e86\u53ef\u7f16\u7a0b\u63a5\u53e3\uff0c\u7c7b\u4f3c\u4e8e\u8ba1\u7b97\u673a\u8bed\u8a00\uff0c\u5305\u62ec\u53d8\u91cf\u58f0\u660e\u8c03\u7528\u3001\u51fd\u6570\u58f0\u660e\u4e0e\u8c03\u7528\u7b49\u8bed\u6cd5\u5b9e\u73b0\u3002\u5728\u4f7f\u7528 xacro \u751f\u6210 urdf \u65f6\uff0c\u6839\u6807\u7b7erobot\u4e2d\u5fc5\u987b\u5305\u542b\u547d\u540d\u7a7a\u95f4\u58f0\u660e:xmlns:xacro=\"http://wiki.ros.org/xacro\"\u3002 \u4e5f\u5c31\u662f\u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u8981\u5199\u4e0a\uff1a <robot name= \"myrobot\" xmlns:xacro= \"http://wiki.ros.org/xacro\" > \u8f83\u4e4b\u4e8e\u7eaf\u7cb9\u7684 URDF \u5b9e\u73b0\uff0c\u53ef\u4ee5\u7f16\u5199\u66f4\u5b89\u5168\u3001\u7cbe\u7b80\u3001\u6613\u8bfb\u6027\u66f4\u5f3a\u7684\u673a\u5668\u4eba\u6a21\u578b\u6587\u4ef6\uff0c\u4e14\u53ef\u4ee5\u63d0\u9ad8\u7f16\u5199\u6548\u7387\u3002\u8981\u60f3\u5c55\u793axacro\u6587\u4ef6\uff0c\u8fd8\u9700\u8981\u5c06xacro\u6587\u4ef6\u8f6c\u4e3aurdf\u6587\u4ef6\uff0c\u4f7f\u7528xacro xxx.xacro > xxx.urdf\uff0c\u8fd8\u9700\u8981\u63d0\u524d\u5b89\u88c5xacro\u901a\u8fc7sudo apt install ros-humble-xacro\uff0cros2\u7248\u672c\u662fhumble\u7684\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0a\u547d\u4ee4\u5b89\u88c5\u3002 \u5c5e\u6027\u4e0e\u7b97\u6570\u8fd0\u7b97 \u00b6 \u7528\u4e8e\u5c01\u88c5 URDF \u4e2d\u7684\u4e00\u4e9b\u5b57\u6bb5\uff0c\u6bd4\u5982: PAI \u503c\uff0c\u5c0f\u8f66\u7684\u5c3a\u5bf8\uff0c\u8f6e\u5b50\u534a\u5f84 .... \u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u5c5e\u6027\uff1a <xacro:property name= \"wheel_radius\" value= \"3\" /> \u4e0a\u9762\u5c06\u5c0f\u8f66\u7684\u534a\u5f84\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u5c5e\u6027\uff0c\u9700\u8981\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u6bd4\u5982\u5728link\u4e2d\u4f7f\u7528\uff0c\u901a\u8fc7${wheel_radius}\u4f7f\u7528\u3002 <link name= \"wheel_link\" > <visual> <geometry> <cylinder radius= \"${wheel_radius}\" length= \"${wheel_radius*2}\" /> </geometry> </visual> </link> \u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u83b7\u53d6\u5230\u8f6e\u5b50\u7684\u534a\u5f84\uff0c\u7136\u540e\uff0c\u8fd8\u53ef\u4ee5\u8fdb\u884c\u7b97\u6570\u7684\u8fd0\u7b97\uff0c\u53ef\u4ee5\u8fdb\u884c\u52a0\u51cf\u4e58\u9664\u7684\u8fd0\u7b97\u3002 \u5b8f\u5b9a\u4e49\u4e0e\u8c03\u7528 \u00b6 <xacro:macro name= \"\u5b8f\u540d\u79f0\" params= \"\u53c2\u6570\u5217\u8868(\u591a\u53c2\u6570\u4e4b\u95f4\u4f7f\u7528\u7a7a\u683c\u5206\u9694)\" > ..... \u53c2\u6570\u8c03\u7528\u683c\u5f0f: ${\u53c2\u6570\u540d} </xacro:macro> <!-- \u8c03\u7528\u683c\u5f0f --> xacro:\u5b8f\u540d\u79f0 \u53c2\u65701=xxx \u53c2\u65702=xxx/> \u7c7b\u4f3c\u4e8e\u51fd\u6570\u5b9e\u73b0\uff0c\u63d0\u9ad8\u4ee3\u7801\u590d\u7528\u7387\uff0c\u4f18\u5316\u4ee3\u7801\u7ed3\u6784\uff0c\u63d0\u9ad8\u5b89\u5168\u6027\uff0c\u4f8b\u5982\u5c0f\u8f66\u7684\u5de6\u8f6e\u548c\u53f3\u8f6e\u5927\u90e8\u5206\u5c5e\u6027\u90fd\u662f\u76f8\u540c\u7684\uff0c\u53ea\u6709\u504f\u79fb\u4e0d\u540c\uff0c\u53ef\u4ee5\u628a\u504f\u79fb\u503c\u653e\u5728\u53c2\u6570\u4e2d\uff0c\u7136\u540e\u505a\u4e00\u4e2a\u8f6e\u5b50\u7684\u5b8f\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u4ee3\u7801\u590d\u7528\u3002 <xacro:macro name= \"wheel_func\" params= \"wheel_name flag\" > <link name= \"${wheel_name}_wheel\" > <visual> <geometry> <cylinder radius= \"0.0325\" length= \"0.015\" /> </geometry> <origin xyz= \"0.0 0.0 0.0\" rpy= \"${PI/2} 0.0 0.0\" /> <material name= \"wheel_color\" > <color rgba= \"0 0 0 0.5\" /> </material> </visual> </link> <joint name= \"${wheel_name}2link\" type= \"continuous\" > <parent link= \"base_link\" /> <child link= \"${wheel_name}_wheel\" /> <!-- \u504f\u79fb\u91cf x\u65b9\u5411\u65e0\u504f\u79fb y\u504f\u79fb\u8f66\u4f53\u534a\u5f84\u957f z\u8f74\uff1a\u8f66\u9ad8/2+\u79bb\u5730\u95f4\u8ddd-\u8f66\u8f6e\u534a\u5f84--> <origin xyz= \"0 ${0.1*flag} ${wheel_joint_z}\" rpy= \"0.0 0.0 0.0\" /> <axis xyz= \"0 1 0\" /> </joint> </xacro:macro> <!-- \u5de6\u53f3\u8f6e\u5b50\u7684\u5b9a\u4e49 --> <xacro:wheel_func wheel_name= \"left\" flag= \"1\" /> <xacro:wheel_func wheel_name= \"right\" flag= \"-1\" /> \u4ee5\u4e0a\u7684\u793a\u4f8b\u5c31\u662f\u4e24\u4e2a\u8f6e\u5b50\u7684\u4ee3\u7801\u793a\u4f8b\uff0c\u901a\u8fc7\u5b8f\u5b9a\u4e49\u5b9e\u73b0\u4e86\u4ee3\u7801\u7684\u590d\u7528\u3002 \u6587\u4ef6\u5305\u542b \u00b6 \u5f53\u6240\u505a\u7684\u5de5\u7a0b\u9879\u76ee\u8f83\u5927\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5c06\u673a\u5668\u4eba\u4e0d\u540c\u90e8\u4ef6\u53ef\u80fd\u5c01\u88c5\u4e3a\u5355\u72ec\u7684 xacro \u6587\u4ef6\uff0c\u6700\u540e\u518d\u5c06\u4e0d\u540c\u7684\u6587\u4ef6\u96c6\u6210\uff0c\u7ec4\u5408\u4e3a\u5b8c\u6574\u673a\u5668\u4eba\uff0c\u53ef\u4ee5\u4f7f\u7528\u6587\u4ef6\u5305\u542b\u5b9e\u73b0\u3002 <robot name= \"xxx\" xmlns:xacro= \"http://wiki.ros.org/xacro\" > <xacro:include filename= \"my_base.xacro\" /> <xacro:include filename= \"my_camera.xacro\" /> <xacro:include filename= \"my_laser.xacro\" /> </robot>","title":"URDF\uff08Unified Robot Description Format\uff09"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-URDF%E5%BB%BA%E6%A8%A1/#urdfunified-robot-description-format","text":"\u7edf\u4e00\u673a\u5668\u4eba\u63cf\u8ff0\u683c\u5f0f\uff0cURDF\u4f7f\u7528XML\u683c\u5f0f\u63cf\u8ff0\u673a\u5668\u4eba\u6587\u4ef6\u3002\u901a\u8fc7URDF\u6587\u4ef6\u6211\u4eec\u53ef\u4ee5\u642d\u5efa\u4e00\u4e2a\u6211\u4eec\u81ea\u5df1\u7684\u4eff\u771f\u673a\u5668\u4eba\uff0c\u7136\u540e\u901a\u8fc7RVIZ\u6216\u8005Gazebo\u7b49\u8f6f\u4ef6\u8fdb\u884c\u5c55\u793a\uff0c\u4e0b\u9762\u8fdb\u884c\u7b80\u5355\u7684\u4ecb\u7ecd\u3002","title":"URDF\uff08Unified Robot Description Format\uff09"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-URDF%E5%BB%BA%E6%A8%A1/#urdf","text":"XML\u662f\u88ab\u8bbe\u8ba1\u7528\u6765\u4f20\u8f93\u548c\u5b58\u50a8\u6570\u636e\u7684\u53ef\u6269\u5c55\u6807\u8bb0\u8bed\u8a00\uff0c\u6ce8\u610f\u8bed\u8a00\u672c\u8eab\u662f\u6ca1\u6709\u542b\u4e49\u7684\uff0c\u53ea\u662f\u89c4\u5b9a\u4e86\u5176\u6570\u636e\u683c\u5f0f\u3002\u4e0eHTML\u7c7b\u4f3c\uff0cXML\u4e5f\u662f\u901a\u8fc7\u95ed\u5408\u7684\u5c16\u62ec\u53f7\u7ec4\u6210\uff0c\u4f46\u662f\u8bed\u6cd5\u4e0a\u6bd4HTML\u8bed\u8a00\u4e25\u8c28\uff0c\u4e0b\u9762\u770b\u4e00\u4e2a\u4f8b\u5b50\u3002 <robot name= \"myrobot\" > <link name= \"arm\" ></link> <joint name= \"body\" ></joint> <link name= \"leg\" ></link> </robot> \u7c7b\u4f3c\u4e0a\u9762\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u673a\u5668\u4eba\u6a21\u578b\u6587\u4ef6\u3002","title":"URDF\u7684\u57fa\u672c\u8bed\u6cd5"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-URDF%E5%BB%BA%E6%A8%A1/#urdf_1","text":"\u4e00\u822c\u60c5\u51b5\u4e0b\uff0cURDF\u7531\u58f0\u660e\u4fe1\u606f\u548c\u4e24\u79cd\u5173\u952e\u7ec4\u4ef6(joint\u548clink)\u5171\u540c\u7ec4\u6210\u3002","title":"URDF\u6587\u4ef6\u7ec4\u6210"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-URDF%E5%BB%BA%E6%A8%A1/#_1","text":"\u9996\u5148\u662fxml\u6587\u4ef6\u7684\u58f0\u660e\u4fe1\u606f\uff0c\u8fd9\u4e5f\u662f\u6240\u6709xml\u6587\u4ef6\u5fc5\u987b\u7684\uff0c\u5199\u5728\u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u3002 <?xml version=\"1.0\"?> \u63a5\u4e0b\u6765\u662f\u673a\u5668\u4eba\u7684\u58f0\u660e\u901a\u8fc7\u4e00\u4e2a robot \u6807\u7b7e\u8fdb\u884c\u58f0\u660e\uff0c\u6807\u7b7e\u4e2d\u52a0\u5165name\u5c5e\u6027\u3002 <robot name= \"myrobot\" > <link></link> <joint></joint> </robot>","title":"\u58f0\u660e\u4fe1\u606f"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-URDF%E5%BB%BA%E6%A8%A1/#jointlink","text":"\u4e00\u822c\u6765\u8bf4\u673a\u5668\u4eba\u7531\u591a\u79cd\u7ec4\u4ef6\u7ec4\u6210\uff0c\u4f8b\u5982\u4e00\u4e2a\u65e0\u4eba\u8f66\u6027\u673a\u5668\u4eba\uff0c\u7531\u5e95\u76d8\u3001\u8f6e\u5b50\u3001\u96f7\u8fbe\u7b49\u90e8\u4ef6\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u5c31\u662f link \u3002\u8fd9\u4e9b\u7ec4\u4ef6\u4e0e\u7ec4\u4ef6\u8fdb\u884c\u8fde\u63a5\u7684\u90e8\u5206\u79f0\u4e3a joint \u3002\u901a\u8fc7\u7ed9link\u548cjoint\u6807\u7b7e\u4e2d\u7684name\u5c5e\u6027\u6765\u533a\u522b\u3002\u4e0b\u9762\u6765\u5199\u4e00\u4e2a\u6700\u57fa\u7840\u7684base_link\u6807\u7b7e\u3002 <!-- base link --> <link name= \"base_link\" > <visual> <origin xyz= \"0 0 0.0\" rpy= \"0 0 0\" /> <geometry> <cylinder length= \"0.12\" radius= \"0.10\" /> </geometry> </visual> <material name= \"white\" > <color rgba= \"1.0 1.0 1.0 0.5\" /> </material> </link>","title":"\u4e24\u79cd\u5173\u952e\u7ec4\u4ef6(Joint&amp;Link)"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-URDF%E5%BB%BA%E6%A8%A1/#link","text":"\u9996\u5148\u770b\u770blink\u6807\u7b7e\u7684\u7ec4\u6210\uff0c\u9996\u5148\u6700\u57fa\u7840\u7684\u662fvisual\u6807\u7b7e\uff0c\u7528\u4e8e\u663e\u793a\u5f62\u72b6\uff0c\u5176\u4e2d\u4e5f\u5305\u62ec\u4e86\u591a\u4e2a\u6807\u7b7e\uff0c\u9996\u5148geometry\u8868\u793a\u96c6\u5408\u5f62\u72b6\u3002\u53ef\u4ee5\u7531\u591a\u79cd\u5f62\u72b6\uff1a * box \u957f\u65b9\u4f53 size-\u957f\u5bbd\u9ad8 \\ cylinder \u5706\u67f1\u4f53\uff0cradius-\u534a\u5f84\uff0clength-\u9ad8\u5ea6\uff0c\\ sphere \u7403\u4f53\uff0cradius-\u534a\u5f84\uff0c\\ mesh:\u7b2c\u4e09\u65b9\u5bfc\u51fa\u7684\u6a21\u578b\u6587\u4ef6\uff0cfilename-\u6587\u4ef6\u8def\u5f84\u3002\\ \u53e6\u4e00\u4e2a\u5c5e\u6027\u662forigin\uff0c\u8868\u793a\u504f\u79fb\u91cf\uff0c\u9ed8\u8ba4\u662f\u5728\u7269\u4f53\u7684\u96c6\u5408\u4e2d\u5fc3\u3002 * xyz\u9ed8\u8ba4\u4e3a\u96f6\u77e2\u91cf * rpy\u5f27\u5ea6\u8868\u793a\u7684\u7ffb\u6eda\u3001\u4fef\u4ef0\u3001\u504f\u822a material\u8868\u793a\u6750\u8d28\uff0c\u901a\u5e38\u7528\u5b83\u7684\u989c\u8272\u5c5e\u6027\u3002color\u4e2drgba\u5c5e\u6027\uff0crgb\u8868\u793a\u7ea2\u7eff\u84dd\uff0ca\u8868\u793a\u900f\u660e\u5ea6\uff0c\u519b\u4e8b0-1\u4e4b\u95f4\u7684\u6570\u5b57\u3002 \u5269\u4f59\u8fd8\u6709collision\u78b0\u649e\u5c5e\u6027\u53c2\u6570\uff0cinterial\u60ef\u6027\u53c2\u6570\u5728\u4eff\u771f\u4e2d\u4f1a\u7528\u5230\u3002","title":"link\u6807\u7b7e"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-URDF%E5%BB%BA%E6%A8%A1/#joint","text":"joint\u79f0\u4e3a\u673a\u5668\u4eba\u7684\u5173\u8282\uff0c\u7528\u4e8e\u8fde\u63a5\u4e24\u4e2a\u673a\u5668\u4eba\u90e8\u4ef6\uff0c\u8981\u5199\u660e\u7236\u5b50\u5173\u7cfb\uff0c\u901a\u5e38\u6709\u4e00\u4e0b\u51e0\u4e2a\u529f\u80fd\uff1a\u7236\u5b50\u4e4b\u95f4\u7684\u8fde\u63a5\u7c7b\u578b\uff0c\u5305\u62ec\u662f\u5426\u56fa\u5b9a\u7684\uff0c\u53ef\u4ee5\u65cb\u8f6c\u7684\u7b49\uff1b\u7236\u90e8\u4ef6\u540d\u5b57\uff1b\u5b50\u90e8\u4ef6\u540d\u5b57\uff1b\u7236\u5b50\u4e4b\u95f4\u76f8\u5bf9\u4f4d\u7f6e\uff1b\u7236\u5b50\u4e4b\u95f4\u7684\u65cb\u8f6c\u8f74\uff0c\u7ed5\u54ea\u4e2a\u8f74\u8f6c\u2026\u2026 <joint name= \"laser_joint\" type= \"fixed\" > <parent link= \"base_link\" /> <child link= \"laser_link\" /> <origin xyz= \"0 0 0.075\" /> <axis xyz= \"0 0 1\" /> </joint> \u4f8b\u5982\u4e0a\u9762\u7684\u8fd9\u4e2a\u5173\u8282\u6587\u4ef6\uff0c\u5173\u8282\u540d\u79f0\u662flaser_joint\uff0c\u96f7\u8fbe\u8fde\u63a5\u7684\u5173\u8282\uff0c\u7c7b\u578btype\u662ffixed\u56fa\u5b9a\u7684\uff0c\u7236\u7ec4\u4ef6\u662fbase_link\uff0c\u5b50\u7ec4\u4ef6\u662flaser_link\u96f7\u8fbe\u7ec4\u4ef6\uff0c\u4e24\u8005\u7684\u8fde\u63a5\u5728z\u8f74\u4e0a\u504f\u79fb0.075m\u3002\u53ef\u4ee5\u7ed5z\u8f74\u65cb\u8f6c\u3002joint\u7684type\u5c5e\u6027\u53ef\u4ee5\u6709\u591a\u79cd\u65b9\u5f0f\uff1a * revolute: \u65cb\u8f6c\u5173\u8282\uff0c\u7ed5\u5355\u8f74\u65cb\u8f6c,\u89d2\u5ea6\u6709\u4e0a\u4e0b\u9650,\u6bd4\u5982\u8235\u673a0-180 * continuous: \u65cb\u8f6c\u5173\u8282\uff0c\u53ef\u4ee5\u7ed5\u5355\u8f74\u65e0\u9650\u65cb\u8f6c,\u6bd4\u5982\u81ea\u884c\u8f66\u7684\u524d\u540e\u8f6e * fixed: \u56fa\u5b9a\u5173\u8282\uff0c\u4e0d\u5141\u8bb8\u8fd0\u52a8\u7684\u7279\u6b8a\u5173\u8282 * prismatic: \u6ed1\u52a8\u5173\u8282\uff0c\u6cbf\u67d0\u4e00\u8f74\u7ebf\u79fb\u52a8\u7684\u5173\u8282\uff0c\u6709\u4f4d\u7f6e\u6781\u9650 * planer: \u5e73\u9762\u5173\u8282\uff0c\u5141\u8bb8\u5728xyz\uff0crxryrz\u516d\u4e2a\u65b9\u5411\u8fd0\u52a8 * floating: \u6d6e\u52a8\u5173\u8282\uff0c\u5141\u8bb8\u8fdb\u884c\u5e73\u79fb\u3001\u65cb\u8f6c\u8fd0\u52a8","title":"joint\u6807\u7b7e"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-URDF%E5%BB%BA%E6%A8%A1/#xacrourdf","text":"\u5728\u4e0a\u9762\u7684urdf\u6587\u4ef6\u7684\u4ecb\u7ecd\u4e2d\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\uff0c\u6bd4\u5982\u5404\u7ec4\u4ef6\u7684\u6570\u636e\u90fd\u662f\u5199\u597d\u7684\uff08\u8f6e\u5b50\u534a\u5f84\u3001\u673a\u5668\u4eba\u9ad8\u5ea6\u7b49\uff09\uff0c\u5982\u679c\u8981\u4fee\u6539\u5176\u4e2d\u7684\u6570\u636e\u6bd4\u8f83\u9ebb\u70e6\uff0c\u800c\u4e14\u5982\u679c\u5176\u5b83\u6570\u636e\u7531\u8f6e\u5b50\u534a\u5f84\u8ba1\u7b97\u5f97\u51fa\uff0c\u4fee\u6539\u8f6e\u5b50\u534a\u5f84\u540e\uff0c\u8fd8\u9700\u8981\u8ba1\u7b97\u540e\u4fee\u6539\u5176\u5b83\u5173\u8054\u7684\u6570\u636e\u3002\u9488\u5bf9\u8fd9\u79cd\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528xacro\u6587\u4ef6\u3002","title":"xacro\u7b80\u5316URDF\u6587\u4ef6"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-URDF%E5%BB%BA%E6%A8%A1/#_2","text":"xacro \u63d0\u4f9b\u4e86\u53ef\u7f16\u7a0b\u63a5\u53e3\uff0c\u7c7b\u4f3c\u4e8e\u8ba1\u7b97\u673a\u8bed\u8a00\uff0c\u5305\u62ec\u53d8\u91cf\u58f0\u660e\u8c03\u7528\u3001\u51fd\u6570\u58f0\u660e\u4e0e\u8c03\u7528\u7b49\u8bed\u6cd5\u5b9e\u73b0\u3002\u5728\u4f7f\u7528 xacro \u751f\u6210 urdf \u65f6\uff0c\u6839\u6807\u7b7erobot\u4e2d\u5fc5\u987b\u5305\u542b\u547d\u540d\u7a7a\u95f4\u58f0\u660e:xmlns:xacro=\"http://wiki.ros.org/xacro\"\u3002 \u4e5f\u5c31\u662f\u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u8981\u5199\u4e0a\uff1a <robot name= \"myrobot\" xmlns:xacro= \"http://wiki.ros.org/xacro\" > \u8f83\u4e4b\u4e8e\u7eaf\u7cb9\u7684 URDF \u5b9e\u73b0\uff0c\u53ef\u4ee5\u7f16\u5199\u66f4\u5b89\u5168\u3001\u7cbe\u7b80\u3001\u6613\u8bfb\u6027\u66f4\u5f3a\u7684\u673a\u5668\u4eba\u6a21\u578b\u6587\u4ef6\uff0c\u4e14\u53ef\u4ee5\u63d0\u9ad8\u7f16\u5199\u6548\u7387\u3002\u8981\u60f3\u5c55\u793axacro\u6587\u4ef6\uff0c\u8fd8\u9700\u8981\u5c06xacro\u6587\u4ef6\u8f6c\u4e3aurdf\u6587\u4ef6\uff0c\u4f7f\u7528xacro xxx.xacro > xxx.urdf\uff0c\u8fd8\u9700\u8981\u63d0\u524d\u5b89\u88c5xacro\u901a\u8fc7sudo apt install ros-humble-xacro\uff0cros2\u7248\u672c\u662fhumble\u7684\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0a\u547d\u4ee4\u5b89\u88c5\u3002","title":"\u8bed\u6cd5\u4ecb\u7ecd"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-URDF%E5%BB%BA%E6%A8%A1/#_3","text":"\u7528\u4e8e\u5c01\u88c5 URDF \u4e2d\u7684\u4e00\u4e9b\u5b57\u6bb5\uff0c\u6bd4\u5982: PAI \u503c\uff0c\u5c0f\u8f66\u7684\u5c3a\u5bf8\uff0c\u8f6e\u5b50\u534a\u5f84 .... \u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u5c5e\u6027\uff1a <xacro:property name= \"wheel_radius\" value= \"3\" /> \u4e0a\u9762\u5c06\u5c0f\u8f66\u7684\u534a\u5f84\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u5c5e\u6027\uff0c\u9700\u8981\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u6bd4\u5982\u5728link\u4e2d\u4f7f\u7528\uff0c\u901a\u8fc7${wheel_radius}\u4f7f\u7528\u3002 <link name= \"wheel_link\" > <visual> <geometry> <cylinder radius= \"${wheel_radius}\" length= \"${wheel_radius*2}\" /> </geometry> </visual> </link> \u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u83b7\u53d6\u5230\u8f6e\u5b50\u7684\u534a\u5f84\uff0c\u7136\u540e\uff0c\u8fd8\u53ef\u4ee5\u8fdb\u884c\u7b97\u6570\u7684\u8fd0\u7b97\uff0c\u53ef\u4ee5\u8fdb\u884c\u52a0\u51cf\u4e58\u9664\u7684\u8fd0\u7b97\u3002","title":"\u5c5e\u6027\u4e0e\u7b97\u6570\u8fd0\u7b97"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-URDF%E5%BB%BA%E6%A8%A1/#_4","text":"<xacro:macro name= \"\u5b8f\u540d\u79f0\" params= \"\u53c2\u6570\u5217\u8868(\u591a\u53c2\u6570\u4e4b\u95f4\u4f7f\u7528\u7a7a\u683c\u5206\u9694)\" > ..... \u53c2\u6570\u8c03\u7528\u683c\u5f0f: ${\u53c2\u6570\u540d} </xacro:macro> <!-- \u8c03\u7528\u683c\u5f0f --> xacro:\u5b8f\u540d\u79f0 \u53c2\u65701=xxx \u53c2\u65702=xxx/> \u7c7b\u4f3c\u4e8e\u51fd\u6570\u5b9e\u73b0\uff0c\u63d0\u9ad8\u4ee3\u7801\u590d\u7528\u7387\uff0c\u4f18\u5316\u4ee3\u7801\u7ed3\u6784\uff0c\u63d0\u9ad8\u5b89\u5168\u6027\uff0c\u4f8b\u5982\u5c0f\u8f66\u7684\u5de6\u8f6e\u548c\u53f3\u8f6e\u5927\u90e8\u5206\u5c5e\u6027\u90fd\u662f\u76f8\u540c\u7684\uff0c\u53ea\u6709\u504f\u79fb\u4e0d\u540c\uff0c\u53ef\u4ee5\u628a\u504f\u79fb\u503c\u653e\u5728\u53c2\u6570\u4e2d\uff0c\u7136\u540e\u505a\u4e00\u4e2a\u8f6e\u5b50\u7684\u5b8f\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u4ee3\u7801\u590d\u7528\u3002 <xacro:macro name= \"wheel_func\" params= \"wheel_name flag\" > <link name= \"${wheel_name}_wheel\" > <visual> <geometry> <cylinder radius= \"0.0325\" length= \"0.015\" /> </geometry> <origin xyz= \"0.0 0.0 0.0\" rpy= \"${PI/2} 0.0 0.0\" /> <material name= \"wheel_color\" > <color rgba= \"0 0 0 0.5\" /> </material> </visual> </link> <joint name= \"${wheel_name}2link\" type= \"continuous\" > <parent link= \"base_link\" /> <child link= \"${wheel_name}_wheel\" /> <!-- \u504f\u79fb\u91cf x\u65b9\u5411\u65e0\u504f\u79fb y\u504f\u79fb\u8f66\u4f53\u534a\u5f84\u957f z\u8f74\uff1a\u8f66\u9ad8/2+\u79bb\u5730\u95f4\u8ddd-\u8f66\u8f6e\u534a\u5f84--> <origin xyz= \"0 ${0.1*flag} ${wheel_joint_z}\" rpy= \"0.0 0.0 0.0\" /> <axis xyz= \"0 1 0\" /> </joint> </xacro:macro> <!-- \u5de6\u53f3\u8f6e\u5b50\u7684\u5b9a\u4e49 --> <xacro:wheel_func wheel_name= \"left\" flag= \"1\" /> <xacro:wheel_func wheel_name= \"right\" flag= \"-1\" /> \u4ee5\u4e0a\u7684\u793a\u4f8b\u5c31\u662f\u4e24\u4e2a\u8f6e\u5b50\u7684\u4ee3\u7801\u793a\u4f8b\uff0c\u901a\u8fc7\u5b8f\u5b9a\u4e49\u5b9e\u73b0\u4e86\u4ee3\u7801\u7684\u590d\u7528\u3002","title":"\u5b8f\u5b9a\u4e49\u4e0e\u8c03\u7528"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-URDF%E5%BB%BA%E6%A8%A1/#_5","text":"\u5f53\u6240\u505a\u7684\u5de5\u7a0b\u9879\u76ee\u8f83\u5927\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5c06\u673a\u5668\u4eba\u4e0d\u540c\u90e8\u4ef6\u53ef\u80fd\u5c01\u88c5\u4e3a\u5355\u72ec\u7684 xacro \u6587\u4ef6\uff0c\u6700\u540e\u518d\u5c06\u4e0d\u540c\u7684\u6587\u4ef6\u96c6\u6210\uff0c\u7ec4\u5408\u4e3a\u5b8c\u6574\u673a\u5668\u4eba\uff0c\u53ef\u4ee5\u4f7f\u7528\u6587\u4ef6\u5305\u542b\u5b9e\u73b0\u3002 <robot name= \"xxx\" xmlns:xacro= \"http://wiki.ros.org/xacro\" > <xacro:include filename= \"my_base.xacro\" /> <xacro:include filename= \"my_camera.xacro\" /> <xacro:include filename= \"my_laser.xacro\" /> </robot>","title":"\u6587\u4ef6\u5305\u542b"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-rviz2%E6%98%BE%E7%A4%BA%E6%A8%A1%E5%9E%8B/","text":"rviz2\u663e\u793a\u673a\u5668\u4eba\u6a21\u578b \u00b6 URDF \u4e0d\u80fd\u5355\u72ec\u4f7f\u7528\uff0c\u9700\u8981\u7ed3\u5408 Rviz \u6216 Gazebo\uff0cURDF \u53ea\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u9700\u8981\u5728 Rviz \u6216 Gazebo \u4e2d\u6e32\u67d3\u6210\u56fe\u5f62\u5316\u7684\u673a\u5668\u4eba\u6a21\u578b\uff0c\u5f53\u524d\uff0c\u9996\u5148\u6f14\u793aURDF\u4e0eRviz\u7684\u96c6\u6210\u4f7f\u7528\uff0c\u56e0\u4e3aURDF\u4e0eRviz\u7684\u96c6\u6210\u8f83\u4e4b\u4e8eURDF\u4e0eGazebo\u7684\u96c6\u6210\u66f4\u4e3a\u7b80\u5355\u3002 \u521b\u5efa\u5de5\u4f5c\u7a7a\u95f4\u548c\u529f\u80fd\u5305 \u00b6 \u9996\u5148\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a rviz_demo \u5de5\u4f5c\u7a7a\u95f4\uff0c\u7136\u540e\u521b\u5efa\u4e00\u4e2asrc\u76ee\u5f55\u3002\u5728src\u4e2d\u5b58\u653e\u529f\u80fd\u5305\u3002 mkdir -p rviz_demo/src \u521b\u5efa\u529f\u80fd\u5305myrobot(\u4ee5c++\u4e3a\u4f8b) cd rviz_demo/src ros2 pkg create myrobot --build-type ament_camke \u8fdb\u5165myrobot\u76ee\u5f55\u4e2d\uff0c\u5728\u5176\u4e2d\u521b\u5efaurdf\u3001launch\u76ee\u5f55\uff0c\u5206\u522b\u5b58\u653eurdf\u6587\u4ef6\u548c\u542f\u52a8\u6587\u4ef6\uff0c\u5e76\u5728\u5176\u4e2d\u5206\u522b\u521b\u5efademo01_base.urdf\u548cdemo01_launch.py\u6587\u4ef6\uff0c\u5b8c\u6210\u4e4b\u540e\uff0c\u603b\u4f53\u7684\u6587\u4ef6\u76ee\u5f55\u5982\u4e0b \u251c\u2500\u2500 include \u251c\u2500\u2500 launch \u2502 \u251c\u2500\u2500 demo01_launch.py \u251c\u2500\u2500 src \u2514\u2500\u2500 urdf \u251c\u2500\u2500 demo01_base.urdf \u251c\u2500\u2500 CMakeLists.txt \u251c\u2500\u2500 package.xml \u8fd9\u6837\u4e4b\u540e\uff0c\u8fd4\u56de\u5de5\u4f5c\u7a7a\u95f4\u8fdb\u884c\u7f16\u8bd1\u4e00\u4e0b\uff0c\u67e5\u770b\u6709\u65e0\u9519\u8bef\u3002 URDF\u6587\u4ef6 \u00b6 \u8fd9\u91cc\u6211\u4eec\u5c31\u4f7f\u7528\u4e4b\u524d\u4e00\u4e2a\u7b80\u5355\u7684URDF\u6587\u4ef6\u4f5c\u4e3a\u6f14\u793a <?xml version=\"1.0\"?> <robot name= \"myrobot\" > <!-- base link --> <link name= \"base_link\" > <visual> <origin xyz= \"0 0 0.0\" rpy= \"0 0 0\" /> <geometry> <cylinder length= \"0.12\" radius= \"0.10\" /> </geometry> </visual> </link> <!-- laser link --> <link name= \"laser_link\" > <visual> <origin xyz= \"0 0 0\" rpy= \"0 0 0\" /> <geometry> <cylinder length= \"0.02\" radius= \"0.02\" /> </geometry> <material name= \"black\" > <color rgba= \"0.0 0.0 0.0 0.8\" /> </material> </visual> </link> <!-- laser joint --> <joint name= \"laser_joint\" type= \"fixed\" > <parent link= \"base_link\" /> <child link= \"laser_link\" /> <origin xyz= \"0 0 0.075\" /> </joint> </robot> \u5c31\u7b80\u5355\u7684\u4e24\u4e2a\u7ec4\u4ef6\u548c\u4e00\u4e2a\u5173\u8282\uff0c\u7136\u540e\u4fee\u6539\u4e00\u4e0bCMakeListx.txt\u6587\u4ef6\uff0c\u4e3b\u8981\u662f\u5c06Launch\u6587\u4ef6\u548cURDF\u6587\u4ef6\u5305\u542b\u5728\u8fdb\u53bb\u3002 install( DIRECTORY launch urdf DESTINATION share/${PROJECT_NAME} ) Launch\u6587\u4ef6 \u00b6 \u60f3\u8981\u53ef\u89c6\u5316\u6a21\u578b\u9700\u8981\u4e09\u4e2a\u8282\u70b9\u53c2\u4e0e\uff1a * joint_state_publisher_gui \u8d1f\u8d23\u53d1\u5e03\u673a\u5668\u4eba\u5173\u8282\u6570\u636e\u4fe1\u606f\uff0c\u901a\u8fc7joint_states\u8bdd\u9898\u53d1\u5e03 * robot_state_publisher_node\u8d1f\u8d23\u53d1\u5e03\u673a\u5668\u4eba\u6a21\u578b\u4fe1\u606frobot_description\uff0c\u5e76\u5c06joint_states\u6570\u636e\u8f6c\u6362tf\u4fe1\u606f\u53d1\u5e03 * rviz2_node\u8d1f\u8d23\u663e\u793a\u673a\u5668\u4eba\u7684\u4fe1\u606f \u8fd9\u4e09\u4e2a\u8282\u70b9\u7684\u5173\u7cfb\u53ef\u4ee5\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u8fd9\u91cc\u6211\u4eec\u7528\u5230\u4e86joint_state_publisher_gui\u548crobot_state_publisher\u4e24\u4e2a\u5305\uff0c\u5982\u679c\u4f60\u7684\u7cfb\u7edf\u6ca1\u6709\u5b89\u88c5\u8fd9\u4e24\u4e2a\u5305\uff0c\u53ef\u4ee5\u624b\u52a8\u5b89\u88c5: sudo apt install ros-humble-joint-state-publisher-gui ros-humble-robot-state-publisher joint_state_publisher_gui\uff0c\u8fd8\u6709\u4e00\u4e2a\u5144\u5f1f\u53eb\u505ajoint_state_publisher\u4e24\u8005\u533a\u522b\u5728\u4e8ejoint_state_publisher_gui\u8fd0\u884c\u8d77\u6765\u4f1a\u8df3\u51fa\u4e00\u4e2a\u754c\u9762\uff0c\u901a\u8fc7\u754c\u9762\u53ef\u4ee5\u64cd\u4f5cURDF\u4e2d\u80fd\u52a8\u7684\u5173\u8282\u3002 \u5982\u4e0b\u56fe\u6240\u793a\u7684\u4e00\u4e2a\u754c\u9762 \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6211\u4eec\u6ca1\u6709\u7ed9\u5173\u8282\u8bbe\u7f6e\u80fd\u52a8\uff0c\u6240\u4ee5\u5e76\u6ca1\u6709\u6570\u636e\u3002\u9996\u5148\u5206\u522b\u770b\u4e09\u4e2a\u8282\u70b9\u5982\u4f55\u542f\u52a8\u914d\u7f6e\u7684\u3002 \u7b2c\u4e00\u4e2arobot_state_publisher robot_description = ParameterValue ( Command ([ 'xacro ' , urdf_model_path ]), value_type = str ) robot_state_publisher_node = Node ( package = 'robot_state_publisher' , executable = 'robot_state_publisher' , parameters = [{ 'robot_description' : robot_description }] ) \u5728\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u4e3b\u8981\u6ce8\u610frobot_description\u8fd9\u4e2a\u53c2\u6570\u7684\u8bbe\u7f6e\uff0c\u5176\u5b9e\u53ef\u4ee5\u4e0d\u5199parameters\u8fd9\u4e00\u9879\uff0c\u76f4\u63a5\u5199 arguments=[urdf_model_path], \u8fd9\u6837\u5199\u4f1a\u62a5\u4e00\u4e2a\u8b66\u544a\uff1a No robot_description parameter, but command-line argument available. Assuming argument is name of URDF file.This backwards compatibility fallback will be removed in the future. \u5927\u81f4\u610f\u601d\u5c31\u662f\u8bf4\u901a\u8fc7arguents\u4f20\u5165urdf\u6587\u4ef6\u5c06\u4f1a\u5728\u672a\u6765\u7248\u672c\u4e2d\u88ab\u79fb\u9664\uff0c\u5efa\u8bae\u52a0\u4e0arobot_description\u53c2\u6570\u3002 \u4e0b\u9762\u770b\u7b2c\u4e8c\u4e2a\u8282\u70b9\uff1ajoint_state_publisher_gui joint_state_publisher_node = Node ( package = 'joint_state_publisher_gui' , executable = 'joint_state_publisher_gui' , name = 'joint_state_publisher_gui' , arguments = [ urdf_model_path ] ) \u8fd9\u91cc\u5c31\u9700\u8981\u8ddf\u4e0a\u6211\u4eecurdf\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u5f53\u7136\u5982\u679c\u4e0d\u60f3\u8981\u663e\u793a\u754c\u9762\u8fd8\u53ef\u4ee5\u542f\u52a8joint_state_publisher\u8282\u70b9\uff0c\u628a\u6700\u540e\u7684_gui\u53bb\u6389\u5c31\u884c\u4e86\u3002 \u6700\u540e\u6211\u4eec\u9700\u8981\u542f\u52a8\u6700\u540e\u7684\u4e00\u4e2a\u8282\u70b9rviz\u8282\u70b9 rviz2_node = Node ( package = 'rviz2' , executable = 'rviz2' , name = 'rviz2' , output = 'screen' , arguments = [ '-d' , LaunchConfiguration ( 'rvizconfig' )], ) \u8fd9\u91cc\u6211\u4eec\u5c31\u53ea\u9700\u8981\u6ce8\u610f\u6700\u540e\u52a0\u4e0a\u4e86\u4e00\u4e2a\u53c2\u6570\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5728\u76ee\u5f55\u4e0b\u52a0\u4e0a\u4e00\u4e2arviz\u76ee\u5f55\uff0c\u91cc\u9762\u5b58\u653e\u4e00\u4e2aurdf.rviz\u7684\u6587\u4ef6\uff0c\u7528\u4e8e\u4fdd\u5b58rviz\u7684\u521d\u59cb\u914d\u7f6e\u3002\u56e0\u4e3a\u6700\u5f00\u59cb\u6253\u5f00rviz\u754c\u9762\u7684\u8bdd\uff0c\u662f\u770b\u4e0d\u5230\u673a\u5668\u4eba\u7684\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u7136\u540e\u6211\u4eec\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u4e00\u4e9b\u7ec4\u4ef6\u624d\u80fd\u5c06\u6211\u4eec\u7684\u673a\u5668\u4eba\u663e\u793a\u51fa\u6765\uff1a \u4f8b\u5982\u4e0a\u56fe\u4e2d\uff0c\u6211\u4eec\u6dfb\u52a0TF\u548cRobotModel\u7ec4\u4ef6\uff0c\u7136\u540e\u9009\u7ec4\u5750\u6807\u7cfb\uff0c\u624d\u80fd\u5c06\u6700\u7ec8\u7684\u673a\u5668\u4eba\u8fdb\u884c\u663e\u793a\u3002\u663e\u793a\u540e\u6211\u4eec\u53ef\u4ee5\u5c06\u914d\u7f6e\u8fdb\u884c\u4fdd\u5b58\uff0c\u4fdd\u5b58\u540e\u7684\u6587\u4ef6\u653e\u5728\u5f53\u524d\u76ee\u5f55\u7684rviz\u6587\u4ef6\u5939\u4e0b\uff0c\u901a\u8fc7launch\u6587\u4ef6\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u521d\u59cb\u5316\u6211\u4eec\u7684rviz\u56fe\u5f62\u754c\u9762\u7684\u914d\u7f6e\u3002 \u5b8c\u6574\u7684launch\u4ee3\u7801\u5982\u4e0b\u3002 import os from launch import LaunchDescription from launch.substitutions import LaunchConfiguration from launch_ros.actions import Node from launch_ros.substitutions import FindPackageShare from launch.actions import DeclareLaunchArgument from launch.substitutions import Command from launch_ros.parameter_descriptions import ParameterValue def generate_launch_description (): package_name = 'myrobot' urdf_name = \"demo01_base.urdf\" ld = LaunchDescription () pkg_share = FindPackageShare ( package = package_name ) . find ( package_name ) urdf_model_path = os . path . join ( pkg_share , f 'urdf/ { urdf_name } ' ) default_rviz_config_path = os . path . join ( pkg_share , 'rviz/urdf.rviz' ) robot_description = ParameterValue ( Command ([ 'xacro ' , urdf_model_path ]), value_type = str ) rviz_arg = DeclareLaunchArgument ( name = 'rvizconfig' , default_value = str ( default_rviz_config_path ), description = 'Absolute path to rviz config file' ) robot_state_publisher_node = Node ( package = 'robot_state_publisher' , executable = 'robot_state_publisher' , parameters = [{ 'robot_description' : robot_description }] ) joint_state_publisher_node = Node ( package = 'joint_state_publisher_gui' , executable = 'joint_state_publisher_gui' , name = 'joint_state_publisher_gui' , arguments = [ urdf_model_path ] ) rviz2_node = Node ( package = 'rviz2' , executable = 'rviz2' , name = 'rviz2' , output = 'screen' , arguments = [ '-d' , LaunchConfiguration ( 'rvizconfig' )], ) ld . add_action ( rviz_arg ) ld . add_action ( joint_state_publisher_node ) ld . add_action ( robot_state_publisher_node ) ld . add_action ( rviz2_node ) return ld \u6d4b\u8bd5\u8fd0\u884c \u00b6 \u4f7f\u7528\u547d\u4ee4\u7f16\u8bd1\u8fd0\u884c\u6587\u4ef6 colcon build . install/setup.bash ros2 launch myrobot demo01_launch.py \u6700\u540e\u7684\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a","title":"rviz2\u663e\u793a\u673a\u5668\u4eba\u6a21\u578b"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-rviz2%E6%98%BE%E7%A4%BA%E6%A8%A1%E5%9E%8B/#rviz2","text":"URDF \u4e0d\u80fd\u5355\u72ec\u4f7f\u7528\uff0c\u9700\u8981\u7ed3\u5408 Rviz \u6216 Gazebo\uff0cURDF \u53ea\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u9700\u8981\u5728 Rviz \u6216 Gazebo \u4e2d\u6e32\u67d3\u6210\u56fe\u5f62\u5316\u7684\u673a\u5668\u4eba\u6a21\u578b\uff0c\u5f53\u524d\uff0c\u9996\u5148\u6f14\u793aURDF\u4e0eRviz\u7684\u96c6\u6210\u4f7f\u7528\uff0c\u56e0\u4e3aURDF\u4e0eRviz\u7684\u96c6\u6210\u8f83\u4e4b\u4e8eURDF\u4e0eGazebo\u7684\u96c6\u6210\u66f4\u4e3a\u7b80\u5355\u3002","title":"rviz2\u663e\u793a\u673a\u5668\u4eba\u6a21\u578b"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-rviz2%E6%98%BE%E7%A4%BA%E6%A8%A1%E5%9E%8B/#_1","text":"\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a rviz_demo \u5de5\u4f5c\u7a7a\u95f4\uff0c\u7136\u540e\u521b\u5efa\u4e00\u4e2asrc\u76ee\u5f55\u3002\u5728src\u4e2d\u5b58\u653e\u529f\u80fd\u5305\u3002 mkdir -p rviz_demo/src \u521b\u5efa\u529f\u80fd\u5305myrobot(\u4ee5c++\u4e3a\u4f8b) cd rviz_demo/src ros2 pkg create myrobot --build-type ament_camke \u8fdb\u5165myrobot\u76ee\u5f55\u4e2d\uff0c\u5728\u5176\u4e2d\u521b\u5efaurdf\u3001launch\u76ee\u5f55\uff0c\u5206\u522b\u5b58\u653eurdf\u6587\u4ef6\u548c\u542f\u52a8\u6587\u4ef6\uff0c\u5e76\u5728\u5176\u4e2d\u5206\u522b\u521b\u5efademo01_base.urdf\u548cdemo01_launch.py\u6587\u4ef6\uff0c\u5b8c\u6210\u4e4b\u540e\uff0c\u603b\u4f53\u7684\u6587\u4ef6\u76ee\u5f55\u5982\u4e0b \u251c\u2500\u2500 include \u251c\u2500\u2500 launch \u2502 \u251c\u2500\u2500 demo01_launch.py \u251c\u2500\u2500 src \u2514\u2500\u2500 urdf \u251c\u2500\u2500 demo01_base.urdf \u251c\u2500\u2500 CMakeLists.txt \u251c\u2500\u2500 package.xml \u8fd9\u6837\u4e4b\u540e\uff0c\u8fd4\u56de\u5de5\u4f5c\u7a7a\u95f4\u8fdb\u884c\u7f16\u8bd1\u4e00\u4e0b\uff0c\u67e5\u770b\u6709\u65e0\u9519\u8bef\u3002","title":"\u521b\u5efa\u5de5\u4f5c\u7a7a\u95f4\u548c\u529f\u80fd\u5305"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-rviz2%E6%98%BE%E7%A4%BA%E6%A8%A1%E5%9E%8B/#urdf","text":"\u8fd9\u91cc\u6211\u4eec\u5c31\u4f7f\u7528\u4e4b\u524d\u4e00\u4e2a\u7b80\u5355\u7684URDF\u6587\u4ef6\u4f5c\u4e3a\u6f14\u793a <?xml version=\"1.0\"?> <robot name= \"myrobot\" > <!-- base link --> <link name= \"base_link\" > <visual> <origin xyz= \"0 0 0.0\" rpy= \"0 0 0\" /> <geometry> <cylinder length= \"0.12\" radius= \"0.10\" /> </geometry> </visual> </link> <!-- laser link --> <link name= \"laser_link\" > <visual> <origin xyz= \"0 0 0\" rpy= \"0 0 0\" /> <geometry> <cylinder length= \"0.02\" radius= \"0.02\" /> </geometry> <material name= \"black\" > <color rgba= \"0.0 0.0 0.0 0.8\" /> </material> </visual> </link> <!-- laser joint --> <joint name= \"laser_joint\" type= \"fixed\" > <parent link= \"base_link\" /> <child link= \"laser_link\" /> <origin xyz= \"0 0 0.075\" /> </joint> </robot> \u5c31\u7b80\u5355\u7684\u4e24\u4e2a\u7ec4\u4ef6\u548c\u4e00\u4e2a\u5173\u8282\uff0c\u7136\u540e\u4fee\u6539\u4e00\u4e0bCMakeListx.txt\u6587\u4ef6\uff0c\u4e3b\u8981\u662f\u5c06Launch\u6587\u4ef6\u548cURDF\u6587\u4ef6\u5305\u542b\u5728\u8fdb\u53bb\u3002 install( DIRECTORY launch urdf DESTINATION share/${PROJECT_NAME} )","title":"URDF\u6587\u4ef6"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-rviz2%E6%98%BE%E7%A4%BA%E6%A8%A1%E5%9E%8B/#launch","text":"\u60f3\u8981\u53ef\u89c6\u5316\u6a21\u578b\u9700\u8981\u4e09\u4e2a\u8282\u70b9\u53c2\u4e0e\uff1a * joint_state_publisher_gui \u8d1f\u8d23\u53d1\u5e03\u673a\u5668\u4eba\u5173\u8282\u6570\u636e\u4fe1\u606f\uff0c\u901a\u8fc7joint_states\u8bdd\u9898\u53d1\u5e03 * robot_state_publisher_node\u8d1f\u8d23\u53d1\u5e03\u673a\u5668\u4eba\u6a21\u578b\u4fe1\u606frobot_description\uff0c\u5e76\u5c06joint_states\u6570\u636e\u8f6c\u6362tf\u4fe1\u606f\u53d1\u5e03 * rviz2_node\u8d1f\u8d23\u663e\u793a\u673a\u5668\u4eba\u7684\u4fe1\u606f \u8fd9\u4e09\u4e2a\u8282\u70b9\u7684\u5173\u7cfb\u53ef\u4ee5\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u8fd9\u91cc\u6211\u4eec\u7528\u5230\u4e86joint_state_publisher_gui\u548crobot_state_publisher\u4e24\u4e2a\u5305\uff0c\u5982\u679c\u4f60\u7684\u7cfb\u7edf\u6ca1\u6709\u5b89\u88c5\u8fd9\u4e24\u4e2a\u5305\uff0c\u53ef\u4ee5\u624b\u52a8\u5b89\u88c5: sudo apt install ros-humble-joint-state-publisher-gui ros-humble-robot-state-publisher joint_state_publisher_gui\uff0c\u8fd8\u6709\u4e00\u4e2a\u5144\u5f1f\u53eb\u505ajoint_state_publisher\u4e24\u8005\u533a\u522b\u5728\u4e8ejoint_state_publisher_gui\u8fd0\u884c\u8d77\u6765\u4f1a\u8df3\u51fa\u4e00\u4e2a\u754c\u9762\uff0c\u901a\u8fc7\u754c\u9762\u53ef\u4ee5\u64cd\u4f5cURDF\u4e2d\u80fd\u52a8\u7684\u5173\u8282\u3002 \u5982\u4e0b\u56fe\u6240\u793a\u7684\u4e00\u4e2a\u754c\u9762 \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6211\u4eec\u6ca1\u6709\u7ed9\u5173\u8282\u8bbe\u7f6e\u80fd\u52a8\uff0c\u6240\u4ee5\u5e76\u6ca1\u6709\u6570\u636e\u3002\u9996\u5148\u5206\u522b\u770b\u4e09\u4e2a\u8282\u70b9\u5982\u4f55\u542f\u52a8\u914d\u7f6e\u7684\u3002 \u7b2c\u4e00\u4e2arobot_state_publisher robot_description = ParameterValue ( Command ([ 'xacro ' , urdf_model_path ]), value_type = str ) robot_state_publisher_node = Node ( package = 'robot_state_publisher' , executable = 'robot_state_publisher' , parameters = [{ 'robot_description' : robot_description }] ) \u5728\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u4e3b\u8981\u6ce8\u610frobot_description\u8fd9\u4e2a\u53c2\u6570\u7684\u8bbe\u7f6e\uff0c\u5176\u5b9e\u53ef\u4ee5\u4e0d\u5199parameters\u8fd9\u4e00\u9879\uff0c\u76f4\u63a5\u5199 arguments=[urdf_model_path], \u8fd9\u6837\u5199\u4f1a\u62a5\u4e00\u4e2a\u8b66\u544a\uff1a No robot_description parameter, but command-line argument available. Assuming argument is name of URDF file.This backwards compatibility fallback will be removed in the future. \u5927\u81f4\u610f\u601d\u5c31\u662f\u8bf4\u901a\u8fc7arguents\u4f20\u5165urdf\u6587\u4ef6\u5c06\u4f1a\u5728\u672a\u6765\u7248\u672c\u4e2d\u88ab\u79fb\u9664\uff0c\u5efa\u8bae\u52a0\u4e0arobot_description\u53c2\u6570\u3002 \u4e0b\u9762\u770b\u7b2c\u4e8c\u4e2a\u8282\u70b9\uff1ajoint_state_publisher_gui joint_state_publisher_node = Node ( package = 'joint_state_publisher_gui' , executable = 'joint_state_publisher_gui' , name = 'joint_state_publisher_gui' , arguments = [ urdf_model_path ] ) \u8fd9\u91cc\u5c31\u9700\u8981\u8ddf\u4e0a\u6211\u4eecurdf\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u5f53\u7136\u5982\u679c\u4e0d\u60f3\u8981\u663e\u793a\u754c\u9762\u8fd8\u53ef\u4ee5\u542f\u52a8joint_state_publisher\u8282\u70b9\uff0c\u628a\u6700\u540e\u7684_gui\u53bb\u6389\u5c31\u884c\u4e86\u3002 \u6700\u540e\u6211\u4eec\u9700\u8981\u542f\u52a8\u6700\u540e\u7684\u4e00\u4e2a\u8282\u70b9rviz\u8282\u70b9 rviz2_node = Node ( package = 'rviz2' , executable = 'rviz2' , name = 'rviz2' , output = 'screen' , arguments = [ '-d' , LaunchConfiguration ( 'rvizconfig' )], ) \u8fd9\u91cc\u6211\u4eec\u5c31\u53ea\u9700\u8981\u6ce8\u610f\u6700\u540e\u52a0\u4e0a\u4e86\u4e00\u4e2a\u53c2\u6570\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5728\u76ee\u5f55\u4e0b\u52a0\u4e0a\u4e00\u4e2arviz\u76ee\u5f55\uff0c\u91cc\u9762\u5b58\u653e\u4e00\u4e2aurdf.rviz\u7684\u6587\u4ef6\uff0c\u7528\u4e8e\u4fdd\u5b58rviz\u7684\u521d\u59cb\u914d\u7f6e\u3002\u56e0\u4e3a\u6700\u5f00\u59cb\u6253\u5f00rviz\u754c\u9762\u7684\u8bdd\uff0c\u662f\u770b\u4e0d\u5230\u673a\u5668\u4eba\u7684\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u7136\u540e\u6211\u4eec\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u4e00\u4e9b\u7ec4\u4ef6\u624d\u80fd\u5c06\u6211\u4eec\u7684\u673a\u5668\u4eba\u663e\u793a\u51fa\u6765\uff1a \u4f8b\u5982\u4e0a\u56fe\u4e2d\uff0c\u6211\u4eec\u6dfb\u52a0TF\u548cRobotModel\u7ec4\u4ef6\uff0c\u7136\u540e\u9009\u7ec4\u5750\u6807\u7cfb\uff0c\u624d\u80fd\u5c06\u6700\u7ec8\u7684\u673a\u5668\u4eba\u8fdb\u884c\u663e\u793a\u3002\u663e\u793a\u540e\u6211\u4eec\u53ef\u4ee5\u5c06\u914d\u7f6e\u8fdb\u884c\u4fdd\u5b58\uff0c\u4fdd\u5b58\u540e\u7684\u6587\u4ef6\u653e\u5728\u5f53\u524d\u76ee\u5f55\u7684rviz\u6587\u4ef6\u5939\u4e0b\uff0c\u901a\u8fc7launch\u6587\u4ef6\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u521d\u59cb\u5316\u6211\u4eec\u7684rviz\u56fe\u5f62\u754c\u9762\u7684\u914d\u7f6e\u3002 \u5b8c\u6574\u7684launch\u4ee3\u7801\u5982\u4e0b\u3002 import os from launch import LaunchDescription from launch.substitutions import LaunchConfiguration from launch_ros.actions import Node from launch_ros.substitutions import FindPackageShare from launch.actions import DeclareLaunchArgument from launch.substitutions import Command from launch_ros.parameter_descriptions import ParameterValue def generate_launch_description (): package_name = 'myrobot' urdf_name = \"demo01_base.urdf\" ld = LaunchDescription () pkg_share = FindPackageShare ( package = package_name ) . find ( package_name ) urdf_model_path = os . path . join ( pkg_share , f 'urdf/ { urdf_name } ' ) default_rviz_config_path = os . path . join ( pkg_share , 'rviz/urdf.rviz' ) robot_description = ParameterValue ( Command ([ 'xacro ' , urdf_model_path ]), value_type = str ) rviz_arg = DeclareLaunchArgument ( name = 'rvizconfig' , default_value = str ( default_rviz_config_path ), description = 'Absolute path to rviz config file' ) robot_state_publisher_node = Node ( package = 'robot_state_publisher' , executable = 'robot_state_publisher' , parameters = [{ 'robot_description' : robot_description }] ) joint_state_publisher_node = Node ( package = 'joint_state_publisher_gui' , executable = 'joint_state_publisher_gui' , name = 'joint_state_publisher_gui' , arguments = [ urdf_model_path ] ) rviz2_node = Node ( package = 'rviz2' , executable = 'rviz2' , name = 'rviz2' , output = 'screen' , arguments = [ '-d' , LaunchConfiguration ( 'rvizconfig' )], ) ld . add_action ( rviz_arg ) ld . add_action ( joint_state_publisher_node ) ld . add_action ( robot_state_publisher_node ) ld . add_action ( rviz2_node ) return ld","title":"Launch\u6587\u4ef6"},{"location":"ROS2%E5%AD%A6%E4%B9%A0/ROS2-rviz2%E6%98%BE%E7%A4%BA%E6%A8%A1%E5%9E%8B/#_2","text":"\u4f7f\u7528\u547d\u4ee4\u7f16\u8bd1\u8fd0\u884c\u6587\u4ef6 colcon build . install/setup.bash ros2 launch myrobot demo01_launch.py \u6700\u540e\u7684\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a","title":"\u6d4b\u8bd5\u8fd0\u884c"},{"location":"blogs/","text":"\u535a\u5ba2 \u00b6 \u5e73\u65f6\u7f16\u7a0b\u9047\u5230\u7684\u95ee\u9898\uff08\u90e8\u5206\u4eceCSDN\u4e0acopy\uff09","title":"\u535a\u5ba2"},{"location":"blogs/#_1","text":"\u5e73\u65f6\u7f16\u7a0b\u9047\u5230\u7684\u95ee\u9898\uff08\u90e8\u5206\u4eceCSDN\u4e0acopy\uff09","title":"\u535a\u5ba2"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/","text":"solidity\u57fa\u7840\u7b14\u8bb0 \u00b6 \u7b80\u5355\u4ecb\u7ecd \u00b6 solidity \u662f\u4e00\u95e8\u9762\u5411\u5408\u7ea6\u7684\u3001\u4e3a\u5b9e\u73b0\u667a\u80fd\u5408\u7ea6\u800c\u521b\u5efa\u7684\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\uff0c\u80fd\u5728\u4ee5\u592a\u574a\u865a\u62df\u673a\uff08EVM\uff09\u4e0a\u8fd0\u884c\u3002\u5b83\u662f\u4e00\u95e8\u9759\u6001\u8bed\u8a00\u3002\u5185\u542b\u7684\u7c7b\u578b\u9664\u4e86\u5e38\u89c1\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u6807\u51c6\u7c7b\u578b\uff0c\u8fd8\u5305\u62ecaddress\u7b49\u4ee5\u592a\u574a\u72ec\u6709\u7684\u7c7b\u578b\u3002\u4ee5\u592a\u574a\u4e0d\u4ec5\u662f\u4e00\u79cd\u52a0\u5bc6\u6570\u5b57\u8d27\u5e01\uff0c\u5b83\u66f4\u662f\u529f\u80fd\u5b8c\u5907\u7684\u667a\u80fd\u5408\u7ea6\u5e73\u53f0\uff0csolidity\u5c31\u662f\u7528\u6765\u5f00\u53d1\u4ee5\u592a\u574a\u4e0a\u7684\u667a\u80fd\u5408\u7ea6\u7684\u539f\u751f\u5f00\u53d1\u8bed\u8a00\u3002solidity\u6700\u65e9\u53d1\u5e03\u4e8e2015\u5e74\uff0c\u5b83\u662f\u7b2c\u4e00\u79cd\u56fe\u7075\u5b8c\u5907\u7684\u667a\u80fd\u5408\u7ea6\u4e13\u7528\u5f00\u53d1\u8bed\u8a00\u3002\u76ee\u524d\u9664\u4e86\u4ee5\u592a\u574a\u4e4b\u5916\uff0c\u5728\u5176\u4ed6\u533a\u5757\u94fe\u4e2d\u4e5f\u9010\u6e10\u5f00\u59cb\u652f\u6301solidity\uff0c\u4f8b\u5982hyperledger fabric\u3001tendermint\u7b49\u3002solidity\u6e90\u7801\u6587\u4ef6\u901a\u5e38\u4ee5 .sol \u4f5c\u4e3a\u6269\u5c55\u540d\u3002\u8be6\u7ec6\u6559\u7a0b\u53ef\u4ee5\u53c2\u8003 \u5b98\u7f51 \u8bed\u8a00\u7279\u6027 \u00b6 \u5b83\u7684\u8bed\u6cd5\u63a5\u8fd1\u4e8eJavascript\uff0c\u662f\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u3002\u4f46\u4f5c\u4e3a\u4e00\u79cd\u771f\u6b63\u610f\u4e49\u4e0a\u8fd0\u884c\u5728\u7f51\u7edc\u4e0a\u7684\u53bb\u4e2d\u5fc3\u5408\u7ea6\uff0c\u5b83\u53c8\u6709\u5f88\u591a\u7684\u4e0d\u540c\uff0c\u4e0b\u9762\u5217\u4e3e\u4e00\u4e9b\uff1a \u4ee5\u592a\u574a\u5e95\u5c42\u662f\u57fa\u4e8e\u5e10\u6237\uff0c\u800c\u975eUTXO\u7684\uff0c\u6240\u4ee5\u6709\u4e00\u4e2a\u7279\u6b8a\u7684Address\u7684\u7c7b\u578b\u3002\u7528\u4e8e\u5b9a\u4f4d\u7528\u6237\uff0c\u5b9a\u4f4d\u5408\u7ea6\uff0c\u5b9a\u4f4d\u5408\u7ea6\u7684\u4ee3\u7801\uff08\u5408\u7ea6\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u5e10\u6237\uff09\u3002 \u7531\u4e8e\u8bed\u8a00\u5185\u5d4c\u6846\u67b6\u662f\u652f\u6301\u652f\u4ed8\u7684\uff0c\u6240\u4ee5\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5173\u952e\u5b57\uff0c\u5982payable\uff0c\u53ef\u4ee5\u5728\u8bed\u8a00\u5c42\u9762\u76f4\u63a5\u652f\u6301\u652f\u4ed8\uff0c\u800c\u4e14\u8d85\u7ea7\u7b80\u5355\u3002 \u5b58\u50a8\u662f\u4f7f\u7528\u7f51\u7edc\u4e0a\u7684\u533a\u5757\u94fe\uff0c\u6570\u636e\u7684\u6bcf\u4e00\u4e2a\u72b6\u6001\u90fd\u53ef\u4ee5\u6c38\u4e45\u5b58\u50a8\uff0c\u6240\u4ee5\u9700\u8981\u786e\u5b9a\u53d8\u91cf\u4f7f\u7528\u5185\u5b58\uff0c\u8fd8\u662f\u533a\u5757\u94fe\u3002 \u8fd0\u884c\u73af\u5883\u662f\u5728\u53bb\u4e2d\u5fc3\u5316\u7684\u7f51\u7edc\u4e0a\uff0c\u4f1a\u6bd4\u8f83\u5f3a\u8c03\u5408\u7ea6\u6216\u51fd\u6570\u6267\u884c\u7684\u8c03\u7528\u7684\u65b9\u5f0f\u3002\u56e0\u4e3a\u539f\u6765\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\u8c03\u7528\u53d8\u4e3a\u4e86\u4e00\u4e2a\u7f51\u7edc\u4e0a\u7684\u8282\u70b9\u4e2d\u7684\u4ee3\u7801\u6267\u884c\uff0c\u5206\u5e03\u5f0f\u7684\u611f\u89c9\u3002 \u6700\u540e\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u4e0d\u540c\u5219\u662f\u5b83\u7684\u5f02\u5e38\u673a\u5236\uff0c\u4e00\u65e6\u51fa\u73b0\u5f02\u5e38\uff0c\u6240\u6709\u7684\u6267\u884c\u90fd\u5c06\u4f1a\u88ab\u56de\u64a4\uff0c\u8fd9\u4e3b\u8981\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5408\u7ea6\u6267\u884c\u7684\u539f\u5b50\u6027\uff0c\u4ee5\u907f\u514d\u4e2d\u95f4\u72b6\u6001\u51fa\u73b0\u7684\u6570\u636e\u4e0d\u4e00\u81f4\u3002 \u5f00\u53d1\u73af\u5883 \u00b6 \u76ee\u524dsolidity\u7f16\u7a0b\u6700\u597d\u7684\u65b9\u5f0f\u662f\u4f7f\u7528Remix\uff08\u5730\u5740\uff1ahttps://remix.ethereum.org/ \uff09\uff0c\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8eweb\u6d4f\u89c8\u5668\u7684IDE\uff0c\u53ef\u5728\u7ebf\u4f7f\u7528\u800c\u65e0\u9700\u5b89\u88c5\u4efb\u4f55\u4e1c\u897f\uff0c\u53ef\u4ee5\u7f16\u5199solidity\u667a\u80fd\u5408\u7ea6\uff0c\u7136\u540e\u7f16\u8bd1\u3001\u90e8\u7f72\u5e76\u8fd0\u884c\u8be5\u667a\u80fd\u5408\u7ea6\u3002 \u5982\u56fe\u6240\u793a\uff0c\u5c31\u662f\u5b98\u7f51\u9875\u9762\uff0c\u53ef\u4ee5\u70b9\u51fb Start coding online \u5c31\u53ef\u4ee5\u5728\u7ebf\u7f16\u5199solidity\u4ee3\u7801\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u7ebf\u8fd0\u884c\uff0c\u65e0\u9700\u5b89\u88c5\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u70b9\u51fb\u4e0b\u8f7d\u5b89\u88c5\u5305\uff0c\u5b89\u88c5\u5230\u672c\u5730\u3002 \u57fa\u7840\u6570\u636e\u7c7b\u578b \u00b6 1\u3001\u5e03\u5c14\u7c7b\u578b\uff08bool\uff09 \u00b6 \u53d6\u503c\u4e3a\u5e38\u91cf\u503ctrue\u548cfalse\u3002 2\u3001\u6574\u578b\uff08int/uint\uff09 \u00b6 \u5206\u522b\u8868\u793a\u7684\u662f\u6709\u7b26\u53f7\u6216\u65e0\u7b26\u53f7\u6574\u578b\u3002\u652f\u6301\u4ece uint8 \u5230 uint256 \uff0c\u4ee5\u53ca int8 \u5230 int256 \uff0c uint \u548c int \u9ed8\u8ba4\u4ee3\u8868\u7684\u662f uint256 \u548c int256 \uff0c\u53d8\u91cf\u652f\u6301\u7684\u6b65\u957f\u4ee58\u9012\u589e\u3002 3\u3001\u6d6e\u70b9\u7c7b\u578b\uff08fixed/ufixed\uff09 \u00b6 \u5206\u522b\u8868\u793a\u6709\u7b26\u53f7\u6216\u65e0\u7b26\u53f7\u7684\u6d6e\u70b9\u578b\u3002 4\u3001\u5730\u5740\uff08address\uff09 \u00b6 \u8fd9\u4e5f\u662f solidity \u4e2d\u7279\u6709\u7684\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u5b58\u50a8\u4e00\u4e2a20\u5b57\u8282\u7684\u503c\uff08\u4ee5\u592a\u574a\u5730\u5740\u7684\u5927\u5c0f\uff09\u3002\u5730\u5740\u7c7b\u578b\u4e5f\u6709\u6210\u5458\u53d8\u91cf\uff0c\u5e76\u4f5c\u4e3a\u5408\u7ea6\u7684\u57fa\u7840\u3002\u4ee5\u4e0b\u662f\u4e09\u79cd\u5e38\u89c1\u7684\u6210\u5458\u53d8\u91cf\u3002 balance\uff08uint256\uff09 \u67e5\u8be2\u8be5\u5730\u5740\u7684\u4ee5\u592a\u5e01\u4f59\u989d\uff0c\u4ee5Wei\u4e3a\u5355\u4f4d\u3002 transfer\uff08uint256\uff09 \u5411\u8be5\u5730\u5740\u53d1\u9001\u6307\u5b9a\u6570\u91cf\u7684\u4ee5\u592a\u5e01\uff0c\u4ee5Wei\u4e3a\u5355\u4f4d\uff0c\u5931\u8d25\u65f6\u629b\u51fa\u5f02\u5e38\u3002 send\uff08uint256\uff09 \u5411\u8be5\u5730\u5740\u53d1\u9001\u6307\u5b9a\u6570\u91cf\u7684\u4ee5\u592a\u5e01\uff0c\u4ee5Wei\u4e3a\u5355\u4f4d\uff0c\u5931\u8d25\u65f6\u8fd4\u56defalse\u3002 //SPDX-License-Identifier: GPL-3.0 pragma solidity >= 0.5.0 < 0.9.0 ; contract Deposit { address public owner ; constructor (){ //\u8fd9\u4e2a\u662f\u83b7\u53d6\u5f53\u524d\u5408\u7ea6\u521b\u5efa\u8005\u7684address owner = msg.sender ; } //\u5408\u7ea6\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2a\u4f7f\u7528\u6b64\u8bed\u6cd5\u63a5\u53d7\u7684\u51fd\u6570 receive () external payable { } fallback () external payable { } function getBalance () public view returns ( uint ) { //\u8fd4\u56de\u7684\u662f\u5f53\u524d\u7528\u6237address\u7684\u4f59\u989d return address ( this ). balance ; } function transferEther ( address payable recipient , uint amount ) public returns ( bool ){ require ( owner == msg.sender , \"Transfer failed,you are not the owner!!!\" ); if ( amount <= getBalance ()){ //\u8f6c\u79fb\u4e00\u5b9a\u6570\u91cf\u7684\u4f59\u989d recipient . transfer ( amount ); return true ; } else { return false ; } } } 5\u3001\u679a\u4e3e\u7c7b\u578b\uff08\uff09enum \u00b6 \u4e00\u79cd\u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\u578b\u3002\u53ef\u4ee5\u663e\u793a\u7684\u8f6c\u6362\u4e0e\u6574\u6570\u8fdb\u884c\u8f6c\u6362\uff0c\u9ed8\u8ba4\u4ece0\u5f00\u59cb\u9012\u589e\uff0c\u4e00\u822c\u7528\u6765\u6a21\u62df\u5408\u7ea6\u7684\u72b6\u6001\u3002\u679a\u4e3e\u7c7b\u578b\u5e94\u81f3\u5c11\u6709\u4e00\u540d\u6210\u5458\u3002 //SPDX-License-Identifier: GPL-3.0 pragma solidity >= 0.5.0 < 0.9.0 ; contract Academy { Instructor public academyInstructor ; enum State { Open , Closed , Unknow } State public academyState = State . Open ; } \u4ee5\u4e0a\u7684\u4f8b\u5b50\u662f\u5b9a\u4e49\u4e86\u4e00\u79cd\u679a\u4e3e\u7c7b\u578b State \uff0c\u7136\u540e\u5c06\u7c7b\u578b\u4e2d\u7684 Open \u72b6\u6001\u8d4b\u503c\u7ed9 academyState \u3002 6\u3001\u5b57\u8282\u6570\u7ec4\u7c7b\u578b\uff08\u5b9a\u957f\u548c\u4e0d\u5b9a\u957f\uff09 \u00b6 bytes1\uff0c \u2026 \uff0cbytes32\uff0c\u5141\u8bb8\u503c\u4ee5\u6b65\u957f1\u9012\u589e\u3002byte\u9ed8\u8ba4\u8868\u793abyte1\uff0c\u8fd9\u4e9b\u662f\u5b9a\u957f\u7684\u5b57\u8282\u6570\u7ec4\u7c7b\u578b\u3002\u4e0d\u5b9a\u957f\u5b57\u8282\u6570\u7ec4\u7c7b\u578b\u58f0\u660e\u4e3a bytes \u3002 7\u3001\u5b57\u7b26\u4e32 \u00b6 String\uff1a\u5b57\u7b26\u4e32\u6587\u5b57\u7528\u53cc\u5f15\u53f7\u6216\u5355\u5f15\u53f7\u5982\u201cfoo\u201d\u6216'bar'\u7f16\u5199\u3002\u7528\u4e8e\u4efb\u610f\u957f\u5ea6\u7684UTF\u6570\u636e\u3002 string language = \"Solidity\" ; 8\u3001\u6570\u7ec4\uff08\u5b9a\u957f\\\u52a8\u6001\uff09 \u00b6 Solidity\u4e2d\u7684\u6570\u7ec4\u53ef\u4ee5\u5177\u6709\u7f16\u8bd1\u65f6\u56fa\u5b9a\u5927\u5c0f\uff0c\u4e5f\u53ef\u4ee5\u662f\u52a8\u6001\u7684\u3002\u5c06\u6570\u7ec4\u58f0\u660e\u4e3apublic\u5c06\u81ea\u52a8\u4e3a\u5176\u521b\u5efagetter\u65b9\u6cd5\uff08\u53ef\u4ee5\u6839\u636e\u7d22\u5f15\u83b7\u53d6\u503c\uff09\u3002 //SPDX-License-Identifier: GPL-3.0 pragma solidity >= 0.5.0 < 0.9.0 ; contract FixedSizeArrays { uint [ 3 ] public numbers = [ 1 , 3 , 5 ]; bytes1 public b1 ; bytes2 public b2 ; bytes3 public b3 ; function setElement ( uint index , uint value ) public { numbers [ index ] = value ; } function getLength () public view returns ( uint ){ return numbers . length ; } function setBytesArray () public { b1 = 'a' ; b2 = 'ab' ; b3 = 'abc' ; } } //SPDX-License-Identifier: GPL-3.0 pragma solidity >= 0.5.0 < 0.9.0 ; contract DynamicArrays { uint [] public numbers ; function getLength () public view returns ( uint ){ return numbers . length ; } function addElement ( uint item ) public { numbers . push ( item ); } function getElement ( uint i ) public view returns ( uint ){ if ( i < numbers . length ){ return numbers [ i ]; } return 0 ; } function popElement () public { numbers . pop (); } function f () public pure { uint [] memory y = new uint []( 3 ); y [ 0 ] = 1 ; y [ 1 ] = 2 ; y [ 2 ] = 3 ; } } 9\u3001\u7ed3\u6784\u4f53\uff08struct\uff09 \u00b6 Structs\u662f\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u53ef\u4ee5\u5bf9\u591a\u4e2a\u53d8\u91cf\u8fdb\u884c\u5206\u7ec4\u3002\u6ce8\u610f\uff1a\u7ed3\u6784\u53ea\u80fd\u670916\u4e2a\u6210\u5458\uff0c\u8d85\u8fc7\u8be5\u6210\u5458\u53ef\u80fd\u4f1a\u53d1\u751f\u4ee5\u4e0b\u9519\u8bef\uff1aStack too Deep \u5806\u6808\u592a\u6df1\u3002 \u7ed3\u6784\u5141\u8bb8\u521b\u5efa\u5177\u6709\u591a\u4e2a\u5c5e\u6027\u7684\u66f4\u590d\u6742\u7684\u6570\u636e\u7c7b\u578b\u3002 //SPDX-License-Identifier: GPL-3.0 pragma solidity >= 0.5.0 < 0.9.0 ; struct Instructor { uint age ; string name ; address addr ; } contract Academy { Instructor public academyInstructor ; enum State { Open , Closed , Unknow } State public academyState = State . Open ; constructor ( uint _age , string memory _name ){ academyInstructor . age = _age ; academyInstructor . name = _name ; academyInstructor . addr = msg.sender ; } function changeInstructor ( uint _age , string memory _name , address _addr ) public { if ( academyState == State . Open ){ Instructor memory myInstructor = Instructor ({ age : _age , name : _name , addr : _addr }); academyInstructor = myInstructor ; } } } contract School { Instructor public schoolInstructor ; } 10\u3001\u6620\u5c04\uff08mapping\uff09 \u00b6 \u6620\u5c04\u53ef\u4ee5\u770b\u4f5c\u662f\u54c8\u5e0c\u8868\uff0c\u5b83\u4eec\u88ab\u865a\u62df\u5730\u521d\u59cb\u5316\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u53ef\u80fd\u7684\u952e\u90fd\u5b58\u5728\u5e76\u88ab\u6620\u5c04\u5230\u5176\u5b57\u8282\u8868\u793a\u5168\u4e3a\u96f6\u7684\u503c\uff1a\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c\u3002 //SPDX-License-Identifier: GPL-3.0 pragma solidity >= 0.5.0 < 0.9.0 ; contract Auction { mapping ( address => uint ) public bids ; function bid () payable public { bids [ msg.sender ] = msg.value ; } } \u6570\u636e\u4f4d\u7f6e \u00b6 \u6240\u6709\u7684\u590d\u6742\u7c7b\u578b\uff08\u6570\u7ec4\u3001\u7ed3\u6784\u3001\u6620\u5c04\uff09\uff0c\u90fd\u6709\u4e00\u4e2a\u989d\u5916\u5c5e\u6027\u5c31\u662f\u6570\u636e\u4f4d\u7f6e\uff0c\u7528\u6765\u8bf4\u660e\u6570\u636e\u662f\u5b58\u50a8\u5728\u5185\u5b58 memory \u8fd8\u662f\u5b58\u50a8 storage \u4e2d\u3002\u6839\u636e\u4e0a\u4e0b\u6587\u4e0d\u540c\uff0c\u5927\u591a\u6570\u65f6\u5019\u6570\u636e\u6709\u9ed8\u8ba4\u7684\u4f4d\u7f6e\uff0c\u4f46\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5728\u7c7b\u578b\u540d\u540e\u52a0\u4e0a\u5173\u952e\u5b57 memory \u6216 storage \u6765\u8fdb\u884c\u4fee\u6539\u3002\u51fd\u6570\u53c2\u6570\uff08\u5305\u62ec\u8fd4\u56de\u7684\u53c2\u6570\uff09\u7684\u6570\u636e\u4f4d\u7f6e\u9ed8\u8ba4\u662f memory \uff0c\u5c40\u90e8\u53d8\u91cf\u9ed8\u8ba4\u662f storage \uff0c\u72b6\u6001\u53d8\u91cf\u9ed8\u8ba4\u662f storage \u3002 \u51fd\u6570 \u00b6 1\u3001\u51fd\u6570\u53ef\u89c1\u6027/\u8bbf\u95ee\u6743\u9650 \u00b6 public \uff1a public \u51fd\u6570\u662f\u5408\u7ea6\u63a5\u53e3\u7684\u4e00\u90e8\u5206\uff0c\u53ef\u4ee5\u5728\u5185\u90e8\u6216\u901a\u8fc7\u6d88\u606f\u8c03\u7528\u3002\u5bf9\u4e8e public \u72b6\u6001\u53d8\u91cf\uff0c\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2agetter\u51fd\u6570 private \uff1a private \u51fd\u6570\u548c\u72b6\u6001\u53d8\u91cf\u91d1\u5728\u5f53\u524d\u5b9a\u4e49\u4ed6\u4eec\u7684\u5408\u7ea6\u4e2d\u4f7f\u7528\uff0c\u5e76\u4e14\u4e0d\u80fd\u88ab\u6d3e\u751f\u5408\u7ea6\u4f7f\u7528 external \uff1a external \u51fd\u6570\u662f\u5408\u7ea6\u63a5\u53e3\u7684\u4e00\u90e8\u5206\uff0c\u53ef\u4ee5\u4ece\u5176\u4ed6\u5408\u7ea6\u548c\u4ea4\u6613\u4e2d\u8c03\u7528\u3002\u4e00\u4e2a\u5916\u90e8\u51fd\u6570f\u4e0d\u80fd\u4ece\u5185\u90e8\u8c03\u7528\uff08\u5373f\u4e0d\u8d77\u4f5c\u7528\uff0c\u4f46this.f()\u53ef\u4ee5\uff09\u3002\u5f53\u6536\u5230\u5927\u91cf\u6570\u636e\u7684\u65f6\u5019\uff0c\u5916\u90e8\u51fd\u6570\u6709\u65f6\u5019\u4f1a\u66f4\u6709\u6548\u7387 internal \uff1a internal \u51fd\u6570\u548c\u72b6\u6001\u53d8\u91cf\u53ea\u80fd\u662f\u5185\u90e8\u8bbf\u95ee\uff08\u5373\u4ece\u5f53\u524d\u5408\u7ea6\u5185\u90e8\u6216\u4ece\u5b83\u6d3e\u751f\u7684\u5408\u7ea6\u8bbf\u95ee\uff09\uff0c\u4e0d\u80fd\u7528this\u8c03\u7528\u3002 \u51fd\u6570\u72b6\u6001\u53ef\u53d8\u6027 \u00b6 view \uff1a\u4e0d\u5141\u8bb8\u4fee\u6539\u72b6\u6001 pure \uff1a\u7eaf\u51fd\u6570\uff0c\u4e0d\u5141\u8bb8\u8bbf\u95ee\u6216\u4fee\u6539\u72b6\u6001 payable \uff1a\u5141\u8bb8\u4ece\u6d88\u606f\u8c03\u7528\u4e2d\u63a5\u6536\u4ee5\u592a\u5e01 constant \uff1a\u4e0eview\u76f8\u540c\uff0c\u4e00\u822c\u53ea\u4fee\u9970\u72b6\u6001\u53d8\u91cf\uff0c\u4e0d\u5141\u8bb8\u8d4b\u503c\uff08\u9664\u521d\u59cb\u5316\u4ee5\u5916) \u62cd\u5356\u5408\u7ea6\u7684\u4f8b\u5b50 \u00b6 //SPDX-License-Identifier: GPL-3.0 pragma solidity >= 0.5.0 < 0.9.0 ; contract AuctionCreator { Auction [] public auctions ; function createAuction () public { Auction newAuction = new Auction ( msg.sender ); auctions . push ( newAuction ); } } contract Auction { address payable public owner ; uint public startBlock ; uint public endBlock ; string public ipfsHash ; enum State { Started , Running , Ended , Canceled } State public auctionState ; uint public highestBindingBid ; address payable public highestBidder ; mapping ( address => uint ) public bids ; uint bidIncrement ; constructor ( address eoa ){ owner = payable ( eoa ); auctionState = State . Running ; startBlock = block.number ; endBlock = startBlock + 40320 ; ipfsHash = \"\" ; bidIncrement = 100 ; } modifier notOwner (){ require ( msg.sender != owner ); _ ; } modifier afterStart (){ require ( block.number >= startBlock ); _ ; } modifier beforeEnd (){ require ( block.number <= endBlock ); _ ; } modifier onlyOwner (){ require ( msg.sender == owner ); _ ; } function cancelAuction () public onlyOwner { auctionState = State . Canceled ; } function min ( uint a , uint b ) pure internal returns ( uint ){ if ( a <= b ){ return a ; } else { return b ; } } function placeBid () public payable notOwner afterStart beforeEnd { require ( auctionState == State . Running ); require ( msg.value >= 100 ); uint currentBid = bids [ msg.sender ] + msg.value ; require ( currentBid > highestBindingBid ); bids [ msg.sender ] = currentBid ; if ( currentBid <= bids [ highestBidder ]){ highestBindingBid = min ( currentBid + bidIncrement , bids [ highestBidder ]); } else { highestBindingBid = min ( currentBid , bids [ highestBidder ] + bidIncrement ); highestBidder = payable ( msg.sender ); } } function finalizeAuction () public { require ( auctionState == State . Canceled || block.number > endBlock ); require ( msg.sender == owner || bids [ msg.sender ] > 0 ); address payable recipient ; uint value ; if ( auctionState == State . Canceled ){ recipient = payable ( msg.sender ); value = bids [ msg.sender ]; } else { if ( msg.sender == owner ){ recipient = owner ; value = highestBindingBid ; } else { if ( msg.sender == highestBidder ){ recipient = highestBidder ; value = bids [ highestBidder ] - highestBindingBid ; } else { recipient = payable ( msg.sender ); value = bids [ msg.sender ]; } } } bids [ recipient ] = 0 ; recipient . transfer ( value ); } }","title":"solidity\u57fa\u7840"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#solidity","text":"","title":"solidity\u57fa\u7840\u7b14\u8bb0"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#_1","text":"solidity \u662f\u4e00\u95e8\u9762\u5411\u5408\u7ea6\u7684\u3001\u4e3a\u5b9e\u73b0\u667a\u80fd\u5408\u7ea6\u800c\u521b\u5efa\u7684\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\uff0c\u80fd\u5728\u4ee5\u592a\u574a\u865a\u62df\u673a\uff08EVM\uff09\u4e0a\u8fd0\u884c\u3002\u5b83\u662f\u4e00\u95e8\u9759\u6001\u8bed\u8a00\u3002\u5185\u542b\u7684\u7c7b\u578b\u9664\u4e86\u5e38\u89c1\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u6807\u51c6\u7c7b\u578b\uff0c\u8fd8\u5305\u62ecaddress\u7b49\u4ee5\u592a\u574a\u72ec\u6709\u7684\u7c7b\u578b\u3002\u4ee5\u592a\u574a\u4e0d\u4ec5\u662f\u4e00\u79cd\u52a0\u5bc6\u6570\u5b57\u8d27\u5e01\uff0c\u5b83\u66f4\u662f\u529f\u80fd\u5b8c\u5907\u7684\u667a\u80fd\u5408\u7ea6\u5e73\u53f0\uff0csolidity\u5c31\u662f\u7528\u6765\u5f00\u53d1\u4ee5\u592a\u574a\u4e0a\u7684\u667a\u80fd\u5408\u7ea6\u7684\u539f\u751f\u5f00\u53d1\u8bed\u8a00\u3002solidity\u6700\u65e9\u53d1\u5e03\u4e8e2015\u5e74\uff0c\u5b83\u662f\u7b2c\u4e00\u79cd\u56fe\u7075\u5b8c\u5907\u7684\u667a\u80fd\u5408\u7ea6\u4e13\u7528\u5f00\u53d1\u8bed\u8a00\u3002\u76ee\u524d\u9664\u4e86\u4ee5\u592a\u574a\u4e4b\u5916\uff0c\u5728\u5176\u4ed6\u533a\u5757\u94fe\u4e2d\u4e5f\u9010\u6e10\u5f00\u59cb\u652f\u6301solidity\uff0c\u4f8b\u5982hyperledger fabric\u3001tendermint\u7b49\u3002solidity\u6e90\u7801\u6587\u4ef6\u901a\u5e38\u4ee5 .sol \u4f5c\u4e3a\u6269\u5c55\u540d\u3002\u8be6\u7ec6\u6559\u7a0b\u53ef\u4ee5\u53c2\u8003 \u5b98\u7f51","title":"\u7b80\u5355\u4ecb\u7ecd"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#_2","text":"\u5b83\u7684\u8bed\u6cd5\u63a5\u8fd1\u4e8eJavascript\uff0c\u662f\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u3002\u4f46\u4f5c\u4e3a\u4e00\u79cd\u771f\u6b63\u610f\u4e49\u4e0a\u8fd0\u884c\u5728\u7f51\u7edc\u4e0a\u7684\u53bb\u4e2d\u5fc3\u5408\u7ea6\uff0c\u5b83\u53c8\u6709\u5f88\u591a\u7684\u4e0d\u540c\uff0c\u4e0b\u9762\u5217\u4e3e\u4e00\u4e9b\uff1a \u4ee5\u592a\u574a\u5e95\u5c42\u662f\u57fa\u4e8e\u5e10\u6237\uff0c\u800c\u975eUTXO\u7684\uff0c\u6240\u4ee5\u6709\u4e00\u4e2a\u7279\u6b8a\u7684Address\u7684\u7c7b\u578b\u3002\u7528\u4e8e\u5b9a\u4f4d\u7528\u6237\uff0c\u5b9a\u4f4d\u5408\u7ea6\uff0c\u5b9a\u4f4d\u5408\u7ea6\u7684\u4ee3\u7801\uff08\u5408\u7ea6\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u5e10\u6237\uff09\u3002 \u7531\u4e8e\u8bed\u8a00\u5185\u5d4c\u6846\u67b6\u662f\u652f\u6301\u652f\u4ed8\u7684\uff0c\u6240\u4ee5\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5173\u952e\u5b57\uff0c\u5982payable\uff0c\u53ef\u4ee5\u5728\u8bed\u8a00\u5c42\u9762\u76f4\u63a5\u652f\u6301\u652f\u4ed8\uff0c\u800c\u4e14\u8d85\u7ea7\u7b80\u5355\u3002 \u5b58\u50a8\u662f\u4f7f\u7528\u7f51\u7edc\u4e0a\u7684\u533a\u5757\u94fe\uff0c\u6570\u636e\u7684\u6bcf\u4e00\u4e2a\u72b6\u6001\u90fd\u53ef\u4ee5\u6c38\u4e45\u5b58\u50a8\uff0c\u6240\u4ee5\u9700\u8981\u786e\u5b9a\u53d8\u91cf\u4f7f\u7528\u5185\u5b58\uff0c\u8fd8\u662f\u533a\u5757\u94fe\u3002 \u8fd0\u884c\u73af\u5883\u662f\u5728\u53bb\u4e2d\u5fc3\u5316\u7684\u7f51\u7edc\u4e0a\uff0c\u4f1a\u6bd4\u8f83\u5f3a\u8c03\u5408\u7ea6\u6216\u51fd\u6570\u6267\u884c\u7684\u8c03\u7528\u7684\u65b9\u5f0f\u3002\u56e0\u4e3a\u539f\u6765\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\u8c03\u7528\u53d8\u4e3a\u4e86\u4e00\u4e2a\u7f51\u7edc\u4e0a\u7684\u8282\u70b9\u4e2d\u7684\u4ee3\u7801\u6267\u884c\uff0c\u5206\u5e03\u5f0f\u7684\u611f\u89c9\u3002 \u6700\u540e\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u4e0d\u540c\u5219\u662f\u5b83\u7684\u5f02\u5e38\u673a\u5236\uff0c\u4e00\u65e6\u51fa\u73b0\u5f02\u5e38\uff0c\u6240\u6709\u7684\u6267\u884c\u90fd\u5c06\u4f1a\u88ab\u56de\u64a4\uff0c\u8fd9\u4e3b\u8981\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5408\u7ea6\u6267\u884c\u7684\u539f\u5b50\u6027\uff0c\u4ee5\u907f\u514d\u4e2d\u95f4\u72b6\u6001\u51fa\u73b0\u7684\u6570\u636e\u4e0d\u4e00\u81f4\u3002","title":"\u8bed\u8a00\u7279\u6027"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#_3","text":"\u76ee\u524dsolidity\u7f16\u7a0b\u6700\u597d\u7684\u65b9\u5f0f\u662f\u4f7f\u7528Remix\uff08\u5730\u5740\uff1ahttps://remix.ethereum.org/ \uff09\uff0c\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8eweb\u6d4f\u89c8\u5668\u7684IDE\uff0c\u53ef\u5728\u7ebf\u4f7f\u7528\u800c\u65e0\u9700\u5b89\u88c5\u4efb\u4f55\u4e1c\u897f\uff0c\u53ef\u4ee5\u7f16\u5199solidity\u667a\u80fd\u5408\u7ea6\uff0c\u7136\u540e\u7f16\u8bd1\u3001\u90e8\u7f72\u5e76\u8fd0\u884c\u8be5\u667a\u80fd\u5408\u7ea6\u3002 \u5982\u56fe\u6240\u793a\uff0c\u5c31\u662f\u5b98\u7f51\u9875\u9762\uff0c\u53ef\u4ee5\u70b9\u51fb Start coding online \u5c31\u53ef\u4ee5\u5728\u7ebf\u7f16\u5199solidity\u4ee3\u7801\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u7ebf\u8fd0\u884c\uff0c\u65e0\u9700\u5b89\u88c5\u3002\u5f53\u7136\u4e5f\u53ef\u4ee5\u70b9\u51fb\u4e0b\u8f7d\u5b89\u88c5\u5305\uff0c\u5b89\u88c5\u5230\u672c\u5730\u3002","title":"\u5f00\u53d1\u73af\u5883"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#_4","text":"","title":"\u57fa\u7840\u6570\u636e\u7c7b\u578b"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#1bool","text":"\u53d6\u503c\u4e3a\u5e38\u91cf\u503ctrue\u548cfalse\u3002","title":"1\u3001\u5e03\u5c14\u7c7b\u578b\uff08bool\uff09"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#2intuint","text":"\u5206\u522b\u8868\u793a\u7684\u662f\u6709\u7b26\u53f7\u6216\u65e0\u7b26\u53f7\u6574\u578b\u3002\u652f\u6301\u4ece uint8 \u5230 uint256 \uff0c\u4ee5\u53ca int8 \u5230 int256 \uff0c uint \u548c int \u9ed8\u8ba4\u4ee3\u8868\u7684\u662f uint256 \u548c int256 \uff0c\u53d8\u91cf\u652f\u6301\u7684\u6b65\u957f\u4ee58\u9012\u589e\u3002","title":"2\u3001\u6574\u578b\uff08int/uint\uff09"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#3fixedufixed","text":"\u5206\u522b\u8868\u793a\u6709\u7b26\u53f7\u6216\u65e0\u7b26\u53f7\u7684\u6d6e\u70b9\u578b\u3002","title":"3\u3001\u6d6e\u70b9\u7c7b\u578b\uff08fixed/ufixed\uff09"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#4address","text":"\u8fd9\u4e5f\u662f solidity \u4e2d\u7279\u6709\u7684\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u5b58\u50a8\u4e00\u4e2a20\u5b57\u8282\u7684\u503c\uff08\u4ee5\u592a\u574a\u5730\u5740\u7684\u5927\u5c0f\uff09\u3002\u5730\u5740\u7c7b\u578b\u4e5f\u6709\u6210\u5458\u53d8\u91cf\uff0c\u5e76\u4f5c\u4e3a\u5408\u7ea6\u7684\u57fa\u7840\u3002\u4ee5\u4e0b\u662f\u4e09\u79cd\u5e38\u89c1\u7684\u6210\u5458\u53d8\u91cf\u3002 balance\uff08uint256\uff09 \u67e5\u8be2\u8be5\u5730\u5740\u7684\u4ee5\u592a\u5e01\u4f59\u989d\uff0c\u4ee5Wei\u4e3a\u5355\u4f4d\u3002 transfer\uff08uint256\uff09 \u5411\u8be5\u5730\u5740\u53d1\u9001\u6307\u5b9a\u6570\u91cf\u7684\u4ee5\u592a\u5e01\uff0c\u4ee5Wei\u4e3a\u5355\u4f4d\uff0c\u5931\u8d25\u65f6\u629b\u51fa\u5f02\u5e38\u3002 send\uff08uint256\uff09 \u5411\u8be5\u5730\u5740\u53d1\u9001\u6307\u5b9a\u6570\u91cf\u7684\u4ee5\u592a\u5e01\uff0c\u4ee5Wei\u4e3a\u5355\u4f4d\uff0c\u5931\u8d25\u65f6\u8fd4\u56defalse\u3002 //SPDX-License-Identifier: GPL-3.0 pragma solidity >= 0.5.0 < 0.9.0 ; contract Deposit { address public owner ; constructor (){ //\u8fd9\u4e2a\u662f\u83b7\u53d6\u5f53\u524d\u5408\u7ea6\u521b\u5efa\u8005\u7684address owner = msg.sender ; } //\u5408\u7ea6\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2a\u4f7f\u7528\u6b64\u8bed\u6cd5\u63a5\u53d7\u7684\u51fd\u6570 receive () external payable { } fallback () external payable { } function getBalance () public view returns ( uint ) { //\u8fd4\u56de\u7684\u662f\u5f53\u524d\u7528\u6237address\u7684\u4f59\u989d return address ( this ). balance ; } function transferEther ( address payable recipient , uint amount ) public returns ( bool ){ require ( owner == msg.sender , \"Transfer failed,you are not the owner!!!\" ); if ( amount <= getBalance ()){ //\u8f6c\u79fb\u4e00\u5b9a\u6570\u91cf\u7684\u4f59\u989d recipient . transfer ( amount ); return true ; } else { return false ; } } }","title":"4\u3001\u5730\u5740\uff08address\uff09"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#5enum","text":"\u4e00\u79cd\u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\u578b\u3002\u53ef\u4ee5\u663e\u793a\u7684\u8f6c\u6362\u4e0e\u6574\u6570\u8fdb\u884c\u8f6c\u6362\uff0c\u9ed8\u8ba4\u4ece0\u5f00\u59cb\u9012\u589e\uff0c\u4e00\u822c\u7528\u6765\u6a21\u62df\u5408\u7ea6\u7684\u72b6\u6001\u3002\u679a\u4e3e\u7c7b\u578b\u5e94\u81f3\u5c11\u6709\u4e00\u540d\u6210\u5458\u3002 //SPDX-License-Identifier: GPL-3.0 pragma solidity >= 0.5.0 < 0.9.0 ; contract Academy { Instructor public academyInstructor ; enum State { Open , Closed , Unknow } State public academyState = State . Open ; } \u4ee5\u4e0a\u7684\u4f8b\u5b50\u662f\u5b9a\u4e49\u4e86\u4e00\u79cd\u679a\u4e3e\u7c7b\u578b State \uff0c\u7136\u540e\u5c06\u7c7b\u578b\u4e2d\u7684 Open \u72b6\u6001\u8d4b\u503c\u7ed9 academyState \u3002","title":"5\u3001\u679a\u4e3e\u7c7b\u578b\uff08\uff09enum"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#6","text":"bytes1\uff0c \u2026 \uff0cbytes32\uff0c\u5141\u8bb8\u503c\u4ee5\u6b65\u957f1\u9012\u589e\u3002byte\u9ed8\u8ba4\u8868\u793abyte1\uff0c\u8fd9\u4e9b\u662f\u5b9a\u957f\u7684\u5b57\u8282\u6570\u7ec4\u7c7b\u578b\u3002\u4e0d\u5b9a\u957f\u5b57\u8282\u6570\u7ec4\u7c7b\u578b\u58f0\u660e\u4e3a bytes \u3002","title":"6\u3001\u5b57\u8282\u6570\u7ec4\u7c7b\u578b\uff08\u5b9a\u957f\u548c\u4e0d\u5b9a\u957f\uff09"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#7","text":"String\uff1a\u5b57\u7b26\u4e32\u6587\u5b57\u7528\u53cc\u5f15\u53f7\u6216\u5355\u5f15\u53f7\u5982\u201cfoo\u201d\u6216'bar'\u7f16\u5199\u3002\u7528\u4e8e\u4efb\u610f\u957f\u5ea6\u7684UTF\u6570\u636e\u3002 string language = \"Solidity\" ;","title":"7\u3001\u5b57\u7b26\u4e32"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#8","text":"Solidity\u4e2d\u7684\u6570\u7ec4\u53ef\u4ee5\u5177\u6709\u7f16\u8bd1\u65f6\u56fa\u5b9a\u5927\u5c0f\uff0c\u4e5f\u53ef\u4ee5\u662f\u52a8\u6001\u7684\u3002\u5c06\u6570\u7ec4\u58f0\u660e\u4e3apublic\u5c06\u81ea\u52a8\u4e3a\u5176\u521b\u5efagetter\u65b9\u6cd5\uff08\u53ef\u4ee5\u6839\u636e\u7d22\u5f15\u83b7\u53d6\u503c\uff09\u3002 //SPDX-License-Identifier: GPL-3.0 pragma solidity >= 0.5.0 < 0.9.0 ; contract FixedSizeArrays { uint [ 3 ] public numbers = [ 1 , 3 , 5 ]; bytes1 public b1 ; bytes2 public b2 ; bytes3 public b3 ; function setElement ( uint index , uint value ) public { numbers [ index ] = value ; } function getLength () public view returns ( uint ){ return numbers . length ; } function setBytesArray () public { b1 = 'a' ; b2 = 'ab' ; b3 = 'abc' ; } } //SPDX-License-Identifier: GPL-3.0 pragma solidity >= 0.5.0 < 0.9.0 ; contract DynamicArrays { uint [] public numbers ; function getLength () public view returns ( uint ){ return numbers . length ; } function addElement ( uint item ) public { numbers . push ( item ); } function getElement ( uint i ) public view returns ( uint ){ if ( i < numbers . length ){ return numbers [ i ]; } return 0 ; } function popElement () public { numbers . pop (); } function f () public pure { uint [] memory y = new uint []( 3 ); y [ 0 ] = 1 ; y [ 1 ] = 2 ; y [ 2 ] = 3 ; } }","title":"8\u3001\u6570\u7ec4\uff08\u5b9a\u957f\\\u52a8\u6001\uff09"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#9struct","text":"Structs\u662f\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u53ef\u4ee5\u5bf9\u591a\u4e2a\u53d8\u91cf\u8fdb\u884c\u5206\u7ec4\u3002\u6ce8\u610f\uff1a\u7ed3\u6784\u53ea\u80fd\u670916\u4e2a\u6210\u5458\uff0c\u8d85\u8fc7\u8be5\u6210\u5458\u53ef\u80fd\u4f1a\u53d1\u751f\u4ee5\u4e0b\u9519\u8bef\uff1aStack too Deep \u5806\u6808\u592a\u6df1\u3002 \u7ed3\u6784\u5141\u8bb8\u521b\u5efa\u5177\u6709\u591a\u4e2a\u5c5e\u6027\u7684\u66f4\u590d\u6742\u7684\u6570\u636e\u7c7b\u578b\u3002 //SPDX-License-Identifier: GPL-3.0 pragma solidity >= 0.5.0 < 0.9.0 ; struct Instructor { uint age ; string name ; address addr ; } contract Academy { Instructor public academyInstructor ; enum State { Open , Closed , Unknow } State public academyState = State . Open ; constructor ( uint _age , string memory _name ){ academyInstructor . age = _age ; academyInstructor . name = _name ; academyInstructor . addr = msg.sender ; } function changeInstructor ( uint _age , string memory _name , address _addr ) public { if ( academyState == State . Open ){ Instructor memory myInstructor = Instructor ({ age : _age , name : _name , addr : _addr }); academyInstructor = myInstructor ; } } } contract School { Instructor public schoolInstructor ; }","title":"9\u3001\u7ed3\u6784\u4f53\uff08struct\uff09"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#10mapping","text":"\u6620\u5c04\u53ef\u4ee5\u770b\u4f5c\u662f\u54c8\u5e0c\u8868\uff0c\u5b83\u4eec\u88ab\u865a\u62df\u5730\u521d\u59cb\u5316\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u53ef\u80fd\u7684\u952e\u90fd\u5b58\u5728\u5e76\u88ab\u6620\u5c04\u5230\u5176\u5b57\u8282\u8868\u793a\u5168\u4e3a\u96f6\u7684\u503c\uff1a\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c\u3002 //SPDX-License-Identifier: GPL-3.0 pragma solidity >= 0.5.0 < 0.9.0 ; contract Auction { mapping ( address => uint ) public bids ; function bid () payable public { bids [ msg.sender ] = msg.value ; } }","title":"10\u3001\u6620\u5c04\uff08mapping\uff09"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#_5","text":"\u6240\u6709\u7684\u590d\u6742\u7c7b\u578b\uff08\u6570\u7ec4\u3001\u7ed3\u6784\u3001\u6620\u5c04\uff09\uff0c\u90fd\u6709\u4e00\u4e2a\u989d\u5916\u5c5e\u6027\u5c31\u662f\u6570\u636e\u4f4d\u7f6e\uff0c\u7528\u6765\u8bf4\u660e\u6570\u636e\u662f\u5b58\u50a8\u5728\u5185\u5b58 memory \u8fd8\u662f\u5b58\u50a8 storage \u4e2d\u3002\u6839\u636e\u4e0a\u4e0b\u6587\u4e0d\u540c\uff0c\u5927\u591a\u6570\u65f6\u5019\u6570\u636e\u6709\u9ed8\u8ba4\u7684\u4f4d\u7f6e\uff0c\u4f46\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5728\u7c7b\u578b\u540d\u540e\u52a0\u4e0a\u5173\u952e\u5b57 memory \u6216 storage \u6765\u8fdb\u884c\u4fee\u6539\u3002\u51fd\u6570\u53c2\u6570\uff08\u5305\u62ec\u8fd4\u56de\u7684\u53c2\u6570\uff09\u7684\u6570\u636e\u4f4d\u7f6e\u9ed8\u8ba4\u662f memory \uff0c\u5c40\u90e8\u53d8\u91cf\u9ed8\u8ba4\u662f storage \uff0c\u72b6\u6001\u53d8\u91cf\u9ed8\u8ba4\u662f storage \u3002","title":"\u6570\u636e\u4f4d\u7f6e"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#_6","text":"","title":"\u51fd\u6570"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#1","text":"public \uff1a public \u51fd\u6570\u662f\u5408\u7ea6\u63a5\u53e3\u7684\u4e00\u90e8\u5206\uff0c\u53ef\u4ee5\u5728\u5185\u90e8\u6216\u901a\u8fc7\u6d88\u606f\u8c03\u7528\u3002\u5bf9\u4e8e public \u72b6\u6001\u53d8\u91cf\uff0c\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2agetter\u51fd\u6570 private \uff1a private \u51fd\u6570\u548c\u72b6\u6001\u53d8\u91cf\u91d1\u5728\u5f53\u524d\u5b9a\u4e49\u4ed6\u4eec\u7684\u5408\u7ea6\u4e2d\u4f7f\u7528\uff0c\u5e76\u4e14\u4e0d\u80fd\u88ab\u6d3e\u751f\u5408\u7ea6\u4f7f\u7528 external \uff1a external \u51fd\u6570\u662f\u5408\u7ea6\u63a5\u53e3\u7684\u4e00\u90e8\u5206\uff0c\u53ef\u4ee5\u4ece\u5176\u4ed6\u5408\u7ea6\u548c\u4ea4\u6613\u4e2d\u8c03\u7528\u3002\u4e00\u4e2a\u5916\u90e8\u51fd\u6570f\u4e0d\u80fd\u4ece\u5185\u90e8\u8c03\u7528\uff08\u5373f\u4e0d\u8d77\u4f5c\u7528\uff0c\u4f46this.f()\u53ef\u4ee5\uff09\u3002\u5f53\u6536\u5230\u5927\u91cf\u6570\u636e\u7684\u65f6\u5019\uff0c\u5916\u90e8\u51fd\u6570\u6709\u65f6\u5019\u4f1a\u66f4\u6709\u6548\u7387 internal \uff1a internal \u51fd\u6570\u548c\u72b6\u6001\u53d8\u91cf\u53ea\u80fd\u662f\u5185\u90e8\u8bbf\u95ee\uff08\u5373\u4ece\u5f53\u524d\u5408\u7ea6\u5185\u90e8\u6216\u4ece\u5b83\u6d3e\u751f\u7684\u5408\u7ea6\u8bbf\u95ee\uff09\uff0c\u4e0d\u80fd\u7528this\u8c03\u7528\u3002","title":"1\u3001\u51fd\u6570\u53ef\u89c1\u6027/\u8bbf\u95ee\u6743\u9650"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#_7","text":"view \uff1a\u4e0d\u5141\u8bb8\u4fee\u6539\u72b6\u6001 pure \uff1a\u7eaf\u51fd\u6570\uff0c\u4e0d\u5141\u8bb8\u8bbf\u95ee\u6216\u4fee\u6539\u72b6\u6001 payable \uff1a\u5141\u8bb8\u4ece\u6d88\u606f\u8c03\u7528\u4e2d\u63a5\u6536\u4ee5\u592a\u5e01 constant \uff1a\u4e0eview\u76f8\u540c\uff0c\u4e00\u822c\u53ea\u4fee\u9970\u72b6\u6001\u53d8\u91cf\uff0c\u4e0d\u5141\u8bb8\u8d4b\u503c\uff08\u9664\u521d\u59cb\u5316\u4ee5\u5916)","title":"\u51fd\u6570\u72b6\u6001\u53ef\u53d8\u6027"},{"location":"blogs/solidity%E5%9F%BA%E7%A1%80/#_8","text":"//SPDX-License-Identifier: GPL-3.0 pragma solidity >= 0.5.0 < 0.9.0 ; contract AuctionCreator { Auction [] public auctions ; function createAuction () public { Auction newAuction = new Auction ( msg.sender ); auctions . push ( newAuction ); } } contract Auction { address payable public owner ; uint public startBlock ; uint public endBlock ; string public ipfsHash ; enum State { Started , Running , Ended , Canceled } State public auctionState ; uint public highestBindingBid ; address payable public highestBidder ; mapping ( address => uint ) public bids ; uint bidIncrement ; constructor ( address eoa ){ owner = payable ( eoa ); auctionState = State . Running ; startBlock = block.number ; endBlock = startBlock + 40320 ; ipfsHash = \"\" ; bidIncrement = 100 ; } modifier notOwner (){ require ( msg.sender != owner ); _ ; } modifier afterStart (){ require ( block.number >= startBlock ); _ ; } modifier beforeEnd (){ require ( block.number <= endBlock ); _ ; } modifier onlyOwner (){ require ( msg.sender == owner ); _ ; } function cancelAuction () public onlyOwner { auctionState = State . Canceled ; } function min ( uint a , uint b ) pure internal returns ( uint ){ if ( a <= b ){ return a ; } else { return b ; } } function placeBid () public payable notOwner afterStart beforeEnd { require ( auctionState == State . Running ); require ( msg.value >= 100 ); uint currentBid = bids [ msg.sender ] + msg.value ; require ( currentBid > highestBindingBid ); bids [ msg.sender ] = currentBid ; if ( currentBid <= bids [ highestBidder ]){ highestBindingBid = min ( currentBid + bidIncrement , bids [ highestBidder ]); } else { highestBindingBid = min ( currentBid , bids [ highestBidder ] + bidIncrement ); highestBidder = payable ( msg.sender ); } } function finalizeAuction () public { require ( auctionState == State . Canceled || block.number > endBlock ); require ( msg.sender == owner || bids [ msg.sender ] > 0 ); address payable recipient ; uint value ; if ( auctionState == State . Canceled ){ recipient = payable ( msg.sender ); value = bids [ msg.sender ]; } else { if ( msg.sender == owner ){ recipient = owner ; value = highestBindingBid ; } else { if ( msg.sender == highestBidder ){ recipient = highestBidder ; value = bids [ highestBidder ] - highestBindingBid ; } else { recipient = payable ( msg.sender ); value = bids [ msg.sender ]; } } } bids [ recipient ] = 0 ; recipient . transfer ( value ); } }","title":"\u62cd\u5356\u5408\u7ea6\u7684\u4f8b\u5b50"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/","text":"Vue3\u5feb\u901f\u4e0a\u624b \u00b6 1.Vue3\u7b80\u4ecb \u00b6 2020\u5e749\u670818\u65e5\uff0cVue.js\u53d1\u5e033.0\u7248\u672c\uff0c\u4ee3\u53f7\uff1aOne Piece\uff08\u6d77\u8d3c\u738b\uff09 \u8017\u65f62\u5e74\u591a\u3001 2600+\u6b21\u63d0\u4ea4 \u3001 30+\u4e2aRFC \u3001 600+\u6b21PR \u3001 99\u4f4d\u8d21\u732e\u8005 github\u4e0a\u7684tags\u5730\u5740\uff1ahttps://github.com/vuejs/vue-next/releases/tag/v3.0.0 2.Vue3\u5e26\u6765\u4e86\u4ec0\u4e48 \u00b6 1.\u6027\u80fd\u7684\u63d0\u5347 \u00b6 \u6253\u5305\u5927\u5c0f\u51cf\u5c1141% \u521d\u6b21\u6e32\u67d3\u5feb55%, \u66f4\u65b0\u6e32\u67d3\u5feb133% \u5185\u5b58\u51cf\u5c1154% ...... 2.\u6e90\u7801\u7684\u5347\u7ea7 \u00b6 \u4f7f\u7528Proxy\u4ee3\u66ffdefineProperty\u5b9e\u73b0\u54cd\u5e94\u5f0f \u91cd\u5199\u865a\u62dfDOM\u7684\u5b9e\u73b0\u548cTree-Shaking ...... 3.\u62e5\u62b1TypeScript \u00b6 Vue3\u53ef\u4ee5\u66f4\u597d\u7684\u652f\u6301TypeScript 4.\u65b0\u7684\u7279\u6027 \u00b6 Composition API\uff08\u7ec4\u5408API\uff09 setup\u914d\u7f6e ref\u4e0ereactive watch\u4e0ewatchEffect provide\u4e0einject ...... \u65b0\u7684\u5185\u7f6e\u7ec4\u4ef6 Fragment Teleport Suspense \u5176\u4ed6\u6539\u53d8 \u65b0\u7684\u751f\u547d\u5468\u671f\u94a9\u5b50 data \u9009\u9879\u5e94\u59cb\u7ec8\u88ab\u58f0\u660e\u4e3a\u4e00\u4e2a\u51fd\u6570 \u79fb\u9664keyCode\u652f\u6301\u4f5c\u4e3a v-on \u7684\u4fee\u9970\u7b26 ...... \u4e00\u3001\u521b\u5efaVue3.0\u5de5\u7a0b \u00b6 1.\u4f7f\u7528 vue-cli \u521b\u5efa \u00b6 \u5b98\u65b9\u6587\u6863\uff1ahttps://cli.vuejs.org/zh/guide/creating-a-project.html#vue-create ## \u67e5\u770b@vue/cli\u7248\u672c\uff0c\u786e\u4fdd@vue/cli\u7248\u672c\u57284.5.0\u4ee5\u4e0a vue --version ## \u5b89\u88c5\u6216\u8005\u5347\u7ea7\u4f60\u7684@vue/cli npm install -g @vue/cli ## \u521b\u5efa vue create vue_test ## \u542f\u52a8 cd vue_test npm run serve 2.\u4f7f\u7528 vite \u521b\u5efa \u00b6 \u5b98\u65b9\u6587\u6863\uff1ahttps://v3.cn.vuejs.org/guide/installation.html#vite vite\u5b98\u7f51\uff1ahttps://vitejs.cn \u4ec0\u4e48\u662fvite\uff1f\u2014\u2014 \u65b0\u4e00\u4ee3\u524d\u7aef\u6784\u5efa\u5de5\u5177\u3002 \u4f18\u52bf\u5982\u4e0b\uff1a \u5f00\u53d1\u73af\u5883\u4e2d\uff0c\u65e0\u9700\u6253\u5305\u64cd\u4f5c\uff0c\u53ef\u5feb\u901f\u7684\u51b7\u542f\u52a8\u3002 \u8f7b\u91cf\u5feb\u901f\u7684\u70ed\u91cd\u8f7d\uff08HMR\uff09\u3002 \u771f\u6b63\u7684\u6309\u9700\u7f16\u8bd1\uff0c\u4e0d\u518d\u7b49\u5f85\u6574\u4e2a\u5e94\u7528\u7f16\u8bd1\u5b8c\u6210\u3002 \u4f20\u7edf\u6784\u5efa \u4e0e vite\u6784\u5efa\u5bf9\u6bd4\u56fe ## \u521b\u5efa\u5de5\u7a0b npm init vite-app <project-name> ## \u8fdb\u5165\u5de5\u7a0b\u76ee\u5f55 cd <project-name> ## \u5b89\u88c5\u4f9d\u8d56 npm install ## \u8fd0\u884c npm run dev \u4e8c\u3001\u5e38\u7528 Composition API \u00b6 \u5b98\u65b9\u6587\u6863: https://v3.cn.vuejs.org/guide/composition-api-introduction.html 1.\u62c9\u5f00\u5e8f\u5e55\u7684setup \u00b6 \u7406\u89e3\uff1aVue3.0\u4e2d\u4e00\u4e2a\u65b0\u7684\u914d\u7f6e\u9879\uff0c\u503c\u4e3a\u4e00\u4e2a\u51fd\u6570\u3002 setup\u662f\u6240\u6709 Composition API\uff08\u7ec4\u5408API\uff09 \u201c \u8868\u6f14\u7684\u821e\u53f0 \u201d \u3002 \u7ec4\u4ef6\u4e2d\u6240\u7528\u5230\u7684\uff1a\u6570\u636e\u3001\u65b9\u6cd5\u7b49\u7b49\uff0c\u5747\u8981\u914d\u7f6e\u5728setup\u4e2d\u3002 setup\u51fd\u6570\u7684\u4e24\u79cd\u8fd4\u56de\u503c\uff1a \u82e5\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5219\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\u3001\u65b9\u6cd5, \u5728\u6a21\u677f\u4e2d\u5747\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002\uff08\u91cd\u70b9\u5173\u6ce8\uff01\uff09 \u82e5\u8fd4\u56de\u4e00\u4e2a\u6e32\u67d3\u51fd\u6570\uff1a\u5219\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6e32\u67d3\u5185\u5bb9\u3002\uff08\u4e86\u89e3\uff09 \u6ce8\u610f\u70b9\uff1a \u5c3d\u91cf\u4e0d\u8981\u4e0eVue2.x\u914d\u7f6e\u6df7\u7528 Vue2.x\u914d\u7f6e\uff08data\u3001methos\u3001computed...\uff09\u4e2d \u53ef\u4ee5\u8bbf\u95ee\u5230 setup\u4e2d\u7684\u5c5e\u6027\u3001\u65b9\u6cd5\u3002 \u4f46\u5728setup\u4e2d \u4e0d\u80fd\u8bbf\u95ee\u5230 Vue2.x\u914d\u7f6e\uff08data\u3001methos\u3001computed...\uff09\u3002 \u5982\u679c\u6709\u91cd\u540d, setup\u4f18\u5148\u3002 setup\u4e0d\u80fd\u662f\u4e00\u4e2aasync\u51fd\u6570\uff0c\u56e0\u4e3a\u8fd4\u56de\u503c\u4e0d\u518d\u662freturn\u7684\u5bf9\u8c61, \u800c\u662fpromise, \u6a21\u677f\u770b\u4e0d\u5230return\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\u3002\uff08\u540e\u671f\u4e5f\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2aPromise\u5b9e\u4f8b\uff0c\u4f46\u9700\u8981Suspense\u548c\u5f02\u6b65\u7ec4\u4ef6\u7684\u914d\u5408\uff09 2.ref\u51fd\u6570 \u00b6 \u4f5c\u7528: \u5b9a\u4e49\u4e00\u4e2a\u54cd\u5e94\u5f0f\u7684\u6570\u636e \u8bed\u6cd5: const xxx = ref(initValue) \u521b\u5efa\u4e00\u4e2a\u5305\u542b\u54cd\u5e94\u5f0f\u6570\u636e\u7684 \u5f15\u7528\u5bf9\u8c61\uff08reference\u5bf9\u8c61\uff0c\u7b80\u79f0ref\u5bf9\u8c61\uff09 \u3002 JS\u4e2d\u64cd\u4f5c\u6570\u636e\uff1a xxx.value \u6a21\u677f\u4e2d\u8bfb\u53d6\u6570\u636e: \u4e0d\u9700\u8981.value\uff0c\u76f4\u63a5\uff1a <div>{{xxx}}</div> \u5907\u6ce8\uff1a \u63a5\u6536\u7684\u6570\u636e\u53ef\u4ee5\u662f\uff1a\u57fa\u672c\u7c7b\u578b\u3001\u4e5f\u53ef\u4ee5\u662f\u5bf9\u8c61\u7c7b\u578b\u3002 \u57fa\u672c\u7c7b\u578b\u7684\u6570\u636e\uff1a\u54cd\u5e94\u5f0f\u4f9d\u7136\u662f\u9760 Object.defineProperty() \u7684 get \u4e0e set \u5b8c\u6210\u7684\u3002 \u5bf9\u8c61\u7c7b\u578b\u7684\u6570\u636e\uff1a\u5185\u90e8 \u201c \u6c42\u52a9 \u201d \u4e86Vue3.0\u4e2d\u7684\u4e00\u4e2a\u65b0\u51fd\u6570\u2014\u2014 reactive \u51fd\u6570\u3002 3.reactive\u51fd\u6570 \u00b6 \u4f5c\u7528: \u5b9a\u4e49\u4e00\u4e2a \u5bf9\u8c61\u7c7b\u578b \u7684\u54cd\u5e94\u5f0f\u6570\u636e\uff08\u57fa\u672c\u7c7b\u578b\u4e0d\u8981\u7528\u5b83\uff0c\u8981\u7528 ref \u51fd\u6570\uff09 \u8bed\u6cd5\uff1a const \u4ee3\u7406\u5bf9\u8c61= reactive(\u6e90\u5bf9\u8c61) \u63a5\u6536\u4e00\u4e2a\u5bf9\u8c61\uff08\u6216\u6570\u7ec4\uff09\uff0c\u8fd4\u56de\u4e00\u4e2a \u4ee3\u7406\u5bf9\u8c61\uff08Proxy\u7684\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u7b80\u79f0proxy\u5bf9\u8c61\uff09 reactive\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e\u662f\u201c\u6df1\u5c42\u6b21\u7684\u201d\u3002 \u5185\u90e8\u57fa\u4e8e ES6 \u7684 Proxy \u5b9e\u73b0\uff0c\u901a\u8fc7\u4ee3\u7406\u5bf9\u8c61\u64cd\u4f5c\u6e90\u5bf9\u8c61\u5185\u90e8\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\u3002 4.Vue3.0\u4e2d\u7684\u54cd\u5e94\u5f0f\u539f\u7406 \u00b6 vue2.x\u7684\u54cd\u5e94\u5f0f \u00b6 \u5b9e\u73b0\u539f\u7406\uff1a \u5bf9\u8c61\u7c7b\u578b\uff1a\u901a\u8fc7 Object.defineProperty() \u5bf9\u5c5e\u6027\u7684\u8bfb\u53d6\u3001\u4fee\u6539\u8fdb\u884c\u62e6\u622a\uff08\u6570\u636e\u52ab\u6301\uff09\u3002 \u6570\u7ec4\u7c7b\u578b\uff1a\u901a\u8fc7\u91cd\u5199\u66f4\u65b0\u6570\u7ec4\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\u6765\u5b9e\u73b0\u62e6\u622a\u3002\uff08\u5bf9\u6570\u7ec4\u7684\u53d8\u66f4\u65b9\u6cd5\u8fdb\u884c\u4e86\u5305\u88f9\uff09\u3002 Object . defineProperty ( data , 'count' , { get () {}, set () {} }) \u5b58\u5728\u95ee\u9898\uff1a \u65b0\u589e\u5c5e\u6027\u3001\u5220\u9664\u5c5e\u6027, \u754c\u9762\u4e0d\u4f1a\u66f4\u65b0\u3002 \u76f4\u63a5\u901a\u8fc7\u4e0b\u6807\u4fee\u6539\u6570\u7ec4, \u754c\u9762\u4e0d\u4f1a\u81ea\u52a8\u66f4\u65b0\u3002 Vue3.0\u7684\u54cd\u5e94\u5f0f \u00b6 \u5b9e\u73b0\u539f\u7406: \u901a\u8fc7Proxy\uff08\u4ee3\u7406\uff09: \u62e6\u622a\u5bf9\u8c61\u4e2d\u4efb\u610f\u5c5e\u6027\u7684\u53d8\u5316, \u5305\u62ec\uff1a\u5c5e\u6027\u503c\u7684\u8bfb\u5199\u3001\u5c5e\u6027\u7684\u6dfb\u52a0\u3001\u5c5e\u6027\u7684\u5220\u9664\u7b49\u3002 \u901a\u8fc7Reflect\uff08\u53cd\u5c04\uff09: \u5bf9\u6e90\u5bf9\u8c61\u7684\u5c5e\u6027\u8fdb\u884c\u64cd\u4f5c\u3002 MDN\u6587\u6863\u4e2d\u63cf\u8ff0\u7684Proxy\u4e0eReflect\uff1a Proxy\uff1ahttps://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy Reflect\uff1ahttps://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect new Proxy ( data , { // \u62e6\u622a\u8bfb\u53d6\u5c5e\u6027\u503c get ( target , prop ) { return Reflect . get ( target , prop ) }, // \u62e6\u622a\u8bbe\u7f6e\u5c5e\u6027\u503c\u6216\u6dfb\u52a0\u65b0\u5c5e\u6027 set ( target , prop , value ) { return Reflect . set ( target , prop , value ) }, // \u62e6\u622a\u5220\u9664\u5c5e\u6027 deleteProperty ( target , prop ) { return Reflect . deleteProperty ( target , prop ) } }) proxy . name = 'tom' 5.reactive\u5bf9\u6bd4ref \u00b6 \u4ece\u5b9a\u4e49\u6570\u636e\u89d2\u5ea6\u5bf9\u6bd4\uff1a ref\u7528\u6765\u5b9a\u4e49\uff1a \u57fa\u672c\u7c7b\u578b\u6570\u636e \u3002 reactive\u7528\u6765\u5b9a\u4e49\uff1a \u5bf9\u8c61\uff08\u6216\u6570\u7ec4\uff09\u7c7b\u578b\u6570\u636e \u3002 \u5907\u6ce8\uff1aref\u4e5f\u53ef\u4ee5\u7528\u6765\u5b9a\u4e49 \u5bf9\u8c61\uff08\u6216\u6570\u7ec4\uff09\u7c7b\u578b\u6570\u636e , \u5b83\u5185\u90e8\u4f1a\u81ea\u52a8\u901a\u8fc7 reactive \u8f6c\u4e3a \u4ee3\u7406\u5bf9\u8c61 \u3002 \u4ece\u539f\u7406\u89d2\u5ea6\u5bf9\u6bd4\uff1a ref\u901a\u8fc7 Object.defineProperty() \u7684 get \u4e0e set \u6765\u5b9e\u73b0\u54cd\u5e94\u5f0f\uff08\u6570\u636e\u52ab\u6301\uff09\u3002 reactive\u901a\u8fc7\u4f7f\u7528 Proxy \u6765\u5b9e\u73b0\u54cd\u5e94\u5f0f\uff08\u6570\u636e\u52ab\u6301\uff09, \u5e76\u901a\u8fc7 Reflect \u64cd\u4f5c \u6e90\u5bf9\u8c61 \u5185\u90e8\u7684\u6570\u636e\u3002 \u4ece\u4f7f\u7528\u89d2\u5ea6\u5bf9\u6bd4\uff1a ref\u5b9a\u4e49\u7684\u6570\u636e\uff1a\u64cd\u4f5c\u6570\u636e \u9700\u8981 .value \uff0c\u8bfb\u53d6\u6570\u636e\u65f6\u6a21\u677f\u4e2d\u76f4\u63a5\u8bfb\u53d6 \u4e0d\u9700\u8981 .value \u3002 reactive\u5b9a\u4e49\u7684\u6570\u636e\uff1a\u64cd\u4f5c\u6570\u636e\u4e0e\u8bfb\u53d6\u6570\u636e\uff1a \u5747\u4e0d\u9700\u8981 .value \u3002 6.setup\u7684\u4e24\u4e2a\u6ce8\u610f\u70b9 \u00b6 setup\u6267\u884c\u7684\u65f6\u673a \u5728beforeCreate\u4e4b\u524d\u6267\u884c\u4e00\u6b21\uff0cthis\u662fundefined\u3002 setup\u7684\u53c2\u6570 props\uff1a\u503c\u4e3a\u5bf9\u8c61\uff0c\u5305\u542b\uff1a\u7ec4\u4ef6\u5916\u90e8\u4f20\u9012\u8fc7\u6765\uff0c\u4e14\u7ec4\u4ef6\u5185\u90e8\u58f0\u660e\u63a5\u6536\u4e86\u7684\u5c5e\u6027\u3002 context\uff1a\u4e0a\u4e0b\u6587\u5bf9\u8c61 attrs: \u503c\u4e3a\u5bf9\u8c61\uff0c\u5305\u542b\uff1a\u7ec4\u4ef6\u5916\u90e8\u4f20\u9012\u8fc7\u6765\uff0c\u4f46\u6ca1\u6709\u5728props\u914d\u7f6e\u4e2d\u58f0\u660e\u7684\u5c5e\u6027, \u76f8\u5f53\u4e8e this.$attrs \u3002 slots: \u6536\u5230\u7684\u63d2\u69fd\u5185\u5bb9, \u76f8\u5f53\u4e8e this.$slots \u3002 emit: \u5206\u53d1\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u7684\u51fd\u6570, \u76f8\u5f53\u4e8e this.$emit \u3002 7.\u8ba1\u7b97\u5c5e\u6027\u4e0e\u76d1\u89c6 \u00b6 1.computed\u51fd\u6570 \u00b6 \u4e0eVue2.x\u4e2dcomputed\u914d\u7f6e\u529f\u80fd\u4e00\u81f4 \u5199\u6cd5 import { computed } from 'vue' setup (){ ... //\u8ba1\u7b97\u5c5e\u6027\u2014\u2014\u7b80\u5199 let fullName = computed (()=>{ return person . firstName + '-' + person . lastName }) //\u8ba1\u7b97\u5c5e\u6027\u2014\u2014\u5b8c\u6574 let fullName = computed ({ get (){ return person . firstName + '-' + person . lastName }, set ( value ){ const nameArr = value . split ( '-' ) person . firstName = nameArr [ 0 ] person . lastName = nameArr [ 1 ] } }) } 2.watch\u51fd\u6570 \u00b6 \u4e0eVue2.x\u4e2dwatch\u914d\u7f6e\u529f\u80fd\u4e00\u81f4 \u4e24\u4e2a\u5c0f\u201c\u5751\u201d\uff1a \u76d1\u89c6reactive\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e\u65f6\uff1aoldValue\u65e0\u6cd5\u6b63\u786e\u83b7\u53d6\u3001\u5f3a\u5236\u5f00\u542f\u4e86\u6df1\u5ea6\u76d1\u89c6\uff08deep\u914d\u7f6e\u5931\u6548\uff09\u3002 \u76d1\u89c6reactive\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e\u4e2d\u67d0\u4e2a\u5c5e\u6027\u65f6\uff1adeep\u914d\u7f6e\u6709\u6548\u3002 //\u60c5\u51b5\u4e00\uff1a\u76d1\u89c6ref\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e watch ( sum ,( newValue , oldValue )=>{ console . log ( 'sum\u53d8\u5316\u4e86' , newValue , oldValue ) },{ immediate : true }) //\u60c5\u51b5\u4e8c\uff1a\u76d1\u89c6\u591a\u4e2aref\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e watch ([ sum , msg ],( newValue , oldValue )=>{ console . log ( 'sum\u6216msg\u53d8\u5316\u4e86' , newValue , oldValue ) }) /* \u60c5\u51b5\u4e09\uff1a\u76d1\u89c6reactive\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e \u82e5watch\u76d1\u89c6\u7684\u662freactive\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e\uff0c\u5219\u65e0\u6cd5\u6b63\u786e\u83b7\u5f97oldValue\uff01\uff01 \u82e5watch\u76d1\u89c6\u7684\u662freactive\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e\uff0c\u5219\u5f3a\u5236\u5f00\u542f\u4e86\u6df1\u5ea6\u76d1\u89c6 */ watch ( person ,( newValue , oldValue )=>{ console . log ( 'person\u53d8\u5316\u4e86' , newValue , oldValue ) },{ immediate : true , deep : false }) //\u6b64\u5904\u7684deep\u914d\u7f6e\u4e0d\u518d\u594f\u6548 //\u60c5\u51b5\u56db\uff1a\u76d1\u89c6reactive\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e\u4e2d\u7684\u67d0\u4e2a\u5c5e\u6027 watch (()=> person . job ,( newValue , oldValue )=>{ console . log ( 'person\u7684job\u53d8\u5316\u4e86' , newValue , oldValue ) },{ immediate : true , deep : true }) //\u60c5\u51b5\u4e94\uff1a\u76d1\u89c6reactive\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e\u4e2d\u7684\u67d0\u4e9b\u5c5e\u6027 watch ([()=> person . job ,()=> person . name ],( newValue , oldValue )=>{ console . log ( 'person\u7684job\u53d8\u5316\u4e86' , newValue , oldValue ) },{ immediate : true , deep : true }) //\u7279\u6b8a\u60c5\u51b5 watch (()=> person . job ,( newValue , oldValue )=>{ console . log ( 'person\u7684job\u53d8\u5316\u4e86' , newValue , oldValue ) },{ deep : true }) //\u6b64\u5904\u7531\u4e8e\u76d1\u89c6\u7684\u662freactive\u7d20\u5b9a\u4e49\u7684\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e2a\u5c5e\u6027\uff0c\u6240\u4ee5deep\u914d\u7f6e\u6709\u6548 3.watchEffect\u51fd\u6570 \u00b6 watch\u7684\u5957\u8def\u662f\uff1a\u65e2\u8981\u6307\u660e\u76d1\u89c6\u7684\u5c5e\u6027\uff0c\u4e5f\u8981\u6307\u660e\u76d1\u89c6\u7684\u56de\u8c03\u3002 watchEffect\u7684\u5957\u8def\u662f\uff1a\u4e0d\u7528\u6307\u660e\u76d1\u89c6\u54ea\u4e2a\u5c5e\u6027\uff0c\u76d1\u89c6\u7684\u56de\u8c03\u4e2d\u7528\u5230\u54ea\u4e2a\u5c5e\u6027\uff0c\u90a3\u5c31\u76d1\u89c6\u54ea\u4e2a\u5c5e\u6027\u3002 watchEffect\u6709\u70b9\u50cfcomputed\uff1a \u4f46computed\u6ce8\u91cd\u7684\u8ba1\u7b97\u51fa\u6765\u7684\u503c\uff08\u56de\u8c03\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff09\uff0c\u6240\u4ee5\u5fc5\u987b\u8981\u5199\u8fd4\u56de\u503c\u3002 \u800cwatchEffect\u66f4\u6ce8\u91cd\u7684\u662f\u8fc7\u7a0b\uff08\u56de\u8c03\u51fd\u6570\u7684\u51fd\u6570\u4f53\uff09\uff0c\u6240\u4ee5\u4e0d\u7528\u5199\u8fd4\u56de\u503c\u3002 //watchEffect\u6240\u6307\u5b9a\u7684\u56de\u8c03\u4e2d\u7528\u5230\u7684\u6570\u636e\u53ea\u8981\u53d1\u751f\u53d8\u5316\uff0c\u5219\u76f4\u63a5\u91cd\u65b0\u6267\u884c\u56de\u8c03\u3002 watchEffect (()=>{ const x1 = sum . value const x2 = person . age console . log ( 'watchEffect\u914d\u7f6e\u7684\u56de\u8c03\u6267\u884c\u4e86' ) }) 8.\u751f\u547d\u5468\u671f \u00b6 vue2.x\u7684\u751f\u547d\u5468\u671f vue3.0\u7684\u751f\u547d\u5468\u671f 1 Vue3.0\u4e2d\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528Vue2.x\u4e2d\u7684\u751f\u547d\u5468\u671f\u94a9\u5b50\uff0c\u4f46\u6709\u6709\u4e24\u4e2a\u88ab\u66f4\u540d\uff1a beforeDestroy \u6539\u540d\u4e3a beforeUnmount destroyed \u6539\u540d\u4e3a unmounted Vue3.0\u4e5f\u63d0\u4f9b\u4e86 Composition API \u5f62\u5f0f\u7684\u751f\u547d\u5468\u671f\u94a9\u5b50\uff0c\u4e0eVue2.x\u4e2d\u94a9\u5b50\u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b\uff1a beforeCreate ===> setup() created =======> setup() beforeMount ===> onBeforeMount mounted =======> onMounted beforeUpdate ===> onBeforeUpdate updated =======> onUpdated beforeUnmount ==> onBeforeUnmount unmounted =====> onUnmounted 9.\u81ea\u5b9a\u4e49hook\u51fd\u6570 \u00b6 \u4ec0\u4e48\u662fhook\uff1f\u2014\u2014 \u672c\u8d28\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u628asetup\u51fd\u6570\u4e2d\u4f7f\u7528\u7684Composition API\u8fdb\u884c\u4e86\u5c01\u88c5\u3002 \u7c7b\u4f3c\u4e8evue2.x\u4e2d\u7684mixin\u3002 \u81ea\u5b9a\u4e49hook\u7684\u4f18\u52bf: \u590d\u7528\u4ee3\u7801, \u8ba9setup\u4e2d\u7684\u903b\u8f91\u66f4\u6e05\u695a\u6613\u61c2\u3002 10.toRef \u00b6 \u4f5c\u7528\uff1a\u521b\u5efa\u4e00\u4e2a ref \u5bf9\u8c61\uff0c\u5176value\u503c\u6307\u5411\u53e6\u4e00\u4e2a\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e2a\u5c5e\u6027\u3002 \u8bed\u6cd5\uff1a const name = toRef(person,'name') \u5e94\u7528: \u8981\u5c06\u54cd\u5e94\u5f0f\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e2a\u5c5e\u6027\u5355\u72ec\u63d0\u4f9b\u7ed9\u5916\u90e8\u4f7f\u7528\u65f6\u3002 \u6269\u5c55\uff1a toRefs \u4e0e toRef \u529f\u80fd\u4e00\u81f4\uff0c\u4f46\u53ef\u4ee5\u6279\u91cf\u521b\u5efa\u591a\u4e2a ref \u5bf9\u8c61\uff0c\u8bed\u6cd5\uff1a toRefs(person) \u4e09\u3001\u5176\u5b83 Composition API \u00b6 1.shallowReactive \u4e0e shallowRef \u00b6 shallowReactive\uff1a\u53ea\u5904\u7406\u5bf9\u8c61\u6700\u5916\u5c42\u5c5e\u6027\u7684\u54cd\u5e94\u5f0f\uff08\u6d45\u54cd\u5e94\u5f0f\uff09\u3002 shallowRef\uff1a\u53ea\u5904\u7406\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u54cd\u5e94\u5f0f, \u4e0d\u8fdb\u884c\u5bf9\u8c61\u7684\u54cd\u5e94\u5f0f\u5904\u7406\u3002 \u4ec0\u4e48\u65f6\u5019\u4f7f\u7528? \u5982\u679c\u6709\u4e00\u4e2a\u5bf9\u8c61\u6570\u636e\uff0c\u7ed3\u6784\u6bd4\u8f83\u6df1, \u4f46\u53d8\u5316\u65f6\u53ea\u662f\u5916\u5c42\u5c5e\u6027\u53d8\u5316 ===> shallowReactive\u3002 \u5982\u679c\u6709\u4e00\u4e2a\u5bf9\u8c61\u6570\u636e\uff0c\u540e\u7eed\u529f\u80fd\u4e0d\u4f1a\u4fee\u6539\u8be5\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\uff0c\u800c\u662f\u751f\u65b0\u7684\u5bf9\u8c61\u6765\u66ff\u6362 ===> shallowRef\u3002 2.readonly \u4e0e shallowReadonly \u00b6 readonly: \u8ba9\u4e00\u4e2a\u54cd\u5e94\u5f0f\u6570\u636e\u53d8\u4e3a\u53ea\u8bfb\u7684\uff08\u6df1\u53ea\u8bfb\uff09\u3002 shallowReadonly\uff1a\u8ba9\u4e00\u4e2a\u54cd\u5e94\u5f0f\u6570\u636e\u53d8\u4e3a\u53ea\u8bfb\u7684\uff08\u6d45\u53ea\u8bfb\uff09\u3002 \u5e94\u7528\u573a\u666f: \u4e0d\u5e0c\u671b\u6570\u636e\u88ab\u4fee\u6539\u65f6\u3002 3.toRaw \u4e0e markRaw \u00b6 toRaw\uff1a \u4f5c\u7528\uff1a\u5c06\u4e00\u4e2a\u7531 reactive \u751f\u6210\u7684 \u54cd\u5e94\u5f0f\u5bf9\u8c61 \u8f6c\u4e3a \u666e\u901a\u5bf9\u8c61 \u3002 \u4f7f\u7528\u573a\u666f\uff1a\u7528\u4e8e\u8bfb\u53d6\u54cd\u5e94\u5f0f\u5bf9\u8c61\u5bf9\u5e94\u7684\u666e\u901a\u5bf9\u8c61\uff0c\u5bf9\u8fd9\u4e2a\u666e\u901a\u5bf9\u8c61\u7684\u6240\u6709\u64cd\u4f5c\uff0c\u4e0d\u4f1a\u5f15\u8d77\u9875\u9762\u66f4\u65b0\u3002 markRaw\uff1a \u4f5c\u7528\uff1a\u6807\u8bb0\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f7f\u5176\u6c38\u8fdc\u4e0d\u4f1a\u518d\u6210\u4e3a\u54cd\u5e94\u5f0f\u5bf9\u8c61\u3002 \u5e94\u7528\u573a\u666f: \u6709\u4e9b\u503c\u4e0d\u5e94\u88ab\u8bbe\u7f6e\u4e3a\u54cd\u5e94\u5f0f\u7684\uff0c\u4f8b\u5982\u590d\u6742\u7684\u7b2c\u4e09\u65b9\u7c7b\u5e93\u7b49\u3002 \u5f53\u6e32\u67d3\u5177\u6709\u4e0d\u53ef\u53d8\u6570\u636e\u6e90\u7684\u5927\u5217\u8868\u65f6\uff0c\u8df3\u8fc7\u54cd\u5e94\u5f0f\u8f6c\u6362\u53ef\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002 4.customRef \u00b6 \u4f5c\u7528\uff1a\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 ref\uff0c\u5e76\u5bf9\u5176\u4f9d\u8d56\u9879\u8ddf\u8e2a\u548c\u66f4\u65b0\u89e6\u53d1\u8fdb\u884c\u663e\u5f0f\u63a7\u5236\u3002 \u5b9e\u73b0\u9632\u6296\u6548\u679c\uff1a <template> <input type=\"text\" v-model=\"keyword\"> <h3>{{keyword}}</h3> </template> <script> import {ref,customRef} from 'vue' export default { name:'Demo', setup(){ // let keyword = ref('hello') //\u4f7f\u7528Vue\u51c6\u5907\u597d\u7684\u5185\u7f6eref //\u81ea\u5b9a\u4e49\u4e00\u4e2amyRef function myRef(value,delay){ let timer //\u901a\u8fc7customRef\u53bb\u5b9e\u73b0\u81ea\u5b9a\u4e49 return customRef((track,trigger)=>{ return{ get(){ track() //\u544a\u8bc9Vue\u8fd9\u4e2avalue\u503c\u662f\u9700\u8981\u88ab\u201c\u8ffd\u8e2a\u201d\u7684 return value }, set(newValue){ clearTimeout(timer) timer = setTimeout(()=>{ value = newValue trigger() //\u544a\u8bc9Vue\u53bb\u66f4\u65b0\u754c\u9762 },delay) } } }) } let keyword = myRef('hello',500) //\u4f7f\u7528\u7a0b\u5e8f\u5458\u81ea\u5b9a\u4e49\u7684ref return { keyword } } } </script> 5.provide \u4e0e inject \u00b6 \u4f5c\u7528\uff1a\u5b9e\u73b0 \u7956\u4e0e\u540e\u4ee3\u7ec4\u4ef6\u95f4 \u901a\u4fe1 \u5957\u8def\uff1a\u7236\u7ec4\u4ef6\u6709\u4e00\u4e2a provide \u9009\u9879\u6765\u63d0\u4f9b\u6570\u636e\uff0c\u540e\u4ee3\u7ec4\u4ef6\u6709\u4e00\u4e2a inject \u9009\u9879\u6765\u5f00\u59cb\u4f7f\u7528\u8fd9\u4e9b\u6570\u636e \u5177\u4f53\u5199\u6cd5\uff1a \u7956\u7ec4\u4ef6\u4e2d\uff1a setup (){ ...... let car = reactive ({ name : '\u5954\u9a70' , price : '40\u4e07' }) provide ( 'car' , car ) ...... } \u540e\u4ee3\u7ec4\u4ef6\u4e2d\uff1a setup ( props , context ){ ...... const car = inject ( 'car' ) return { car } ...... } 6.\u54cd\u5e94\u5f0f\u6570\u636e\u7684\u5224\u65ad \u00b6 isRef: \u68c0\u67e5\u4e00\u4e2a\u503c\u662f\u5426\u4e3a\u4e00\u4e2a ref \u5bf9\u8c61 isReactive: \u68c0\u67e5\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f\u7531 reactive \u521b\u5efa\u7684\u54cd\u5e94\u5f0f\u4ee3\u7406 isReadonly: \u68c0\u67e5\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f\u7531 readonly \u521b\u5efa\u7684\u53ea\u8bfb\u4ee3\u7406 isProxy: \u68c0\u67e5\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f\u7531 reactive \u6216\u8005 readonly \u65b9\u6cd5\u521b\u5efa\u7684\u4ee3\u7406 \u56db\u3001Composition API \u7684\u4f18\u52bf \u00b6 1.Options API \u5b58\u5728\u7684\u95ee\u9898 \u00b6 \u4f7f\u7528\u4f20\u7edfOptionsAPI\u4e2d\uff0c\u65b0\u589e\u6216\u8005\u4fee\u6539\u4e00\u4e2a\u9700\u6c42\uff0c\u5c31\u9700\u8981\u5206\u522b\u5728data\uff0cmethods\uff0ccomputed\u91cc\u4fee\u6539 \u3002 2.Composition API \u7684\u4f18\u52bf \u00b6 \u6211\u4eec\u53ef\u4ee5\u66f4\u52a0\u4f18\u96c5\u7684\u7ec4\u7ec7\u6211\u4eec\u7684\u4ee3\u7801\uff0c\u51fd\u6570\u3002\u8ba9\u76f8\u5173\u529f\u80fd\u7684\u4ee3\u7801\u66f4\u52a0\u6709\u5e8f\u7684\u7ec4\u7ec7\u5728\u4e00\u8d77\u3002 \u4e94\u3001\u65b0\u7684\u7ec4\u4ef6 \u00b6 1.Fragment \u00b6 \u5728Vue2\u4e2d: \u7ec4\u4ef6\u5fc5\u987b\u6709\u4e00\u4e2a\u6839\u6807\u7b7e \u5728Vue3\u4e2d: \u7ec4\u4ef6\u53ef\u4ee5\u6ca1\u6709\u6839\u6807\u7b7e, \u5185\u90e8\u4f1a\u5c06\u591a\u4e2a\u6807\u7b7e\u5305\u542b\u5728\u4e00\u4e2aFragment\u865a\u62df\u5143\u7d20\u4e2d \u597d\u5904: \u51cf\u5c11\u6807\u7b7e\u5c42\u7ea7, \u51cf\u5c0f\u5185\u5b58\u5360\u7528 2.Teleport \u00b6 \u4ec0\u4e48\u662fTeleport\uff1f\u2014\u2014 Teleport \u662f\u4e00\u79cd\u80fd\u591f\u5c06\u6211\u4eec\u7684 \u7ec4\u4ef6html\u7ed3\u6784 \u79fb\u52a8\u5230\u6307\u5b9a\u4f4d\u7f6e\u7684\u6280\u672f\u3002 <teleport to=\"\u79fb\u52a8\u4f4d\u7f6e\"> <div v-if=\"isShow\" class=\"mask\"> <div class=\"dialog\"> <h3>\u6211\u662f\u4e00\u4e2a\u5f39\u7a97</h3> <button @click=\"isShow = false\">\u5173\u95ed\u5f39\u7a97</button> </div> </div> </teleport> 3.Suspense \u00b6 \u7b49\u5f85\u5f02\u6b65\u7ec4\u4ef6\u65f6\u6e32\u67d3\u4e00\u4e9b\u989d\u5916\u5185\u5bb9\uff0c\u8ba9\u5e94\u7528\u6709\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c \u4f7f\u7528\u6b65\u9aa4\uff1a \u5f02\u6b65\u5f15\u5165\u7ec4\u4ef6 import { defineAsyncComponent } from 'vue' const Child = defineAsyncComponent (()=> import ( './components/Child.vue' )) \u4f7f\u7528 Suspense \u5305\u88f9\u7ec4\u4ef6\uff0c\u5e76\u914d\u7f6e\u597d default \u4e0e fallback <template> <div class=\"app\"> <h3>\u6211\u662fApp\u7ec4\u4ef6</h3> <Suspense> <template v-slot:default> <Child/> </template> <template v-slot:fallback> <h3>\u52a0\u8f7d\u4e2d.....</h3> </template> </Suspense> </div> </template> \u516d\u3001\u5176\u4ed6 \u00b6 1.\u5168\u5c40API\u7684\u8f6c\u79fb \u00b6 Vue 2.x \u6709\u8bb8\u591a\u5168\u5c40 API \u548c\u914d\u7f6e\u3002 \u4f8b\u5982\uff1a\u6ce8\u518c\u5168\u5c40\u7ec4\u4ef6\u3001\u6ce8\u518c\u5168\u5c40\u6307\u4ee4\u7b49\u3002 //\u6ce8\u518c\u5168\u5c40\u7ec4\u4ef6 Vue . component ( 'MyButton' , { data : () => ({ count : 0 }), template : '<button @click=\"count++\">Clicked {{ count }} times.</button>' }) //\u6ce8\u518c\u5168\u5c40\u6307\u4ee4 Vue . directive ( 'focus' , { inserted : el => el . focus () } Vue3.0\u4e2d\u5bf9\u8fd9\u4e9bAPI\u505a\u51fa\u4e86\u8c03\u6574\uff1a \u5c06\u5168\u5c40\u7684API\uff0c\u5373\uff1a Vue.xxx \u8c03\u6574\u5230\u5e94\u7528\u5b9e\u4f8b\uff08 app \uff09\u4e0a 2.x \u5168\u5c40 API\uff08 Vue \uff09 3.x \u5b9e\u4f8b API ( app ) Vue.config.xxxx app.config.xxxx Vue.config.productionTip \u79fb\u9664 Vue.component app.component Vue.directive app.directive Vue.mixin app.mixin Vue.use app.use Vue.prototype app.config.globalProperties 2.\u5176\u4ed6\u6539\u53d8 \u00b6 data\u9009\u9879\u5e94\u59cb\u7ec8\u88ab\u58f0\u660e\u4e3a\u4e00\u4e2a\u51fd\u6570\u3002 \u8fc7\u5ea6\u7c7b\u540d\u7684\u66f4\u6539\uff1a Vue2.x\u5199\u6cd5 . v-enter , . v-leave-to { opacity : 0 ; } . v-leave , . v-enter-to { opacity : 1 ; } Vue3.x\u5199\u6cd5 . v-enter-from , . v-leave-to { opacity : 0 ; } . v-leave-from , . v-enter-to { opacity : 1 ; } \u79fb\u9664 keyCode\u4f5c\u4e3a v-on \u7684\u4fee\u9970\u7b26\uff0c\u540c\u65f6\u4e5f\u4e0d\u518d\u652f\u6301 config.keyCodes \u79fb\u9664 v-on.native \u4fee\u9970\u7b26 \u7236\u7ec4\u4ef6\u4e2d\u7ed1\u5b9a\u4e8b\u4ef6 <my-component v-on:close=\"handleComponentEvent\" v-on:click=\"handleNativeClickEvent\" /> \u5b50\u7ec4\u4ef6\u4e2d\u58f0\u660e\u81ea\u5b9a\u4e49\u4e8b\u4ef6 <script> export default { emits: ['close'] } </script> \u79fb\u9664 \u8fc7\u6ee4\u5668\uff08filter\uff09 \u8fc7\u6ee4\u5668\u867d\u7136\u8fd9\u770b\u8d77\u6765\u5f88\u65b9\u4fbf\uff0c\u4f46\u5b83\u9700\u8981\u4e00\u4e2a\u81ea\u5b9a\u4e49\u8bed\u6cd5\uff0c\u6253\u7834\u5927\u62ec\u53f7\u5185\u8868\u8fbe\u5f0f\u662f \u201c\u53ea\u662f JavaScript\u201d \u7684\u5047\u8bbe\uff0c\u8fd9\u4e0d\u4ec5\u6709\u5b66\u4e60\u6210\u672c\uff0c\u800c\u4e14\u6709\u5b9e\u73b0\u6210\u672c\uff01\u5efa\u8bae\u7528\u65b9\u6cd5\u8c03\u7528\u6216\u8ba1\u7b97\u5c5e\u6027\u53bb\u66ff\u6362\u8fc7\u6ee4\u5668\u3002 ......","title":"vue3\u5feb\u901f\u5165\u95e8"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#vue3","text":"","title":"Vue3\u5feb\u901f\u4e0a\u624b"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#1vue3","text":"2020\u5e749\u670818\u65e5\uff0cVue.js\u53d1\u5e033.0\u7248\u672c\uff0c\u4ee3\u53f7\uff1aOne Piece\uff08\u6d77\u8d3c\u738b\uff09 \u8017\u65f62\u5e74\u591a\u3001 2600+\u6b21\u63d0\u4ea4 \u3001 30+\u4e2aRFC \u3001 600+\u6b21PR \u3001 99\u4f4d\u8d21\u732e\u8005 github\u4e0a\u7684tags\u5730\u5740\uff1ahttps://github.com/vuejs/vue-next/releases/tag/v3.0.0","title":"1.Vue3\u7b80\u4ecb"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#2vue3","text":"","title":"2.Vue3\u5e26\u6765\u4e86\u4ec0\u4e48"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#1","text":"\u6253\u5305\u5927\u5c0f\u51cf\u5c1141% \u521d\u6b21\u6e32\u67d3\u5feb55%, \u66f4\u65b0\u6e32\u67d3\u5feb133% \u5185\u5b58\u51cf\u5c1154% ......","title":"1.\u6027\u80fd\u7684\u63d0\u5347"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#2","text":"\u4f7f\u7528Proxy\u4ee3\u66ffdefineProperty\u5b9e\u73b0\u54cd\u5e94\u5f0f \u91cd\u5199\u865a\u62dfDOM\u7684\u5b9e\u73b0\u548cTree-Shaking ......","title":"2.\u6e90\u7801\u7684\u5347\u7ea7"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#3typescript","text":"Vue3\u53ef\u4ee5\u66f4\u597d\u7684\u652f\u6301TypeScript","title":"3.\u62e5\u62b1TypeScript"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#4","text":"Composition API\uff08\u7ec4\u5408API\uff09 setup\u914d\u7f6e ref\u4e0ereactive watch\u4e0ewatchEffect provide\u4e0einject ...... \u65b0\u7684\u5185\u7f6e\u7ec4\u4ef6 Fragment Teleport Suspense \u5176\u4ed6\u6539\u53d8 \u65b0\u7684\u751f\u547d\u5468\u671f\u94a9\u5b50 data \u9009\u9879\u5e94\u59cb\u7ec8\u88ab\u58f0\u660e\u4e3a\u4e00\u4e2a\u51fd\u6570 \u79fb\u9664keyCode\u652f\u6301\u4f5c\u4e3a v-on \u7684\u4fee\u9970\u7b26 ......","title":"4.\u65b0\u7684\u7279\u6027"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#vue30","text":"","title":"\u4e00\u3001\u521b\u5efaVue3.0\u5de5\u7a0b"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#1-vue-cli","text":"\u5b98\u65b9\u6587\u6863\uff1ahttps://cli.vuejs.org/zh/guide/creating-a-project.html#vue-create ## \u67e5\u770b@vue/cli\u7248\u672c\uff0c\u786e\u4fdd@vue/cli\u7248\u672c\u57284.5.0\u4ee5\u4e0a vue --version ## \u5b89\u88c5\u6216\u8005\u5347\u7ea7\u4f60\u7684@vue/cli npm install -g @vue/cli ## \u521b\u5efa vue create vue_test ## \u542f\u52a8 cd vue_test npm run serve","title":"1.\u4f7f\u7528 vue-cli \u521b\u5efa"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#2-vite","text":"\u5b98\u65b9\u6587\u6863\uff1ahttps://v3.cn.vuejs.org/guide/installation.html#vite vite\u5b98\u7f51\uff1ahttps://vitejs.cn \u4ec0\u4e48\u662fvite\uff1f\u2014\u2014 \u65b0\u4e00\u4ee3\u524d\u7aef\u6784\u5efa\u5de5\u5177\u3002 \u4f18\u52bf\u5982\u4e0b\uff1a \u5f00\u53d1\u73af\u5883\u4e2d\uff0c\u65e0\u9700\u6253\u5305\u64cd\u4f5c\uff0c\u53ef\u5feb\u901f\u7684\u51b7\u542f\u52a8\u3002 \u8f7b\u91cf\u5feb\u901f\u7684\u70ed\u91cd\u8f7d\uff08HMR\uff09\u3002 \u771f\u6b63\u7684\u6309\u9700\u7f16\u8bd1\uff0c\u4e0d\u518d\u7b49\u5f85\u6574\u4e2a\u5e94\u7528\u7f16\u8bd1\u5b8c\u6210\u3002 \u4f20\u7edf\u6784\u5efa \u4e0e vite\u6784\u5efa\u5bf9\u6bd4\u56fe ## \u521b\u5efa\u5de5\u7a0b npm init vite-app <project-name> ## \u8fdb\u5165\u5de5\u7a0b\u76ee\u5f55 cd <project-name> ## \u5b89\u88c5\u4f9d\u8d56 npm install ## \u8fd0\u884c npm run dev","title":"2.\u4f7f\u7528 vite \u521b\u5efa"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#composition-api","text":"\u5b98\u65b9\u6587\u6863: https://v3.cn.vuejs.org/guide/composition-api-introduction.html","title":"\u4e8c\u3001\u5e38\u7528 Composition API"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#1setup","text":"\u7406\u89e3\uff1aVue3.0\u4e2d\u4e00\u4e2a\u65b0\u7684\u914d\u7f6e\u9879\uff0c\u503c\u4e3a\u4e00\u4e2a\u51fd\u6570\u3002 setup\u662f\u6240\u6709 Composition API\uff08\u7ec4\u5408API\uff09 \u201c \u8868\u6f14\u7684\u821e\u53f0 \u201d \u3002 \u7ec4\u4ef6\u4e2d\u6240\u7528\u5230\u7684\uff1a\u6570\u636e\u3001\u65b9\u6cd5\u7b49\u7b49\uff0c\u5747\u8981\u914d\u7f6e\u5728setup\u4e2d\u3002 setup\u51fd\u6570\u7684\u4e24\u79cd\u8fd4\u56de\u503c\uff1a \u82e5\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5219\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\u3001\u65b9\u6cd5, \u5728\u6a21\u677f\u4e2d\u5747\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002\uff08\u91cd\u70b9\u5173\u6ce8\uff01\uff09 \u82e5\u8fd4\u56de\u4e00\u4e2a\u6e32\u67d3\u51fd\u6570\uff1a\u5219\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6e32\u67d3\u5185\u5bb9\u3002\uff08\u4e86\u89e3\uff09 \u6ce8\u610f\u70b9\uff1a \u5c3d\u91cf\u4e0d\u8981\u4e0eVue2.x\u914d\u7f6e\u6df7\u7528 Vue2.x\u914d\u7f6e\uff08data\u3001methos\u3001computed...\uff09\u4e2d \u53ef\u4ee5\u8bbf\u95ee\u5230 setup\u4e2d\u7684\u5c5e\u6027\u3001\u65b9\u6cd5\u3002 \u4f46\u5728setup\u4e2d \u4e0d\u80fd\u8bbf\u95ee\u5230 Vue2.x\u914d\u7f6e\uff08data\u3001methos\u3001computed...\uff09\u3002 \u5982\u679c\u6709\u91cd\u540d, setup\u4f18\u5148\u3002 setup\u4e0d\u80fd\u662f\u4e00\u4e2aasync\u51fd\u6570\uff0c\u56e0\u4e3a\u8fd4\u56de\u503c\u4e0d\u518d\u662freturn\u7684\u5bf9\u8c61, \u800c\u662fpromise, \u6a21\u677f\u770b\u4e0d\u5230return\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\u3002\uff08\u540e\u671f\u4e5f\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2aPromise\u5b9e\u4f8b\uff0c\u4f46\u9700\u8981Suspense\u548c\u5f02\u6b65\u7ec4\u4ef6\u7684\u914d\u5408\uff09","title":"1.\u62c9\u5f00\u5e8f\u5e55\u7684setup"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#2ref","text":"\u4f5c\u7528: \u5b9a\u4e49\u4e00\u4e2a\u54cd\u5e94\u5f0f\u7684\u6570\u636e \u8bed\u6cd5: const xxx = ref(initValue) \u521b\u5efa\u4e00\u4e2a\u5305\u542b\u54cd\u5e94\u5f0f\u6570\u636e\u7684 \u5f15\u7528\u5bf9\u8c61\uff08reference\u5bf9\u8c61\uff0c\u7b80\u79f0ref\u5bf9\u8c61\uff09 \u3002 JS\u4e2d\u64cd\u4f5c\u6570\u636e\uff1a xxx.value \u6a21\u677f\u4e2d\u8bfb\u53d6\u6570\u636e: \u4e0d\u9700\u8981.value\uff0c\u76f4\u63a5\uff1a <div>{{xxx}}</div> \u5907\u6ce8\uff1a \u63a5\u6536\u7684\u6570\u636e\u53ef\u4ee5\u662f\uff1a\u57fa\u672c\u7c7b\u578b\u3001\u4e5f\u53ef\u4ee5\u662f\u5bf9\u8c61\u7c7b\u578b\u3002 \u57fa\u672c\u7c7b\u578b\u7684\u6570\u636e\uff1a\u54cd\u5e94\u5f0f\u4f9d\u7136\u662f\u9760 Object.defineProperty() \u7684 get \u4e0e set \u5b8c\u6210\u7684\u3002 \u5bf9\u8c61\u7c7b\u578b\u7684\u6570\u636e\uff1a\u5185\u90e8 \u201c \u6c42\u52a9 \u201d \u4e86Vue3.0\u4e2d\u7684\u4e00\u4e2a\u65b0\u51fd\u6570\u2014\u2014 reactive \u51fd\u6570\u3002","title":"2.ref\u51fd\u6570"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#3reactive","text":"\u4f5c\u7528: \u5b9a\u4e49\u4e00\u4e2a \u5bf9\u8c61\u7c7b\u578b \u7684\u54cd\u5e94\u5f0f\u6570\u636e\uff08\u57fa\u672c\u7c7b\u578b\u4e0d\u8981\u7528\u5b83\uff0c\u8981\u7528 ref \u51fd\u6570\uff09 \u8bed\u6cd5\uff1a const \u4ee3\u7406\u5bf9\u8c61= reactive(\u6e90\u5bf9\u8c61) \u63a5\u6536\u4e00\u4e2a\u5bf9\u8c61\uff08\u6216\u6570\u7ec4\uff09\uff0c\u8fd4\u56de\u4e00\u4e2a \u4ee3\u7406\u5bf9\u8c61\uff08Proxy\u7684\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u7b80\u79f0proxy\u5bf9\u8c61\uff09 reactive\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e\u662f\u201c\u6df1\u5c42\u6b21\u7684\u201d\u3002 \u5185\u90e8\u57fa\u4e8e ES6 \u7684 Proxy \u5b9e\u73b0\uff0c\u901a\u8fc7\u4ee3\u7406\u5bf9\u8c61\u64cd\u4f5c\u6e90\u5bf9\u8c61\u5185\u90e8\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\u3002","title":"3.reactive\u51fd\u6570"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#4vue30","text":"","title":"4.Vue3.0\u4e2d\u7684\u54cd\u5e94\u5f0f\u539f\u7406"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#vue2x","text":"\u5b9e\u73b0\u539f\u7406\uff1a \u5bf9\u8c61\u7c7b\u578b\uff1a\u901a\u8fc7 Object.defineProperty() \u5bf9\u5c5e\u6027\u7684\u8bfb\u53d6\u3001\u4fee\u6539\u8fdb\u884c\u62e6\u622a\uff08\u6570\u636e\u52ab\u6301\uff09\u3002 \u6570\u7ec4\u7c7b\u578b\uff1a\u901a\u8fc7\u91cd\u5199\u66f4\u65b0\u6570\u7ec4\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\u6765\u5b9e\u73b0\u62e6\u622a\u3002\uff08\u5bf9\u6570\u7ec4\u7684\u53d8\u66f4\u65b9\u6cd5\u8fdb\u884c\u4e86\u5305\u88f9\uff09\u3002 Object . defineProperty ( data , 'count' , { get () {}, set () {} }) \u5b58\u5728\u95ee\u9898\uff1a \u65b0\u589e\u5c5e\u6027\u3001\u5220\u9664\u5c5e\u6027, \u754c\u9762\u4e0d\u4f1a\u66f4\u65b0\u3002 \u76f4\u63a5\u901a\u8fc7\u4e0b\u6807\u4fee\u6539\u6570\u7ec4, \u754c\u9762\u4e0d\u4f1a\u81ea\u52a8\u66f4\u65b0\u3002","title":"vue2.x\u7684\u54cd\u5e94\u5f0f"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#vue30_1","text":"\u5b9e\u73b0\u539f\u7406: \u901a\u8fc7Proxy\uff08\u4ee3\u7406\uff09: \u62e6\u622a\u5bf9\u8c61\u4e2d\u4efb\u610f\u5c5e\u6027\u7684\u53d8\u5316, \u5305\u62ec\uff1a\u5c5e\u6027\u503c\u7684\u8bfb\u5199\u3001\u5c5e\u6027\u7684\u6dfb\u52a0\u3001\u5c5e\u6027\u7684\u5220\u9664\u7b49\u3002 \u901a\u8fc7Reflect\uff08\u53cd\u5c04\uff09: \u5bf9\u6e90\u5bf9\u8c61\u7684\u5c5e\u6027\u8fdb\u884c\u64cd\u4f5c\u3002 MDN\u6587\u6863\u4e2d\u63cf\u8ff0\u7684Proxy\u4e0eReflect\uff1a Proxy\uff1ahttps://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy Reflect\uff1ahttps://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect new Proxy ( data , { // \u62e6\u622a\u8bfb\u53d6\u5c5e\u6027\u503c get ( target , prop ) { return Reflect . get ( target , prop ) }, // \u62e6\u622a\u8bbe\u7f6e\u5c5e\u6027\u503c\u6216\u6dfb\u52a0\u65b0\u5c5e\u6027 set ( target , prop , value ) { return Reflect . set ( target , prop , value ) }, // \u62e6\u622a\u5220\u9664\u5c5e\u6027 deleteProperty ( target , prop ) { return Reflect . deleteProperty ( target , prop ) } }) proxy . name = 'tom'","title":"Vue3.0\u7684\u54cd\u5e94\u5f0f"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#5reactiveref","text":"\u4ece\u5b9a\u4e49\u6570\u636e\u89d2\u5ea6\u5bf9\u6bd4\uff1a ref\u7528\u6765\u5b9a\u4e49\uff1a \u57fa\u672c\u7c7b\u578b\u6570\u636e \u3002 reactive\u7528\u6765\u5b9a\u4e49\uff1a \u5bf9\u8c61\uff08\u6216\u6570\u7ec4\uff09\u7c7b\u578b\u6570\u636e \u3002 \u5907\u6ce8\uff1aref\u4e5f\u53ef\u4ee5\u7528\u6765\u5b9a\u4e49 \u5bf9\u8c61\uff08\u6216\u6570\u7ec4\uff09\u7c7b\u578b\u6570\u636e , \u5b83\u5185\u90e8\u4f1a\u81ea\u52a8\u901a\u8fc7 reactive \u8f6c\u4e3a \u4ee3\u7406\u5bf9\u8c61 \u3002 \u4ece\u539f\u7406\u89d2\u5ea6\u5bf9\u6bd4\uff1a ref\u901a\u8fc7 Object.defineProperty() \u7684 get \u4e0e set \u6765\u5b9e\u73b0\u54cd\u5e94\u5f0f\uff08\u6570\u636e\u52ab\u6301\uff09\u3002 reactive\u901a\u8fc7\u4f7f\u7528 Proxy \u6765\u5b9e\u73b0\u54cd\u5e94\u5f0f\uff08\u6570\u636e\u52ab\u6301\uff09, \u5e76\u901a\u8fc7 Reflect \u64cd\u4f5c \u6e90\u5bf9\u8c61 \u5185\u90e8\u7684\u6570\u636e\u3002 \u4ece\u4f7f\u7528\u89d2\u5ea6\u5bf9\u6bd4\uff1a ref\u5b9a\u4e49\u7684\u6570\u636e\uff1a\u64cd\u4f5c\u6570\u636e \u9700\u8981 .value \uff0c\u8bfb\u53d6\u6570\u636e\u65f6\u6a21\u677f\u4e2d\u76f4\u63a5\u8bfb\u53d6 \u4e0d\u9700\u8981 .value \u3002 reactive\u5b9a\u4e49\u7684\u6570\u636e\uff1a\u64cd\u4f5c\u6570\u636e\u4e0e\u8bfb\u53d6\u6570\u636e\uff1a \u5747\u4e0d\u9700\u8981 .value \u3002","title":"5.reactive\u5bf9\u6bd4ref"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#6setup","text":"setup\u6267\u884c\u7684\u65f6\u673a \u5728beforeCreate\u4e4b\u524d\u6267\u884c\u4e00\u6b21\uff0cthis\u662fundefined\u3002 setup\u7684\u53c2\u6570 props\uff1a\u503c\u4e3a\u5bf9\u8c61\uff0c\u5305\u542b\uff1a\u7ec4\u4ef6\u5916\u90e8\u4f20\u9012\u8fc7\u6765\uff0c\u4e14\u7ec4\u4ef6\u5185\u90e8\u58f0\u660e\u63a5\u6536\u4e86\u7684\u5c5e\u6027\u3002 context\uff1a\u4e0a\u4e0b\u6587\u5bf9\u8c61 attrs: \u503c\u4e3a\u5bf9\u8c61\uff0c\u5305\u542b\uff1a\u7ec4\u4ef6\u5916\u90e8\u4f20\u9012\u8fc7\u6765\uff0c\u4f46\u6ca1\u6709\u5728props\u914d\u7f6e\u4e2d\u58f0\u660e\u7684\u5c5e\u6027, \u76f8\u5f53\u4e8e this.$attrs \u3002 slots: \u6536\u5230\u7684\u63d2\u69fd\u5185\u5bb9, \u76f8\u5f53\u4e8e this.$slots \u3002 emit: \u5206\u53d1\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u7684\u51fd\u6570, \u76f8\u5f53\u4e8e this.$emit \u3002","title":"6.setup\u7684\u4e24\u4e2a\u6ce8\u610f\u70b9"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#7","text":"","title":"7.\u8ba1\u7b97\u5c5e\u6027\u4e0e\u76d1\u89c6"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#1computed","text":"\u4e0eVue2.x\u4e2dcomputed\u914d\u7f6e\u529f\u80fd\u4e00\u81f4 \u5199\u6cd5 import { computed } from 'vue' setup (){ ... //\u8ba1\u7b97\u5c5e\u6027\u2014\u2014\u7b80\u5199 let fullName = computed (()=>{ return person . firstName + '-' + person . lastName }) //\u8ba1\u7b97\u5c5e\u6027\u2014\u2014\u5b8c\u6574 let fullName = computed ({ get (){ return person . firstName + '-' + person . lastName }, set ( value ){ const nameArr = value . split ( '-' ) person . firstName = nameArr [ 0 ] person . lastName = nameArr [ 1 ] } }) }","title":"1.computed\u51fd\u6570"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#2watch","text":"\u4e0eVue2.x\u4e2dwatch\u914d\u7f6e\u529f\u80fd\u4e00\u81f4 \u4e24\u4e2a\u5c0f\u201c\u5751\u201d\uff1a \u76d1\u89c6reactive\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e\u65f6\uff1aoldValue\u65e0\u6cd5\u6b63\u786e\u83b7\u53d6\u3001\u5f3a\u5236\u5f00\u542f\u4e86\u6df1\u5ea6\u76d1\u89c6\uff08deep\u914d\u7f6e\u5931\u6548\uff09\u3002 \u76d1\u89c6reactive\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e\u4e2d\u67d0\u4e2a\u5c5e\u6027\u65f6\uff1adeep\u914d\u7f6e\u6709\u6548\u3002 //\u60c5\u51b5\u4e00\uff1a\u76d1\u89c6ref\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e watch ( sum ,( newValue , oldValue )=>{ console . log ( 'sum\u53d8\u5316\u4e86' , newValue , oldValue ) },{ immediate : true }) //\u60c5\u51b5\u4e8c\uff1a\u76d1\u89c6\u591a\u4e2aref\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e watch ([ sum , msg ],( newValue , oldValue )=>{ console . log ( 'sum\u6216msg\u53d8\u5316\u4e86' , newValue , oldValue ) }) /* \u60c5\u51b5\u4e09\uff1a\u76d1\u89c6reactive\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e \u82e5watch\u76d1\u89c6\u7684\u662freactive\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e\uff0c\u5219\u65e0\u6cd5\u6b63\u786e\u83b7\u5f97oldValue\uff01\uff01 \u82e5watch\u76d1\u89c6\u7684\u662freactive\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e\uff0c\u5219\u5f3a\u5236\u5f00\u542f\u4e86\u6df1\u5ea6\u76d1\u89c6 */ watch ( person ,( newValue , oldValue )=>{ console . log ( 'person\u53d8\u5316\u4e86' , newValue , oldValue ) },{ immediate : true , deep : false }) //\u6b64\u5904\u7684deep\u914d\u7f6e\u4e0d\u518d\u594f\u6548 //\u60c5\u51b5\u56db\uff1a\u76d1\u89c6reactive\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e\u4e2d\u7684\u67d0\u4e2a\u5c5e\u6027 watch (()=> person . job ,( newValue , oldValue )=>{ console . log ( 'person\u7684job\u53d8\u5316\u4e86' , newValue , oldValue ) },{ immediate : true , deep : true }) //\u60c5\u51b5\u4e94\uff1a\u76d1\u89c6reactive\u5b9a\u4e49\u7684\u54cd\u5e94\u5f0f\u6570\u636e\u4e2d\u7684\u67d0\u4e9b\u5c5e\u6027 watch ([()=> person . job ,()=> person . name ],( newValue , oldValue )=>{ console . log ( 'person\u7684job\u53d8\u5316\u4e86' , newValue , oldValue ) },{ immediate : true , deep : true }) //\u7279\u6b8a\u60c5\u51b5 watch (()=> person . job ,( newValue , oldValue )=>{ console . log ( 'person\u7684job\u53d8\u5316\u4e86' , newValue , oldValue ) },{ deep : true }) //\u6b64\u5904\u7531\u4e8e\u76d1\u89c6\u7684\u662freactive\u7d20\u5b9a\u4e49\u7684\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e2a\u5c5e\u6027\uff0c\u6240\u4ee5deep\u914d\u7f6e\u6709\u6548","title":"2.watch\u51fd\u6570"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#3watcheffect","text":"watch\u7684\u5957\u8def\u662f\uff1a\u65e2\u8981\u6307\u660e\u76d1\u89c6\u7684\u5c5e\u6027\uff0c\u4e5f\u8981\u6307\u660e\u76d1\u89c6\u7684\u56de\u8c03\u3002 watchEffect\u7684\u5957\u8def\u662f\uff1a\u4e0d\u7528\u6307\u660e\u76d1\u89c6\u54ea\u4e2a\u5c5e\u6027\uff0c\u76d1\u89c6\u7684\u56de\u8c03\u4e2d\u7528\u5230\u54ea\u4e2a\u5c5e\u6027\uff0c\u90a3\u5c31\u76d1\u89c6\u54ea\u4e2a\u5c5e\u6027\u3002 watchEffect\u6709\u70b9\u50cfcomputed\uff1a \u4f46computed\u6ce8\u91cd\u7684\u8ba1\u7b97\u51fa\u6765\u7684\u503c\uff08\u56de\u8c03\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff09\uff0c\u6240\u4ee5\u5fc5\u987b\u8981\u5199\u8fd4\u56de\u503c\u3002 \u800cwatchEffect\u66f4\u6ce8\u91cd\u7684\u662f\u8fc7\u7a0b\uff08\u56de\u8c03\u51fd\u6570\u7684\u51fd\u6570\u4f53\uff09\uff0c\u6240\u4ee5\u4e0d\u7528\u5199\u8fd4\u56de\u503c\u3002 //watchEffect\u6240\u6307\u5b9a\u7684\u56de\u8c03\u4e2d\u7528\u5230\u7684\u6570\u636e\u53ea\u8981\u53d1\u751f\u53d8\u5316\uff0c\u5219\u76f4\u63a5\u91cd\u65b0\u6267\u884c\u56de\u8c03\u3002 watchEffect (()=>{ const x1 = sum . value const x2 = person . age console . log ( 'watchEffect\u914d\u7f6e\u7684\u56de\u8c03\u6267\u884c\u4e86' ) })","title":"3.watchEffect\u51fd\u6570"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#8","text":"vue2.x\u7684\u751f\u547d\u5468\u671f vue3.0\u7684\u751f\u547d\u5468\u671f 1 Vue3.0\u4e2d\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528Vue2.x\u4e2d\u7684\u751f\u547d\u5468\u671f\u94a9\u5b50\uff0c\u4f46\u6709\u6709\u4e24\u4e2a\u88ab\u66f4\u540d\uff1a beforeDestroy \u6539\u540d\u4e3a beforeUnmount destroyed \u6539\u540d\u4e3a unmounted Vue3.0\u4e5f\u63d0\u4f9b\u4e86 Composition API \u5f62\u5f0f\u7684\u751f\u547d\u5468\u671f\u94a9\u5b50\uff0c\u4e0eVue2.x\u4e2d\u94a9\u5b50\u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b\uff1a beforeCreate ===> setup() created =======> setup() beforeMount ===> onBeforeMount mounted =======> onMounted beforeUpdate ===> onBeforeUpdate updated =======> onUpdated beforeUnmount ==> onBeforeUnmount unmounted =====> onUnmounted","title":"8.\u751f\u547d\u5468\u671f"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#9hook","text":"\u4ec0\u4e48\u662fhook\uff1f\u2014\u2014 \u672c\u8d28\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u628asetup\u51fd\u6570\u4e2d\u4f7f\u7528\u7684Composition API\u8fdb\u884c\u4e86\u5c01\u88c5\u3002 \u7c7b\u4f3c\u4e8evue2.x\u4e2d\u7684mixin\u3002 \u81ea\u5b9a\u4e49hook\u7684\u4f18\u52bf: \u590d\u7528\u4ee3\u7801, \u8ba9setup\u4e2d\u7684\u903b\u8f91\u66f4\u6e05\u695a\u6613\u61c2\u3002","title":"9.\u81ea\u5b9a\u4e49hook\u51fd\u6570"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#10toref","text":"\u4f5c\u7528\uff1a\u521b\u5efa\u4e00\u4e2a ref \u5bf9\u8c61\uff0c\u5176value\u503c\u6307\u5411\u53e6\u4e00\u4e2a\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e2a\u5c5e\u6027\u3002 \u8bed\u6cd5\uff1a const name = toRef(person,'name') \u5e94\u7528: \u8981\u5c06\u54cd\u5e94\u5f0f\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e2a\u5c5e\u6027\u5355\u72ec\u63d0\u4f9b\u7ed9\u5916\u90e8\u4f7f\u7528\u65f6\u3002 \u6269\u5c55\uff1a toRefs \u4e0e toRef \u529f\u80fd\u4e00\u81f4\uff0c\u4f46\u53ef\u4ee5\u6279\u91cf\u521b\u5efa\u591a\u4e2a ref \u5bf9\u8c61\uff0c\u8bed\u6cd5\uff1a toRefs(person)","title":"10.toRef"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#composition-api_1","text":"","title":"\u4e09\u3001\u5176\u5b83 Composition API"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#1shallowreactive-shallowref","text":"shallowReactive\uff1a\u53ea\u5904\u7406\u5bf9\u8c61\u6700\u5916\u5c42\u5c5e\u6027\u7684\u54cd\u5e94\u5f0f\uff08\u6d45\u54cd\u5e94\u5f0f\uff09\u3002 shallowRef\uff1a\u53ea\u5904\u7406\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u54cd\u5e94\u5f0f, \u4e0d\u8fdb\u884c\u5bf9\u8c61\u7684\u54cd\u5e94\u5f0f\u5904\u7406\u3002 \u4ec0\u4e48\u65f6\u5019\u4f7f\u7528? \u5982\u679c\u6709\u4e00\u4e2a\u5bf9\u8c61\u6570\u636e\uff0c\u7ed3\u6784\u6bd4\u8f83\u6df1, \u4f46\u53d8\u5316\u65f6\u53ea\u662f\u5916\u5c42\u5c5e\u6027\u53d8\u5316 ===> shallowReactive\u3002 \u5982\u679c\u6709\u4e00\u4e2a\u5bf9\u8c61\u6570\u636e\uff0c\u540e\u7eed\u529f\u80fd\u4e0d\u4f1a\u4fee\u6539\u8be5\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\uff0c\u800c\u662f\u751f\u65b0\u7684\u5bf9\u8c61\u6765\u66ff\u6362 ===> shallowRef\u3002","title":"1.shallowReactive \u4e0e shallowRef"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#2readonly-shallowreadonly","text":"readonly: \u8ba9\u4e00\u4e2a\u54cd\u5e94\u5f0f\u6570\u636e\u53d8\u4e3a\u53ea\u8bfb\u7684\uff08\u6df1\u53ea\u8bfb\uff09\u3002 shallowReadonly\uff1a\u8ba9\u4e00\u4e2a\u54cd\u5e94\u5f0f\u6570\u636e\u53d8\u4e3a\u53ea\u8bfb\u7684\uff08\u6d45\u53ea\u8bfb\uff09\u3002 \u5e94\u7528\u573a\u666f: \u4e0d\u5e0c\u671b\u6570\u636e\u88ab\u4fee\u6539\u65f6\u3002","title":"2.readonly \u4e0e shallowReadonly"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#3toraw-markraw","text":"toRaw\uff1a \u4f5c\u7528\uff1a\u5c06\u4e00\u4e2a\u7531 reactive \u751f\u6210\u7684 \u54cd\u5e94\u5f0f\u5bf9\u8c61 \u8f6c\u4e3a \u666e\u901a\u5bf9\u8c61 \u3002 \u4f7f\u7528\u573a\u666f\uff1a\u7528\u4e8e\u8bfb\u53d6\u54cd\u5e94\u5f0f\u5bf9\u8c61\u5bf9\u5e94\u7684\u666e\u901a\u5bf9\u8c61\uff0c\u5bf9\u8fd9\u4e2a\u666e\u901a\u5bf9\u8c61\u7684\u6240\u6709\u64cd\u4f5c\uff0c\u4e0d\u4f1a\u5f15\u8d77\u9875\u9762\u66f4\u65b0\u3002 markRaw\uff1a \u4f5c\u7528\uff1a\u6807\u8bb0\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4f7f\u5176\u6c38\u8fdc\u4e0d\u4f1a\u518d\u6210\u4e3a\u54cd\u5e94\u5f0f\u5bf9\u8c61\u3002 \u5e94\u7528\u573a\u666f: \u6709\u4e9b\u503c\u4e0d\u5e94\u88ab\u8bbe\u7f6e\u4e3a\u54cd\u5e94\u5f0f\u7684\uff0c\u4f8b\u5982\u590d\u6742\u7684\u7b2c\u4e09\u65b9\u7c7b\u5e93\u7b49\u3002 \u5f53\u6e32\u67d3\u5177\u6709\u4e0d\u53ef\u53d8\u6570\u636e\u6e90\u7684\u5927\u5217\u8868\u65f6\uff0c\u8df3\u8fc7\u54cd\u5e94\u5f0f\u8f6c\u6362\u53ef\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002","title":"3.toRaw \u4e0e markRaw"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#4customref","text":"\u4f5c\u7528\uff1a\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 ref\uff0c\u5e76\u5bf9\u5176\u4f9d\u8d56\u9879\u8ddf\u8e2a\u548c\u66f4\u65b0\u89e6\u53d1\u8fdb\u884c\u663e\u5f0f\u63a7\u5236\u3002 \u5b9e\u73b0\u9632\u6296\u6548\u679c\uff1a <template> <input type=\"text\" v-model=\"keyword\"> <h3>{{keyword}}</h3> </template> <script> import {ref,customRef} from 'vue' export default { name:'Demo', setup(){ // let keyword = ref('hello') //\u4f7f\u7528Vue\u51c6\u5907\u597d\u7684\u5185\u7f6eref //\u81ea\u5b9a\u4e49\u4e00\u4e2amyRef function myRef(value,delay){ let timer //\u901a\u8fc7customRef\u53bb\u5b9e\u73b0\u81ea\u5b9a\u4e49 return customRef((track,trigger)=>{ return{ get(){ track() //\u544a\u8bc9Vue\u8fd9\u4e2avalue\u503c\u662f\u9700\u8981\u88ab\u201c\u8ffd\u8e2a\u201d\u7684 return value }, set(newValue){ clearTimeout(timer) timer = setTimeout(()=>{ value = newValue trigger() //\u544a\u8bc9Vue\u53bb\u66f4\u65b0\u754c\u9762 },delay) } } }) } let keyword = myRef('hello',500) //\u4f7f\u7528\u7a0b\u5e8f\u5458\u81ea\u5b9a\u4e49\u7684ref return { keyword } } } </script>","title":"4.customRef"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#5provide-inject","text":"\u4f5c\u7528\uff1a\u5b9e\u73b0 \u7956\u4e0e\u540e\u4ee3\u7ec4\u4ef6\u95f4 \u901a\u4fe1 \u5957\u8def\uff1a\u7236\u7ec4\u4ef6\u6709\u4e00\u4e2a provide \u9009\u9879\u6765\u63d0\u4f9b\u6570\u636e\uff0c\u540e\u4ee3\u7ec4\u4ef6\u6709\u4e00\u4e2a inject \u9009\u9879\u6765\u5f00\u59cb\u4f7f\u7528\u8fd9\u4e9b\u6570\u636e \u5177\u4f53\u5199\u6cd5\uff1a \u7956\u7ec4\u4ef6\u4e2d\uff1a setup (){ ...... let car = reactive ({ name : '\u5954\u9a70' , price : '40\u4e07' }) provide ( 'car' , car ) ...... } \u540e\u4ee3\u7ec4\u4ef6\u4e2d\uff1a setup ( props , context ){ ...... const car = inject ( 'car' ) return { car } ...... }","title":"5.provide \u4e0e inject"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#6","text":"isRef: \u68c0\u67e5\u4e00\u4e2a\u503c\u662f\u5426\u4e3a\u4e00\u4e2a ref \u5bf9\u8c61 isReactive: \u68c0\u67e5\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f\u7531 reactive \u521b\u5efa\u7684\u54cd\u5e94\u5f0f\u4ee3\u7406 isReadonly: \u68c0\u67e5\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f\u7531 readonly \u521b\u5efa\u7684\u53ea\u8bfb\u4ee3\u7406 isProxy: \u68c0\u67e5\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f\u7531 reactive \u6216\u8005 readonly \u65b9\u6cd5\u521b\u5efa\u7684\u4ee3\u7406","title":"6.\u54cd\u5e94\u5f0f\u6570\u636e\u7684\u5224\u65ad"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#composition-api_2","text":"","title":"\u56db\u3001Composition API \u7684\u4f18\u52bf"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#1options-api","text":"\u4f7f\u7528\u4f20\u7edfOptionsAPI\u4e2d\uff0c\u65b0\u589e\u6216\u8005\u4fee\u6539\u4e00\u4e2a\u9700\u6c42\uff0c\u5c31\u9700\u8981\u5206\u522b\u5728data\uff0cmethods\uff0ccomputed\u91cc\u4fee\u6539 \u3002","title":"1.Options API \u5b58\u5728\u7684\u95ee\u9898"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#2composition-api","text":"\u6211\u4eec\u53ef\u4ee5\u66f4\u52a0\u4f18\u96c5\u7684\u7ec4\u7ec7\u6211\u4eec\u7684\u4ee3\u7801\uff0c\u51fd\u6570\u3002\u8ba9\u76f8\u5173\u529f\u80fd\u7684\u4ee3\u7801\u66f4\u52a0\u6709\u5e8f\u7684\u7ec4\u7ec7\u5728\u4e00\u8d77\u3002","title":"2.Composition API \u7684\u4f18\u52bf"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#_1","text":"","title":"\u4e94\u3001\u65b0\u7684\u7ec4\u4ef6"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#1fragment","text":"\u5728Vue2\u4e2d: \u7ec4\u4ef6\u5fc5\u987b\u6709\u4e00\u4e2a\u6839\u6807\u7b7e \u5728Vue3\u4e2d: \u7ec4\u4ef6\u53ef\u4ee5\u6ca1\u6709\u6839\u6807\u7b7e, \u5185\u90e8\u4f1a\u5c06\u591a\u4e2a\u6807\u7b7e\u5305\u542b\u5728\u4e00\u4e2aFragment\u865a\u62df\u5143\u7d20\u4e2d \u597d\u5904: \u51cf\u5c11\u6807\u7b7e\u5c42\u7ea7, \u51cf\u5c0f\u5185\u5b58\u5360\u7528","title":"1.Fragment"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#2teleport","text":"\u4ec0\u4e48\u662fTeleport\uff1f\u2014\u2014 Teleport \u662f\u4e00\u79cd\u80fd\u591f\u5c06\u6211\u4eec\u7684 \u7ec4\u4ef6html\u7ed3\u6784 \u79fb\u52a8\u5230\u6307\u5b9a\u4f4d\u7f6e\u7684\u6280\u672f\u3002 <teleport to=\"\u79fb\u52a8\u4f4d\u7f6e\"> <div v-if=\"isShow\" class=\"mask\"> <div class=\"dialog\"> <h3>\u6211\u662f\u4e00\u4e2a\u5f39\u7a97</h3> <button @click=\"isShow = false\">\u5173\u95ed\u5f39\u7a97</button> </div> </div> </teleport>","title":"2.Teleport"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#3suspense","text":"\u7b49\u5f85\u5f02\u6b65\u7ec4\u4ef6\u65f6\u6e32\u67d3\u4e00\u4e9b\u989d\u5916\u5185\u5bb9\uff0c\u8ba9\u5e94\u7528\u6709\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c \u4f7f\u7528\u6b65\u9aa4\uff1a \u5f02\u6b65\u5f15\u5165\u7ec4\u4ef6 import { defineAsyncComponent } from 'vue' const Child = defineAsyncComponent (()=> import ( './components/Child.vue' )) \u4f7f\u7528 Suspense \u5305\u88f9\u7ec4\u4ef6\uff0c\u5e76\u914d\u7f6e\u597d default \u4e0e fallback <template> <div class=\"app\"> <h3>\u6211\u662fApp\u7ec4\u4ef6</h3> <Suspense> <template v-slot:default> <Child/> </template> <template v-slot:fallback> <h3>\u52a0\u8f7d\u4e2d.....</h3> </template> </Suspense> </div> </template>","title":"3.Suspense"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#_2","text":"","title":"\u516d\u3001\u5176\u4ed6"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#1api","text":"Vue 2.x \u6709\u8bb8\u591a\u5168\u5c40 API \u548c\u914d\u7f6e\u3002 \u4f8b\u5982\uff1a\u6ce8\u518c\u5168\u5c40\u7ec4\u4ef6\u3001\u6ce8\u518c\u5168\u5c40\u6307\u4ee4\u7b49\u3002 //\u6ce8\u518c\u5168\u5c40\u7ec4\u4ef6 Vue . component ( 'MyButton' , { data : () => ({ count : 0 }), template : '<button @click=\"count++\">Clicked {{ count }} times.</button>' }) //\u6ce8\u518c\u5168\u5c40\u6307\u4ee4 Vue . directive ( 'focus' , { inserted : el => el . focus () } Vue3.0\u4e2d\u5bf9\u8fd9\u4e9bAPI\u505a\u51fa\u4e86\u8c03\u6574\uff1a \u5c06\u5168\u5c40\u7684API\uff0c\u5373\uff1a Vue.xxx \u8c03\u6574\u5230\u5e94\u7528\u5b9e\u4f8b\uff08 app \uff09\u4e0a 2.x \u5168\u5c40 API\uff08 Vue \uff09 3.x \u5b9e\u4f8b API ( app ) Vue.config.xxxx app.config.xxxx Vue.config.productionTip \u79fb\u9664 Vue.component app.component Vue.directive app.directive Vue.mixin app.mixin Vue.use app.use Vue.prototype app.config.globalProperties","title":"1.\u5168\u5c40API\u7684\u8f6c\u79fb"},{"location":"blogs/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/#2_1","text":"data\u9009\u9879\u5e94\u59cb\u7ec8\u88ab\u58f0\u660e\u4e3a\u4e00\u4e2a\u51fd\u6570\u3002 \u8fc7\u5ea6\u7c7b\u540d\u7684\u66f4\u6539\uff1a Vue2.x\u5199\u6cd5 . v-enter , . v-leave-to { opacity : 0 ; } . v-leave , . v-enter-to { opacity : 1 ; } Vue3.x\u5199\u6cd5 . v-enter-from , . v-leave-to { opacity : 0 ; } . v-leave-from , . v-enter-to { opacity : 1 ; } \u79fb\u9664 keyCode\u4f5c\u4e3a v-on \u7684\u4fee\u9970\u7b26\uff0c\u540c\u65f6\u4e5f\u4e0d\u518d\u652f\u6301 config.keyCodes \u79fb\u9664 v-on.native \u4fee\u9970\u7b26 \u7236\u7ec4\u4ef6\u4e2d\u7ed1\u5b9a\u4e8b\u4ef6 <my-component v-on:close=\"handleComponentEvent\" v-on:click=\"handleNativeClickEvent\" /> \u5b50\u7ec4\u4ef6\u4e2d\u58f0\u660e\u81ea\u5b9a\u4e49\u4e8b\u4ef6 <script> export default { emits: ['close'] } </script> \u79fb\u9664 \u8fc7\u6ee4\u5668\uff08filter\uff09 \u8fc7\u6ee4\u5668\u867d\u7136\u8fd9\u770b\u8d77\u6765\u5f88\u65b9\u4fbf\uff0c\u4f46\u5b83\u9700\u8981\u4e00\u4e2a\u81ea\u5b9a\u4e49\u8bed\u6cd5\uff0c\u6253\u7834\u5927\u62ec\u53f7\u5185\u8868\u8fbe\u5f0f\u662f \u201c\u53ea\u662f JavaScript\u201d \u7684\u5047\u8bbe\uff0c\u8fd9\u4e0d\u4ec5\u6709\u5b66\u4e60\u6210\u672c\uff0c\u800c\u4e14\u6709\u5b9e\u73b0\u6210\u672c\uff01\u5efa\u8bae\u7528\u65b9\u6cd5\u8c03\u7528\u6216\u8ba1\u7b97\u5c5e\u6027\u53bb\u66ff\u6362\u8fc7\u6ee4\u5668\u3002 ......","title":"2.\u5176\u4ed6\u6539\u53d8"},{"location":"blogs/%E5%8A%A8%E6%80%81%E5%BC%80%E8%BE%9F%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84/","text":"C\u8bed\u8a00\u4e2d\u7684\u6570\u7ec4\u7a7a\u95f4\u52a8\u6001\u5f00\u8f9f \u00b6 \u5728C\u8bed\u8a00\u4e2d\uff0c\u5fc5\u4e0d\u53ef\u5c11\u7684\u9700\u8981\u4f7f\u7528\u5230\u6570\u7ec4\uff0c\u901a\u5e38\u4e3a\u4e86\u52a8\u6001\u7684\u5f00\u8f9f\u6570\u7ec4\u7a7a\u95f4\uff0c\u53ef\u4ee5\u4f7f\u7528 malloc \u51fd\u6570\uff0c\u5728C++\u4e2d\u53ef\u4ee5\u4f7f\u7528 new \u5173\u952e\u5b57\u8fdb\u884c\u7a7a\u95f4\u7684\u52a8\u6001\u5f00\u8f9f\u4e0e\u56de\u6536\uff0c\u52a8\u6001\u5f00\u8f9f\u7a7a\u95f4\u7684\u65b9\u6cd5\u66f4\u52a0\u7075\u6d3b\uff0c\u66f4\u80fd\u6709\u6548\u7684\u6839\u636e\u9700\u8981\u5f00\u8f9f\u7a7a\u95f4\u4f7f\u7528\u3002 1\u3001\u4e00\u7ef4\u6570\u7ec4 \u00b6 \u4e00\u7ef4\u6570\u7ec4\u6700\u7b80\u5355\uff0c\u76f4\u63a5\u4f7f\u7528 malloc \u51fd\u6570\u5c31\u53ef\u4ee5\u5f00\u8f9f\uff0c\u4ee5 int \u578b\u6570\u636e\u4e3a\u4f8b\uff0c\u5f00\u8f9f\u4e00\u4e2a\u8fde\u7eed\u7a7a\u95f4\u4f7f\u7528\u3002 #include <stdio.h> #include <stdlib.h> void test ( int * arr ){ for ( int i = 0 ; i < 5 ; i ++ ){ printf ( \"%d \" , arr [ i ]); } } int main (){ int nums = 5 ; int * array = ( int * ) malloc ( sizeof ( int ) * nums ); for ( int i = 0 ; i < 5 ; i ++ ){ array [ i ] = i ; } test ( array ); return 0 ; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6700\u540e\u7684\u7ed3\u679c\u8f93\u51fa\u4e3a0 1 2 3 4\uff1bC\u8bed\u8a00\u4e2d\uff0c\u6570\u7ec4\u53d8\u91cf\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u6307\u9488\uff0c\u901a\u8fc7 malloc \u5c06\u5f00\u8f9f\u7a7a\u95f4\u7684\u8fd4\u56de\u503c\u8fd4\u56de\u7ed9\u6570\u7ec4\u6307\u9488\uff0c\u4ece\u800c\u53ef\u4ee5\u901a\u8fc7\u968f\u673a\u8bbf\u95ee\u4fee\u6539\u548c\u67e5\u8be2\u6570\u7ec4\u4e2d\u7684\u503c\u3002 2\u3001\u4e8c\u7ef4\u6570\u7ec4 \u00b6 \u4e8c\u7ef4\u6570\u7ec4\u53ef\u4ee5\u770b\u4f5c\u4e00\u7ef4\u6570\u7ec4\u7684\u5ef6\u7533\uff0c\u5728\u4e0a\u4e00\u4e2a\u4f8b\u5b50\u4e00\u7ef4\u6570\u7ec4\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u4e00\u7ef4\u6570\u636e\u662f\u4e00\u4e2a int \u578b\u53d8\u91cf\uff0c\u800c\u4e8c\u7ef4\u6570\u7ec4\u4e2d\uff0c\u5c06\u4e0a\u4e00\u4e2a\u4f8b\u5b50\u4e2d\u6bcf\u4e00\u4e2a\u4e00\u7ef4\u53d8\u91cf\u53d8\u4e3a\u4e00\u4e2a int * \u53d8\u91cf\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u53e6\u4e00\u4e2a\u5f00\u8f9f\u7684\u52a8\u6001\u4e00\u4f4d\u7a7a\u95f4\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u7ef4\u6570\u7ec4\u7684\u4e00\u7ef4\u6570\u7ec4\uff08\u5957\u5a03\uff09\u3002 #include <iostream> #include <stdlib.h> using namespace std ; void demotest ( int ** mat ){ for ( int i = 0 ; i < 4 ; i ++ ){ for ( int j = 0 ; j < 4 ; j ++ ){ cout << mat [ i ][ j ] << \" \" ; } cout << endl ; } } int main (){ int rows = 4 ; int columns = 4 ; int ** matrix = ( int ** ) malloc ( rows * sizeof ( int * )); for ( int i = 0 ; i < rows ; i ++ ){ matrix [ i ] = ( int * ) malloc ( columns * sizeof ( int )); } for ( int i = 0 ; i < rows ; i ++ ){ for ( int j = 0 ; j < columns ; j ++ ){ matrix [ i ][ j ] = i + j ; } } demotest ( matrix ); return 0 ; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5c06\u4e8c\u7ef4\u6570\u7ec4\uff08\u77e9\u9635\uff09\u770b\u4f5c\u4e00\u4e2a\u4e8c\u7ea7\u6307\u9488\uff08\u6307\u5411\u6307\u9488\u7684\u6307\u9488\uff09\uff0c\u6bcf\u4e00\u4e2a\u4e8c\u7ea7\u6307\u9488\u6307\u5411\u4e00\u4e2a\u5f00\u8f9f\u7a7a\u95f4\u8fd4\u56de\u7684\u4e00\u7ea7\u6307\u9488\u3002\u5bf9\u6bd4\u4e00\u7ef4\u6570\u7ec4\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u4e8c\u7ef4\u6570\u7ec4\u76f8\u5f53\u4e8e\u4e00\u7ef4\u6570\u7ec4\u4e2d\u5b58\u50a8\u6307\u5411\u91cc\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u7684\u5730\u5740\uff0c\u901a\u8fc7\u51fd\u6570\u5c06\u4e8c\u7ef4\u6307\u9488\u4f20\u9012\u8fc7\u53bb\uff0c\u53ef\u4ee5\u83b7\u53d6\u4e8c\u7ef4\u6570\u7ec4\u7684\u5730\u5740\uff0c\u7136\u540e\u904d\u5386\u5f97\u5230\u503c\u3002 3\u3001\u4e09\u7ef4\u6570\u7ec4 \u00b6 \u7c7b\u6bd4\u4e8c\u7ef4\u6570\u7ec4\u7684\u4f8b\u5b50\uff0c\u4e09\u7ef4\u6570\u7ec4\u5c31\u53ef\u4ee5\u770b\u4f5c\u4e8c\u7ef4\u6570\u7ec4\u7684\u5ef6\u7533\uff0c\u4e09\u7ef4\u6570\u7ec4\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u901a\u5e38\u53ef\u4ee5\u7528\u4e8e\u5b58\u50a8RGB\u56fe\u7247\uff0c\u7406\u89e3\u4e8c\u7ef4\u6570\u7ec4\u4e4b\u540e\uff0c\u4e09\u7ef4\u6570\u7ec4\u5c31\u8f83\u4e3a\u7b80\u5355\u4e86\uff0c\u4ee3\u7801\u4f8b\u5b50\u5982\u4e0b\u3002 #include <stdio.h> #include <stdlib.h> int main (){ int channels = 3 ; int columns = 4 ; int rows = 4 ; int *** matrix = ( int *** ) malloc ( sizeof ( int ** ) * channels ); for ( int i = 0 ; i < channels ; i ++ ){ matrix [ i ] = ( int ** ) malloc ( sizeof ( int * ) * rows ); } for ( int i = 0 ; i < channels ; i ++ ){ for ( int j = 0 ; j < rows ; j ++ ){ matrix [ i ][ j ] = ( int * ) malloc ( sizeof ( int ) * columns ); } } for ( int i = 0 ; i < channels ; i ++ ){ for ( int j = 0 ; j < rows ; j ++ ){ for ( int k = 0 ; k < columns ; k ++ ){ matrix [ i ][ j ][ k ] = i + j + k ; } } } for ( int i = 0 ; i < channels ; i ++ ){ for ( int j = 0 ; j < rows ; j ++ ){ for ( int k = 0 ; k < columns ; k ++ ){ printf ( \"%d \" , matrix [ i ][ j ][ k ]); } printf ( \" \\n \" ); } printf ( \" \\n \" ); } return 0 ; } \u4e00\u4e2a3x4x4\u7684\u6570\u7ec4\uff08\u77e9\u9635\uff09\uff0c\u5148\u5f00\u8f9f\u4e00\u4e2a\u4e09\u7ea7\u6307\u9488\u7684\u7a7a\u95f4\uff0c\u6bcf\u4e00\u4e2a\u4e09\u7ea7\u6307\u9488\u6307\u5411\u7684\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7136\u540e\u4e8c\u7ef4\u6570\u7ec4\u7684\u5f00\u8f9f\u65b9\u6cd5\u5982\u540c\u4e0a\u4e00\u4e2a\u4f8b\u5b50\u4e2d\u7684\u90a3\u6837\uff0c\u4e00\u6b21\u7c7b\u63a8\uff0c\u66f4\u9ad8\u7ef4\u5ea6\u7684\u6570\u7ec4\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6b64\u7c7b\u65b9\u6cd5\u8fdb\u884c\u5957\u5a03\u5f97\u5230\u3002 \u603b\u7ed3 \u00b6 \u5728\u4e00\u4e9b\u7279\u5b9a\u7684\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u5e38\u5e38\u65e0\u6cd5\u9884\u6d4b\u6570\u7ec4\u7684\u5927\u5c0f\u3002\u5982\u679c\u6211\u4eec\u81ea\u5df1\u5c06\u503c\u5206\u914d\u7ed9\u6570\u7ec4\uff0c\u90a3\u4e48\u5b83\u5728\u6267\u884c\u671f\u95f4\u65e0\u6cd5\u66f4\u6539\u3002\u8fd9\u4f1a\u4ea7\u751f\u95ee\u9898\uff0c\u8981\u4e48\u6570\u7ec4\u7684\u5185\u5b58\u53d8\u4f4e\uff0c\u8981\u4e48\u6570\u7ec4\u5360\u7528\u66f4\u5c11\u7684\u7a7a\u95f4\u6d6a\u8d39\u5185\u5b58\uff0c\u56e0\u6b64\u4e3a\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u5efa\u8bae\u52a8\u6001\u5206\u914d\u6570\u7ec4\u3002","title":"\u591a\u7ef4\u6570\u7ec4\u7684\u521b\u5efa"},{"location":"blogs/%E5%8A%A8%E6%80%81%E5%BC%80%E8%BE%9F%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84/#c","text":"\u5728C\u8bed\u8a00\u4e2d\uff0c\u5fc5\u4e0d\u53ef\u5c11\u7684\u9700\u8981\u4f7f\u7528\u5230\u6570\u7ec4\uff0c\u901a\u5e38\u4e3a\u4e86\u52a8\u6001\u7684\u5f00\u8f9f\u6570\u7ec4\u7a7a\u95f4\uff0c\u53ef\u4ee5\u4f7f\u7528 malloc \u51fd\u6570\uff0c\u5728C++\u4e2d\u53ef\u4ee5\u4f7f\u7528 new \u5173\u952e\u5b57\u8fdb\u884c\u7a7a\u95f4\u7684\u52a8\u6001\u5f00\u8f9f\u4e0e\u56de\u6536\uff0c\u52a8\u6001\u5f00\u8f9f\u7a7a\u95f4\u7684\u65b9\u6cd5\u66f4\u52a0\u7075\u6d3b\uff0c\u66f4\u80fd\u6709\u6548\u7684\u6839\u636e\u9700\u8981\u5f00\u8f9f\u7a7a\u95f4\u4f7f\u7528\u3002","title":"C\u8bed\u8a00\u4e2d\u7684\u6570\u7ec4\u7a7a\u95f4\u52a8\u6001\u5f00\u8f9f"},{"location":"blogs/%E5%8A%A8%E6%80%81%E5%BC%80%E8%BE%9F%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84/#1","text":"\u4e00\u7ef4\u6570\u7ec4\u6700\u7b80\u5355\uff0c\u76f4\u63a5\u4f7f\u7528 malloc \u51fd\u6570\u5c31\u53ef\u4ee5\u5f00\u8f9f\uff0c\u4ee5 int \u578b\u6570\u636e\u4e3a\u4f8b\uff0c\u5f00\u8f9f\u4e00\u4e2a\u8fde\u7eed\u7a7a\u95f4\u4f7f\u7528\u3002 #include <stdio.h> #include <stdlib.h> void test ( int * arr ){ for ( int i = 0 ; i < 5 ; i ++ ){ printf ( \"%d \" , arr [ i ]); } } int main (){ int nums = 5 ; int * array = ( int * ) malloc ( sizeof ( int ) * nums ); for ( int i = 0 ; i < 5 ; i ++ ){ array [ i ] = i ; } test ( array ); return 0 ; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6700\u540e\u7684\u7ed3\u679c\u8f93\u51fa\u4e3a0 1 2 3 4\uff1bC\u8bed\u8a00\u4e2d\uff0c\u6570\u7ec4\u53d8\u91cf\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u6307\u9488\uff0c\u901a\u8fc7 malloc \u5c06\u5f00\u8f9f\u7a7a\u95f4\u7684\u8fd4\u56de\u503c\u8fd4\u56de\u7ed9\u6570\u7ec4\u6307\u9488\uff0c\u4ece\u800c\u53ef\u4ee5\u901a\u8fc7\u968f\u673a\u8bbf\u95ee\u4fee\u6539\u548c\u67e5\u8be2\u6570\u7ec4\u4e2d\u7684\u503c\u3002","title":"1\u3001\u4e00\u7ef4\u6570\u7ec4"},{"location":"blogs/%E5%8A%A8%E6%80%81%E5%BC%80%E8%BE%9F%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84/#2","text":"\u4e8c\u7ef4\u6570\u7ec4\u53ef\u4ee5\u770b\u4f5c\u4e00\u7ef4\u6570\u7ec4\u7684\u5ef6\u7533\uff0c\u5728\u4e0a\u4e00\u4e2a\u4f8b\u5b50\u4e00\u7ef4\u6570\u7ec4\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u4e00\u7ef4\u6570\u636e\u662f\u4e00\u4e2a int \u578b\u53d8\u91cf\uff0c\u800c\u4e8c\u7ef4\u6570\u7ec4\u4e2d\uff0c\u5c06\u4e0a\u4e00\u4e2a\u4f8b\u5b50\u4e2d\u6bcf\u4e00\u4e2a\u4e00\u7ef4\u53d8\u91cf\u53d8\u4e3a\u4e00\u4e2a int * \u53d8\u91cf\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u53e6\u4e00\u4e2a\u5f00\u8f9f\u7684\u52a8\u6001\u4e00\u4f4d\u7a7a\u95f4\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u7ef4\u6570\u7ec4\u7684\u4e00\u7ef4\u6570\u7ec4\uff08\u5957\u5a03\uff09\u3002 #include <iostream> #include <stdlib.h> using namespace std ; void demotest ( int ** mat ){ for ( int i = 0 ; i < 4 ; i ++ ){ for ( int j = 0 ; j < 4 ; j ++ ){ cout << mat [ i ][ j ] << \" \" ; } cout << endl ; } } int main (){ int rows = 4 ; int columns = 4 ; int ** matrix = ( int ** ) malloc ( rows * sizeof ( int * )); for ( int i = 0 ; i < rows ; i ++ ){ matrix [ i ] = ( int * ) malloc ( columns * sizeof ( int )); } for ( int i = 0 ; i < rows ; i ++ ){ for ( int j = 0 ; j < columns ; j ++ ){ matrix [ i ][ j ] = i + j ; } } demotest ( matrix ); return 0 ; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5c06\u4e8c\u7ef4\u6570\u7ec4\uff08\u77e9\u9635\uff09\u770b\u4f5c\u4e00\u4e2a\u4e8c\u7ea7\u6307\u9488\uff08\u6307\u5411\u6307\u9488\u7684\u6307\u9488\uff09\uff0c\u6bcf\u4e00\u4e2a\u4e8c\u7ea7\u6307\u9488\u6307\u5411\u4e00\u4e2a\u5f00\u8f9f\u7a7a\u95f4\u8fd4\u56de\u7684\u4e00\u7ea7\u6307\u9488\u3002\u5bf9\u6bd4\u4e00\u7ef4\u6570\u7ec4\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u4e8c\u7ef4\u6570\u7ec4\u76f8\u5f53\u4e8e\u4e00\u7ef4\u6570\u7ec4\u4e2d\u5b58\u50a8\u6307\u5411\u91cc\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u7684\u5730\u5740\uff0c\u901a\u8fc7\u51fd\u6570\u5c06\u4e8c\u7ef4\u6307\u9488\u4f20\u9012\u8fc7\u53bb\uff0c\u53ef\u4ee5\u83b7\u53d6\u4e8c\u7ef4\u6570\u7ec4\u7684\u5730\u5740\uff0c\u7136\u540e\u904d\u5386\u5f97\u5230\u503c\u3002","title":"2\u3001\u4e8c\u7ef4\u6570\u7ec4"},{"location":"blogs/%E5%8A%A8%E6%80%81%E5%BC%80%E8%BE%9F%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84/#3","text":"\u7c7b\u6bd4\u4e8c\u7ef4\u6570\u7ec4\u7684\u4f8b\u5b50\uff0c\u4e09\u7ef4\u6570\u7ec4\u5c31\u53ef\u4ee5\u770b\u4f5c\u4e8c\u7ef4\u6570\u7ec4\u7684\u5ef6\u7533\uff0c\u4e09\u7ef4\u6570\u7ec4\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u901a\u5e38\u53ef\u4ee5\u7528\u4e8e\u5b58\u50a8RGB\u56fe\u7247\uff0c\u7406\u89e3\u4e8c\u7ef4\u6570\u7ec4\u4e4b\u540e\uff0c\u4e09\u7ef4\u6570\u7ec4\u5c31\u8f83\u4e3a\u7b80\u5355\u4e86\uff0c\u4ee3\u7801\u4f8b\u5b50\u5982\u4e0b\u3002 #include <stdio.h> #include <stdlib.h> int main (){ int channels = 3 ; int columns = 4 ; int rows = 4 ; int *** matrix = ( int *** ) malloc ( sizeof ( int ** ) * channels ); for ( int i = 0 ; i < channels ; i ++ ){ matrix [ i ] = ( int ** ) malloc ( sizeof ( int * ) * rows ); } for ( int i = 0 ; i < channels ; i ++ ){ for ( int j = 0 ; j < rows ; j ++ ){ matrix [ i ][ j ] = ( int * ) malloc ( sizeof ( int ) * columns ); } } for ( int i = 0 ; i < channels ; i ++ ){ for ( int j = 0 ; j < rows ; j ++ ){ for ( int k = 0 ; k < columns ; k ++ ){ matrix [ i ][ j ][ k ] = i + j + k ; } } } for ( int i = 0 ; i < channels ; i ++ ){ for ( int j = 0 ; j < rows ; j ++ ){ for ( int k = 0 ; k < columns ; k ++ ){ printf ( \"%d \" , matrix [ i ][ j ][ k ]); } printf ( \" \\n \" ); } printf ( \" \\n \" ); } return 0 ; } \u4e00\u4e2a3x4x4\u7684\u6570\u7ec4\uff08\u77e9\u9635\uff09\uff0c\u5148\u5f00\u8f9f\u4e00\u4e2a\u4e09\u7ea7\u6307\u9488\u7684\u7a7a\u95f4\uff0c\u6bcf\u4e00\u4e2a\u4e09\u7ea7\u6307\u9488\u6307\u5411\u7684\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7136\u540e\u4e8c\u7ef4\u6570\u7ec4\u7684\u5f00\u8f9f\u65b9\u6cd5\u5982\u540c\u4e0a\u4e00\u4e2a\u4f8b\u5b50\u4e2d\u7684\u90a3\u6837\uff0c\u4e00\u6b21\u7c7b\u63a8\uff0c\u66f4\u9ad8\u7ef4\u5ea6\u7684\u6570\u7ec4\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6b64\u7c7b\u65b9\u6cd5\u8fdb\u884c\u5957\u5a03\u5f97\u5230\u3002","title":"3\u3001\u4e09\u7ef4\u6570\u7ec4"},{"location":"blogs/%E5%8A%A8%E6%80%81%E5%BC%80%E8%BE%9F%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84/#_1","text":"\u5728\u4e00\u4e9b\u7279\u5b9a\u7684\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u5e38\u5e38\u65e0\u6cd5\u9884\u6d4b\u6570\u7ec4\u7684\u5927\u5c0f\u3002\u5982\u679c\u6211\u4eec\u81ea\u5df1\u5c06\u503c\u5206\u914d\u7ed9\u6570\u7ec4\uff0c\u90a3\u4e48\u5b83\u5728\u6267\u884c\u671f\u95f4\u65e0\u6cd5\u66f4\u6539\u3002\u8fd9\u4f1a\u4ea7\u751f\u95ee\u9898\uff0c\u8981\u4e48\u6570\u7ec4\u7684\u5185\u5b58\u53d8\u4f4e\uff0c\u8981\u4e48\u6570\u7ec4\u5360\u7528\u66f4\u5c11\u7684\u7a7a\u95f4\u6d6a\u8d39\u5185\u5b58\uff0c\u56e0\u6b64\u4e3a\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u5efa\u8bae\u52a8\u6001\u5206\u914d\u6570\u7ec4\u3002","title":"\u603b\u7ed3"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A01%28%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%29/","text":"\u5f3a\u5316\u5b66\u4e60\u4e2d\u7684\u57fa\u672c\u6982\u5ff5 \u00b6 \u72b6\u6001(state)\u548c\u52a8\u4f5c(action) \u00b6 \u4e00\u4e2a\u72b6\u6001\u53ef\u4ee5\u60f3\u8c61\u6210\u6e38\u620f\u4e2d\u7684\u4e00\u5e27\u753b\u9762\uff0c\u6574\u4e2a\u6e38\u620f\u5c31\u662f\u7531\u591a\u5e27\u753b\u9762\u7ec4\u6210\u7684\u3002\u503c\u7684\u6ce8\u610f\u7684\u662f\uff0c \\(t\\) \u65f6\u523b\u7684\u753b\u9762\u53ef\u80fd\u6709\u591a\u79cd\uff0c\u5b83\u4e0e\u667a\u80fd\u4f53\u9009\u62e9\u7684\u52a8\u4f5c\u6709\u5173\uff0c\u56e0\u6b64\uff0c\u72b6\u6001\u5177\u6709\u968f\u673a\u6027\u3002\u6211\u4eec\u5c06 \\(t\\) \u65f6\u523b\u7684\u72b6\u6001\u8bb0\u4f5c \\(St\\) \u3002\u52a8\u4f5c\u662f\u667a\u80fd\u4f53\u4e0e\u73af\u5883\u4ea4\u4e92\u65f6\u6240\u53d1\u51fa\u7684\uff0c\u597d\u7684\u52a8\u4f5c\u80fd\u591f\u4f7f\u667a\u80fd\u4f53\u9002\u5e94\u73af\u5883\uff0c\u4ece\u800c\u83b7\u53d6\u8f83\u9ad8\u7684\u5956\u52b1\uff0c\u800c\u574f\u7684\u52a8\u4f5c\u53ef\u80fd\u4f7f\u5f97\u667a\u80fd\u4f53\u5728\u6e38\u620f\u5c40\u4e2d\u5931\u8d25 \u4f8b\u5982\u5728\u4e0a\u9762\u7684\u56fe\u7247\u4e2d\uff0c\u8fd9\u5f20\u56fe\u7247\u5c31\u662f\u5f53\u524d\u72b6\u6001\uff0c\u9a6c\u91cc\u5965\u505a\u6210\u7684\u52a8\u4f5c\u5c31\u662faction\u3002\u6240\u4ee5\u6709\u4e09\u79cd\u52a8\u4f5c\uff1a\u5411\u4e0a\u3001\u5411\u5de6\u548c\u5411\u53f3\u3002 \u7b56\u7565(policy \\(\\pi\\) ) \u00b6 \u6211\u4eec\u77e5\u9053\u5f53\u524d\u9a6c\u91cc\u5965\u7684\u72b6\u6001\u5982\u4f55\u63a7\u5236\u5b83\u505a\u51fa\u52a8\u4f5c\uff1f\u7b56\u7565 \\(\\pi\\) \u5c31\u662f\u6839\u636e\u89c2\u6d4b\u5230\u7684\u72b6\u6001(state)\u505a\u51fa\u51b3\u7b56\uff0c\u63a7\u5236\u667a\u80fd\u4f53(agent)\u505a\u51fa\u52a8\u4f5c(action)\u3002\u7b56\u7565\u4e00\u822c\u5b9a\u4e49\u4e3a\u4e00\u4e2a \u6982\u7387\u5bc6\u5ea6\u51fd\u6570 \u3002 \\( \\(\\pi(a|s)=\\mathbb{P}(A=a|S=s)\\) \\) \u4f8b\u5982\u5728\u4e0a\u9762\u7684\u56fe\u7247\u4e2d\uff0c\u6211\u4eec\u8f93\u5165\u5f53\u524d\u72b6\u6001 \\(s\\) \uff0c\u53ef\u4ee5\u5f97\u51fa\u5411\u4e0a\u3001\u5411\u53f3\u548c\u5411\u5de6\u7684\u6982\u7387\u3002 * \\(\\pi(left|s)=0.2\\) * \\(\\pi(right|s)=0.1\\) * \\(\\pi(up|s)=0.7\\) \u5f3a\u5316\u5b66\u4e60\u4e3b\u8981\u662f\u5b66\u4e60\u8fd9\u4e2a\u7b56\u7565\u51fd\u6570\uff0c\u6839\u636e\u7b56\u7565\u51fd\u6570\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5f53\u524d\u72b6\u6001\u505a\u51fa\u51b3\u7b56\u3002 \u5956\u52b1(reward) \u00b6 agent\u505a\u51fa\u4e00\u4e2a\u52a8\u4f5c\uff0c\u6e38\u620f\u5c31\u4f1a\u7ed9\u51fa\u5956\u52b1\uff0c\u8fd9\u4e2a\u5956\u52b1\u901a\u5e38\u7531\u6211\u4eec\u81ea\u5df1\u6765\u5b9a\u4e49\uff0c\u8fd8\u662f\u4ee5\u8d85\u7ea7\u739b\u4e3d\u7684\u6e38\u620f\u4f5c\u4e3a\u4f8b\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b\u5956\u52b1\uff1a * \u5403\u5230\u91d1\u5e01\uff1a \\(R=1\\) * \u8d62\u5f97\u6e38\u620f\uff1a \\(R=10000\\) * \u78b0\u5230\u654c\u4eba\uff1a \\(R=-10000\\) * \u4ec0\u4e48\u6ca1\u53d1\u751f\uff1a \\(R=0\\) \u72b6\u6001\u8f6c\u79fb(state transition) \u00b6 \u667a\u80fd\u4f53\u505a\u51fa\u4e00\u4e2a\u52a8\u4f5c\uff0c\u6e38\u620f\u5c31\u4f1a\u4ece\u4e00\u4e2a\u72b6\u6001(state)\u8f6c\u79fb\u5230\u4e00\u4e2a\u65b0\u7684\u72b6\u6001(state)\u3002\u4e5f\u5c31\u662f\u9a6c\u91cc\u5965\u6267\u884c\u4e00\u4e2a\u52a8\u4f5c\uff08\u4f8b\u5982\u5411\u4e0a\u8df3\uff09\uff0c\u6e38\u620f\u5c31\u4f1a\u663e\u793a\u5230\u53e6\u4e00\u4e2a\u753b\u9762\u3002\u6211\u4eec\u901a\u5e38\u8ba4\u4e3a\u72b6\u6001\u8f6c\u79fb\u662f\u968f\u673a\u7684\uff0c\u968f\u673a\u6027\u53d6\u51b3\u4e8e\u73af\u5883\u3002 \\( \\(p(s^\\prime,a)=\\mathbb{P}(S^\\prime=s^\\prime|S=s,A=a)\\) \\) \u8fd9\u4e2a\u516c\u5f0f\u662f\u89c2\u6d4b\u5230\u5f53\u524d\u7684\u72b6\u6001 \\(s\\) \u548c\u52a8\u4f5c \\(a\\) \uff0c\u72b6\u6001\u53d8\u6210 \\(s^\\prime\\) \u7684\u6982\u7387 \u56de\u62a5(return) \u00b6 \u56de\u62a5(return)\u5b9a\u4e49\u4e3a\u672a\u6765\u7684\u7d2f\u8ba1\u5956\u52b1\uff0c\u82f1\u6587\u4e3a:cumulative future reward\u3002\uff08\u6ce8\u610f\u548c\u5956\u52b1\u7684\u533a\u522b\uff09\u3002\u6211\u4eec\u628a \\(t\\) \u65f6\u523b\u7684\u5956\u52b1\u8bb0\u4e3a: \\(U_t\\) \\( \\(U_t=R_t+R_{t+1}+R_{t+2}+\\cdots\\) \\) \u4e5f\u5c31\u662f\u628a\u4ecet\u65f6\u523b\u7684\u5956\u52b1\u52a0\u8d77\u6765\uff0c\u76f4\u5230\u6e38\u620f\u7ed3\u675f\u3002\u4e0b\u9762\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff1a \\(R_t\\) \u548c \\(R_{t+1}\\) \u540c\u6837\u91cd\u8981\u5417\uff1f\u8fd9\u4e2a\u95ee\u9898\u76f8\u5f53\u4e8e\u4f60\u662f\u9009\u62e9\u6211\u73b0\u5728\u7ed9\u4f60100\u5143\u8fd8\u662f\u6211\u4e00\u5e74\u540e\u7ed9\u4f60100\u5143\u3002\u5927\u90e8\u5206\u4eba\u4f1a\u9009\u62e9\u73b0\u5728\u5f97\u5230100\u5143\uff0c\u56e0\u4e3a\u672a\u6765\u6709\u592a\u591a\u4e0d\u786e\u5b9a\u6027\u3002\u6240\u4ee5\u672a\u6765\u7684\u5956\u52b1\u6ca1\u6709\u73b0\u5728\u7684\u5956\u52b1\u91cd\u8981\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u7ed9 \\(R_{t+1}\\) \u8f83\u5c0f\u7684\u6743\u91cd\u3002\u6240\u4ee5\u6211\u4eec\u901a\u5e38\u4f7f\u7528\u6298\u6263\u56de\u62a5(Discounted return)\u8fd9\u4e2a\u6982\u5ff5\uff0c\u5b9a\u4e49\u4e00\u4e2a\u6298\u6263\u7cfb\u6570 \\(\\gamma(0<\\gamma<1)\\) \uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u8bf4\u7684\u6743\u91cd\u3002 \\( \\(U_t=R_t+\\gamma R_{t+1}+\\gamma ^2R_{t+2}+\\cdots\\) \\) \u5f53\u7136\u56de\u62a5\u4e5f\u5177\u6709\u968f\u673a\u6027\uff0c\u968f\u673a\u6027\u4e3b\u8981\u6709\u4e24\u4e2a\u6765\u6e90\u52a8\u4f5c(action)\u548c\u72b6\u6001(state) \u52a8\u4f5c\u7684\u968f\u673a\uff1a \\( \\(\\pi(a|s)=\\mathbb{P}(A=a|S=s)\\) \\) \u72b6\u6001\u7684\u968f\u673a\uff1a \\( \\(p(s^\\prime,a)=\\mathbb{P}(S^\\prime=s^\\prime|S=s,A=a)\\) \\) \u8fd9\u4e24\u4e2a\u516c\u5f0f\u610f\u601d\u5c31\u662f\uff1a\u6839\u636e\u5f53\u524d\u72b6\u6001\u5f97\u51fa\u4e00\u4e2a\u968f\u673a\u7684\u52a8\u4f5c\uff0c\u66f4\u5177\u5f53\u524d\u7684\u52a8\u4f5c\u548c\u72b6\u6001\u5f97\u51fa\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u3002\u6240\u4ee5 \u5956\u52b1 \\(R_i\\) \u53d6\u51b3\u4e8e \\(S_i\\) \u548c \\(A_i\\) \u3002 \u4ef7\u503c\u51fd\u6570(Value Function) \u00b6 \u52a8\u4f5c\u4ef7\u503c\u51fd\u6570(Action-Value Function) \u00b6 \u52a8\u4f5c\u4ef7\u503c\u51fd\u6570\u8bb0\u4f5c \\(Q(s,a)\\) \u3002\u9996\u5148\u4e0a\u9762\u6240\u8bb2\u7684\u56de\u62a5 \\(U_t\\) \u53ea\u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5b83\u53d6\u51b3\u4e8e\u672a\u6765\u6240\u6709\u7684\u52a8\u4f5c\u548c\u72b6\u6001\uff0c\u7531\u4e8e \\(U_t\\) \u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5728 \\(t\\) \u65f6\u523b\u6211\u5e76\u4e0d\u77e5\u9053 \\(U_t\\) \u662f\u4ec0\u4e48\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9 \\(U_t\\) \u6c42\u671f\u671b\uff0c\u628a\u968f\u673a\u6027\u7528\u79ef\u5206\u79ef\u6389\uff0c\u6700\u540e\u5f97\u5230\u7684\u5c31\u662f\u4e00\u4e2a\u6570\u3002 $$Q_\\pi(s_t,a_t)=\\mathbb{E}[U_t|S_t=s_t,A_t=a_t] $$ \u6839\u636e\u8fd9\u4e2a\u5f0f\u5b50\u6c42\u51fa\u7684\u671f\u671b\u5c31\u662f\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570\uff0c\u9664\u4e86 \\(s_t\\) \u548c \\(a_t\\) \u5176\u4f59\u7684\u968f\u673a\u53d8\u91cf\u90fd\u88ab\u79ef\u5206\u79ef\u6389\u4e86\u3002\u6240\u4ee5\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570 \\(Q_\\pi\\) \u4e0e\u5f53\u524d\u72b6\u6001 \\(s_t\\) \u548c\u5f53\u524d\u52a8\u4f5c \\(a_t\\) \u6709\u5173\uff0c\u8fd8\u4e0e\u7b56\u7565\u51fd\u6570policy \\(\\pi\\) \u6709\u5173\uff0c\u56e0\u4e3a\u79ef\u5206\u65f6\u4f1a\u7528\u5230\u3002\u90a3\u4e48\u5982\u4f55\u5c06\u8fd9\u4e2a\u7b56\u7565\u51fd\u6570\u53bb\u6389\uff1f\u6211\u4eec\u53ef\u4ee5\u53d6\u6700\u5927\u503c\u3002 \\[Q^*(s_t,a_t)=\\underset{\\pi}{max} Q_\\pi(s_t,a_t)\\] \u4e5f\u5c31\u662f\u6211\u4eec\u53d6\u80fd\u4f7f \\(Q\\) \u6700\u5927\u5316\u7684\u7b56\u7565\u51fd\u6570 \u72b6\u6001\u4ef7\u503c\u51fd\u6570(State-Value Function) \u00b6 \u72b6\u6001\u4ef7\u503c\u51fd\u6570\u8bb0\u4f5c \\(V(s)\\) \uff0c\u662f\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570 \\(Q_\\pi\\) \u7684\u671f\u671b $$V_\\pi=\\mathbb{E} A[Q \\pi(s_t,A)]= {\\textstyle \\sum_{a}}\\pi(a|s_t)\\cdot Q_\\pi(s_t,a) $$ $$V_\\pi=\\mathbb{E} A[Q \\pi(s_t,A)]= \\int \\pi(a|s_t)\\cdot Q_\\pi(s_t,a) da $$ \u8fd9\u91cc\u7684\u671f\u671b\u662f\u6839\u636e\u968f\u673a\u53d8\u91cf \\(A\\) \u6c42\u7684\uff0c\u4e0a\u9762\u7684\u4e24\u79cd\u60c5\u51b5\u5206\u522b\u5bf9\u5e94\u53d8\u91cf\u79bb\u6563\u548c\u8fde\u7eed\u7684\u4e24\u79cd\u60c5\u51b5\u3002 \u4e24\u79cd\u4ef7\u503c\u51fd\u6570\u7684\u5bf9\u6bd4 \u00b6 \u52a8\u4f5c\u4ef7\u503c\u51fd\u6570 \\(Q_\\pi\\) \uff0c\u544a\u8bc9\u6211\u4eec\uff0c\u4f7f\u7528\u4ef7\u503c\u51fd\u6570policy \\(\\pi\\) \uff0c\u667a\u80fd\u4f53\u5904\u4e8e\u72b6\u6001s\u65f6\u505a\u51fa\u52a8\u4f5ca\u662f\u5426\u660e\u667a\uff0c\u53ef\u4ee5\u7ed9\u8be5\u52a8\u4f5c\u6253\u5206\u3002\u72b6\u6001\u4ef7\u503c\u51fd\u6570 \\(V_\\pi\\) \uff0c\u5982\u679c\u4f7f\u7528\u4ef7\u503c\u51fd\u6570 \\(\\pi\\) \uff0c\u53ef\u4ee5\u8bc4\u4ef7\u5f53\u524d\u72b6\u6001\u662f\u597d\u8fd8\u662f\u574f\uff08\u6e38\u620f\u662f\u5feb\u8d62\u4e86\u8fd8\u662f\u5feb\u8f93\u4e86\uff09\u3002\u8fd8\u53ef\u4ee5\u8bc4\u4ef7\u4ef7\u503c\u51fd\u6570 \\(\\pi\\) \u7684\u597d\u574f\uff0c\u5982\u679c \\(\\pi\\) \u8d8a\u597d\uff0c\u90a3\u4e48 \\(\\mathbb{E}_S[V_\\pi(S)]\\) \uff0c\u4e5f\u5c31\u662f \\(V_\\pi\\) \u7684\u5e73\u5747\u503c\u5c31\u8d8a\u5927\u3002","title":"\u5f3a\u5316\u5b66\u4e60\u57fa\u672c\u6982\u5ff51"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A01%28%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%29/#_1","text":"","title":"\u5f3a\u5316\u5b66\u4e60\u4e2d\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A01%28%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%29/#stateaction","text":"\u4e00\u4e2a\u72b6\u6001\u53ef\u4ee5\u60f3\u8c61\u6210\u6e38\u620f\u4e2d\u7684\u4e00\u5e27\u753b\u9762\uff0c\u6574\u4e2a\u6e38\u620f\u5c31\u662f\u7531\u591a\u5e27\u753b\u9762\u7ec4\u6210\u7684\u3002\u503c\u7684\u6ce8\u610f\u7684\u662f\uff0c \\(t\\) \u65f6\u523b\u7684\u753b\u9762\u53ef\u80fd\u6709\u591a\u79cd\uff0c\u5b83\u4e0e\u667a\u80fd\u4f53\u9009\u62e9\u7684\u52a8\u4f5c\u6709\u5173\uff0c\u56e0\u6b64\uff0c\u72b6\u6001\u5177\u6709\u968f\u673a\u6027\u3002\u6211\u4eec\u5c06 \\(t\\) \u65f6\u523b\u7684\u72b6\u6001\u8bb0\u4f5c \\(St\\) \u3002\u52a8\u4f5c\u662f\u667a\u80fd\u4f53\u4e0e\u73af\u5883\u4ea4\u4e92\u65f6\u6240\u53d1\u51fa\u7684\uff0c\u597d\u7684\u52a8\u4f5c\u80fd\u591f\u4f7f\u667a\u80fd\u4f53\u9002\u5e94\u73af\u5883\uff0c\u4ece\u800c\u83b7\u53d6\u8f83\u9ad8\u7684\u5956\u52b1\uff0c\u800c\u574f\u7684\u52a8\u4f5c\u53ef\u80fd\u4f7f\u5f97\u667a\u80fd\u4f53\u5728\u6e38\u620f\u5c40\u4e2d\u5931\u8d25 \u4f8b\u5982\u5728\u4e0a\u9762\u7684\u56fe\u7247\u4e2d\uff0c\u8fd9\u5f20\u56fe\u7247\u5c31\u662f\u5f53\u524d\u72b6\u6001\uff0c\u9a6c\u91cc\u5965\u505a\u6210\u7684\u52a8\u4f5c\u5c31\u662faction\u3002\u6240\u4ee5\u6709\u4e09\u79cd\u52a8\u4f5c\uff1a\u5411\u4e0a\u3001\u5411\u5de6\u548c\u5411\u53f3\u3002","title":"\u72b6\u6001(state)\u548c\u52a8\u4f5c(action)"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A01%28%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%29/#policy-pi","text":"\u6211\u4eec\u77e5\u9053\u5f53\u524d\u9a6c\u91cc\u5965\u7684\u72b6\u6001\u5982\u4f55\u63a7\u5236\u5b83\u505a\u51fa\u52a8\u4f5c\uff1f\u7b56\u7565 \\(\\pi\\) \u5c31\u662f\u6839\u636e\u89c2\u6d4b\u5230\u7684\u72b6\u6001(state)\u505a\u51fa\u51b3\u7b56\uff0c\u63a7\u5236\u667a\u80fd\u4f53(agent)\u505a\u51fa\u52a8\u4f5c(action)\u3002\u7b56\u7565\u4e00\u822c\u5b9a\u4e49\u4e3a\u4e00\u4e2a \u6982\u7387\u5bc6\u5ea6\u51fd\u6570 \u3002 \\( \\(\\pi(a|s)=\\mathbb{P}(A=a|S=s)\\) \\) \u4f8b\u5982\u5728\u4e0a\u9762\u7684\u56fe\u7247\u4e2d\uff0c\u6211\u4eec\u8f93\u5165\u5f53\u524d\u72b6\u6001 \\(s\\) \uff0c\u53ef\u4ee5\u5f97\u51fa\u5411\u4e0a\u3001\u5411\u53f3\u548c\u5411\u5de6\u7684\u6982\u7387\u3002 * \\(\\pi(left|s)=0.2\\) * \\(\\pi(right|s)=0.1\\) * \\(\\pi(up|s)=0.7\\) \u5f3a\u5316\u5b66\u4e60\u4e3b\u8981\u662f\u5b66\u4e60\u8fd9\u4e2a\u7b56\u7565\u51fd\u6570\uff0c\u6839\u636e\u7b56\u7565\u51fd\u6570\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u5f53\u524d\u72b6\u6001\u505a\u51fa\u51b3\u7b56\u3002","title":"\u7b56\u7565(policy \\(\\pi\\))"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A01%28%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%29/#reward","text":"agent\u505a\u51fa\u4e00\u4e2a\u52a8\u4f5c\uff0c\u6e38\u620f\u5c31\u4f1a\u7ed9\u51fa\u5956\u52b1\uff0c\u8fd9\u4e2a\u5956\u52b1\u901a\u5e38\u7531\u6211\u4eec\u81ea\u5df1\u6765\u5b9a\u4e49\uff0c\u8fd8\u662f\u4ee5\u8d85\u7ea7\u739b\u4e3d\u7684\u6e38\u620f\u4f5c\u4e3a\u4f8b\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b\u5956\u52b1\uff1a * \u5403\u5230\u91d1\u5e01\uff1a \\(R=1\\) * \u8d62\u5f97\u6e38\u620f\uff1a \\(R=10000\\) * \u78b0\u5230\u654c\u4eba\uff1a \\(R=-10000\\) * \u4ec0\u4e48\u6ca1\u53d1\u751f\uff1a \\(R=0\\)","title":"\u5956\u52b1(reward)"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A01%28%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%29/#state-transition","text":"\u667a\u80fd\u4f53\u505a\u51fa\u4e00\u4e2a\u52a8\u4f5c\uff0c\u6e38\u620f\u5c31\u4f1a\u4ece\u4e00\u4e2a\u72b6\u6001(state)\u8f6c\u79fb\u5230\u4e00\u4e2a\u65b0\u7684\u72b6\u6001(state)\u3002\u4e5f\u5c31\u662f\u9a6c\u91cc\u5965\u6267\u884c\u4e00\u4e2a\u52a8\u4f5c\uff08\u4f8b\u5982\u5411\u4e0a\u8df3\uff09\uff0c\u6e38\u620f\u5c31\u4f1a\u663e\u793a\u5230\u53e6\u4e00\u4e2a\u753b\u9762\u3002\u6211\u4eec\u901a\u5e38\u8ba4\u4e3a\u72b6\u6001\u8f6c\u79fb\u662f\u968f\u673a\u7684\uff0c\u968f\u673a\u6027\u53d6\u51b3\u4e8e\u73af\u5883\u3002 \\( \\(p(s^\\prime,a)=\\mathbb{P}(S^\\prime=s^\\prime|S=s,A=a)\\) \\) \u8fd9\u4e2a\u516c\u5f0f\u662f\u89c2\u6d4b\u5230\u5f53\u524d\u7684\u72b6\u6001 \\(s\\) \u548c\u52a8\u4f5c \\(a\\) \uff0c\u72b6\u6001\u53d8\u6210 \\(s^\\prime\\) \u7684\u6982\u7387","title":"\u72b6\u6001\u8f6c\u79fb(state transition)"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A01%28%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%29/#return","text":"\u56de\u62a5(return)\u5b9a\u4e49\u4e3a\u672a\u6765\u7684\u7d2f\u8ba1\u5956\u52b1\uff0c\u82f1\u6587\u4e3a:cumulative future reward\u3002\uff08\u6ce8\u610f\u548c\u5956\u52b1\u7684\u533a\u522b\uff09\u3002\u6211\u4eec\u628a \\(t\\) \u65f6\u523b\u7684\u5956\u52b1\u8bb0\u4e3a: \\(U_t\\) \\( \\(U_t=R_t+R_{t+1}+R_{t+2}+\\cdots\\) \\) \u4e5f\u5c31\u662f\u628a\u4ecet\u65f6\u523b\u7684\u5956\u52b1\u52a0\u8d77\u6765\uff0c\u76f4\u5230\u6e38\u620f\u7ed3\u675f\u3002\u4e0b\u9762\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff1a \\(R_t\\) \u548c \\(R_{t+1}\\) \u540c\u6837\u91cd\u8981\u5417\uff1f\u8fd9\u4e2a\u95ee\u9898\u76f8\u5f53\u4e8e\u4f60\u662f\u9009\u62e9\u6211\u73b0\u5728\u7ed9\u4f60100\u5143\u8fd8\u662f\u6211\u4e00\u5e74\u540e\u7ed9\u4f60100\u5143\u3002\u5927\u90e8\u5206\u4eba\u4f1a\u9009\u62e9\u73b0\u5728\u5f97\u5230100\u5143\uff0c\u56e0\u4e3a\u672a\u6765\u6709\u592a\u591a\u4e0d\u786e\u5b9a\u6027\u3002\u6240\u4ee5\u672a\u6765\u7684\u5956\u52b1\u6ca1\u6709\u73b0\u5728\u7684\u5956\u52b1\u91cd\u8981\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u7ed9 \\(R_{t+1}\\) \u8f83\u5c0f\u7684\u6743\u91cd\u3002\u6240\u4ee5\u6211\u4eec\u901a\u5e38\u4f7f\u7528\u6298\u6263\u56de\u62a5(Discounted return)\u8fd9\u4e2a\u6982\u5ff5\uff0c\u5b9a\u4e49\u4e00\u4e2a\u6298\u6263\u7cfb\u6570 \\(\\gamma(0<\\gamma<1)\\) \uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u8bf4\u7684\u6743\u91cd\u3002 \\( \\(U_t=R_t+\\gamma R_{t+1}+\\gamma ^2R_{t+2}+\\cdots\\) \\) \u5f53\u7136\u56de\u62a5\u4e5f\u5177\u6709\u968f\u673a\u6027\uff0c\u968f\u673a\u6027\u4e3b\u8981\u6709\u4e24\u4e2a\u6765\u6e90\u52a8\u4f5c(action)\u548c\u72b6\u6001(state) \u52a8\u4f5c\u7684\u968f\u673a\uff1a \\( \\(\\pi(a|s)=\\mathbb{P}(A=a|S=s)\\) \\) \u72b6\u6001\u7684\u968f\u673a\uff1a \\( \\(p(s^\\prime,a)=\\mathbb{P}(S^\\prime=s^\\prime|S=s,A=a)\\) \\) \u8fd9\u4e24\u4e2a\u516c\u5f0f\u610f\u601d\u5c31\u662f\uff1a\u6839\u636e\u5f53\u524d\u72b6\u6001\u5f97\u51fa\u4e00\u4e2a\u968f\u673a\u7684\u52a8\u4f5c\uff0c\u66f4\u5177\u5f53\u524d\u7684\u52a8\u4f5c\u548c\u72b6\u6001\u5f97\u51fa\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u3002\u6240\u4ee5 \u5956\u52b1 \\(R_i\\) \u53d6\u51b3\u4e8e \\(S_i\\) \u548c \\(A_i\\) \u3002","title":"\u56de\u62a5(return)"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A01%28%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%29/#value-function","text":"","title":"\u4ef7\u503c\u51fd\u6570(Value Function)"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A01%28%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%29/#action-value-function","text":"\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570\u8bb0\u4f5c \\(Q(s,a)\\) \u3002\u9996\u5148\u4e0a\u9762\u6240\u8bb2\u7684\u56de\u62a5 \\(U_t\\) \u53ea\u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5b83\u53d6\u51b3\u4e8e\u672a\u6765\u6240\u6709\u7684\u52a8\u4f5c\u548c\u72b6\u6001\uff0c\u7531\u4e8e \\(U_t\\) \u662f\u4e00\u4e2a\u968f\u673a\u53d8\u91cf\uff0c\u5728 \\(t\\) \u65f6\u523b\u6211\u5e76\u4e0d\u77e5\u9053 \\(U_t\\) \u662f\u4ec0\u4e48\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9 \\(U_t\\) \u6c42\u671f\u671b\uff0c\u628a\u968f\u673a\u6027\u7528\u79ef\u5206\u79ef\u6389\uff0c\u6700\u540e\u5f97\u5230\u7684\u5c31\u662f\u4e00\u4e2a\u6570\u3002 $$Q_\\pi(s_t,a_t)=\\mathbb{E}[U_t|S_t=s_t,A_t=a_t] $$ \u6839\u636e\u8fd9\u4e2a\u5f0f\u5b50\u6c42\u51fa\u7684\u671f\u671b\u5c31\u662f\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570\uff0c\u9664\u4e86 \\(s_t\\) \u548c \\(a_t\\) \u5176\u4f59\u7684\u968f\u673a\u53d8\u91cf\u90fd\u88ab\u79ef\u5206\u79ef\u6389\u4e86\u3002\u6240\u4ee5\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570 \\(Q_\\pi\\) \u4e0e\u5f53\u524d\u72b6\u6001 \\(s_t\\) \u548c\u5f53\u524d\u52a8\u4f5c \\(a_t\\) \u6709\u5173\uff0c\u8fd8\u4e0e\u7b56\u7565\u51fd\u6570policy \\(\\pi\\) \u6709\u5173\uff0c\u56e0\u4e3a\u79ef\u5206\u65f6\u4f1a\u7528\u5230\u3002\u90a3\u4e48\u5982\u4f55\u5c06\u8fd9\u4e2a\u7b56\u7565\u51fd\u6570\u53bb\u6389\uff1f\u6211\u4eec\u53ef\u4ee5\u53d6\u6700\u5927\u503c\u3002 \\[Q^*(s_t,a_t)=\\underset{\\pi}{max} Q_\\pi(s_t,a_t)\\] \u4e5f\u5c31\u662f\u6211\u4eec\u53d6\u80fd\u4f7f \\(Q\\) \u6700\u5927\u5316\u7684\u7b56\u7565\u51fd\u6570","title":"\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570(Action-Value Function)"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A01%28%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%29/#state-value-function","text":"\u72b6\u6001\u4ef7\u503c\u51fd\u6570\u8bb0\u4f5c \\(V(s)\\) \uff0c\u662f\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570 \\(Q_\\pi\\) \u7684\u671f\u671b $$V_\\pi=\\mathbb{E} A[Q \\pi(s_t,A)]= {\\textstyle \\sum_{a}}\\pi(a|s_t)\\cdot Q_\\pi(s_t,a) $$ $$V_\\pi=\\mathbb{E} A[Q \\pi(s_t,A)]= \\int \\pi(a|s_t)\\cdot Q_\\pi(s_t,a) da $$ \u8fd9\u91cc\u7684\u671f\u671b\u662f\u6839\u636e\u968f\u673a\u53d8\u91cf \\(A\\) \u6c42\u7684\uff0c\u4e0a\u9762\u7684\u4e24\u79cd\u60c5\u51b5\u5206\u522b\u5bf9\u5e94\u53d8\u91cf\u79bb\u6563\u548c\u8fde\u7eed\u7684\u4e24\u79cd\u60c5\u51b5\u3002","title":"\u72b6\u6001\u4ef7\u503c\u51fd\u6570(State-Value Function)"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A01%28%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%29/#_2","text":"\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570 \\(Q_\\pi\\) \uff0c\u544a\u8bc9\u6211\u4eec\uff0c\u4f7f\u7528\u4ef7\u503c\u51fd\u6570policy \\(\\pi\\) \uff0c\u667a\u80fd\u4f53\u5904\u4e8e\u72b6\u6001s\u65f6\u505a\u51fa\u52a8\u4f5ca\u662f\u5426\u660e\u667a\uff0c\u53ef\u4ee5\u7ed9\u8be5\u52a8\u4f5c\u6253\u5206\u3002\u72b6\u6001\u4ef7\u503c\u51fd\u6570 \\(V_\\pi\\) \uff0c\u5982\u679c\u4f7f\u7528\u4ef7\u503c\u51fd\u6570 \\(\\pi\\) \uff0c\u53ef\u4ee5\u8bc4\u4ef7\u5f53\u524d\u72b6\u6001\u662f\u597d\u8fd8\u662f\u574f\uff08\u6e38\u620f\u662f\u5feb\u8d62\u4e86\u8fd8\u662f\u5feb\u8f93\u4e86\uff09\u3002\u8fd8\u53ef\u4ee5\u8bc4\u4ef7\u4ef7\u503c\u51fd\u6570 \\(\\pi\\) \u7684\u597d\u574f\uff0c\u5982\u679c \\(\\pi\\) \u8d8a\u597d\uff0c\u90a3\u4e48 \\(\\mathbb{E}_S[V_\\pi(S)]\\) \uff0c\u4e5f\u5c31\u662f \\(V_\\pi\\) \u7684\u5e73\u5747\u503c\u5c31\u8d8a\u5927\u3002","title":"\u4e24\u79cd\u4ef7\u503c\u51fd\u6570\u7684\u5bf9\u6bd4"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A02%28%E4%BB%B7%E5%80%BC%E5%AD%A6%E4%B9%A0%29/","text":"\u4ef7\u503c\u5b66\u4e60 \u00b6 \u4e0a\u4e00\u7bc7\u535a\u5ba2\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u4e00\u4e9b\u5f3a\u5316\u5b66\u4e60\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u5176\u4e2d\u5305\u62ec\u4e86\u4ef7\u503c\u51fd\u6570\uff1a\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570\u548c\u72b6\u6001\u4ef7\u503c\u51fd\u6570\u3002\u9996\u5148\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570 \\(Q^*\\) \u80fd\u544a\u8bc9\u4f60\u6bcf\u4e2a\u52a8\u4f5c\u5e26\u6765\u7684\u5e73\u5747\u56de\u62a5\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u9009\u62e9\u5e73\u5747\u56de\u62a5\u6700\u9ad8\u7684\u90a3\u4e2a\uff0c\u4f46\u662f\u6211\u4eec\u5e76\u4e0d\u77e5\u9053 \\(Q^*\\) \u51fd\u6570\uff0c\u4ef7\u503c\u5b66\u4e60\u7684\u57fa\u672c\u601d\u60f3\u5c31\u662f\u5b66\u4e60\u4e00\u4e2a\u51fd\u6570\u6765\u8fd1\u4f3c \\(Q^*\\) \u3002\u4e0b\u9762\u4ecb\u7ecd\u4ef7\u503c\u5b66\u4e60\u7684\u4e00\u4e9b\u6982\u5ff5 Deep Q-Network(DQN) \u00b6 \u5176\u5b9e\u5c31\u662f\u5229\u7528\u795e\u7ecf\u7f51\u7edc\u8fd1\u4f3c \\(Q^* \\(\u51fd\u6570\u3002\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\\) Q(s,a;w)\\) \u6765\u8fd1\u4f3c \\(Q*(s,a)\\) \u3002\u6240\u4ee5\u5f15\u5165\u4e86DQN\u8fd9\u79cd\u795e\u7ecf\u7f51\u7edc\uff0c\u5982\u4e0b\u56fe\u6240\u793a \u8fd9\u5e45\u56fe\u5c31\u662fDQN\u7f51\u7edc\u7684\u793a\u610f\u56fe\uff0c\u6211\u4eec\u901a\u8fc7\u5f53\u524d\u7684\u72b6\u6001\uff0c\u8f93\u51fa\u5bf9\u4e0d\u540c\u52a8\u4f5c\u7684\u6253\u5206(\u4e0a\u3001\u5de6\u3001\u53f3)\uff0c\u7136\u540e\u667a\u80fd\u4f53\u9009\u62e9\u5206\u6570\u8f83\u5927\u7684\u52a8\u4f5c\u3002 \u8fd9\u5e45\u56fe\u5c31\u662f\u8bf4\u660e\u5728\u6e38\u620f\u4e2d\uff0cDQN\u7684\u53d8\u6362\u72b6\u6001\uff0c\u667a\u80fd\u4f53\u4e0d\u65ad\u7684\u9009\u62e9\u5f97\u5206\u6700\u9ad8\u7684action\uff0c\u7136\u540e\u8fc1\u79fb\u5230\u4e0b\u4e00\u4e2a\u72b6\u6001\u3002\u4e0b\u9762\u6211\u4eec\u6765\u5206\u6790\u5982\u4f55\u8bad\u7ec3\u8fd9\u4e2a\u795e\u7ecf\u7f51\u7edc\u3002 Temporal Difference (TD) Learning \u00b6 \u65f6\u95f4\u5dee\u5206\u5b66\u4e60\uff1a\u6307\u4ece\u91c7\u6837\u5f97\u5230\u7684\u4e0d\u5b8c\u6574\u7684\u72b6\u6001\u5e8f\u5217\u5b66\u4e60\uff0c\u8be5\u65b9\u6cd5\u901a\u8fc7\u5408\u7406\u7684 bootstrapping\uff0c\u5148\u4f30\u8ba1\u67d0\u72b6\u6001\u5728\u8be5\u72b6\u6001\u5e8f\u5217(episode)\u5b8c\u6574\u540e\u53ef\u80fd\u5f97\u5230\u7684 return\uff0c\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u5229\u7528\u7d2f\u8fdb\u66f4\u65b0\u5e73\u5747\u503c\u7684\u65b9\u6cd5\u5f97\u5230\u8be5\u72b6\u6001\u7684\u4ef7\u503c\uff0c\u518d\u901a\u8fc7\u4e0d\u65ad\u7684\u91c7\u6837\u6765\u6301\u7eed\u66f4\u65b0\u8fd9\u4e2a\u4ef7\u503c\u3002\u6982\u5ff5\u8fd8\u662f\u6bd4\u8f83\u96be\u7406\u89e3\u7684\u3002\u4e0b\u9762\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u3002 \u9996\u5148\u6709\u4e00\u4e2a\u6a21\u578b \\(Q(w)\\) \u9884\u6d4b\u4eceA\u89e6\u53d1\u5230\u8fbeB\u9700\u89811000\u5206\u949f\uff0c\u90a3\u4e0b\u9762\u5f00\u59cb\u66f4\u65b0\u6a21\u578b\uff0c\u6211\u4eec\u7684\u9884\u6d4b \\(q=Q(w),q=1000\\) \uff0c\u7136\u540e\u6211\u4eec\u5b9e\u9645\u8d70\u4e00\u904d\u8fd9\u4e2a\u8def\u7a0b\uff0c\u53d1\u73b0\u6211\u4eec\u5b9e\u9645\u82b1\u8d39\u4e86860\u5206\u949f\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u66f4\u65b0\u6a21\u578b\u3002\u90a3\u4e48\u8ba1\u7b97\u635f\u5931Loss \\(L=\\frac {1}{2}(q-y)^2\\) \uff0c\u4e0b\u9762\u6211\u4eec\u5bf9Loss\u5173\u4e8ew\u6c42\u5bfc \\(\\frac{\\partial L}{\\partial w}=\\frac{\\partial L}{\\partial q} \\cdot \\frac{\\partial q}{\\partial w} =(q-y)\\frac{\\partial Q(w)}{\\partial w} \\(\u3002\u68af\u5ea6\u6c42\u51fa\u6765\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u68af\u5ea6\u4e0b\u964d\u6765\u8ddf\u65b0\u53c2\u6570\\) w_{t+1}=w_t-\\alpha \\cdot \\frac {\\partial L}{\\partial w}|_{w=w_{t}}\\) \u3002\u8fd9\u79cd\u65b9\u6cd5\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u6211\u5fc5\u987b\u5b8c\u6210\u6574\u4e2a\u65c5\u7a0b\u624d\u80fd\u66f4\u7ec6\u6a21\u578b\uff0c\u5982\u679c\u6211\u4e0d\u5b8c\u6210\u6574\u4e2a\u8def\u7a0b\uff0c\u8d70\u5230\u534a\u8def\u5c31\u4e0d\u524d\u8fdb\u4e86\uff0c\u8be5\u5982\u4f55\u66f4\u65b0\uff1f\u4e0b\u9762\u5c31\u5f15\u51fa\u4e86TD\u7b97\u6cd5\u3002 \u6211\u4eec\u4eceA\u51fa\u53d1\u5230C\u65f6\uff0c\u5df2\u7ecf\u82b1\u8d39\u4e86300\u5206\u949f\uff0c\u7136\u540e\u6a21\u578b\u544a\u8bc9\u6211\u4eec\u4eceC\u5230\u7ec8\u70b9B\u8fd8\u8981\u82b1\u8d39600\u5206\u949f\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u9884\u6d4b\u6700\u7ec8\u4f1a\u82b1\u8d39900\u5206\u949f\uff0c\u867d\u7136900\u4e5f\u662f\u4f30\u8ba1\u7684\u4f46\u5176\u4e2d\u8fd8\u6709\u4e00\u90e8\u5206\u662f\u771f\u5b9e\u7684\uff0c\u6240\u4ee5\u6bd41000\u66f4\u4e3a\u51c6\u786e\u4e00\u70b9\u3002\u8fd9\u5c31\u662fTD\u7b97\u6cd5\u7684\u5927\u81f4\u610f\u601d\uff0c\u4e0b\u9762\u770b\u4e00\u4e0bTD\u7b97\u6cd5\u5728DQN\u4e2d\u7684\u5e94\u7528\u3002 \\( \\(T_{A->B}\\approx T_{A->C}+T_{C+B}\\) \\) \u8fd9\u4e2a\u516c\u5f0f\u5c31\u662f\u5bf9\u4e0a\u9762\u884c\u7a0b\u95ee\u9898\u7684\u603b\u7ed3\uff0c\u4e0b\u9762\u770b\u4e00\u4e0b\u5728DQN\u4e2d \\( \\(Q(s_t,a_t;w)\\approx r_t+\\gamma\\cdot Q(s_{t+1},a_{t+1};w)\\) \\) \u53ef\u4ee5\u505a\u4e00\u4e2a\u4e0d\u592a\u4e25\u8c28\u7684\u8bc1\u660e\uff1a $$ U_t=R_t+\\gamma R_{t+1}+\\gamma ^2R_{t+2}+\\cdots \\ = R_t+\\gamma (R_{t+1}+\\gamma R_{t+2}+\\cdots) \\ =R_t+ \\gamma\\cdot U_{t+1} $$ \u4e0b\u9762\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528TD learning\u6765\u8bad\u7ec3DQN\uff0c\u9996\u5148\u6211\u4eec\u83b7\u53d6\u4e86\u5728 \\(t\\) \u65f6\u523b\u7684\u6a21\u578b\u9884\u6d4b\u503c \\(Q(s_t,a_t;w_t)\\) \u3002\u5230\u4e86 \\(t+1\\) \u65f6\u523b\uff0c\u6211\u4eec\u89c2\u6d4b\u5230\u4e86\u771f\u5b9e\u7684\u7ed3\u679c $$y_t=r_t+\\gamma \\cdot Q(s_{t+1},a_{t+1};w_t) \\ =r_t+\\gamma \\cdot \\underset{a}{max} Q(s_{t+1},a;w_t) $$ \u6240\u4ee5\u5f97\u51fa\u635f\u5931\u503c \\(L_t=\\frac{1}{2}[Q(s_t,a_t;w)-y_t]^2\\) \u3002\u6839\u636e\u68af\u5ea6\u4e0b\u964d\u66f4\u65b0\u635f\u5931\u503c\u3002 \u603b\u7ed3 \u00b6 \u6211\u4eec\u77e5\u9053\u6839\u636e \\(Q*\\) \u51fd\u6570\u80fd\u591f\u53cd\u6620\u6bcf\u4e00\u4e2a\u52a8\u4f5c\u7684\u597d\u574f\uff0c\u53ea\u8981\u6709\u4e86\u8be5\u51fd\u6570\uff0c\u6211\u4eec\u5c31\u80fd\u6839\u636e\u8be5\u51fd\u6570\u6765\u63a7\u5236agent\u8fd0\u52a8\uff0c\u6bcf\u4e00\u4e2a\u65f6\u523b\u667a\u80fd\u4f53\u53ea\u8981\u9009\u51fa\u5f97\u5206\u6700\u9ad8\u7684\u52a8\u4f5c\u6267\u884c\u5c31\u53ef\u4ee5\uff0c\u4f46\u662f\u5b9e\u9645\u662f\u6211\u4eec\u5e76\u6ca1\u6709 \\(Q^*\\) \u51fd\u6570\uff0c\u6240\u4ee5\u4ef7\u503c\u5b66\u4e60\u7684\u76ee\u7684\u5c31\u662f\u5b66\u4e60\u4e00\u4e2a \\(Q^*\\) \u51fd\u6570\u3002\u6240\u4ee5\u6211\u4eec\u4f7f\u7528DQN\u6765\u8fd1\u4f3c\u4e00\u4e2a \\(Q^*\\) \u51fd\u6570\uff0c\u7136\u540e\u6839\u636eTD\u7b97\u6cd5\u6765\u8ddf\u65b0\u8fed\u4ee3DQN\u6a21\u578b\u3002","title":"\u5f3a\u5316\u5b66\u4e60\u57fa\u672c\u6982\u5ff52"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A02%28%E4%BB%B7%E5%80%BC%E5%AD%A6%E4%B9%A0%29/#_1","text":"\u4e0a\u4e00\u7bc7\u535a\u5ba2\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u4e00\u4e9b\u5f3a\u5316\u5b66\u4e60\u7684\u57fa\u672c\u6982\u5ff5\uff0c\u5176\u4e2d\u5305\u62ec\u4e86\u4ef7\u503c\u51fd\u6570\uff1a\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570\u548c\u72b6\u6001\u4ef7\u503c\u51fd\u6570\u3002\u9996\u5148\u52a8\u4f5c\u4ef7\u503c\u51fd\u6570 \\(Q^*\\) \u80fd\u544a\u8bc9\u4f60\u6bcf\u4e2a\u52a8\u4f5c\u5e26\u6765\u7684\u5e73\u5747\u56de\u62a5\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u9009\u62e9\u5e73\u5747\u56de\u62a5\u6700\u9ad8\u7684\u90a3\u4e2a\uff0c\u4f46\u662f\u6211\u4eec\u5e76\u4e0d\u77e5\u9053 \\(Q^*\\) \u51fd\u6570\uff0c\u4ef7\u503c\u5b66\u4e60\u7684\u57fa\u672c\u601d\u60f3\u5c31\u662f\u5b66\u4e60\u4e00\u4e2a\u51fd\u6570\u6765\u8fd1\u4f3c \\(Q^*\\) \u3002\u4e0b\u9762\u4ecb\u7ecd\u4ef7\u503c\u5b66\u4e60\u7684\u4e00\u4e9b\u6982\u5ff5","title":"\u4ef7\u503c\u5b66\u4e60"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A02%28%E4%BB%B7%E5%80%BC%E5%AD%A6%E4%B9%A0%29/#deep-q-networkdqn","text":"\u5176\u5b9e\u5c31\u662f\u5229\u7528\u795e\u7ecf\u7f51\u7edc\u8fd1\u4f3c \\(Q^* \\(\u51fd\u6570\u3002\u6240\u4ee5\u6211\u4eec\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\\) Q(s,a;w)\\) \u6765\u8fd1\u4f3c \\(Q*(s,a)\\) \u3002\u6240\u4ee5\u5f15\u5165\u4e86DQN\u8fd9\u79cd\u795e\u7ecf\u7f51\u7edc\uff0c\u5982\u4e0b\u56fe\u6240\u793a \u8fd9\u5e45\u56fe\u5c31\u662fDQN\u7f51\u7edc\u7684\u793a\u610f\u56fe\uff0c\u6211\u4eec\u901a\u8fc7\u5f53\u524d\u7684\u72b6\u6001\uff0c\u8f93\u51fa\u5bf9\u4e0d\u540c\u52a8\u4f5c\u7684\u6253\u5206(\u4e0a\u3001\u5de6\u3001\u53f3)\uff0c\u7136\u540e\u667a\u80fd\u4f53\u9009\u62e9\u5206\u6570\u8f83\u5927\u7684\u52a8\u4f5c\u3002 \u8fd9\u5e45\u56fe\u5c31\u662f\u8bf4\u660e\u5728\u6e38\u620f\u4e2d\uff0cDQN\u7684\u53d8\u6362\u72b6\u6001\uff0c\u667a\u80fd\u4f53\u4e0d\u65ad\u7684\u9009\u62e9\u5f97\u5206\u6700\u9ad8\u7684action\uff0c\u7136\u540e\u8fc1\u79fb\u5230\u4e0b\u4e00\u4e2a\u72b6\u6001\u3002\u4e0b\u9762\u6211\u4eec\u6765\u5206\u6790\u5982\u4f55\u8bad\u7ec3\u8fd9\u4e2a\u795e\u7ecf\u7f51\u7edc\u3002","title":"Deep Q-Network(DQN)"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A02%28%E4%BB%B7%E5%80%BC%E5%AD%A6%E4%B9%A0%29/#temporal-difference-td-learning","text":"\u65f6\u95f4\u5dee\u5206\u5b66\u4e60\uff1a\u6307\u4ece\u91c7\u6837\u5f97\u5230\u7684\u4e0d\u5b8c\u6574\u7684\u72b6\u6001\u5e8f\u5217\u5b66\u4e60\uff0c\u8be5\u65b9\u6cd5\u901a\u8fc7\u5408\u7406\u7684 bootstrapping\uff0c\u5148\u4f30\u8ba1\u67d0\u72b6\u6001\u5728\u8be5\u72b6\u6001\u5e8f\u5217(episode)\u5b8c\u6574\u540e\u53ef\u80fd\u5f97\u5230\u7684 return\uff0c\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u5229\u7528\u7d2f\u8fdb\u66f4\u65b0\u5e73\u5747\u503c\u7684\u65b9\u6cd5\u5f97\u5230\u8be5\u72b6\u6001\u7684\u4ef7\u503c\uff0c\u518d\u901a\u8fc7\u4e0d\u65ad\u7684\u91c7\u6837\u6765\u6301\u7eed\u66f4\u65b0\u8fd9\u4e2a\u4ef7\u503c\u3002\u6982\u5ff5\u8fd8\u662f\u6bd4\u8f83\u96be\u7406\u89e3\u7684\u3002\u4e0b\u9762\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u3002 \u9996\u5148\u6709\u4e00\u4e2a\u6a21\u578b \\(Q(w)\\) \u9884\u6d4b\u4eceA\u89e6\u53d1\u5230\u8fbeB\u9700\u89811000\u5206\u949f\uff0c\u90a3\u4e0b\u9762\u5f00\u59cb\u66f4\u65b0\u6a21\u578b\uff0c\u6211\u4eec\u7684\u9884\u6d4b \\(q=Q(w),q=1000\\) \uff0c\u7136\u540e\u6211\u4eec\u5b9e\u9645\u8d70\u4e00\u904d\u8fd9\u4e2a\u8def\u7a0b\uff0c\u53d1\u73b0\u6211\u4eec\u5b9e\u9645\u82b1\u8d39\u4e86860\u5206\u949f\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u66f4\u65b0\u6a21\u578b\u3002\u90a3\u4e48\u8ba1\u7b97\u635f\u5931Loss \\(L=\\frac {1}{2}(q-y)^2\\) \uff0c\u4e0b\u9762\u6211\u4eec\u5bf9Loss\u5173\u4e8ew\u6c42\u5bfc \\(\\frac{\\partial L}{\\partial w}=\\frac{\\partial L}{\\partial q} \\cdot \\frac{\\partial q}{\\partial w} =(q-y)\\frac{\\partial Q(w)}{\\partial w} \\(\u3002\u68af\u5ea6\u6c42\u51fa\u6765\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u68af\u5ea6\u4e0b\u964d\u6765\u8ddf\u65b0\u53c2\u6570\\) w_{t+1}=w_t-\\alpha \\cdot \\frac {\\partial L}{\\partial w}|_{w=w_{t}}\\) \u3002\u8fd9\u79cd\u65b9\u6cd5\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u6211\u5fc5\u987b\u5b8c\u6210\u6574\u4e2a\u65c5\u7a0b\u624d\u80fd\u66f4\u7ec6\u6a21\u578b\uff0c\u5982\u679c\u6211\u4e0d\u5b8c\u6210\u6574\u4e2a\u8def\u7a0b\uff0c\u8d70\u5230\u534a\u8def\u5c31\u4e0d\u524d\u8fdb\u4e86\uff0c\u8be5\u5982\u4f55\u66f4\u65b0\uff1f\u4e0b\u9762\u5c31\u5f15\u51fa\u4e86TD\u7b97\u6cd5\u3002 \u6211\u4eec\u4eceA\u51fa\u53d1\u5230C\u65f6\uff0c\u5df2\u7ecf\u82b1\u8d39\u4e86300\u5206\u949f\uff0c\u7136\u540e\u6a21\u578b\u544a\u8bc9\u6211\u4eec\u4eceC\u5230\u7ec8\u70b9B\u8fd8\u8981\u82b1\u8d39600\u5206\u949f\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u9884\u6d4b\u6700\u7ec8\u4f1a\u82b1\u8d39900\u5206\u949f\uff0c\u867d\u7136900\u4e5f\u662f\u4f30\u8ba1\u7684\u4f46\u5176\u4e2d\u8fd8\u6709\u4e00\u90e8\u5206\u662f\u771f\u5b9e\u7684\uff0c\u6240\u4ee5\u6bd41000\u66f4\u4e3a\u51c6\u786e\u4e00\u70b9\u3002\u8fd9\u5c31\u662fTD\u7b97\u6cd5\u7684\u5927\u81f4\u610f\u601d\uff0c\u4e0b\u9762\u770b\u4e00\u4e0bTD\u7b97\u6cd5\u5728DQN\u4e2d\u7684\u5e94\u7528\u3002 \\( \\(T_{A->B}\\approx T_{A->C}+T_{C+B}\\) \\) \u8fd9\u4e2a\u516c\u5f0f\u5c31\u662f\u5bf9\u4e0a\u9762\u884c\u7a0b\u95ee\u9898\u7684\u603b\u7ed3\uff0c\u4e0b\u9762\u770b\u4e00\u4e0b\u5728DQN\u4e2d \\( \\(Q(s_t,a_t;w)\\approx r_t+\\gamma\\cdot Q(s_{t+1},a_{t+1};w)\\) \\) \u53ef\u4ee5\u505a\u4e00\u4e2a\u4e0d\u592a\u4e25\u8c28\u7684\u8bc1\u660e\uff1a $$ U_t=R_t+\\gamma R_{t+1}+\\gamma ^2R_{t+2}+\\cdots \\ = R_t+\\gamma (R_{t+1}+\\gamma R_{t+2}+\\cdots) \\ =R_t+ \\gamma\\cdot U_{t+1} $$ \u4e0b\u9762\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528TD learning\u6765\u8bad\u7ec3DQN\uff0c\u9996\u5148\u6211\u4eec\u83b7\u53d6\u4e86\u5728 \\(t\\) \u65f6\u523b\u7684\u6a21\u578b\u9884\u6d4b\u503c \\(Q(s_t,a_t;w_t)\\) \u3002\u5230\u4e86 \\(t+1\\) \u65f6\u523b\uff0c\u6211\u4eec\u89c2\u6d4b\u5230\u4e86\u771f\u5b9e\u7684\u7ed3\u679c $$y_t=r_t+\\gamma \\cdot Q(s_{t+1},a_{t+1};w_t) \\ =r_t+\\gamma \\cdot \\underset{a}{max} Q(s_{t+1},a;w_t) $$ \u6240\u4ee5\u5f97\u51fa\u635f\u5931\u503c \\(L_t=\\frac{1}{2}[Q(s_t,a_t;w)-y_t]^2\\) \u3002\u6839\u636e\u68af\u5ea6\u4e0b\u964d\u66f4\u65b0\u635f\u5931\u503c\u3002","title":"Temporal Difference (TD) Learning"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A02%28%E4%BB%B7%E5%80%BC%E5%AD%A6%E4%B9%A0%29/#_2","text":"\u6211\u4eec\u77e5\u9053\u6839\u636e \\(Q*\\) \u51fd\u6570\u80fd\u591f\u53cd\u6620\u6bcf\u4e00\u4e2a\u52a8\u4f5c\u7684\u597d\u574f\uff0c\u53ea\u8981\u6709\u4e86\u8be5\u51fd\u6570\uff0c\u6211\u4eec\u5c31\u80fd\u6839\u636e\u8be5\u51fd\u6570\u6765\u63a7\u5236agent\u8fd0\u52a8\uff0c\u6bcf\u4e00\u4e2a\u65f6\u523b\u667a\u80fd\u4f53\u53ea\u8981\u9009\u51fa\u5f97\u5206\u6700\u9ad8\u7684\u52a8\u4f5c\u6267\u884c\u5c31\u53ef\u4ee5\uff0c\u4f46\u662f\u5b9e\u9645\u662f\u6211\u4eec\u5e76\u6ca1\u6709 \\(Q^*\\) \u51fd\u6570\uff0c\u6240\u4ee5\u4ef7\u503c\u5b66\u4e60\u7684\u76ee\u7684\u5c31\u662f\u5b66\u4e60\u4e00\u4e2a \\(Q^*\\) \u51fd\u6570\u3002\u6240\u4ee5\u6211\u4eec\u4f7f\u7528DQN\u6765\u8fd1\u4f3c\u4e00\u4e2a \\(Q^*\\) \u51fd\u6570\uff0c\u7136\u540e\u6839\u636eTD\u7b97\u6cd5\u6765\u8ddf\u65b0\u8fed\u4ee3DQN\u6a21\u578b\u3002","title":"\u603b\u7ed3"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A03%28%E7%AD%96%E7%95%A5%E5%AD%A6%E4%B9%A0%29/","text":"\u7b56\u7565\u5b66\u4e60 \u00b6 \u524d\u9762\u5df2\u7ecf\u5b66\u4e60\u8fc7\u4e86\u7b56\u7565\u51fd\u6570 \\(\\pi(a|s)\\) \uff0c\u8fd9\u662f\u4e00\u4e2a\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u3002\u53ea\u8981\u6709\u4e86\u4e00\u4e2a\u597d\u7684\u7b56\u7565\u51fd\u6570\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u7b56\u7565\u51fd\u6570\u81ea\u52a8\u63a7\u5236\u667a\u80fd\u4f53\u8fd0\u52a8\uff0c\u6240\u4ee5\u4e0b\u9762\u6211\u4eec\u5c31\u8ba8\u8bba\u5982\u4f55\u627e\u51fa\u4e00\u4e2a\u51fd\u6570\u6765\u8fd1\u4f3c\u7b56\u7565\u51fd\u6570\u3002 \u7b56\u7565\u7f51\u7edc(policy network) \u00b6 \u8fd9\u91cc\u5c31\u662f\u5229\u7528\u795e\u7ecf\u7f51\u7edc \\(\\pi(a|s;\\theta)\\) \u6765\u8fd1\u4f3c\u7b56\u7565\u51fd\u6570 \\(\\pi(a|s)\\) \uff0c\u5176\u4e2d \\(\\theta\\) \u662f\u795e\u7ecf\u7f51\u7edc\u7684\u53c2\u6570\uff0c\u6211\u4eec\u4e3b\u8981\u662f\u901a\u8fc7\u5b66\u4e60\u6765\u6539\u8fdb \\(\\theta\\) \u4f7f\u7528 \\(softmax\\) \u6fc0\u6d3b\u51fd\u6570\u662f\u4e3a\u4e86\u4f7f\u5f97\u8f93\u51fa\u7684\u6982\u7387\u503c\u548c\u4e3a1\uff08\u5373\u5f52\u4e00\u5316\uff09\u3002 \u7b56\u7565\u5b66\u4e60 \u00b6 \u524d\u9762\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u6765\u5c06\u8fd1\u4f3c\u7b56\u7565\u51fd\u6570 \\(\\pi(a|s)\\) \uff0c\u4e0b\u9762\u4f7f\u7528\u8fd1\u4f3c\u7684\u7b56\u7565\u51fd\u6570\u6765\u8868\u793a\u72b6\u6001\u4ef7\u503c\u51fd\u6570\u3002 $$V(s_t;\\theta)= {\\textstyle \\sum_{a}}\\pi(a|s_t;\\theta)\\cdot Q_{\\pi}(s_t,a) $$ \\(\\theta\\) \u5c31\u662f\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u53c2\u6570\u3002\u6211\u4eec\u901a\u8fc7\u6539\u8fdb \\(\\theta\\) \u7684\u503c\u6765\u4f7f\u5f97 \\(V\\) \u7684\u503c\u53d8\u5927 \\( \\(J(\\theta)=\\mathbb{E}_S[V(S;\\theta)]\\) \\) \u901a\u8fc7\u6c42S\u7684\u671f\u671b\uff0c\u6211\u4eec\u53ef\u4ee5\u628aS\u6d88\u6389\uff0c\u6700\u540e\u53ea\u5269\u4e0b \\(\\theta\\) \uff0c\u6240\u4ee5\u6700\u7ec8\u76ee\u6807\u5c31\u662f\u4e0d\u65ad\u6539\u8fdb \\(\\theta\\) \uff0c\u4f7f\u5f97 \\(J(\\theta)\\) \u53d8\u5927 \u7b56\u7565\u68af\u5ea6(policy gradient) \u00b6 \u9996\u5148\u89c2\u6d4b\u5230\u4e00\u4e2a\u72b6\u6001 \\(s\\) \uff0c $$ \\frac{\\partial{V(s;\\theta)}}{\\partial{\\theta}}=\\frac{\\partial{{\\textstyle \\sum_{a}}\\pi(a|s_t;\\theta)\\cdot Q_{\\pi}(s_t,a)}}{\\partial{\\theta}} \\ ={\\textstyle \\sum_{a}} \\frac{\\partial{\\pi(a|s_t;\\theta)\\cdot Q_{\\pi}(s_t,a)}}{\\partial{\\theta}} $$ \u7136\u540e\u6211\u4eec\u5047\u8bbe \\(Q_{\\pi}\\) \u4e0d\u4f9d\u8d56\u4e8e \\(\\theta\\) $$ ={\\textstyle \\sum_{a}} \\frac{\\partial{\\pi(a|s_t;\\theta)}}{\\partial{\\theta}}\\cdot Q_{\\pi}(s_t,a) \\ ={\\textstyle \\sum_{a}} \\pi(a|s_t;\\theta) \\cdot \\frac{\\partial{ln\\pi(a|s_t;\\theta)}}{\\partial{\\theta}}\\cdot Q_{\\pi}(s_t,a) \\ =\\mathbb{E} {A}[ \\frac{\\partial{ln\\pi(a|s_t;\\theta)}}{\\partial{\\theta}}\\cdot Q (s_t,a)] $$ \u8ba1\u7b97\u79bb\u6563\u7684\u503c\uff0c\u5982\u8d85\u7ea7\u739b\u4e3d\u4e2d\uff0c\u52a8\u4f5caction\u53ea\u6709{\"left\",\"right\",\"up\"}\u8fd9\u4e09\u79cd\u72b6\u6001\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e0a\u9762\u7684\u516c\u5f0f \\(\\frac{\\partial{V(s;\\theta)}}{\\partial{\\theta}}={\\textstyle \\sum_{a}} \\frac{\\partial{\\pi(a|s_t;\\theta)}}{\\partial{\\theta}}\\cdot Q_{\\pi}(s_t,a)\\) \u6765\u8ba1\u7b97 \\(f(a,\\theta)\\) \uff0c\u53ef\u4ee5\u5f97\u5230\u7b56\u7565\u68af\u5ea6\uff1a \\( \\(\\frac{\\partial{V(s;\\theta)}}{\\partial{\\theta}}=f(\"left\",\\theta)+f(\"right\",\\theta)+f(\"up\",\\theta)\\) \\) \u5f53\u7136\u5982\u679c\u662f\u8fde\u7eed\u7684\u52a8\u4f5c\uff0c\u4f8b\u5982\u52a8\u4f5c\u7a7a\u95f4\u662f\u554a0-1\u4e4b\u95f4\u7684\u8fde\u7eed\u53d8\u91cf \\(\\frac{\\partial{V(s;\\theta)}}{\\partial{\\theta}}=\\mathbb{E}_{A \\sim \\pi(\\cdot | s;\\theta)}[ \\frac{\\partial{ln\\pi(A|s_t;\\theta)}}{\\partial{\\theta}}\\cdot Q_{\\pi}(s_t,A)]\\) \u7136\u540e\u6211\u4eec\u8fdb\u884c\u8499\u7279\u5361\u6d1b\u8fd1\u4f3c\u4ece \\(\\pi(\\cdot | s;\\theta)\\) \u968f\u673a\u62bd\u6837 \\(\\hat{a}\\) \uff0c\u7136\u540e\u8ba1\u7b97 \\(g(\\hat{a},\\theta)=\\frac{\\partial{ln\\pi(\\hat{a}|s;\\theta)}}{\\partial{\\theta}}\\cdot Q_{\\pi}(s,\\hat{a})\\) \u3002\u663e\u800c\u6613\u89c1\u7684\uff0c\u7531\u4e8e\u662f\u968f\u673a\u62bd\u6837\u7684 \\(g(\\hat{a},\\theta)\\) \u662f \\(\\frac{\\partial{V(s;\\theta)}}{\\partial{\\theta}}\\) \u7684\u65e0\u504f\u4f30\u8ba1\u3002\u7b56\u7565\u68af\u5ea6\u6c42\u51fa\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\u7b56\u7565\u68af\u5ea6\u66f4\u65b0\u7b56\u7565\u7f51\u7edc\uff0c \\(\\theta_{t+1}=\\theta_{t}+\\beta \\cdot g(a_t,\\theta_{t})\\) \u3002 \u603b\u7ed3 \u00b6 \u7b56\u7565\u5b66\u4e60\u5c31\u662f\u6c42\u51fa\u4e00\u4e2a\u7b56\u7565\u51fd\u6570 \\(\\pi\\) \uff0c\u7136\u540e\u6839\u636e\u7b56\u7565\u51fd\u6570\u81ea\u52a8\u63a7\u5236\u667a\u80fd\u4f53\u7684\u8fd0\u52a8\u3002\u7136\u540e\u6211\u4eec\u901a\u8fc7\u795e\u7ecf\u7f51\u8def\u6c42\u7b56\u7565\u51fd\u6570\uff0c\u8fd9\u4e2a\u795e\u7ecf\u7f51\u7edc\u5c31\u662f\u7b56\u7565\u7f51\u7edc\uff0c\u7136\u540e\u901a\u8fc7\u7b56\u7565\u68af\u5ea6\u66f4\u65b0\u7b56\u7565\u7f51\u7edc\u4e2d\u7684\u53c2\u6570\u3002","title":"\u5f3a\u5316\u5b66\u4e60\u57fa\u672c\u6982\u5ff53"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A03%28%E7%AD%96%E7%95%A5%E5%AD%A6%E4%B9%A0%29/#_1","text":"\u524d\u9762\u5df2\u7ecf\u5b66\u4e60\u8fc7\u4e86\u7b56\u7565\u51fd\u6570 \\(\\pi(a|s)\\) \uff0c\u8fd9\u662f\u4e00\u4e2a\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u3002\u53ea\u8981\u6709\u4e86\u4e00\u4e2a\u597d\u7684\u7b56\u7565\u51fd\u6570\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u7b56\u7565\u51fd\u6570\u81ea\u52a8\u63a7\u5236\u667a\u80fd\u4f53\u8fd0\u52a8\uff0c\u6240\u4ee5\u4e0b\u9762\u6211\u4eec\u5c31\u8ba8\u8bba\u5982\u4f55\u627e\u51fa\u4e00\u4e2a\u51fd\u6570\u6765\u8fd1\u4f3c\u7b56\u7565\u51fd\u6570\u3002","title":"\u7b56\u7565\u5b66\u4e60"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A03%28%E7%AD%96%E7%95%A5%E5%AD%A6%E4%B9%A0%29/#policy-network","text":"\u8fd9\u91cc\u5c31\u662f\u5229\u7528\u795e\u7ecf\u7f51\u7edc \\(\\pi(a|s;\\theta)\\) \u6765\u8fd1\u4f3c\u7b56\u7565\u51fd\u6570 \\(\\pi(a|s)\\) \uff0c\u5176\u4e2d \\(\\theta\\) \u662f\u795e\u7ecf\u7f51\u7edc\u7684\u53c2\u6570\uff0c\u6211\u4eec\u4e3b\u8981\u662f\u901a\u8fc7\u5b66\u4e60\u6765\u6539\u8fdb \\(\\theta\\) \u4f7f\u7528 \\(softmax\\) \u6fc0\u6d3b\u51fd\u6570\u662f\u4e3a\u4e86\u4f7f\u5f97\u8f93\u51fa\u7684\u6982\u7387\u503c\u548c\u4e3a1\uff08\u5373\u5f52\u4e00\u5316\uff09\u3002","title":"\u7b56\u7565\u7f51\u7edc(policy network)"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A03%28%E7%AD%96%E7%95%A5%E5%AD%A6%E4%B9%A0%29/#_2","text":"\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u6765\u5c06\u8fd1\u4f3c\u7b56\u7565\u51fd\u6570 \\(\\pi(a|s)\\) \uff0c\u4e0b\u9762\u4f7f\u7528\u8fd1\u4f3c\u7684\u7b56\u7565\u51fd\u6570\u6765\u8868\u793a\u72b6\u6001\u4ef7\u503c\u51fd\u6570\u3002 $$V(s_t;\\theta)= {\\textstyle \\sum_{a}}\\pi(a|s_t;\\theta)\\cdot Q_{\\pi}(s_t,a) $$ \\(\\theta\\) \u5c31\u662f\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u53c2\u6570\u3002\u6211\u4eec\u901a\u8fc7\u6539\u8fdb \\(\\theta\\) \u7684\u503c\u6765\u4f7f\u5f97 \\(V\\) \u7684\u503c\u53d8\u5927 \\( \\(J(\\theta)=\\mathbb{E}_S[V(S;\\theta)]\\) \\) \u901a\u8fc7\u6c42S\u7684\u671f\u671b\uff0c\u6211\u4eec\u53ef\u4ee5\u628aS\u6d88\u6389\uff0c\u6700\u540e\u53ea\u5269\u4e0b \\(\\theta\\) \uff0c\u6240\u4ee5\u6700\u7ec8\u76ee\u6807\u5c31\u662f\u4e0d\u65ad\u6539\u8fdb \\(\\theta\\) \uff0c\u4f7f\u5f97 \\(J(\\theta)\\) \u53d8\u5927","title":"\u7b56\u7565\u5b66\u4e60"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A03%28%E7%AD%96%E7%95%A5%E5%AD%A6%E4%B9%A0%29/#policy-gradient","text":"\u9996\u5148\u89c2\u6d4b\u5230\u4e00\u4e2a\u72b6\u6001 \\(s\\) \uff0c $$ \\frac{\\partial{V(s;\\theta)}}{\\partial{\\theta}}=\\frac{\\partial{{\\textstyle \\sum_{a}}\\pi(a|s_t;\\theta)\\cdot Q_{\\pi}(s_t,a)}}{\\partial{\\theta}} \\ ={\\textstyle \\sum_{a}} \\frac{\\partial{\\pi(a|s_t;\\theta)\\cdot Q_{\\pi}(s_t,a)}}{\\partial{\\theta}} $$ \u7136\u540e\u6211\u4eec\u5047\u8bbe \\(Q_{\\pi}\\) \u4e0d\u4f9d\u8d56\u4e8e \\(\\theta\\) $$ ={\\textstyle \\sum_{a}} \\frac{\\partial{\\pi(a|s_t;\\theta)}}{\\partial{\\theta}}\\cdot Q_{\\pi}(s_t,a) \\ ={\\textstyle \\sum_{a}} \\pi(a|s_t;\\theta) \\cdot \\frac{\\partial{ln\\pi(a|s_t;\\theta)}}{\\partial{\\theta}}\\cdot Q_{\\pi}(s_t,a) \\ =\\mathbb{E} {A}[ \\frac{\\partial{ln\\pi(a|s_t;\\theta)}}{\\partial{\\theta}}\\cdot Q (s_t,a)] $$ \u8ba1\u7b97\u79bb\u6563\u7684\u503c\uff0c\u5982\u8d85\u7ea7\u739b\u4e3d\u4e2d\uff0c\u52a8\u4f5caction\u53ea\u6709{\"left\",\"right\",\"up\"}\u8fd9\u4e09\u79cd\u72b6\u6001\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e0a\u9762\u7684\u516c\u5f0f \\(\\frac{\\partial{V(s;\\theta)}}{\\partial{\\theta}}={\\textstyle \\sum_{a}} \\frac{\\partial{\\pi(a|s_t;\\theta)}}{\\partial{\\theta}}\\cdot Q_{\\pi}(s_t,a)\\) \u6765\u8ba1\u7b97 \\(f(a,\\theta)\\) \uff0c\u53ef\u4ee5\u5f97\u5230\u7b56\u7565\u68af\u5ea6\uff1a \\( \\(\\frac{\\partial{V(s;\\theta)}}{\\partial{\\theta}}=f(\"left\",\\theta)+f(\"right\",\\theta)+f(\"up\",\\theta)\\) \\) \u5f53\u7136\u5982\u679c\u662f\u8fde\u7eed\u7684\u52a8\u4f5c\uff0c\u4f8b\u5982\u52a8\u4f5c\u7a7a\u95f4\u662f\u554a0-1\u4e4b\u95f4\u7684\u8fde\u7eed\u53d8\u91cf \\(\\frac{\\partial{V(s;\\theta)}}{\\partial{\\theta}}=\\mathbb{E}_{A \\sim \\pi(\\cdot | s;\\theta)}[ \\frac{\\partial{ln\\pi(A|s_t;\\theta)}}{\\partial{\\theta}}\\cdot Q_{\\pi}(s_t,A)]\\) \u7136\u540e\u6211\u4eec\u8fdb\u884c\u8499\u7279\u5361\u6d1b\u8fd1\u4f3c\u4ece \\(\\pi(\\cdot | s;\\theta)\\) \u968f\u673a\u62bd\u6837 \\(\\hat{a}\\) \uff0c\u7136\u540e\u8ba1\u7b97 \\(g(\\hat{a},\\theta)=\\frac{\\partial{ln\\pi(\\hat{a}|s;\\theta)}}{\\partial{\\theta}}\\cdot Q_{\\pi}(s,\\hat{a})\\) \u3002\u663e\u800c\u6613\u89c1\u7684\uff0c\u7531\u4e8e\u662f\u968f\u673a\u62bd\u6837\u7684 \\(g(\\hat{a},\\theta)\\) \u662f \\(\\frac{\\partial{V(s;\\theta)}}{\\partial{\\theta}}\\) \u7684\u65e0\u504f\u4f30\u8ba1\u3002\u7b56\u7565\u68af\u5ea6\u6c42\u51fa\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\u7b56\u7565\u68af\u5ea6\u66f4\u65b0\u7b56\u7565\u7f51\u7edc\uff0c \\(\\theta_{t+1}=\\theta_{t}+\\beta \\cdot g(a_t,\\theta_{t})\\) \u3002","title":"\u7b56\u7565\u68af\u5ea6(policy gradient)"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A03%28%E7%AD%96%E7%95%A5%E5%AD%A6%E4%B9%A0%29/#_3","text":"\u7b56\u7565\u5b66\u4e60\u5c31\u662f\u6c42\u51fa\u4e00\u4e2a\u7b56\u7565\u51fd\u6570 \\(\\pi\\) \uff0c\u7136\u540e\u6839\u636e\u7b56\u7565\u51fd\u6570\u81ea\u52a8\u63a7\u5236\u667a\u80fd\u4f53\u7684\u8fd0\u52a8\u3002\u7136\u540e\u6211\u4eec\u901a\u8fc7\u795e\u7ecf\u7f51\u8def\u6c42\u7b56\u7565\u51fd\u6570\uff0c\u8fd9\u4e2a\u795e\u7ecf\u7f51\u7edc\u5c31\u662f\u7b56\u7565\u7f51\u7edc\uff0c\u7136\u540e\u901a\u8fc7\u7b56\u7565\u68af\u5ea6\u66f4\u65b0\u7b56\u7565\u7f51\u7edc\u4e2d\u7684\u53c2\u6570\u3002","title":"\u603b\u7ed3"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A04%28Actor-Critic%E7%AE%97%E6%B3%95%29/","text":"Actor-Critic\u7b97\u6cd5 \u00b6 Actor\u662f\u7b56\u7565\u7f51\u7edc\u7528\u6765\u63a7\u5236agcent\u8fd0\u52a8\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f\u8fd0\u52a8\u5458\uff1bCritic\u662f\u4ef7\u503c\u7f51\u7edc\u7528\u6765\u7ed9\u52a8\u4f5c\u6253\u5206\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f\u88c1\u5224\u3002\u8fd9\u4e2a\u7b97\u6cd5\u76f8\u5f53\u4e8e\u628a\u524d\u9762\u5b66\u4e60\u5230\u7684\u4ef7\u503c\u5b66\u4e60\u548c\u7b56\u7565\u5b66\u4e60\u8fdb\u884c\u7ed3\u5408\u7684\u4e00\u79cd\u65b9\u6cd5\u3002 Policy Network(Actor) \u00b6 \u5c31\u662f\u524d\u9762\u8bf4\u7684\u7b56\u7565\u51fd\u6570\uff0c\u53ef\u4ee5\u8bb0\u4f5c\uff1a \\(\\pi(a|s;\\theta)\\) \uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6765\u770b\u4f5c\u505a\u8fd0\u52a8\u7684\u8fd0\u52a8\u5458\u3002 \u4e0a\u56fe\u5c31\u662f\u524d\u9762\u6240\u8bf4\u7684\u7b56\u7565\u51fd\u6570\u7684\u4f5c\u7528\u3002 Value Network(Critic) \u00b6 \u8fd9\u4e2a\u4e5f\u5c31\u662f\u524d\u9762\u6240\u8bf4\u7684\u4ef7\u503c\u5b66\u4e60\uff0c\u53ef\u4ee5\u8bb0\u4f5c\uff1a \\(q(s,a;w)\\) \uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6765\u770b\u4f5c\u7ed9\u8fd0\u52a8\u5458\u52a8\u4f5c\u6253\u5206\u7684\u88c1\u5224\u3002 Actor-Critic Method \u00b6 \u4e0a\u9762\u4e24\u79cd\u7f51\u7edc\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u8bad\u7ec3\u5171\u4eab\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u5355\u72ec\u8bad\u7ec3\u3002\u540c\u65f6\u8fdb\u884c\u8bad\u7ec3\u5c31\u53eb\u505aActor-Critic\u65b9\u6cd5\u3002\u4e0a\u9762\u4e24\u4e2a\u7f51\u7edc\u4e2d\u6211\u4eec\u9700\u8981\u8bad\u7ec3\u4e24\u4e2a\u53c2\u6570 \\(\\theta\\) \u548c \\(w\\) \u3002\u8fd9\u4e2a\u65b9\u6cd5\u7684\u793a\u610f\u56fe\u5982\u4e0b\u6240\u793a\uff1a \u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u7b80\u5355\u7684\u7406\u89e3\u4e3a\uff1a\u8fd0\u52a8\u5458\u505a\u51fa\u4e00\u4e2a\u52a8\u4f5cAction(a)\u4e4b\u540e\uff0c\u88c1\u5224\u7f51\u7edc(critical)\u6839\u636e\u5f53\u524d\u7684State(s)\u751f\u6210\u4e00\u4e2a\u4ef7\u503cValue(q)\u3002\u7136\u540e\u88c1\u5224\u628a\u5206\u6570\u544a\u8bc9\u8fd0\u52a8\u5458\uff0c\u8fd0\u52a8\u5458\u77e5\u9053\u5206\u6570\u4e4b\u540e\u5c31\u80fd\u60f3\u529e\u6cd5\u6539\u8fdb\u81ea\u5df1\u4e86\u3002\u4f46\u662f\u8fd0\u52a8\u5458\u6539\u8fdb\u53ea\u662f\u6839\u636e\u88c1\u5224\u7684\u5206\u6570\uff0c\u5982\u679c\u88c1\u5224\u7684\u6c34\u5e73\u8f83\u4f4e\uff0c\u53ef\u80fd\u4e0d\u4f1a\u6709\u7279\u522b\u5927\u7684\u8fdb\u6b65\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u8ba9\u88c1\u5224\u4e0d\u65ad\u8ddf\u65b0\u4ed6\u7684\u6253\u5206\u80fd\u529b\u3002\u6240\u4ee5\u88c1\u5224\u8981\u9760\u5956\u52b1r\u6765\u63d0\u9ad8\u6253\u5206\u6c34\u5e73\u3002 \u603b\u7ed3\u7b97\u6cd5 \u00b6 \u8fd9\u4e2a\u7b97\u6cd5\u7684\u5927\u81f4\u5b9e\u73b0\u601d\u8def\u662f\uff1a \u9996\u5148\u662f\u89c2\u6d4b\u5230\u4e00\u4e2a\u65e7\u7684\u52a8\u4f5c \\(s_t\\) \uff0c\u7136\u540e\u6839\u636e\u7b56\u7565\u7f51\u7edc \\(a \\sim \\pi(\\cdot |s_t;\\theta_t)\\) \uff0c\u6765\u8ba1\u7b97\u6982\u7387\u5206\u5e03\uff0c\u7136\u540e\u6839\u636e\u8ba1\u7b97\u51fa\u6765\u7684\u6982\u7387\u5206\u5e03\u968f\u673a\u62bd\u53d6\u51fa\u4e00\u4e2a\u72b6\u6001 \\(a_t\\) \u3002 \u7136\u540e\u6267\u884c\u52a8\u4f5c \\(a_t\\) \uff0c\u7136\u540e\u73af\u5883\u4f1a\u544a\u8bc9\u6211\u4eec\u65b0\u7684\u72b6\u6001 \\(s_{t+1}\\) \u548c\u5956\u52b1 \\(r_t\\) \u3002 \u62ff\u65b0\u7684\u72b6\u6001 \\(s_{t+1}\\) \u4f5c\u4e3a\u8f93\u5165\u3002\u7136\u540e\u7528\u7b56\u7565\u7f51\u7edc\u8ba1\u7b97\u51fa\u65b0\u7684\u6982\u7387\uff0c\u7136\u540e\u8ba1\u7b97\u51fa\u65b0\u7684\u52a8\u4f5c \\(\\hat{a}_{t+1}\\) \uff0c\u8fd9\u4e2a\u52a8\u4f5c\u53ea\u662f\u4e00\u4e2a\u5047\u60f3\u7684\u52a8\u4f5c\uff0c\u62ff\u6765\u7b97\u4e00\u4e0bq\u503c\u3002 \u7136\u540e\u7b97\u4e24\u6b21\u4e24\u6b21\u4ef7\u503c\u7f51\u7edc\u7684\u8f93\u51fa \\(q_t=q(s_t,a_t;w_t)\\) \u548c \\(q_{t+1}=q(s_{t+1,\\hat{a}_{t+1}};w_t)\\) \uff0c \\(\\hat{a}_{t+1}\\) \u8fd9\u4e2a\u52a8\u4f5c\u5e76\u4e0d\u4f1a\u771f\u6b63\u7684\u6267\u884c\uff0c\u53ea\u662f\u8fd9\u91cc\u7528\u6765\u8ba1\u7b97\u3002 \u7136\u540e\u5728\u6765\u8ba1\u7b97TD error\uff1a \\(\\delta_t=q_t-(r_t+\\gamma\\cdot q_{t+1})\\) \u5bf9\u4ef7\u503c\u7f51\u7edc\u6c42\u5bfc\uff0c \\(d_{w,t}=\\frac{\\partial q(s_t,a_t;w)}{\\partial w}|_{w=w_t}\\) \u66f4\u65b0\u4ef7\u503c\u7f51\u7edc\uff1a \\(w_{t+1}=w_t-\\alpha \\cdot \\delta_t \\cdot d_{w,t}\\) \u5bf9\u7b56\u7565\u7f51\u7edc\u6c42\u5bfc\uff1a \\(d_{\\theta,t}=\\frac{\\partial{ln(\\pi(a_t|s_t,\\theta))}}{\\partial \\theta} |_{\\theta=\\theta_t}\\) \u66f4\u65b0\u7b56\u7565\u7f51\u7edc\uff1a \\(\\theta_{t+1}=\\theta_t+\\beta \\cdot q_t \\cdot d_{\\theta,t}\\)","title":"\u5f3a\u5316\u5b66\u4e60\u57fa\u672c\u6982\u5ff54"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A04%28Actor-Critic%E7%AE%97%E6%B3%95%29/#actor-critic","text":"Actor\u662f\u7b56\u7565\u7f51\u7edc\u7528\u6765\u63a7\u5236agcent\u8fd0\u52a8\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f\u8fd0\u52a8\u5458\uff1bCritic\u662f\u4ef7\u503c\u7f51\u7edc\u7528\u6765\u7ed9\u52a8\u4f5c\u6253\u5206\uff0c\u53ef\u4ee5\u770b\u4f5c\u662f\u88c1\u5224\u3002\u8fd9\u4e2a\u7b97\u6cd5\u76f8\u5f53\u4e8e\u628a\u524d\u9762\u5b66\u4e60\u5230\u7684\u4ef7\u503c\u5b66\u4e60\u548c\u7b56\u7565\u5b66\u4e60\u8fdb\u884c\u7ed3\u5408\u7684\u4e00\u79cd\u65b9\u6cd5\u3002","title":"Actor-Critic\u7b97\u6cd5"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A04%28Actor-Critic%E7%AE%97%E6%B3%95%29/#policy-networkactor","text":"\u5c31\u662f\u524d\u9762\u8bf4\u7684\u7b56\u7565\u51fd\u6570\uff0c\u53ef\u4ee5\u8bb0\u4f5c\uff1a \\(\\pi(a|s;\\theta)\\) \uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6765\u770b\u4f5c\u505a\u8fd0\u52a8\u7684\u8fd0\u52a8\u5458\u3002 \u4e0a\u56fe\u5c31\u662f\u524d\u9762\u6240\u8bf4\u7684\u7b56\u7565\u51fd\u6570\u7684\u4f5c\u7528\u3002","title":"Policy Network(Actor)"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A04%28Actor-Critic%E7%AE%97%E6%B3%95%29/#value-networkcritic","text":"\u8fd9\u4e2a\u4e5f\u5c31\u662f\u524d\u9762\u6240\u8bf4\u7684\u4ef7\u503c\u5b66\u4e60\uff0c\u53ef\u4ee5\u8bb0\u4f5c\uff1a \\(q(s,a;w)\\) \uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6765\u770b\u4f5c\u7ed9\u8fd0\u52a8\u5458\u52a8\u4f5c\u6253\u5206\u7684\u88c1\u5224\u3002","title":"Value Network(Critic)"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A04%28Actor-Critic%E7%AE%97%E6%B3%95%29/#actor-critic-method","text":"\u4e0a\u9762\u4e24\u79cd\u7f51\u7edc\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u8bad\u7ec3\u5171\u4eab\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u5355\u72ec\u8bad\u7ec3\u3002\u540c\u65f6\u8fdb\u884c\u8bad\u7ec3\u5c31\u53eb\u505aActor-Critic\u65b9\u6cd5\u3002\u4e0a\u9762\u4e24\u4e2a\u7f51\u7edc\u4e2d\u6211\u4eec\u9700\u8981\u8bad\u7ec3\u4e24\u4e2a\u53c2\u6570 \\(\\theta\\) \u548c \\(w\\) \u3002\u8fd9\u4e2a\u65b9\u6cd5\u7684\u793a\u610f\u56fe\u5982\u4e0b\u6240\u793a\uff1a \u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u7b80\u5355\u7684\u7406\u89e3\u4e3a\uff1a\u8fd0\u52a8\u5458\u505a\u51fa\u4e00\u4e2a\u52a8\u4f5cAction(a)\u4e4b\u540e\uff0c\u88c1\u5224\u7f51\u7edc(critical)\u6839\u636e\u5f53\u524d\u7684State(s)\u751f\u6210\u4e00\u4e2a\u4ef7\u503cValue(q)\u3002\u7136\u540e\u88c1\u5224\u628a\u5206\u6570\u544a\u8bc9\u8fd0\u52a8\u5458\uff0c\u8fd0\u52a8\u5458\u77e5\u9053\u5206\u6570\u4e4b\u540e\u5c31\u80fd\u60f3\u529e\u6cd5\u6539\u8fdb\u81ea\u5df1\u4e86\u3002\u4f46\u662f\u8fd0\u52a8\u5458\u6539\u8fdb\u53ea\u662f\u6839\u636e\u88c1\u5224\u7684\u5206\u6570\uff0c\u5982\u679c\u88c1\u5224\u7684\u6c34\u5e73\u8f83\u4f4e\uff0c\u53ef\u80fd\u4e0d\u4f1a\u6709\u7279\u522b\u5927\u7684\u8fdb\u6b65\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u8ba9\u88c1\u5224\u4e0d\u65ad\u8ddf\u65b0\u4ed6\u7684\u6253\u5206\u80fd\u529b\u3002\u6240\u4ee5\u88c1\u5224\u8981\u9760\u5956\u52b1r\u6765\u63d0\u9ad8\u6253\u5206\u6c34\u5e73\u3002","title":"Actor-Critic Method"},{"location":"blogs/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A04%28Actor-Critic%E7%AE%97%E6%B3%95%29/#_1","text":"\u8fd9\u4e2a\u7b97\u6cd5\u7684\u5927\u81f4\u5b9e\u73b0\u601d\u8def\u662f\uff1a \u9996\u5148\u662f\u89c2\u6d4b\u5230\u4e00\u4e2a\u65e7\u7684\u52a8\u4f5c \\(s_t\\) \uff0c\u7136\u540e\u6839\u636e\u7b56\u7565\u7f51\u7edc \\(a \\sim \\pi(\\cdot |s_t;\\theta_t)\\) \uff0c\u6765\u8ba1\u7b97\u6982\u7387\u5206\u5e03\uff0c\u7136\u540e\u6839\u636e\u8ba1\u7b97\u51fa\u6765\u7684\u6982\u7387\u5206\u5e03\u968f\u673a\u62bd\u53d6\u51fa\u4e00\u4e2a\u72b6\u6001 \\(a_t\\) \u3002 \u7136\u540e\u6267\u884c\u52a8\u4f5c \\(a_t\\) \uff0c\u7136\u540e\u73af\u5883\u4f1a\u544a\u8bc9\u6211\u4eec\u65b0\u7684\u72b6\u6001 \\(s_{t+1}\\) \u548c\u5956\u52b1 \\(r_t\\) \u3002 \u62ff\u65b0\u7684\u72b6\u6001 \\(s_{t+1}\\) \u4f5c\u4e3a\u8f93\u5165\u3002\u7136\u540e\u7528\u7b56\u7565\u7f51\u7edc\u8ba1\u7b97\u51fa\u65b0\u7684\u6982\u7387\uff0c\u7136\u540e\u8ba1\u7b97\u51fa\u65b0\u7684\u52a8\u4f5c \\(\\hat{a}_{t+1}\\) \uff0c\u8fd9\u4e2a\u52a8\u4f5c\u53ea\u662f\u4e00\u4e2a\u5047\u60f3\u7684\u52a8\u4f5c\uff0c\u62ff\u6765\u7b97\u4e00\u4e0bq\u503c\u3002 \u7136\u540e\u7b97\u4e24\u6b21\u4e24\u6b21\u4ef7\u503c\u7f51\u7edc\u7684\u8f93\u51fa \\(q_t=q(s_t,a_t;w_t)\\) \u548c \\(q_{t+1}=q(s_{t+1,\\hat{a}_{t+1}};w_t)\\) \uff0c \\(\\hat{a}_{t+1}\\) \u8fd9\u4e2a\u52a8\u4f5c\u5e76\u4e0d\u4f1a\u771f\u6b63\u7684\u6267\u884c\uff0c\u53ea\u662f\u8fd9\u91cc\u7528\u6765\u8ba1\u7b97\u3002 \u7136\u540e\u5728\u6765\u8ba1\u7b97TD error\uff1a \\(\\delta_t=q_t-(r_t+\\gamma\\cdot q_{t+1})\\) \u5bf9\u4ef7\u503c\u7f51\u7edc\u6c42\u5bfc\uff0c \\(d_{w,t}=\\frac{\\partial q(s_t,a_t;w)}{\\partial w}|_{w=w_t}\\) \u66f4\u65b0\u4ef7\u503c\u7f51\u7edc\uff1a \\(w_{t+1}=w_t-\\alpha \\cdot \\delta_t \\cdot d_{w,t}\\) \u5bf9\u7b56\u7565\u7f51\u7edc\u6c42\u5bfc\uff1a \\(d_{\\theta,t}=\\frac{\\partial{ln(\\pi(a_t|s_t,\\theta))}}{\\partial \\theta} |_{\\theta=\\theta_t}\\) \u66f4\u65b0\u7b56\u7565\u7f51\u7edc\uff1a \\(\\theta_{t+1}=\\theta_t+\\beta \\cdot q_t \\cdot d_{\\theta,t}\\)","title":"\u603b\u7ed3\u7b97\u6cd5"}]}